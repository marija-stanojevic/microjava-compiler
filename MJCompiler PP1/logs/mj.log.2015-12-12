INFO  14:48:23,081 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  14:48:23,093 - #2 program
INFO  14:48:23,093 - #44 MJProgram
INFO  14:48:23,093 - #44 int
INFO  14:48:23,094 - #44 x
INFO  14:48:23,094 - #5 ;
INFO  14:48:23,094 - #44 int
INFO  14:48:23,094 - #44 y
INFO  14:48:23,094 - #5 ;
INFO  14:48:23,094 - #3 {
INFO  14:48:23,094 - #44 int
INFO  14:48:23,094 - #44 main
INFO  14:48:23,095 - #6 (
INFO  14:48:23,095 - #7 )
INFO  14:48:23,095 - #3 {
INFO  14:48:23,095 - #9 print
INFO  14:48:23,095 - #6 (
INFO  14:48:23,095 - #43 1
INFO  14:48:23,095 - #7 )
INFO  14:48:23,095 - #5 ;
INFO  14:48:23,095 - #44 x
INFO  14:48:23,096 - #27 =
INFO  14:48:23,096 - #44 y
INFO  14:48:23,096 - #12 +
INFO  14:48:23,124 - #43 3
INFO  14:48:23,124 - #12 +
INFO  14:48:23,124 - #5 ;
ERROR 14:48:23,124 - 
Sintaksna greska na liniji 6
INFO  14:48:23,124 - #9 print
INFO  14:48:23,124 - #6 (
INFO  14:48:23,124 - #43 2
DEBUG 14:48:23,125 - uspesan oporavak
INFO  14:48:23,125 - #7 )
INFO  14:48:23,126 - #5 ;
INFO  14:48:23,126 - #4 }
INFO  14:48:23,126 - #4 }
INFO  14:48:23,126 - Print calls = 2
INFO  18:23:23,079 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:23:23,134 - #2 program
INFO  18:23:23,134 - #44 MJProgram
INFO  18:23:23,134 - #44 int
INFO  18:23:23,134 - #44 x
INFO  18:23:23,134 - #5 ;
INFO  18:23:23,134 - #44 int
INFO  18:23:23,134 - #44 y
INFO  18:23:23,134 - #5 ;
INFO  18:23:23,135 - #3 {
INFO  18:23:23,135 - #44 int
INFO  18:23:23,135 - #44 main
INFO  18:23:23,135 - #6 (
INFO  18:23:23,135 - #7 )
INFO  18:23:23,135 - #3 {
INFO  18:23:23,135 - #9 print
INFO  18:23:23,135 - #6 (
INFO  18:23:23,135 - #43 1
INFO  18:23:23,135 - #7 )
INFO  18:23:23,135 - #5 ;
INFO  18:23:23,136 - #44 x
INFO  18:23:23,136 - #27 =
INFO  18:23:23,136 - #44 y
INFO  18:23:23,136 - #12 +
INFO  18:23:23,136 - #43 3
INFO  18:23:23,136 - #12 +
INFO  18:23:23,136 - #5 ;
ERROR 18:23:23,136 - 
Sintaksna greska na liniji 6
INFO  18:23:23,136 - #9 print
INFO  18:23:23,136 - #6 (
INFO  18:23:23,136 - #43 2
DEBUG 18:23:23,137 - uspesan oporavak
INFO  18:23:23,137 - #7 )
INFO  18:23:23,137 - #5 ;
INFO  18:23:23,138 - #4 }
INFO  18:23:23,138 - #4 }
INFO  18:23:23,138 - Print calls = 2
INFO  18:25:15,286 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:25:15,296 - #2 program
INFO  18:25:15,296 - #44 MJProgram
INFO  18:25:15,296 - #44 int
INFO  18:25:15,296 - #44 x
INFO  18:25:15,296 - #5 ;
ERROR 18:25:15,296 - 
Sintaksna greska na liniji 2
ERROR 18:25:15,296 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:25:15,297 - Print calls = 0
INFO  18:27:51,559 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:27:51,567 - #2 program
INFO  18:27:51,567 - #44 MJProgram
INFO  18:27:51,567 - #44 int
INFO  18:27:51,567 - #44 x
INFO  18:27:51,567 - #8 ,
ERROR 18:27:51,567 - 
Sintaksna greska na liniji 2
ERROR 18:27:51,568 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:27:51,568 - Print calls = 0
INFO  18:29:22,619 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:29:22,630 - #2 program
INFO  18:29:22,630 - #44 MJProgram
INFO  18:29:22,630 - #44 int
INFO  18:29:22,631 - #44 x
INFO  18:29:22,631 - #8 ,
ERROR 18:29:22,631 - 
Sintaksna greska na liniji 2
ERROR 18:29:22,631 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:29:22,631 - Print calls = 0
INFO  18:33:59,366 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:33:59,375 - #2 program
INFO  18:33:59,375 - #44 MJProgram
INFO  18:33:59,375 - #44 int
INFO  18:33:59,375 - #44 x
INFO  18:33:59,375 - #8 ,
ERROR 18:33:59,375 - 
Sintaksna greska na liniji 2
ERROR 18:33:59,375 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:33:59,375 - Print calls = 0
INFO  18:34:08,252 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:34:08,260 - #2 program
INFO  18:34:08,261 - #44 MJProgram
INFO  18:34:08,261 - #44 int
INFO  18:34:08,261 - #44 x
INFO  18:34:08,261 - #8 ,
ERROR 18:34:08,261 - 
Sintaksna greska na liniji 2
ERROR 18:34:08,261 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:34:08,261 - Print calls = 0
INFO  18:39:15,306 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:39:15,318 - #2 program
INFO  18:39:15,318 - #44 MJProgram
INFO  18:39:15,318 - #44 int
INFO  18:39:15,318 - #44 x
INFO  18:39:15,318 - #5 ;
ERROR 18:39:15,319 - 
Sintaksna greska na liniji 2
ERROR 18:39:15,319 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:39:15,319 - Print calls = 0
INFO  18:40:43,404 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:40:43,412 - #2 program
INFO  18:40:43,413 - #44 MJProgram
INFO  18:40:43,413 - #44 int
INFO  18:40:43,413 - #44 x
INFO  18:40:43,413 - #8 ,
ERROR 18:40:43,413 - 
Sintaksna greska na liniji 2
ERROR 18:40:43,413 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:40:43,413 - Print calls = 0
INFO  18:42:24,817 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:42:24,826 - #2 program
INFO  18:42:24,826 - #44 MJProgram
INFO  18:42:24,826 - #44 int
INFO  18:42:24,826 - #44 x
INFO  18:42:24,826 - #33 [
ERROR 18:42:24,826 - 
Sintaksna greska na liniji 2
ERROR 18:42:24,826 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:42:24,826 - Print calls = 0
INFO  18:53:43,486 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:53:43,495 - #2 program
INFO  18:53:43,495 - #44 MJProgram
INFO  18:53:43,495 - #44 int
INFO  18:53:43,495 - #44 x
INFO  18:53:43,495 - #8 ,
ERROR 18:53:43,496 - 
Sintaksna greska na liniji 2
ERROR 18:53:43,496 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:53:43,496 - Print calls = 0
INFO  18:53:54,855 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:53:54,863 - #2 program
INFO  18:53:54,863 - #44 MJProgram
INFO  18:53:54,863 - #44 int
INFO  18:53:54,863 - #44 x
INFO  18:53:54,863 - #5 ;
ERROR 18:53:54,863 - 
Sintaksna greska na liniji 2
ERROR 18:53:54,863 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:53:54,863 - Print calls = 0
INFO  18:58:40,221 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  18:58:40,231 - #2 program
INFO  18:58:40,231 - #44 MJProgram
INFO  18:58:40,231 - #44 int
INFO  18:58:40,231 - #44 x
INFO  18:58:40,231 - #5 ;
ERROR 18:58:40,231 - 
Sintaksna greska na liniji 2
ERROR 18:58:40,231 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  18:58:40,231 - Print calls = 0
INFO  19:00:28,995 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:00:29,003 - #2 program
INFO  19:00:29,004 - #44 MJProgram
INFO  19:00:29,004 - #44 int
INFO  19:00:29,004 - #44 x
INFO  19:00:29,004 - #5 ;
ERROR 19:00:29,004 - 
Sintaksna greska na liniji 2
ERROR 19:00:29,004 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  19:00:29,004 - Print calls = 0
INFO  19:04:49,743 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:04:49,760 - #2 program
INFO  19:04:49,760 - #44 MJProgram
INFO  19:04:49,760 - #44 int
INFO  19:04:49,760 - #44 x
INFO  19:04:49,760 - #5 ;
ERROR 19:04:49,761 - 
Sintaksna greska na liniji 2
ERROR 19:04:49,761 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  19:04:49,761 - Print calls = 0
INFO  19:05:34,876 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:09:23,155 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:09:23,166 - #2 program
INFO  19:09:23,166 - #44 MJProgram
INFO  19:09:23,166 - #44 int
INFO  19:09:23,167 - #44 x
INFO  19:09:23,167 - #31 ;
INFO  19:09:23,167 - #38 {
INFO  19:09:23,167 - #44 int
INFO  19:09:23,167 - #44 main
INFO  19:09:23,168 - #34 (
INFO  19:09:23,168 - #35 )
INFO  19:09:23,168 - #38 {
INFO  19:09:23,168 - #9 print
INFO  19:09:23,168 - #34 (
INFO  19:09:23,168 - #43 1
INFO  19:09:23,168 - #35 )
INFO  19:09:23,169 - #31 ;
INFO  19:09:23,169 - #44 x
INFO  19:09:23,169 - #28 =
ERROR 19:09:23,169 - 
Sintaksna greska na liniji 6
ERROR 19:09:23,169 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 6
INFO  19:09:23,170 - Print calls = 1
INFO  19:09:48,235 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:09:48,244 - #2 program
INFO  19:09:48,244 - #44 MJProgram
INFO  19:09:48,244 - #44 int
INFO  19:09:48,244 - #44 x
INFO  19:09:48,244 - #31 ;
INFO  19:09:48,244 - #38 {
INFO  19:09:48,245 - #44 int
INFO  19:09:48,245 - #44 main
INFO  19:09:48,245 - #34 (
INFO  19:09:48,245 - #35 )
INFO  19:09:48,245 - #38 {
INFO  19:09:48,245 - #9 print
INFO  19:09:48,245 - #34 (
INFO  19:09:48,245 - #43 1
INFO  19:09:48,245 - #35 )
INFO  19:09:48,245 - #31 ;
INFO  19:09:48,245 - #44 x
INFO  19:09:48,245 - #28 =
ERROR 19:09:48,246 - 
Sintaksna greska na liniji 6
ERROR 19:09:48,246 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 6
INFO  19:09:48,246 - Print calls = 1
INFO  19:11:15,149 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:11:15,157 - #2 program
INFO  19:11:15,157 - #44 MJProgram
INFO  19:11:15,157 - #44 int
INFO  19:11:15,157 - #44 x
INFO  19:11:15,157 - #31 ;
INFO  19:11:15,157 - #44 int
INFO  19:11:15,158 - #44 y
INFO  19:11:15,158 - #31 ;
INFO  19:11:15,158 - #38 {
INFO  19:11:15,158 - #44 int
INFO  19:11:15,158 - #44 main
INFO  19:11:15,158 - #34 (
INFO  19:11:15,158 - #35 )
INFO  19:11:15,158 - #38 {
INFO  19:11:15,158 - #9 print
INFO  19:11:15,158 - #34 (
INFO  19:11:15,158 - #43 1
INFO  19:11:15,158 - #35 )
INFO  19:11:15,159 - #31 ;
INFO  19:11:15,159 - #44 x
INFO  19:11:15,159 - #28 =
ERROR 19:11:15,159 - 
Sintaksna greska na liniji 6
ERROR 19:11:15,159 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 6
INFO  19:11:15,159 - Print calls = 1
INFO  19:12:00,420 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:12:00,428 - #2 program
INFO  19:12:00,428 - #44 MJProgram
INFO  19:12:00,428 - #44 int
INFO  19:12:00,428 - #44 x
INFO  19:12:00,428 - #31 ;
INFO  19:12:00,428 - #44 int
INFO  19:12:00,428 - #44 y
INFO  19:12:00,428 - #31 ;
INFO  19:12:00,429 - #38 {
INFO  19:12:00,429 - #44 int
INFO  19:12:00,429 - #44 main
INFO  19:12:00,429 - #34 (
INFO  19:12:00,429 - #35 )
INFO  19:12:00,429 - #38 {
INFO  19:12:00,429 - #9 print
INFO  19:12:00,429 - #34 (
INFO  19:12:00,429 - #43 1
INFO  19:12:00,429 - #35 )
INFO  19:12:00,429 - #31 ;
INFO  19:12:00,429 - #44 x
INFO  19:12:00,429 - #28 =
ERROR 19:12:00,429 - 
Sintaksna greska na liniji 6
ERROR 19:12:00,430 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 6
INFO  19:12:00,430 - Print calls = 1
INFO  19:12:46,494 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:12:46,502 - #2 program
INFO  19:12:46,502 - #44 MJProgram
INFO  19:12:46,502 - #44 int
INFO  19:12:46,502 - #44 x
INFO  19:12:46,502 - #31 ;
INFO  19:12:46,502 - #44 int
INFO  19:12:46,502 - #44 y
INFO  19:12:46,502 - #31 ;
INFO  19:12:46,503 - #38 {
INFO  19:12:46,503 - #44 int
INFO  19:12:46,503 - #44 main
INFO  19:12:46,503 - #34 (
INFO  19:12:46,503 - #35 )
INFO  19:12:46,503 - #38 {
INFO  19:12:46,503 - #9 print
INFO  19:12:46,503 - #34 (
INFO  19:12:46,503 - #43 1
INFO  19:12:46,503 - #35 )
INFO  19:12:46,503 - #31 ;
INFO  19:12:46,503 - #44 x
INFO  19:12:46,503 - #28 =
ERROR 19:12:46,504 - 
Sintaksna greska na liniji 6
ERROR 19:12:46,504 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 6
INFO  19:12:46,504 - Print calls = 1
INFO  19:14:46,439 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:14:46,447 - #2 program
INFO  19:14:46,447 - #44 MJProgram
INFO  19:14:46,447 - #44 int
INFO  19:14:46,447 - #44 x
INFO  19:14:46,447 - #31 ;
INFO  19:14:46,447 - #44 int
INFO  19:14:46,448 - #44 y
INFO  19:14:46,448 - #31 ;
INFO  19:14:46,448 - #38 {
INFO  19:14:46,448 - #44 int
INFO  19:14:46,448 - #44 main
INFO  19:14:46,448 - #34 (
INFO  19:14:46,448 - #35 )
INFO  19:14:46,448 - #38 {
INFO  19:14:46,448 - #9 print
INFO  19:14:46,448 - #34 (
INFO  19:14:46,448 - #43 1
INFO  19:14:46,448 - #35 )
INFO  19:14:46,448 - #31 ;
INFO  19:14:46,448 - #44 x
INFO  19:14:46,449 - #28 =
ERROR 19:14:46,449 - 
Sintaksna greska na liniji 6
ERROR 19:14:46,449 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 6
INFO  19:14:46,449 - Print calls = 1
INFO  19:15:53,117 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:15:53,126 - #2 program
INFO  19:15:53,126 - #44 MJProgram
INFO  19:15:53,126 - #44 int
INFO  19:15:53,126 - #44 x
INFO  19:15:53,126 - #31 ;
INFO  19:15:53,126 - #44 int
INFO  19:15:53,126 - #44 y
INFO  19:15:53,126 - #31 ;
INFO  19:15:53,126 - #38 {
INFO  19:15:53,126 - #44 int
INFO  19:15:53,126 - #44 main
INFO  19:15:53,127 - #34 (
INFO  19:15:53,127 - #35 )
INFO  19:15:53,127 - #38 {
INFO  19:15:53,127 - #9 print
INFO  19:15:53,127 - #34 (
INFO  19:15:53,127 - #43 1
INFO  19:15:53,127 - #35 )
INFO  19:15:53,127 - #31 ;
INFO  19:15:53,127 - #44 x
INFO  19:15:53,127 - #28 =
ERROR 19:15:53,127 - 
Sintaksna greska na liniji 6
ERROR 19:15:53,127 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 6
INFO  19:15:53,128 - Print calls = 1
INFO  19:16:27,708 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:16:27,715 - #2 program
INFO  19:16:27,716 - #44 MJProgram
INFO  19:16:27,716 - #44 int
INFO  19:16:27,716 - #44 x
INFO  19:16:27,716 - #31 ;
INFO  19:16:27,716 - #44 int
INFO  19:16:27,716 - #44 y
INFO  19:16:27,716 - #31 ;
INFO  19:16:27,716 - #38 {
INFO  19:16:27,716 - #44 int
INFO  19:16:27,716 - #44 main
INFO  19:16:27,716 - #34 (
INFO  19:16:27,716 - #35 )
INFO  19:16:27,717 - #38 {
INFO  19:16:27,717 - #9 print
INFO  19:16:27,717 - #34 (
INFO  19:16:27,717 - #43 1
INFO  19:16:27,717 - #35 )
INFO  19:16:27,717 - #31 ;
INFO  19:16:27,717 - #44 x
INFO  19:16:27,717 - #28 =
ERROR 19:16:27,717 - 
Sintaksna greska na liniji 6
ERROR 19:16:27,717 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 6
INFO  19:16:27,717 - Print calls = 1
INFO  19:18:53,827 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:18:53,836 - #2 program
INFO  19:18:53,836 - #44 MJProgram
INFO  19:18:53,836 - #44 int
INFO  19:18:53,836 - #44 x
INFO  19:18:53,836 - #31 ;
INFO  19:18:53,837 - #44 int
INFO  19:18:53,837 - #44 y
INFO  19:18:53,837 - #31 ;
INFO  19:18:53,837 - #38 {
INFO  19:18:53,837 - #44 int
INFO  19:18:53,837 - #44 main
INFO  19:18:53,837 - #34 (
INFO  19:18:53,837 - #35 )
INFO  19:18:53,837 - #38 {
INFO  19:18:53,837 - #9 print
INFO  19:18:53,837 - #34 (
INFO  19:18:53,837 - #43 1
INFO  19:18:53,838 - #35 )
INFO  19:18:53,838 - #31 ;
INFO  19:18:53,838 - #9 print
INFO  19:18:53,838 - #34 (
INFO  19:18:53,838 - #43 2
INFO  19:18:53,838 - #35 )
INFO  19:18:53,838 - #31 ;
INFO  19:18:53,838 - #39 }
INFO  19:18:53,838 - #39 }
INFO  19:18:53,838 - Print calls = 2
INFO  19:19:03,727 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:19:03,736 - #2 program
INFO  19:19:03,736 - #44 MJProgram
INFO  19:19:03,736 - #44 int
INFO  19:19:03,736 - #44 x
INFO  19:19:03,736 - #31 ;
INFO  19:19:03,737 - #44 int
INFO  19:19:03,737 - #44 y
INFO  19:19:03,737 - #31 ;
INFO  19:19:03,737 - #38 {
INFO  19:19:03,737 - #44 int
INFO  19:19:03,737 - #44 main
INFO  19:19:03,737 - #34 (
INFO  19:19:03,737 - #35 )
INFO  19:19:03,737 - #38 {
INFO  19:19:03,737 - #9 print
INFO  19:19:03,737 - #34 (
INFO  19:19:03,738 - #43 1
INFO  19:19:03,738 - #35 )
INFO  19:19:03,738 - #31 ;
INFO  19:19:03,738 - #44 x
INFO  19:19:03,738 - #28 =
INFO  19:19:03,738 - #43 1
INFO  19:19:03,738 - #31 ;
INFO  19:19:03,738 - #9 print
INFO  19:19:03,738 - #34 (
INFO  19:19:03,738 - #43 2
INFO  19:19:03,738 - #35 )
INFO  19:19:03,738 - #31 ;
INFO  19:19:03,739 - #39 }
INFO  19:19:03,739 - #39 }
INFO  19:19:03,739 - Print calls = 2
INFO  19:19:19,014 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:19:19,022 - #2 program
INFO  19:19:19,022 - #44 MJProgram
INFO  19:19:19,022 - #44 int
INFO  19:19:19,022 - #44 x
INFO  19:19:19,023 - #31 ;
INFO  19:19:19,023 - #44 int
INFO  19:19:19,023 - #44 y
INFO  19:19:19,023 - #31 ;
INFO  19:19:19,023 - #38 {
INFO  19:19:19,023 - #44 int
INFO  19:19:19,023 - #44 main
INFO  19:19:19,023 - #34 (
INFO  19:19:19,023 - #35 )
INFO  19:19:19,023 - #38 {
INFO  19:19:19,023 - #9 print
INFO  19:19:19,024 - #34 (
INFO  19:19:19,024 - #43 1
INFO  19:19:19,024 - #35 )
INFO  19:19:19,024 - #31 ;
INFO  19:19:19,024 - #44 x
INFO  19:19:19,024 - #28 =
INFO  19:19:19,024 - #43 1
INFO  19:19:19,024 - #15 +
INFO  19:19:19,024 - #43 2
INFO  19:19:19,024 - #31 ;
INFO  19:19:19,024 - #9 print
INFO  19:19:19,024 - #34 (
INFO  19:19:19,025 - #43 2
INFO  19:19:19,025 - #35 )
INFO  19:19:19,025 - #31 ;
INFO  19:19:19,025 - #39 }
INFO  19:19:19,025 - #39 }
INFO  19:19:19,025 - Print calls = 2
INFO  19:19:25,472 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:19:25,482 - #2 program
INFO  19:19:25,482 - #44 MJProgram
INFO  19:19:25,482 - #44 int
INFO  19:19:25,482 - #44 x
INFO  19:19:25,482 - #31 ;
INFO  19:19:25,482 - #44 int
INFO  19:19:25,482 - #44 y
INFO  19:19:25,482 - #31 ;
INFO  19:19:25,483 - #38 {
INFO  19:19:25,483 - #44 int
INFO  19:19:25,483 - #44 main
INFO  19:19:25,483 - #34 (
INFO  19:19:25,483 - #35 )
INFO  19:19:25,483 - #38 {
INFO  19:19:25,483 - #9 print
INFO  19:19:25,483 - #34 (
INFO  19:19:25,483 - #43 1
INFO  19:19:25,483 - #35 )
INFO  19:19:25,483 - #31 ;
INFO  19:19:25,483 - #44 x
INFO  19:19:25,483 - #28 =
INFO  19:19:25,483 - #43 1
INFO  19:19:25,484 - #15 +
INFO  19:19:25,484 - #44 y
INFO  19:19:25,484 - #31 ;
INFO  19:19:25,484 - #9 print
INFO  19:19:25,484 - #34 (
INFO  19:19:25,484 - #43 2
INFO  19:19:25,484 - #35 )
INFO  19:19:25,484 - #31 ;
INFO  19:19:25,484 - #39 }
INFO  19:19:25,484 - #39 }
INFO  19:19:25,484 - Print calls = 2
INFO  19:19:33,333 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:19:33,341 - #2 program
INFO  19:19:33,341 - #44 MJProgram
INFO  19:19:33,341 - #44 int
INFO  19:19:33,341 - #44 x
INFO  19:19:33,341 - #31 ;
INFO  19:19:33,341 - #44 int
INFO  19:19:33,341 - #44 y
INFO  19:19:33,341 - #31 ;
INFO  19:19:33,341 - #38 {
INFO  19:19:33,342 - #44 int
INFO  19:19:33,342 - #44 main
INFO  19:19:33,342 - #34 (
INFO  19:19:33,342 - #35 )
INFO  19:19:33,342 - #38 {
INFO  19:19:33,342 - #9 print
INFO  19:19:33,342 - #34 (
INFO  19:19:33,342 - #43 1
INFO  19:19:33,342 - #35 )
INFO  19:19:33,342 - #31 ;
INFO  19:19:33,342 - #44 x
INFO  19:19:33,342 - #28 =
INFO  19:19:33,342 - #44 y
INFO  19:19:33,343 - #15 +
INFO  19:19:33,343 - #43 1
INFO  19:19:33,343 - #31 ;
INFO  19:19:33,343 - #9 print
INFO  19:19:33,343 - #34 (
INFO  19:19:33,343 - #43 2
INFO  19:19:33,343 - #35 )
INFO  19:19:33,343 - #31 ;
INFO  19:19:33,343 - #39 }
INFO  19:19:33,343 - #39 }
INFO  19:19:33,343 - Print calls = 2
INFO  19:30:04,068 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:30:04,076 - #2 program
INFO  19:30:04,076 - #44 MJProgram
INFO  19:30:04,076 - #44 int
INFO  19:30:04,077 - #44 x
INFO  19:30:04,077 - #31 ;
INFO  19:30:04,077 - #44 int
INFO  19:30:04,077 - #44 y
INFO  19:30:04,077 - #31 ;
INFO  19:30:04,077 - #38 {
INFO  19:30:04,077 - #44 int
INFO  19:30:04,077 - #44 main
INFO  19:30:04,077 - #34 (
INFO  19:30:04,077 - #35 )
INFO  19:30:04,078 - #38 {
INFO  19:30:04,078 - #9 print
INFO  19:30:04,078 - #34 (
INFO  19:30:04,078 - #43 1
INFO  19:30:04,078 - #35 )
INFO  19:30:04,078 - #31 ;
INFO  19:30:04,078 - #44 x
INFO  19:30:04,078 - #28 =
INFO  19:30:04,078 - #44 y
INFO  19:30:04,078 - #15 +
INFO  19:30:04,079 - #43 1
INFO  19:30:04,079 - #31 ;
INFO  19:30:04,079 - #9 print
INFO  19:30:04,079 - #34 (
INFO  19:30:04,079 - #43 2
INFO  19:30:04,079 - #35 )
INFO  19:30:04,079 - #31 ;
INFO  19:30:04,079 - #39 }
INFO  19:30:04,079 - #39 }
INFO  19:30:04,080 - Print calls = 2
INFO  19:30:20,145 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:30:20,155 - #2 program
INFO  19:30:20,155 - #44 MJProgram
INFO  19:30:20,155 - #44 int
INFO  19:30:20,155 - #44 x
INFO  19:30:20,155 - #31 ;
INFO  19:30:20,155 - #44 int
INFO  19:30:20,155 - #44 y
INFO  19:30:20,155 - #31 ;
INFO  19:30:20,155 - #38 {
INFO  19:30:20,156 - #44 int
INFO  19:30:20,156 - #44 main
INFO  19:30:20,156 - #34 (
INFO  19:30:20,156 - #35 )
INFO  19:30:20,156 - #38 {
INFO  19:30:20,156 - #9 print
INFO  19:30:20,156 - #34 (
INFO  19:30:20,156 - #43 1
INFO  19:30:20,156 - #35 )
INFO  19:30:20,156 - #31 ;
INFO  19:30:20,156 - #44 x
INFO  19:30:20,156 - #28 =
INFO  19:30:20,157 - #44 y
INFO  19:30:20,157 - #15 +
INFO  19:30:20,157 - #43 1
INFO  19:30:20,157 - #31 ;
INFO  19:30:20,157 - #9 print
INFO  19:30:20,157 - #34 (
INFO  19:30:20,157 - #43 2
INFO  19:30:20,157 - #35 )
INFO  19:30:20,157 - #31 ;
INFO  19:30:20,157 - #39 }
INFO  19:30:20,157 - #39 }
INFO  19:30:20,157 - Print calls = 2
INFO  19:30:26,532 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:30:26,540 - #2 program
INFO  19:30:26,540 - #44 MJProgram
INFO  19:30:26,540 - #44 int
INFO  19:30:26,540 - #44 x
INFO  19:30:26,540 - #31 ;
INFO  19:30:26,541 - #44 int
INFO  19:30:26,541 - #44 y
INFO  19:30:26,541 - #31 ;
INFO  19:30:26,541 - #38 {
INFO  19:30:26,541 - #44 int
INFO  19:30:26,541 - #44 main
INFO  19:30:26,541 - #34 (
INFO  19:30:26,541 - #35 )
INFO  19:30:26,541 - #38 {
INFO  19:30:26,541 - #9 print
INFO  19:30:26,541 - #34 (
INFO  19:30:26,542 - #43 1
INFO  19:30:26,542 - #35 )
INFO  19:30:26,542 - #31 ;
INFO  19:30:26,542 - #44 x
INFO  19:30:26,542 - #28 =
INFO  19:30:26,542 - #44 y
INFO  19:30:26,542 - #15 +
INFO  19:30:26,542 - #43 1
INFO  19:30:26,542 - #31 ;
INFO  19:30:26,542 - #9 print
INFO  19:30:26,542 - #34 (
INFO  19:30:26,542 - #43 2
INFO  19:30:26,542 - #35 )
INFO  19:30:26,543 - #31 ;
INFO  19:30:26,543 - #39 }
INFO  19:30:26,543 - #39 }
INFO  19:30:26,543 - Print calls = 2
INFO  19:34:08,992 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:34:09,000 - #2 program
INFO  19:34:09,000 - #44 MJProgram
INFO  19:34:09,001 - #44 int
INFO  19:34:09,001 - #44 x
INFO  19:34:09,001 - #31 ;
INFO  19:34:09,001 - #44 int
INFO  19:34:09,001 - #44 y
INFO  19:34:09,001 - #31 ;
INFO  19:34:09,001 - #38 {
INFO  19:34:09,001 - #44 int
INFO  19:34:09,001 - #44 main
INFO  19:34:09,001 - #34 (
INFO  19:34:09,001 - #35 )
INFO  19:34:09,001 - #38 {
INFO  19:34:09,002 - #9 print
INFO  19:34:09,002 - #34 (
INFO  19:34:09,002 - #43 1
INFO  19:34:09,002 - #35 )
INFO  19:34:09,002 - #31 ;
INFO  19:34:09,002 - #44 x
INFO  19:34:09,002 - #28 =
INFO  19:34:09,002 - #44 y
INFO  19:34:09,002 - #15 +
INFO  19:34:09,002 - #43 1
INFO  19:34:09,002 - #31 ;
INFO  19:34:09,002 - #9 print
INFO  19:34:09,002 - #34 (
INFO  19:34:09,002 - #43 2
INFO  19:34:09,003 - #35 )
INFO  19:34:09,003 - #31 ;
INFO  19:34:09,003 - #39 }
INFO  19:34:09,003 - #39 }
INFO  19:34:09,003 - Print calls = 2
INFO  19:34:30,663 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:34:30,673 - #2 program
INFO  19:34:30,673 - #44 MJProgram
INFO  19:34:30,673 - #44 int
INFO  19:34:30,674 - #44 x
INFO  19:34:30,674 - #31 ;
INFO  19:34:30,674 - #44 int
INFO  19:34:30,674 - #44 y
INFO  19:34:30,674 - #31 ;
INFO  19:34:30,674 - #38 {
INFO  19:34:30,674 - #44 int
INFO  19:34:30,674 - #44 main
INFO  19:34:30,674 - #34 (
INFO  19:34:30,674 - #35 )
INFO  19:34:30,675 - #38 {
INFO  19:34:30,675 - #9 print
INFO  19:34:30,675 - #34 (
INFO  19:34:30,675 - #43 1
INFO  19:34:30,675 - #35 )
INFO  19:34:30,675 - #31 ;
INFO  19:34:30,675 - #44 x
INFO  19:34:30,675 - #28 =
INFO  19:34:30,675 - #44 y
INFO  19:34:30,675 - #15 +
INFO  19:34:30,675 - #43 1
INFO  19:34:30,676 - #31 ;
INFO  19:34:30,676 - #9 print
INFO  19:34:30,676 - #34 (
INFO  19:34:30,676 - #43 2
INFO  19:34:30,676 - #35 )
INFO  19:34:30,676 - #31 ;
INFO  19:34:30,676 - #39 }
INFO  19:34:30,676 - #39 }
INFO  19:34:30,676 - Print calls = 0
INFO  19:45:54,669 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:45:54,677 - #2 program
INFO  19:45:54,677 - #44 Program
INFO  19:45:54,677 - #4 class
ERROR 19:45:54,678 - 
Sintaksna greska na liniji 2
ERROR 19:45:54,678 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  19:45:54,678 - Print calls = 0
INFO  19:48:00,834 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:48:00,842 - #2 program
INFO  19:48:00,842 - #44 Program
INFO  19:48:00,842 - #4 class
ERROR 19:48:00,842 - 
Sintaksna greska na liniji 2
ERROR 19:48:00,842 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 2
INFO  19:48:00,842 - Print calls = 0
INFO  19:50:05,448 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program_simple.mj
INFO  19:50:05,458 - #2 program
INFO  19:50:05,459 - #44 MJProgram
INFO  19:50:05,459 - #44 int
INFO  19:50:05,459 - #44 x
INFO  19:50:05,459 - #31 ;
INFO  19:50:05,459 - #44 int
INFO  19:50:05,459 - #44 y
INFO  19:50:05,459 - #31 ;
INFO  19:50:05,459 - #38 {
INFO  19:50:05,459 - #44 int
INFO  19:50:05,459 - #44 main
INFO  19:50:05,459 - #34 (
INFO  19:50:05,460 - #35 )
INFO  19:50:05,460 - #38 {
INFO  19:50:05,460 - #9 print
INFO  19:50:05,460 - #34 (
INFO  19:50:05,460 - #43 1
INFO  19:50:05,460 - #35 )
INFO  19:50:05,460 - #31 ;
INFO  19:50:05,460 - #44 x
INFO  19:50:05,460 - #28 =
INFO  19:50:05,460 - #44 y
INFO  19:50:05,461 - #15 +
INFO  19:50:05,461 - #43 1
INFO  19:50:05,461 - #31 ;
INFO  19:50:05,461 - #9 print
INFO  19:50:05,461 - #34 (
INFO  19:50:05,461 - #43 2
INFO  19:50:05,461 - #35 )
INFO  19:50:05,461 - #31 ;
INFO  19:50:05,461 - #39 }
INFO  19:50:05,462 - #39 }
INFO  19:50:05,462 - Print calls = 0
INFO  19:50:24,987 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:50:24,999 - #2 program
INFO  19:50:24,999 - #44 Program
INFO  19:50:24,999 - #4 class
INFO  19:50:24,999 - #44 A
INFO  19:50:24,999 - #38 {
INFO  19:50:24,999 - #44 int
INFO  19:50:24,999 - #44 x
INFO  19:50:24,999 - #36 [
INFO  19:50:25,000 - #37 ]
INFO  19:50:25,000 - #32 ,
INFO  19:50:25,000 - #44 y
INFO  19:50:25,000 - #36 [
INFO  19:50:25,000 - #37 ]
INFO  19:50:25,000 - #31 ;
INFO  19:50:25,000 - #39 }
INFO  19:50:25,000 - #38 {
INFO  19:50:25,001 - #39 }
INFO  19:50:25,001 - Print calls = 0
INFO  19:51:56,233 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:51:56,241 - #2 program
INFO  19:51:56,242 - #44 Program
INFO  19:51:56,242 - #4 class
INFO  19:51:56,242 - #44 A
INFO  19:51:56,242 - #38 {
INFO  19:51:56,242 - #44 int
INFO  19:51:56,242 - #44 x
INFO  19:51:56,242 - #36 [
INFO  19:51:56,242 - #37 ]
INFO  19:51:56,242 - #32 ,
INFO  19:51:56,242 - #44 y
INFO  19:51:56,243 - #36 [
INFO  19:51:56,243 - #37 ]
INFO  19:51:56,243 - #31 ;
INFO  19:51:56,243 - #39 }
INFO  19:51:56,243 - #6 const
INFO  19:51:56,243 - #44 int
INFO  19:51:56,243 - #44 pi
INFO  19:51:56,243 - #28 =
INFO  19:51:56,243 - #43 3
INFO  19:51:56,243 - #32 ,
INFO  19:51:56,243 - #44 e
INFO  19:51:56,243 - #28 =
INFO  19:51:56,244 - #43 2
INFO  19:51:56,244 - #31 ;
INFO  19:51:56,244 - #4 class
INFO  19:51:56,244 - #44 B
INFO  19:51:56,244 - #14 extends
INFO  19:51:56,244 - #44 A
INFO  19:51:56,244 - #38 {
INFO  19:51:56,244 - #44 int
INFO  19:51:56,244 - #44 i
INFO  19:51:56,244 - #31 ;
INFO  19:51:56,244 - #44 int
INFO  19:51:56,244 - #44 x
INFO  19:51:56,244 - #36 [
INFO  19:51:56,245 - #37 ]
INFO  19:51:56,245 - #31 ;
INFO  19:51:56,245 - #44 int
INFO  19:51:56,245 - #44 getValue
INFO  19:51:56,245 - #34 (
ERROR 19:51:56,245 - 
Sintaksna greska na liniji 9
ERROR 19:51:56,245 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 9
INFO  19:51:56,245 - Print calls = 0
INFO  19:55:33,311 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:55:33,319 - #2 program
INFO  19:55:33,319 - #44 Program
INFO  19:55:33,319 - #4 class
INFO  19:55:33,319 - #44 A
INFO  19:55:33,320 - #38 {
INFO  19:55:33,320 - #44 int
INFO  19:55:33,320 - #44 x
INFO  19:55:33,320 - #36 [
INFO  19:55:33,320 - #37 ]
INFO  19:55:33,320 - #32 ,
INFO  19:55:33,320 - #44 y
INFO  19:55:33,320 - #36 [
INFO  19:55:33,320 - #37 ]
INFO  19:55:33,320 - #31 ;
INFO  19:55:33,320 - #39 }
INFO  19:55:33,321 - #6 const
INFO  19:55:33,321 - #44 int
INFO  19:55:33,321 - #44 pi
INFO  19:55:33,321 - #28 =
INFO  19:55:33,321 - #43 3
INFO  19:55:33,321 - #32 ,
INFO  19:55:33,321 - #44 e
INFO  19:55:33,321 - #28 =
INFO  19:55:33,321 - #43 2
INFO  19:55:33,321 - #31 ;
INFO  19:55:33,321 - #4 class
INFO  19:55:33,321 - #44 B
INFO  19:55:33,321 - #14 extends
INFO  19:55:33,321 - #44 A
INFO  19:55:33,322 - #38 {
INFO  19:55:33,322 - #44 int
INFO  19:55:33,322 - #44 i
INFO  19:55:33,322 - #31 ;
INFO  19:55:33,322 - #44 int
INFO  19:55:33,322 - #44 x
INFO  19:55:33,322 - #36 [
INFO  19:55:33,322 - #37 ]
INFO  19:55:33,322 - #31 ;
INFO  19:55:33,322 - #38 {
INFO  19:55:33,322 - #44 int
INFO  19:55:33,322 - #44 getValue
INFO  19:55:33,322 - #34 (
INFO  19:55:33,322 - #44 int
INFO  19:55:33,323 - #44 a
INFO  19:55:33,323 - #35 )
INFO  19:55:33,323 - #44 int
INFO  19:55:33,323 - #44 b
INFO  19:55:33,323 - #31 ;
INFO  19:55:33,323 - #44 bool
INFO  19:55:33,323 - #44 c
INFO  19:55:33,323 - #31 ;
INFO  19:55:33,323 - #38 {
INFO  19:55:33,323 - #11 return
INFO  19:55:33,323 - #44 this
INFO  19:55:33,323 - #33 .
INFO  19:55:33,324 - #44 i
INFO  19:55:33,324 - #15 +
INFO  19:55:33,324 - #44 this
INFO  19:55:33,324 - #33 .
INFO  19:55:33,324 - #44 x
INFO  19:55:33,324 - #36 [
INFO  19:55:33,324 - #43 0
INFO  19:55:33,324 - #37 ]
INFO  19:55:33,324 - #15 +
INFO  19:55:33,324 - #44 a
INFO  19:55:33,324 - #31 ;
INFO  19:55:33,325 - #39 }
INFO  19:55:33,325 - #39 }
INFO  19:55:33,325 - #39 }
INFO  19:55:33,325 - #38 {
INFO  19:55:33,325 - #39 }
INFO  19:55:33,325 - Print calls = 0
INFO  19:57:09,659 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:57:09,667 - #2 program
INFO  19:57:09,667 - #44 Program
INFO  19:57:09,667 - #4 class
INFO  19:57:09,667 - #44 A
INFO  19:57:09,667 - #38 {
INFO  19:57:09,668 - #44 int
INFO  19:57:09,668 - #44 x
INFO  19:57:09,668 - #36 [
INFO  19:57:09,668 - #37 ]
INFO  19:57:09,668 - #32 ,
INFO  19:57:09,668 - #44 y
INFO  19:57:09,668 - #36 [
INFO  19:57:09,668 - #37 ]
INFO  19:57:09,668 - #31 ;
INFO  19:57:09,668 - #39 }
INFO  19:57:09,668 - #6 const
INFO  19:57:09,668 - #44 int
INFO  19:57:09,669 - #44 pi
INFO  19:57:09,669 - #28 =
INFO  19:57:09,669 - #43 3
INFO  19:57:09,669 - #32 ,
INFO  19:57:09,669 - #44 e
INFO  19:57:09,669 - #28 =
INFO  19:57:09,669 - #43 2
INFO  19:57:09,669 - #31 ;
INFO  19:57:09,669 - #4 class
INFO  19:57:09,669 - #44 B
INFO  19:57:09,669 - #14 extends
INFO  19:57:09,669 - #44 A
INFO  19:57:09,669 - #38 {
INFO  19:57:09,670 - #44 int
INFO  19:57:09,670 - #44 i
INFO  19:57:09,670 - #31 ;
INFO  19:57:09,670 - #44 int
INFO  19:57:09,670 - #44 x
INFO  19:57:09,670 - #36 [
INFO  19:57:09,670 - #37 ]
INFO  19:57:09,670 - #31 ;
INFO  19:57:09,670 - #38 {
INFO  19:57:09,670 - #44 int
INFO  19:57:09,670 - #44 getValue
INFO  19:57:09,670 - #34 (
INFO  19:57:09,670 - #44 int
INFO  19:57:09,671 - #44 a
INFO  19:57:09,671 - #35 )
INFO  19:57:09,671 - #44 int
INFO  19:57:09,671 - #44 b
INFO  19:57:09,671 - #31 ;
INFO  19:57:09,671 - #44 bool
INFO  19:57:09,671 - #44 c
INFO  19:57:09,671 - #31 ;
INFO  19:57:09,671 - #38 {
INFO  19:57:09,671 - #11 return
INFO  19:57:09,671 - #44 this
INFO  19:57:09,671 - #33 .
INFO  19:57:09,672 - #44 i
INFO  19:57:09,672 - #15 +
INFO  19:57:09,672 - #44 this
INFO  19:57:09,672 - #33 .
INFO  19:57:09,672 - #44 x
INFO  19:57:09,672 - #36 [
INFO  19:57:09,672 - #43 0
INFO  19:57:09,672 - #37 ]
INFO  19:57:09,672 - #15 +
INFO  19:57:09,672 - #44 a
INFO  19:57:09,672 - #31 ;
INFO  19:57:09,673 - #39 }
INFO  19:57:09,673 - #39 }
INFO  19:57:09,673 - #39 }
INFO  19:57:09,673 - #4 class
INFO  19:57:09,673 - #44 C
INFO  19:57:09,673 - #14 extends
INFO  19:57:09,673 - #44 B
INFO  19:57:09,673 - #38 {
INFO  19:57:09,673 - #44 A
INFO  19:57:09,673 - #44 theA
INFO  19:57:09,673 - #31 ;
INFO  19:57:09,673 - #44 string
INFO  19:57:09,674 - #44 a
INFO  19:57:09,674 - #31 ;
INFO  19:57:09,674 - #39 }
INFO  19:57:09,674 - #38 {
INFO  19:57:09,674 - #39 }
INFO  19:57:09,674 - Print calls = 0
INFO  19:58:06,455 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:58:06,465 - #2 program
INFO  19:58:06,465 - #44 Program
INFO  19:58:06,466 - #4 class
INFO  19:58:06,466 - #44 A
INFO  19:58:06,466 - #38 {
INFO  19:58:06,466 - #44 int
INFO  19:58:06,466 - #44 x
INFO  19:58:06,466 - #36 [
INFO  19:58:06,466 - #37 ]
INFO  19:58:06,466 - #32 ,
INFO  19:58:06,466 - #44 y
INFO  19:58:06,466 - #36 [
INFO  19:58:06,466 - #37 ]
INFO  19:58:06,467 - #31 ;
INFO  19:58:06,467 - #39 }
INFO  19:58:06,467 - #6 const
INFO  19:58:06,467 - #44 int
INFO  19:58:06,467 - #44 pi
INFO  19:58:06,467 - #28 =
INFO  19:58:06,467 - #43 3
INFO  19:58:06,467 - #32 ,
INFO  19:58:06,467 - #44 e
INFO  19:58:06,467 - #28 =
INFO  19:58:06,468 - #43 2
INFO  19:58:06,468 - #31 ;
INFO  19:58:06,468 - #4 class
INFO  19:58:06,468 - #44 B
INFO  19:58:06,468 - #14 extends
INFO  19:58:06,468 - #44 A
INFO  19:58:06,468 - #38 {
INFO  19:58:06,468 - #44 int
INFO  19:58:06,468 - #44 i
INFO  19:58:06,468 - #31 ;
INFO  19:58:06,468 - #44 int
INFO  19:58:06,468 - #44 x
INFO  19:58:06,469 - #36 [
INFO  19:58:06,469 - #37 ]
INFO  19:58:06,469 - #31 ;
INFO  19:58:06,469 - #44 int
INFO  19:58:06,469 - #44 getValue
INFO  19:58:06,469 - #34 (
ERROR 19:58:06,469 - 
Sintaksna greska na liniji 8
ERROR 19:58:06,469 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 8
INFO  19:58:06,469 - Print calls = 0
INFO  19:58:32,605 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  19:58:32,616 - #2 program
INFO  19:58:32,616 - #44 Program
INFO  19:58:32,616 - #4 class
INFO  19:58:32,616 - #44 A
INFO  19:58:32,616 - #38 {
INFO  19:58:32,616 - #44 int
INFO  19:58:32,617 - #44 x
INFO  19:58:32,617 - #36 [
INFO  19:58:32,617 - #37 ]
INFO  19:58:32,617 - #32 ,
INFO  19:58:32,617 - #44 y
INFO  19:58:32,617 - #36 [
INFO  19:58:32,617 - #37 ]
INFO  19:58:32,617 - #31 ;
INFO  19:58:32,617 - #39 }
INFO  19:58:32,617 - #6 const
INFO  19:58:32,617 - #44 int
INFO  19:58:32,618 - #44 pi
INFO  19:58:32,618 - #28 =
INFO  19:58:32,618 - #43 3
INFO  19:58:32,618 - #32 ,
INFO  19:58:32,618 - #44 e
INFO  19:58:32,618 - #28 =
INFO  19:58:32,618 - #43 2
INFO  19:58:32,618 - #31 ;
INFO  19:58:32,618 - #4 class
INFO  19:58:32,618 - #44 B
INFO  19:58:32,619 - #14 extends
INFO  19:58:32,619 - #44 A
INFO  19:58:32,619 - #38 {
INFO  19:58:32,619 - #44 int
INFO  19:58:32,619 - #44 i
INFO  19:58:32,619 - #31 ;
INFO  19:58:32,619 - #44 int
INFO  19:58:32,619 - #44 x
INFO  19:58:32,619 - #36 [
INFO  19:58:32,619 - #37 ]
INFO  19:58:32,620 - #31 ;
INFO  19:58:32,620 - #38 {
INFO  19:58:32,620 - #44 int
INFO  19:58:32,620 - #44 getValue
INFO  19:58:32,620 - #34 (
INFO  19:58:32,620 - #44 int
INFO  19:58:32,620 - #44 a
INFO  19:58:32,620 - #35 )
INFO  19:58:32,620 - #44 int
INFO  19:58:32,620 - #44 b
INFO  19:58:32,620 - #31 ;
INFO  19:58:32,621 - #44 bool
INFO  19:58:32,621 - #44 c
INFO  19:58:32,621 - #31 ;
INFO  19:58:32,621 - #38 {
INFO  19:58:32,621 - #11 return
INFO  19:58:32,621 - #44 this
INFO  19:58:32,621 - #33 .
INFO  19:58:32,621 - #44 i
INFO  19:58:32,621 - #15 +
INFO  19:58:32,622 - #44 this
INFO  19:58:32,622 - #33 .
INFO  19:58:32,622 - #44 x
INFO  19:58:32,622 - #36 [
INFO  19:58:32,622 - #43 0
INFO  19:58:32,622 - #37 ]
INFO  19:58:32,622 - #15 +
INFO  19:58:32,622 - #44 a
INFO  19:58:32,622 - #31 ;
INFO  19:58:32,622 - #39 }
INFO  19:58:32,622 - #39 }
INFO  19:58:32,623 - #39 }
INFO  19:58:32,623 - #4 class
INFO  19:58:32,623 - #44 C
INFO  19:58:32,623 - #14 extends
INFO  19:58:32,623 - #44 B
INFO  19:58:32,623 - #38 {
INFO  19:58:32,623 - #44 A
INFO  19:58:32,623 - #44 theA
INFO  19:58:32,623 - #31 ;
INFO  19:58:32,623 - #44 string
INFO  19:58:32,623 - #44 a
INFO  19:58:32,624 - #31 ;
INFO  19:58:32,624 - #39 }
INFO  19:58:32,624 - #38 {
INFO  19:58:32,624 - #12 void
INFO  19:58:32,624 - #44 main
INFO  19:58:32,624 - #34 (
INFO  19:58:32,624 - #35 )
INFO  19:58:32,624 - #44 A
INFO  19:58:32,624 - #44 a
INFO  19:58:32,624 - #31 ;
INFO  19:58:32,624 - #44 C
INFO  19:58:32,624 - #44 c
INFO  19:58:32,625 - #31 ;
INFO  19:58:32,625 - #44 int
INFO  19:58:32,625 - #44 i
INFO  19:58:32,625 - #31 ;
INFO  19:58:32,625 - #44 int
INFO  19:58:32,625 - #44 x
INFO  19:58:32,625 - #36 [
INFO  19:58:32,625 - #37 ]
INFO  19:58:32,625 - #31 ;
INFO  19:58:32,625 - #38 {
INFO  19:58:32,625 - #44 a
INFO  19:58:32,626 - #28 =
INFO  19:58:32,626 - #8 new
INFO  19:58:32,626 - #44 A
INFO  19:58:32,626 - #31 ;
INFO  19:58:32,626 - #44 a
INFO  19:58:32,626 - #33 .
INFO  19:58:32,626 - #44 x
INFO  19:58:32,626 - #28 =
INFO  19:58:32,626 - #8 new
INFO  19:58:32,626 - #44 int
INFO  19:58:32,626 - #36 [
INFO  19:58:32,627 - #43 5
INFO  19:58:32,627 - #37 ]
INFO  19:58:32,627 - #31 ;
INFO  19:58:32,627 - #44 a
INFO  19:58:32,627 - #33 .
INFO  19:58:32,627 - #44 y
INFO  19:58:32,627 - #28 =
INFO  19:58:32,627 - #8 new
INFO  19:58:32,628 - #44 int
INFO  19:58:32,628 - #36 [
INFO  19:58:32,628 - #43 5
INFO  19:58:32,628 - #37 ]
INFO  19:58:32,628 - #31 ;
INFO  19:58:32,628 - #44 c
INFO  19:58:32,628 - #28 =
INFO  19:58:32,629 - #8 new
INFO  19:58:32,629 - #44 C
INFO  19:58:32,629 - #31 ;
INFO  19:58:32,629 - #44 c
INFO  19:58:32,629 - #33 .
INFO  19:58:32,629 - #44 theA
INFO  19:58:32,629 - #28 =
INFO  19:58:32,629 - #44 a
INFO  19:58:32,630 - #31 ;
INFO  19:58:32,630 - #44 c
INFO  19:58:32,630 - #33 .
INFO  19:58:32,630 - #44 x
INFO  19:58:32,630 - #28 =
INFO  19:58:32,630 - #8 new
INFO  19:58:32,630 - #44 int
INFO  19:58:32,631 - #36 [
INFO  19:58:32,631 - #43 5
INFO  19:58:32,631 - #37 ]
INFO  19:58:32,632 - #31 ;
INFO  19:58:32,632 - #44 x
INFO  19:58:32,632 - #28 =
INFO  19:58:32,632 - #8 new
INFO  19:58:32,632 - #44 int
INFO  19:58:32,632 - #36 [
INFO  19:58:32,632 - #43 3
INFO  19:58:32,632 - #37 ]
INFO  19:58:32,633 - #31 ;
INFO  19:58:32,633 - #44 i
INFO  19:58:32,633 - #28 =
INFO  19:58:32,633 - #43 0
INFO  19:58:32,633 - #31 ;
INFO  19:58:32,633 - #10 read
INFO  19:58:32,633 - #34 (
INFO  19:58:32,634 - #44 c
INFO  19:58:32,634 - #33 .
INFO  19:58:32,634 - #44 i
INFO  19:58:32,634 - #35 )
INFO  19:58:32,634 - #31 ;
INFO  19:58:32,634 - #13 while
INFO  19:58:32,634 - #34 (
INFO  19:58:32,634 - #44 i
INFO  19:58:32,635 - #24 <
INFO  19:58:32,635 - #43 5
INFO  19:58:32,635 - #35 )
INFO  19:58:32,635 - #38 {
INFO  19:58:32,637 - #10 read
INFO  19:58:32,637 - #34 (
INFO  19:58:32,637 - #44 c
INFO  19:58:32,637 - #33 .
INFO  19:58:32,637 - #44 x
INFO  19:58:32,637 - #36 [
INFO  19:58:32,637 - #44 i
INFO  19:58:32,638 - #37 ]
INFO  19:58:32,638 - #35 )
INFO  19:58:32,638 - #31 ;
INFO  19:58:32,638 - #10 read
INFO  19:58:32,639 - #34 (
INFO  19:58:32,639 - #44 c
INFO  19:58:32,639 - #33 .
INFO  19:58:32,639 - #44 theA
INFO  19:58:32,639 - #33 .
INFO  19:58:32,639 - #44 x
INFO  19:58:32,639 - #36 [
INFO  19:58:32,639 - #44 i
INFO  19:58:32,640 - #37 ]
INFO  19:58:32,640 - #35 )
INFO  19:58:32,640 - #31 ;
INFO  19:58:32,640 - #44 i
INFO  19:58:32,640 - #29 ++
INFO  19:58:32,640 - #31 ;
INFO  19:58:32,641 - #39 }
INFO  19:58:32,641 - #9 print
INFO  19:58:32,641 - #34 (
INFO  19:58:32,641 - #44 c
INFO  19:58:32,641 - #33 .
INFO  19:58:32,641 - #44 getValue
INFO  19:58:32,641 - #34 (
INFO  19:58:32,642 - #44 c
INFO  19:58:32,642 - #33 .
INFO  19:58:32,642 - #44 theA
INFO  19:58:32,642 - #33 .
INFO  19:58:32,642 - #44 x
INFO  19:58:32,642 - #36 [
INFO  19:58:32,643 - #43 0
INFO  19:58:32,643 - #37 ]
INFO  19:58:32,643 - #35 )
INFO  19:58:32,643 - #35 )
INFO  19:58:32,643 - #31 ;
INFO  19:58:32,643 - #39 }
INFO  19:58:32,643 - #39 }
INFO  19:58:32,644 - Print calls = 0
INFO  20:19:24,189 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:19:24,199 - #2 program
INFO  20:19:24,199 - #44 Program
INFO  20:19:24,199 - #4 class
INFO  20:19:24,199 - #44 A
INFO  20:19:24,199 - #38 {
INFO  20:19:24,199 - #44 int
INFO  20:19:24,199 - #44 x
INFO  20:19:24,199 - #36 [
INFO  20:19:24,200 - #37 ]
INFO  20:19:24,200 - #32 ,
INFO  20:19:24,200 - #44 y
INFO  20:19:24,200 - #36 [
INFO  20:19:24,200 - #37 ]
INFO  20:19:24,200 - #31 ;
INFO  20:19:24,200 - #39 }
INFO  20:19:24,200 - #6 const
INFO  20:19:24,200 - #44 int
INFO  20:19:24,200 - #44 pi
INFO  20:19:24,200 - #28 =
INFO  20:19:24,201 - #43 3
INFO  20:19:24,201 - #32 ,
INFO  20:19:24,201 - #44 e
INFO  20:19:24,201 - #28 =
INFO  20:19:24,201 - #43 2
INFO  20:19:24,201 - #31 ;
INFO  20:19:24,201 - #4 class
INFO  20:19:24,201 - #44 B
INFO  20:19:24,201 - #14 extends
INFO  20:19:24,201 - #44 A
INFO  20:19:24,201 - #38 {
INFO  20:19:24,201 - #44 int
INFO  20:19:24,202 - #44 i
INFO  20:19:24,202 - #31 ;
INFO  20:19:24,202 - #44 int
INFO  20:19:24,202 - #44 x
INFO  20:19:24,202 - #36 [
INFO  20:19:24,202 - #37 ]
INFO  20:19:24,202 - #31 ;
INFO  20:19:24,202 - #38 {
INFO  20:19:24,202 - #44 int
INFO  20:19:24,202 - #44 getValue
INFO  20:19:24,202 - #34 (
INFO  20:19:24,202 - #44 int
INFO  20:19:24,203 - #44 a
INFO  20:19:24,203 - #35 )
INFO  20:19:24,203 - #44 int
INFO  20:19:24,203 - #44 b
INFO  20:19:24,203 - #31 ;
INFO  20:19:24,203 - #44 bool
INFO  20:19:24,203 - #44 c
INFO  20:19:24,203 - #31 ;
INFO  20:19:24,203 - #38 {
INFO  20:19:24,203 - #11 return
INFO  20:19:24,204 - #44 this
INFO  20:19:24,204 - #33 .
INFO  20:19:24,204 - #44 i
INFO  20:19:24,204 - #15 +
INFO  20:19:24,204 - #44 this
INFO  20:19:24,204 - #33 .
INFO  20:19:24,204 - #44 x
INFO  20:19:24,204 - #36 [
INFO  20:19:24,204 - #43 0
INFO  20:19:24,204 - #37 ]
INFO  20:19:24,205 - #15 +
INFO  20:19:24,205 - #44 a
INFO  20:19:24,205 - #31 ;
INFO  20:19:24,205 - #39 }
INFO  20:19:24,205 - #39 }
INFO  20:19:24,205 - #39 }
INFO  20:19:24,205 - #4 class
INFO  20:19:24,205 - #44 C
INFO  20:19:24,205 - #14 extends
INFO  20:19:24,205 - #44 B
INFO  20:19:24,206 - #38 {
INFO  20:19:24,206 - #44 A
INFO  20:19:24,206 - #44 theA
INFO  20:19:24,206 - #31 ;
INFO  20:19:24,206 - #44 string
INFO  20:19:24,206 - #44 a
INFO  20:19:24,206 - #31 ;
INFO  20:19:24,206 - #39 }
INFO  20:19:24,206 - #38 {
INFO  20:19:24,206 - #12 void
INFO  20:19:24,206 - #44 main
INFO  20:19:24,206 - #34 (
INFO  20:19:24,207 - #35 )
INFO  20:19:24,207 - #44 A
INFO  20:19:24,207 - #44 a
INFO  20:19:24,207 - #31 ;
INFO  20:19:24,207 - #44 C
INFO  20:19:24,207 - #44 c
INFO  20:19:24,207 - #31 ;
INFO  20:19:24,207 - #44 int
INFO  20:19:24,207 - #44 i
INFO  20:19:24,207 - #31 ;
INFO  20:19:24,207 - #44 int
INFO  20:19:24,207 - #44 x
INFO  20:19:24,208 - #36 [
INFO  20:19:24,208 - #37 ]
INFO  20:19:24,208 - #31 ;
INFO  20:19:24,208 - #38 {
INFO  20:19:24,208 - #44 a
INFO  20:19:24,208 - #28 =
INFO  20:19:24,208 - #8 new
INFO  20:19:24,208 - #44 A
INFO  20:19:24,208 - #31 ;
INFO  20:19:24,208 - #44 a
INFO  20:19:24,208 - #33 .
INFO  20:19:24,209 - #44 x
INFO  20:19:24,209 - #28 =
INFO  20:19:24,209 - #8 new
INFO  20:19:24,209 - #44 int
INFO  20:19:24,209 - #36 [
INFO  20:19:24,209 - #43 5
INFO  20:19:24,209 - #37 ]
INFO  20:19:24,209 - #31 ;
INFO  20:19:24,209 - #44 a
INFO  20:19:24,209 - #33 .
INFO  20:19:24,210 - #44 y
INFO  20:19:24,210 - #28 =
INFO  20:19:24,210 - #8 new
INFO  20:19:24,210 - #44 int
INFO  20:19:24,210 - #36 [
INFO  20:19:24,210 - #43 5
INFO  20:19:24,210 - #37 ]
INFO  20:19:24,210 - #31 ;
INFO  20:19:24,210 - #44 c
INFO  20:19:24,211 - #28 =
INFO  20:19:24,211 - #8 new
INFO  20:19:24,211 - #44 C
INFO  20:19:24,211 - #31 ;
INFO  20:19:24,211 - #44 c
INFO  20:19:24,211 - #33 .
INFO  20:19:24,211 - #44 theA
INFO  20:19:24,211 - #28 =
INFO  20:19:24,212 - #44 a
INFO  20:19:24,212 - #31 ;
INFO  20:19:24,212 - #44 c
INFO  20:19:24,212 - #33 .
INFO  20:19:24,212 - #44 x
INFO  20:19:24,212 - #28 =
INFO  20:19:24,212 - #8 new
INFO  20:19:24,212 - #44 int
INFO  20:19:24,212 - #36 [
INFO  20:19:24,213 - #43 5
INFO  20:19:24,213 - #37 ]
INFO  20:19:24,213 - #31 ;
INFO  20:19:24,213 - #44 x
INFO  20:19:24,213 - #28 =
INFO  20:19:24,213 - #8 new
INFO  20:19:24,213 - #44 int
INFO  20:19:24,213 - #36 [
INFO  20:19:24,213 - #43 3
INFO  20:19:24,213 - #37 ]
INFO  20:19:24,213 - #31 ;
INFO  20:19:24,214 - #44 i
INFO  20:19:24,214 - #28 =
INFO  20:19:24,214 - #43 0
INFO  20:19:24,214 - #31 ;
INFO  20:19:24,214 - #10 read
INFO  20:19:24,214 - #34 (
INFO  20:19:24,214 - #44 c
INFO  20:19:24,214 - #33 .
INFO  20:19:24,214 - #44 i
INFO  20:19:24,214 - #35 )
INFO  20:19:24,214 - #31 ;
INFO  20:19:24,215 - #13 while
INFO  20:19:24,215 - #34 (
INFO  20:19:24,215 - #44 i
INFO  20:19:24,215 - #24 <
INFO  20:19:24,215 - #43 5
INFO  20:19:24,215 - #35 )
INFO  20:19:24,215 - #38 {
INFO  20:19:24,215 - #10 read
INFO  20:19:24,216 - #34 (
INFO  20:19:24,216 - #44 c
INFO  20:19:24,216 - #33 .
INFO  20:19:24,216 - #44 x
INFO  20:19:24,216 - #36 [
INFO  20:19:24,216 - #44 i
INFO  20:19:24,216 - #37 ]
INFO  20:19:24,217 - #35 )
INFO  20:19:24,217 - #31 ;
INFO  20:19:24,217 - #10 read
INFO  20:19:24,217 - #34 (
INFO  20:19:24,217 - #44 c
INFO  20:19:24,217 - #33 .
INFO  20:19:24,217 - #44 theA
INFO  20:19:24,218 - #33 .
INFO  20:19:24,218 - #44 x
INFO  20:19:24,218 - #36 [
INFO  20:19:24,218 - #44 i
INFO  20:19:24,218 - #37 ]
INFO  20:19:24,218 - #35 )
INFO  20:19:24,218 - #31 ;
INFO  20:19:24,218 - #44 i
INFO  20:19:24,219 - #29 ++
INFO  20:19:24,219 - #31 ;
INFO  20:19:24,219 - #39 }
INFO  20:19:24,219 - #9 print
INFO  20:19:24,219 - #34 (
INFO  20:19:24,219 - #44 c
INFO  20:19:24,219 - #33 .
INFO  20:19:24,219 - #44 getValue
INFO  20:19:24,219 - #34 (
INFO  20:19:24,220 - #44 c
INFO  20:19:24,220 - #33 .
INFO  20:19:24,220 - #44 theA
INFO  20:19:24,220 - #33 .
INFO  20:19:24,220 - #44 x
INFO  20:19:24,220 - #36 [
INFO  20:19:24,220 - #43 0
INFO  20:19:24,220 - #37 ]
INFO  20:19:24,220 - #35 )
INFO  20:19:24,221 - #35 )
INFO  20:19:24,221 - #31 ;
INFO  20:19:24,221 - #39 }
INFO  20:19:24,221 - #39 }
INFO  20:19:24,221 - GlobalVar = 0
INFO  20:19:24,221 - GlobalConst = 1
INFO  20:33:02,455 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:33:02,483 - #2 program
INFO  20:33:02,483 - #44 Program
INFO  20:33:02,483 - #4 class
INFO  20:33:02,483 - #44 A
INFO  20:33:02,484 - #38 {
INFO  20:33:02,484 - #44 int
INFO  20:33:02,484 - #44 x
INFO  20:33:02,484 - #36 [
INFO  20:33:02,484 - #37 ]
INFO  20:33:02,484 - #32 ,
INFO  20:33:02,484 - #44 y
INFO  20:33:02,485 - #36 [
INFO  20:33:02,485 - #37 ]
INFO  20:33:02,485 - #31 ;
INFO  20:33:02,485 - #39 }
INFO  20:33:02,485 - #6 const
INFO  20:33:02,485 - #44 int
INFO  20:33:02,485 - #44 pi
INFO  20:33:02,485 - #28 =
INFO  20:33:02,485 - #43 3
INFO  20:33:02,485 - #32 ,
INFO  20:33:02,486 - #44 e
INFO  20:33:02,486 - #28 =
INFO  20:33:02,486 - #43 2
INFO  20:33:02,486 - #31 ;
INFO  20:33:02,486 - #4 class
INFO  20:33:02,486 - #44 B
INFO  20:33:02,486 - #14 extends
INFO  20:33:02,486 - #44 A
INFO  20:33:02,486 - #38 {
INFO  20:33:02,486 - #44 int
INFO  20:33:02,486 - #44 i
INFO  20:33:02,486 - #31 ;
INFO  20:33:02,486 - #44 int
INFO  20:33:02,486 - #44 x
INFO  20:33:02,487 - #36 [
INFO  20:33:02,487 - #37 ]
INFO  20:33:02,487 - #31 ;
INFO  20:33:02,487 - #38 {
INFO  20:33:02,487 - #44 int
INFO  20:33:02,487 - #44 getValue
INFO  20:33:02,487 - #34 (
INFO  20:33:02,487 - #44 int
INFO  20:33:02,487 - #44 a
INFO  20:33:02,487 - #35 )
INFO  20:33:02,487 - #44 int
INFO  20:33:02,487 - #44 b
INFO  20:33:02,488 - #31 ;
INFO  20:33:02,488 - #44 bool
INFO  20:33:02,488 - #44 c
INFO  20:33:02,488 - #31 ;
INFO  20:33:02,488 - #38 {
INFO  20:33:02,488 - #11 return
INFO  20:33:02,488 - #44 this
INFO  20:33:02,488 - #33 .
INFO  20:33:02,488 - #44 i
INFO  20:33:02,488 - #15 +
INFO  20:33:02,488 - #44 this
INFO  20:33:02,488 - #33 .
INFO  20:33:02,489 - #44 x
INFO  20:33:02,489 - #36 [
INFO  20:33:02,489 - #43 0
INFO  20:33:02,489 - #37 ]
INFO  20:33:02,489 - #15 +
INFO  20:33:02,489 - #44 a
INFO  20:33:02,489 - #31 ;
INFO  20:33:02,489 - #39 }
INFO  20:33:02,489 - #39 }
INFO  20:33:02,489 - #39 }
INFO  20:33:02,489 - #4 class
INFO  20:33:02,489 - #44 C
INFO  20:33:02,489 - #14 extends
INFO  20:33:02,490 - #44 B
INFO  20:33:02,490 - #38 {
INFO  20:33:02,490 - #44 A
INFO  20:33:02,490 - #44 theA
INFO  20:33:02,490 - #31 ;
INFO  20:33:02,490 - #44 string
INFO  20:33:02,490 - #44 a
INFO  20:33:02,490 - #31 ;
INFO  20:33:02,490 - #39 }
INFO  20:33:02,490 - #38 {
INFO  20:33:02,490 - #12 void
INFO  20:33:02,490 - #44 main
INFO  20:33:02,490 - #34 (
INFO  20:33:02,490 - #35 )
INFO  20:33:02,491 - #44 A
INFO  20:33:02,491 - #44 a
INFO  20:33:02,491 - #31 ;
INFO  20:33:02,491 - #44 C
INFO  20:33:02,491 - #44 c
INFO  20:33:02,491 - #31 ;
INFO  20:33:02,491 - #44 int
INFO  20:33:02,491 - #44 i
INFO  20:33:02,491 - #31 ;
INFO  20:33:02,491 - #44 int
INFO  20:33:02,491 - #44 x
INFO  20:33:02,491 - #36 [
INFO  20:33:02,491 - #37 ]
INFO  20:33:02,491 - #31 ;
INFO  20:33:02,492 - #38 {
INFO  20:33:02,492 - #44 a
INFO  20:33:02,492 - #28 =
INFO  20:33:02,492 - #8 new
INFO  20:33:02,492 - #44 A
INFO  20:33:02,492 - #31 ;
INFO  20:33:02,492 - #44 a
INFO  20:33:02,492 - #33 .
INFO  20:33:02,492 - #44 x
INFO  20:33:02,492 - #28 =
INFO  20:33:02,492 - #8 new
INFO  20:33:02,492 - #44 int
INFO  20:33:02,492 - #36 [
INFO  20:33:02,493 - #43 5
INFO  20:33:02,493 - #37 ]
INFO  20:33:02,493 - #31 ;
INFO  20:33:02,493 - #44 a
INFO  20:33:02,493 - #33 .
INFO  20:33:02,493 - #44 y
INFO  20:33:02,493 - #28 =
INFO  20:33:02,493 - #8 new
INFO  20:33:02,493 - #44 int
INFO  20:33:02,493 - #36 [
INFO  20:33:02,494 - #43 5
INFO  20:33:02,494 - #37 ]
INFO  20:33:02,494 - #31 ;
INFO  20:33:02,494 - #44 c
INFO  20:33:02,494 - #28 =
INFO  20:33:02,494 - #8 new
INFO  20:33:02,494 - #44 C
INFO  20:33:02,494 - #31 ;
INFO  20:33:02,494 - #44 c
INFO  20:33:02,494 - #33 .
INFO  20:33:02,495 - #44 theA
INFO  20:33:02,495 - #28 =
INFO  20:33:02,495 - #44 a
INFO  20:33:02,495 - #31 ;
INFO  20:33:02,495 - #44 c
INFO  20:33:02,495 - #33 .
INFO  20:33:02,495 - #44 x
INFO  20:33:02,495 - #28 =
INFO  20:33:02,495 - #8 new
INFO  20:33:02,495 - #44 int
INFO  20:33:02,495 - #36 [
INFO  20:33:02,496 - #43 5
INFO  20:33:02,496 - #37 ]
INFO  20:33:02,496 - #31 ;
INFO  20:33:02,496 - #44 x
INFO  20:33:02,496 - #28 =
INFO  20:33:02,496 - #8 new
INFO  20:33:02,496 - #44 int
INFO  20:33:02,496 - #36 [
INFO  20:33:02,496 - #43 3
INFO  20:33:02,496 - #37 ]
INFO  20:33:02,497 - #31 ;
INFO  20:33:02,497 - #44 i
INFO  20:33:02,497 - #28 =
INFO  20:33:02,497 - #43 0
INFO  20:33:02,497 - #31 ;
INFO  20:33:02,497 - #10 read
INFO  20:33:02,497 - #34 (
INFO  20:33:02,497 - #44 c
INFO  20:33:02,497 - #33 .
INFO  20:33:02,497 - #44 i
INFO  20:33:02,497 - #35 )
INFO  20:33:02,497 - #31 ;
INFO  20:33:02,498 - #13 while
INFO  20:33:02,498 - #34 (
INFO  20:33:02,498 - #44 i
INFO  20:33:02,498 - #24 <
INFO  20:33:02,498 - #43 5
INFO  20:33:02,498 - #35 )
INFO  20:33:02,498 - #38 {
INFO  20:33:02,498 - #10 read
INFO  20:33:02,498 - #34 (
INFO  20:33:02,499 - #44 c
INFO  20:33:02,499 - #33 .
INFO  20:33:02,499 - #44 x
INFO  20:33:02,499 - #36 [
INFO  20:33:02,499 - #44 i
INFO  20:33:02,499 - #37 ]
INFO  20:33:02,499 - #35 )
INFO  20:33:02,499 - #31 ;
INFO  20:33:02,500 - #10 read
INFO  20:33:02,500 - #34 (
INFO  20:33:02,500 - #44 c
INFO  20:33:02,500 - #33 .
INFO  20:33:02,500 - #44 theA
INFO  20:33:02,500 - #33 .
INFO  20:33:02,500 - #44 x
INFO  20:33:02,500 - #36 [
INFO  20:33:02,500 - #44 i
INFO  20:33:02,501 - #37 ]
INFO  20:33:02,501 - #35 )
INFO  20:33:02,501 - #31 ;
INFO  20:33:02,501 - #44 i
INFO  20:33:02,501 - #29 ++
INFO  20:33:02,501 - #31 ;
INFO  20:33:02,501 - #39 }
INFO  20:33:02,501 - #9 print
INFO  20:33:02,502 - #34 (
INFO  20:33:02,502 - #44 c
INFO  20:33:02,502 - #33 .
INFO  20:33:02,502 - #44 getValue
INFO  20:33:02,502 - #34 (
INFO  20:33:02,502 - #44 c
INFO  20:33:02,502 - #33 .
INFO  20:33:02,502 - #44 theA
INFO  20:33:02,502 - #33 .
INFO  20:33:02,502 - #44 x
INFO  20:33:02,503 - #36 [
INFO  20:33:02,503 - #43 0
INFO  20:33:02,503 - #37 ]
INFO  20:33:02,503 - #35 )
INFO  20:33:02,503 - #35 )
INFO  20:33:02,503 - #31 ;
INFO  20:33:02,503 - #39 }
INFO  20:33:02,503 - #39 }
INFO  20:33:02,504 - GlobalVar = 0
INFO  20:33:02,504 - GlobalConst = 2
INFO  20:33:24,138 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:33:24,146 - #2 program
INFO  20:33:24,147 - #44 Program
INFO  20:33:24,147 - #4 class
INFO  20:33:24,147 - #44 A
INFO  20:33:24,147 - #38 {
INFO  20:33:24,147 - #44 int
INFO  20:33:24,147 - #44 x
INFO  20:33:24,147 - #36 [
INFO  20:33:24,148 - #37 ]
INFO  20:33:24,148 - #32 ,
INFO  20:33:24,148 - #44 y
INFO  20:33:24,148 - #36 [
INFO  20:33:24,148 - #37 ]
INFO  20:33:24,148 - #31 ;
INFO  20:33:24,148 - #39 }
INFO  20:33:24,148 - #6 const
INFO  20:33:24,148 - #44 int
INFO  20:33:24,148 - #44 pi
INFO  20:33:24,149 - #28 =
INFO  20:33:24,149 - #43 3
INFO  20:33:24,149 - #32 ,
INFO  20:33:24,149 - #44 e
INFO  20:33:24,149 - #28 =
INFO  20:33:24,149 - #43 2
INFO  20:33:24,149 - #31 ;
INFO  20:33:24,149 - #44 int
INFO  20:33:24,149 - #44 probe
INFO  20:33:24,149 - #32 ,
INFO  20:33:24,150 - #44 fr
INFO  20:33:24,150 - #32 ,
INFO  20:33:24,150 - #44 fdfd
INFO  20:33:24,150 - #31 ;
INFO  20:33:24,150 - #4 class
INFO  20:33:24,150 - #44 B
INFO  20:33:24,150 - #14 extends
INFO  20:33:24,150 - #44 A
INFO  20:33:24,150 - #38 {
INFO  20:33:24,150 - #44 int
INFO  20:33:24,150 - #44 i
INFO  20:33:24,151 - #31 ;
INFO  20:33:24,151 - #44 int
INFO  20:33:24,151 - #44 x
INFO  20:33:24,151 - #36 [
INFO  20:33:24,151 - #37 ]
INFO  20:33:24,151 - #31 ;
INFO  20:33:24,151 - #38 {
INFO  20:33:24,151 - #44 int
INFO  20:33:24,151 - #44 getValue
INFO  20:33:24,151 - #34 (
INFO  20:33:24,151 - #44 int
INFO  20:33:24,151 - #44 a
INFO  20:33:24,151 - #35 )
INFO  20:33:24,152 - #44 int
INFO  20:33:24,152 - #44 b
INFO  20:33:24,152 - #31 ;
INFO  20:33:24,152 - #44 bool
INFO  20:33:24,152 - #44 c
INFO  20:33:24,152 - #31 ;
INFO  20:33:24,152 - #38 {
INFO  20:33:24,152 - #11 return
INFO  20:33:24,152 - #44 this
INFO  20:33:24,152 - #33 .
INFO  20:33:24,152 - #44 i
INFO  20:33:24,152 - #15 +
INFO  20:33:24,153 - #44 this
INFO  20:33:24,153 - #33 .
INFO  20:33:24,153 - #44 x
INFO  20:33:24,153 - #36 [
INFO  20:33:24,153 - #43 0
INFO  20:33:24,153 - #37 ]
INFO  20:33:24,153 - #15 +
INFO  20:33:24,153 - #44 a
INFO  20:33:24,153 - #31 ;
INFO  20:33:24,153 - #39 }
INFO  20:33:24,153 - #39 }
INFO  20:33:24,154 - #39 }
INFO  20:33:24,154 - #4 class
INFO  20:33:24,154 - #44 C
INFO  20:33:24,154 - #14 extends
INFO  20:33:24,154 - #44 B
INFO  20:33:24,154 - #38 {
INFO  20:33:24,154 - #44 A
INFO  20:33:24,154 - #44 theA
INFO  20:33:24,154 - #31 ;
INFO  20:33:24,154 - #44 string
INFO  20:33:24,154 - #44 a
INFO  20:33:24,154 - #31 ;
INFO  20:33:24,154 - #39 }
INFO  20:33:24,155 - #38 {
INFO  20:33:24,155 - #12 void
INFO  20:33:24,155 - #44 main
INFO  20:33:24,155 - #34 (
INFO  20:33:24,155 - #35 )
INFO  20:33:24,155 - #44 A
INFO  20:33:24,155 - #44 a
INFO  20:33:24,155 - #31 ;
INFO  20:33:24,155 - #44 C
INFO  20:33:24,155 - #44 c
INFO  20:33:24,155 - #31 ;
INFO  20:33:24,155 - #44 int
INFO  20:33:24,156 - #44 i
INFO  20:33:24,156 - #31 ;
INFO  20:33:24,156 - #44 int
INFO  20:33:24,156 - #44 x
INFO  20:33:24,156 - #36 [
INFO  20:33:24,156 - #37 ]
INFO  20:33:24,156 - #31 ;
INFO  20:33:24,156 - #38 {
INFO  20:33:24,156 - #44 a
INFO  20:33:24,156 - #28 =
INFO  20:33:24,156 - #8 new
INFO  20:33:24,156 - #44 A
INFO  20:33:24,156 - #31 ;
INFO  20:33:24,157 - #44 a
INFO  20:33:24,157 - #33 .
INFO  20:33:24,157 - #44 x
INFO  20:33:24,157 - #28 =
INFO  20:33:24,157 - #8 new
INFO  20:33:24,157 - #44 int
INFO  20:33:24,157 - #36 [
INFO  20:33:24,157 - #43 5
INFO  20:33:24,157 - #37 ]
INFO  20:33:24,157 - #31 ;
INFO  20:33:24,157 - #44 a
INFO  20:33:24,158 - #33 .
INFO  20:33:24,158 - #44 y
INFO  20:33:24,158 - #28 =
INFO  20:33:24,158 - #8 new
INFO  20:33:24,158 - #44 int
INFO  20:33:24,158 - #36 [
INFO  20:33:24,158 - #43 5
INFO  20:33:24,158 - #37 ]
INFO  20:33:24,158 - #31 ;
INFO  20:33:24,158 - #44 c
INFO  20:33:24,158 - #28 =
INFO  20:33:24,158 - #8 new
INFO  20:33:24,158 - #44 C
INFO  20:33:24,159 - #31 ;
INFO  20:33:24,159 - #44 c
INFO  20:33:24,159 - #33 .
INFO  20:33:24,159 - #44 theA
INFO  20:33:24,159 - #28 =
INFO  20:33:24,159 - #44 a
INFO  20:33:24,159 - #31 ;
INFO  20:33:24,159 - #44 c
INFO  20:33:24,159 - #33 .
INFO  20:33:24,159 - #44 x
INFO  20:33:24,159 - #28 =
INFO  20:33:24,159 - #8 new
INFO  20:33:24,159 - #44 int
INFO  20:33:24,160 - #36 [
INFO  20:33:24,160 - #43 5
INFO  20:33:24,160 - #37 ]
INFO  20:33:24,160 - #31 ;
INFO  20:33:24,160 - #44 x
INFO  20:33:24,160 - #28 =
INFO  20:33:24,160 - #8 new
INFO  20:33:24,160 - #44 int
INFO  20:33:24,160 - #36 [
INFO  20:33:24,160 - #43 3
INFO  20:33:24,161 - #37 ]
INFO  20:33:24,161 - #31 ;
INFO  20:33:24,161 - #44 i
INFO  20:33:24,161 - #28 =
INFO  20:33:24,161 - #43 0
INFO  20:33:24,161 - #31 ;
INFO  20:33:24,161 - #10 read
INFO  20:33:24,161 - #34 (
INFO  20:33:24,162 - #44 c
INFO  20:33:24,162 - #33 .
INFO  20:33:24,162 - #44 i
INFO  20:33:24,162 - #35 )
INFO  20:33:24,162 - #31 ;
INFO  20:33:24,162 - #13 while
INFO  20:33:24,162 - #34 (
INFO  20:33:24,162 - #44 i
INFO  20:33:24,163 - #24 <
INFO  20:33:24,163 - #43 5
INFO  20:33:24,163 - #35 )
INFO  20:33:24,163 - #38 {
INFO  20:33:24,163 - #10 read
INFO  20:33:24,163 - #34 (
INFO  20:33:24,163 - #44 c
INFO  20:33:24,164 - #33 .
INFO  20:33:24,164 - #44 x
INFO  20:33:24,164 - #36 [
INFO  20:33:24,164 - #44 i
INFO  20:33:24,164 - #37 ]
INFO  20:33:24,165 - #35 )
INFO  20:33:24,165 - #31 ;
INFO  20:33:24,165 - #10 read
INFO  20:33:24,165 - #34 (
INFO  20:33:24,165 - #44 c
INFO  20:33:24,165 - #33 .
INFO  20:33:24,165 - #44 theA
INFO  20:33:24,165 - #33 .
INFO  20:33:24,166 - #44 x
INFO  20:33:24,166 - #36 [
INFO  20:33:24,166 - #44 i
INFO  20:33:24,166 - #37 ]
INFO  20:33:24,166 - #35 )
INFO  20:33:24,166 - #31 ;
INFO  20:33:24,166 - #44 i
INFO  20:33:24,166 - #29 ++
INFO  20:33:24,166 - #31 ;
INFO  20:33:24,166 - #39 }
INFO  20:33:24,167 - #9 print
INFO  20:33:24,167 - #34 (
INFO  20:33:24,167 - #44 c
INFO  20:33:24,167 - #33 .
INFO  20:33:24,167 - #44 getValue
INFO  20:33:24,167 - #34 (
INFO  20:33:24,167 - #44 c
INFO  20:33:24,167 - #33 .
INFO  20:33:24,167 - #44 theA
INFO  20:33:24,167 - #33 .
INFO  20:33:24,168 - #44 x
INFO  20:33:24,168 - #36 [
INFO  20:33:24,168 - #43 0
INFO  20:33:24,168 - #37 ]
INFO  20:33:24,169 - #35 )
INFO  20:33:24,169 - #35 )
INFO  20:33:24,169 - #31 ;
INFO  20:33:24,169 - #39 }
INFO  20:33:24,169 - #39 }
INFO  20:33:24,169 - GlobalVar = 3
INFO  20:33:24,169 - GlobalConst = 2
INFO  20:53:35,464 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:53:35,473 - #2 program
INFO  20:53:35,473 - #44 Program
INFO  20:53:35,473 - #4 class
INFO  20:53:35,473 - #44 A
INFO  20:53:35,473 - #38 {
INFO  20:53:35,473 - #44 int
INFO  20:53:35,473 - #44 x
INFO  20:53:35,473 - #36 [
INFO  20:53:35,473 - #37 ]
INFO  20:53:35,473 - #32 ,
INFO  20:53:35,474 - #44 y
INFO  20:53:35,474 - #36 [
INFO  20:53:35,474 - #37 ]
INFO  20:53:35,474 - #31 ;
INFO  20:53:35,474 - #39 }
INFO  20:53:35,474 - #6 const
INFO  20:53:35,474 - #44 int
INFO  20:53:35,474 - #44 pi
INFO  20:53:35,474 - #28 =
INFO  20:53:35,474 - #43 3
INFO  20:53:35,474 - #32 ,
INFO  20:53:35,474 - #44 e
INFO  20:53:35,474 - #28 =
INFO  20:53:35,475 - #43 2
INFO  20:53:35,475 - #31 ;
INFO  20:53:35,475 - #4 class
INFO  20:53:35,475 - #44 B
INFO  20:53:35,475 - #14 extends
INFO  20:53:35,475 - #44 A
INFO  20:53:35,475 - #38 {
INFO  20:53:35,475 - #44 int
INFO  20:53:35,475 - #44 i
INFO  20:53:35,475 - #31 ;
INFO  20:53:35,475 - #44 int
INFO  20:53:35,475 - #44 x
INFO  20:53:35,475 - #36 [
INFO  20:53:35,476 - #37 ]
INFO  20:53:35,476 - #31 ;
INFO  20:53:35,476 - #38 {
INFO  20:53:35,476 - #44 int
INFO  20:53:35,476 - #44 getValue
INFO  20:53:35,476 - #34 (
INFO  20:53:35,476 - #44 int
INFO  20:53:35,476 - #44 a
INFO  20:53:35,476 - #35 )
INFO  20:53:35,476 - #44 int
INFO  20:53:35,476 - #44 b
INFO  20:53:35,476 - #31 ;
INFO  20:53:35,476 - #44 bool
INFO  20:53:35,476 - #44 c
INFO  20:53:35,477 - #31 ;
INFO  20:53:35,477 - #38 {
INFO  20:53:35,477 - #11 return
INFO  20:53:35,477 - #44 this
INFO  20:53:35,477 - #33 .
INFO  20:53:35,477 - #44 i
INFO  20:53:35,477 - #15 +
INFO  20:53:35,477 - #44 this
INFO  20:53:35,477 - #33 .
INFO  20:53:35,477 - #44 x
INFO  20:53:35,477 - #36 [
INFO  20:53:35,477 - #43 0
INFO  20:53:35,478 - #37 ]
INFO  20:53:35,478 - #15 +
INFO  20:53:35,478 - #44 a
INFO  20:53:35,478 - #31 ;
INFO  20:53:35,478 - #39 }
INFO  20:53:35,478 - #39 }
INFO  20:53:35,478 - #39 }
INFO  20:53:35,478 - #4 class
INFO  20:53:35,478 - #44 C
INFO  20:53:35,478 - #14 extends
INFO  20:53:35,478 - #44 B
INFO  20:53:35,479 - #38 {
INFO  20:53:35,479 - #44 A
INFO  20:53:35,479 - #44 theA
INFO  20:53:35,479 - #31 ;
INFO  20:53:35,479 - #44 string
INFO  20:53:35,479 - #44 a
INFO  20:53:35,479 - #31 ;
INFO  20:53:35,479 - #39 }
INFO  20:53:35,479 - #38 {
INFO  20:53:35,479 - #12 void
INFO  20:53:35,479 - #44 main
INFO  20:53:35,480 - #34 (
INFO  20:53:35,480 - #35 )
INFO  20:53:35,480 - #44 A
INFO  20:53:35,480 - #44 a
INFO  20:53:35,480 - #31 ;
INFO  20:53:35,480 - #44 C
INFO  20:53:35,480 - #44 c
INFO  20:53:35,480 - #31 ;
INFO  20:53:35,480 - #44 int
INFO  20:53:35,480 - #44 i
INFO  20:53:35,480 - #31 ;
INFO  20:53:35,480 - #44 int
INFO  20:53:35,480 - #44 x
INFO  20:53:35,480 - #36 [
INFO  20:53:35,481 - #37 ]
INFO  20:53:35,481 - #31 ;
INFO  20:53:35,481 - #38 {
INFO  20:53:35,481 - #44 a
INFO  20:53:35,481 - #28 =
INFO  20:53:35,481 - #8 new
INFO  20:53:35,481 - #44 A
INFO  20:53:35,481 - #31 ;
INFO  20:53:35,481 - #44 a
INFO  20:53:35,481 - #33 .
INFO  20:53:35,482 - #44 x
INFO  20:53:35,482 - #28 =
INFO  20:53:35,482 - #8 new
INFO  20:53:35,482 - #44 int
INFO  20:53:35,482 - #36 [
INFO  20:53:35,482 - #43 5
INFO  20:53:35,482 - #37 ]
INFO  20:53:35,482 - #31 ;
INFO  20:53:35,482 - #44 a
INFO  20:53:35,482 - #33 .
INFO  20:53:35,483 - #44 y
INFO  20:53:35,483 - #28 =
INFO  20:53:35,483 - #8 new
INFO  20:53:35,483 - #44 int
INFO  20:53:35,483 - #36 [
INFO  20:53:35,483 - #43 5
INFO  20:53:35,483 - #37 ]
INFO  20:53:35,483 - #31 ;
INFO  20:53:35,484 - #44 c
INFO  20:53:35,484 - #28 =
INFO  20:53:35,484 - #8 new
INFO  20:53:35,484 - #44 C
INFO  20:53:35,484 - #31 ;
INFO  20:53:35,484 - #44 c
INFO  20:53:35,484 - #33 .
INFO  20:53:35,484 - #44 theA
INFO  20:53:35,484 - #28 =
INFO  20:53:35,485 - #44 a
INFO  20:53:35,485 - #31 ;
INFO  20:53:35,485 - #44 c
INFO  20:53:35,485 - #33 .
INFO  20:53:35,485 - #44 x
INFO  20:53:35,485 - #28 =
INFO  20:53:35,485 - #8 new
INFO  20:53:35,485 - #44 int
INFO  20:53:35,485 - #36 [
INFO  20:53:35,486 - #43 5
INFO  20:53:35,486 - #37 ]
INFO  20:53:35,486 - #31 ;
INFO  20:53:35,486 - #44 x
INFO  20:53:35,486 - #28 =
INFO  20:53:35,486 - #8 new
INFO  20:53:35,486 - #44 int
INFO  20:53:35,486 - #36 [
INFO  20:53:35,486 - #43 3
INFO  20:53:35,487 - #37 ]
INFO  20:53:35,487 - #31 ;
INFO  20:53:35,487 - #44 i
INFO  20:53:35,487 - #28 =
INFO  20:53:35,487 - #43 0
INFO  20:53:35,487 - #31 ;
INFO  20:53:35,487 - #10 read
INFO  20:53:35,487 - #34 (
INFO  20:53:35,487 - #44 c
INFO  20:53:35,487 - #33 .
INFO  20:53:35,487 - #44 i
INFO  20:53:35,487 - #35 )
INFO  20:53:35,488 - #31 ;
INFO  20:53:35,488 - #13 while
INFO  20:53:35,488 - #34 (
INFO  20:53:35,488 - #44 i
INFO  20:53:35,488 - #24 <
INFO  20:53:35,488 - #43 5
INFO  20:53:35,488 - #35 )
INFO  20:53:35,488 - #38 {
INFO  20:53:35,489 - #10 read
INFO  20:53:35,489 - #34 (
INFO  20:53:35,489 - #44 c
INFO  20:53:35,489 - #33 .
INFO  20:53:35,489 - #44 x
INFO  20:53:35,489 - #36 [
INFO  20:53:35,489 - #44 i
INFO  20:53:35,489 - #37 ]
INFO  20:53:35,489 - #35 )
INFO  20:53:35,490 - #31 ;
INFO  20:53:35,490 - #10 read
INFO  20:53:35,490 - #34 (
INFO  20:53:35,490 - #44 c
INFO  20:53:35,490 - #33 .
INFO  20:53:35,490 - #44 theA
INFO  20:53:35,490 - #33 .
INFO  20:53:35,490 - #44 x
INFO  20:53:35,490 - #36 [
INFO  20:53:35,491 - #44 i
INFO  20:53:35,491 - #37 ]
INFO  20:53:35,491 - #35 )
INFO  20:53:35,491 - #31 ;
INFO  20:53:35,491 - #44 i
INFO  20:53:35,491 - #29 ++
INFO  20:53:35,491 - #31 ;
INFO  20:53:35,491 - #39 }
INFO  20:53:35,492 - #9 print
INFO  20:53:35,492 - #34 (
INFO  20:53:35,492 - #44 c
INFO  20:53:35,492 - #33 .
INFO  20:53:35,492 - #44 getValue
INFO  20:53:35,492 - #34 (
INFO  20:53:35,492 - #44 c
INFO  20:53:35,492 - #33 .
INFO  20:53:35,492 - #44 theA
INFO  20:53:35,492 - #33 .
INFO  20:53:35,493 - #44 x
INFO  20:53:35,493 - #36 [
INFO  20:53:35,493 - #43 0
INFO  20:53:35,493 - #37 ]
INFO  20:53:35,493 - #35 )
INFO  20:53:35,493 - #35 )
INFO  20:53:35,493 - #31 ;
INFO  20:53:35,493 - #39 }
INFO  20:53:35,494 - #39 }
INFO  20:53:35,494 - GlobalVar = 0
INFO  20:53:35,494 - GlobalConst = 2
INFO  20:59:37,157 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:59:37,166 - #2 program
INFO  20:59:37,167 - #44 Program
INFO  20:59:37,167 - #4 class
INFO  20:59:37,167 - #44 A
INFO  20:59:37,167 - #38 {
INFO  20:59:37,167 - #44 int
INFO  20:59:37,167 - #44 x
INFO  20:59:37,167 - #36 [
INFO  20:59:37,168 - #37 ]
INFO  20:59:37,168 - #32 ,
INFO  20:59:37,168 - #44 y
INFO  20:59:37,168 - #36 [
INFO  20:59:37,168 - #37 ]
INFO  20:59:37,168 - #31 ;
INFO  20:59:37,168 - #39 }
INFO  20:59:37,168 - #6 const
INFO  20:59:37,168 - #44 int
INFO  20:59:37,168 - #44 pi
INFO  20:59:37,168 - #28 =
INFO  20:59:37,169 - #43 3
INFO  20:59:37,169 - #32 ,
INFO  20:59:37,169 - #44 e
INFO  20:59:37,169 - #28 =
INFO  20:59:37,169 - #43 2
INFO  20:59:37,169 - #31 ;
INFO  20:59:37,169 - #4 class
INFO  20:59:37,169 - #44 B
INFO  20:59:37,169 - #14 extends
INFO  20:59:37,169 - #44 A
INFO  20:59:37,169 - #38 {
INFO  20:59:37,170 - #44 int
INFO  20:59:37,170 - #44 i
INFO  20:59:37,170 - #31 ;
INFO  20:59:37,170 - #44 int
INFO  20:59:37,170 - #44 x
INFO  20:59:37,170 - #36 [
INFO  20:59:37,170 - #37 ]
INFO  20:59:37,170 - #31 ;
INFO  20:59:37,170 - #38 {
INFO  20:59:37,170 - #44 int
INFO  20:59:37,170 - #44 getValue
INFO  20:59:37,170 - #34 (
INFO  20:59:37,170 - #44 int
INFO  20:59:37,170 - #44 a
INFO  20:59:37,171 - #35 )
INFO  20:59:37,171 - #44 int
INFO  20:59:37,171 - #44 b
INFO  20:59:37,171 - #31 ;
INFO  20:59:37,171 - #44 bool
INFO  20:59:37,171 - #44 c
INFO  20:59:37,171 - #31 ;
INFO  20:59:37,171 - #38 {
INFO  20:59:37,171 - #11 return
INFO  20:59:37,171 - #44 this
INFO  20:59:37,171 - #33 .
INFO  20:59:37,171 - #44 i
INFO  20:59:37,172 - #15 +
INFO  20:59:37,172 - #44 this
INFO  20:59:37,172 - #33 .
INFO  20:59:37,172 - #44 x
INFO  20:59:37,172 - #36 [
INFO  20:59:37,172 - #43 0
INFO  20:59:37,172 - #37 ]
INFO  20:59:37,172 - #15 +
INFO  20:59:37,172 - #44 a
INFO  20:59:37,172 - #31 ;
INFO  20:59:37,172 - #39 }
INFO  20:59:37,173 - #39 }
INFO  20:59:37,173 - #39 }
INFO  20:59:37,173 - #4 class
INFO  20:59:37,173 - #44 C
INFO  20:59:37,173 - #14 extends
INFO  20:59:37,173 - #44 B
INFO  20:59:37,173 - #38 {
INFO  20:59:37,173 - #44 A
INFO  20:59:37,173 - #44 theA
INFO  20:59:37,173 - #31 ;
INFO  20:59:37,173 - #44 string
INFO  20:59:37,173 - #44 a
INFO  20:59:37,174 - #31 ;
INFO  20:59:37,174 - #39 }
INFO  20:59:37,174 - #38 {
INFO  20:59:37,174 - #12 void
INFO  20:59:37,174 - #44 main
INFO  20:59:37,174 - #34 (
INFO  20:59:37,174 - #35 )
INFO  20:59:37,174 - #44 A
INFO  20:59:37,174 - #44 a
INFO  20:59:37,174 - #31 ;
INFO  20:59:37,174 - #44 C
INFO  20:59:37,174 - #44 c
INFO  20:59:37,174 - #31 ;
INFO  20:59:37,174 - #44 int
INFO  20:59:37,175 - #44 i
INFO  20:59:37,175 - #31 ;
INFO  20:59:37,175 - #44 int
INFO  20:59:37,175 - #44 x
INFO  20:59:37,175 - #36 [
INFO  20:59:37,175 - #37 ]
INFO  20:59:37,175 - #31 ;
INFO  20:59:37,175 - #38 {
INFO  20:59:37,175 - #44 a
INFO  20:59:37,175 - #28 =
INFO  20:59:37,175 - #8 new
INFO  20:59:37,175 - #44 A
INFO  20:59:37,175 - #31 ;
INFO  20:59:37,176 - #44 a
INFO  20:59:37,176 - #33 .
INFO  20:59:37,176 - #44 x
INFO  20:59:37,176 - #28 =
INFO  20:59:37,176 - #8 new
INFO  20:59:37,176 - #44 int
INFO  20:59:37,176 - #36 [
INFO  20:59:37,176 - #43 5
INFO  20:59:37,176 - #37 ]
INFO  20:59:37,176 - #31 ;
INFO  20:59:37,176 - #44 a
INFO  20:59:37,176 - #33 .
INFO  20:59:37,176 - #44 y
INFO  20:59:37,177 - #28 =
INFO  20:59:37,177 - #8 new
INFO  20:59:37,177 - #44 int
INFO  20:59:37,177 - #36 [
INFO  20:59:37,177 - #43 5
INFO  20:59:37,177 - #37 ]
INFO  20:59:37,177 - #31 ;
INFO  20:59:37,177 - #44 c
INFO  20:59:37,177 - #28 =
INFO  20:59:37,177 - #8 new
INFO  20:59:37,177 - #44 C
INFO  20:59:37,177 - #31 ;
INFO  20:59:37,178 - #44 c
INFO  20:59:37,178 - #33 .
INFO  20:59:37,178 - #44 theA
INFO  20:59:37,178 - #28 =
INFO  20:59:37,178 - #44 a
INFO  20:59:37,178 - #31 ;
INFO  20:59:37,178 - #44 c
INFO  20:59:37,178 - #33 .
INFO  20:59:37,178 - #44 x
INFO  20:59:37,178 - #28 =
INFO  20:59:37,178 - #8 new
INFO  20:59:37,178 - #44 int
INFO  20:59:37,178 - #36 [
INFO  20:59:37,179 - #43 5
INFO  20:59:37,179 - #37 ]
INFO  20:59:37,179 - #31 ;
INFO  20:59:37,179 - #44 x
INFO  20:59:37,179 - #28 =
INFO  20:59:37,179 - #8 new
INFO  20:59:37,179 - #44 int
INFO  20:59:37,179 - #36 [
INFO  20:59:37,179 - #43 3
INFO  20:59:37,180 - #37 ]
INFO  20:59:37,180 - #31 ;
INFO  20:59:37,180 - #44 i
INFO  20:59:37,180 - #28 =
INFO  20:59:37,180 - #43 0
INFO  20:59:37,180 - #31 ;
INFO  20:59:37,180 - #10 read
INFO  20:59:37,180 - #34 (
INFO  20:59:37,181 - #44 c
INFO  20:59:37,181 - #33 .
INFO  20:59:37,181 - #44 i
INFO  20:59:37,181 - #35 )
INFO  20:59:37,181 - #31 ;
INFO  20:59:37,181 - #13 while
INFO  20:59:37,181 - #34 (
INFO  20:59:37,181 - #44 i
INFO  20:59:37,181 - #24 <
INFO  20:59:37,182 - #43 5
INFO  20:59:37,182 - #35 )
INFO  20:59:37,182 - #38 {
INFO  20:59:37,182 - #10 read
INFO  20:59:37,182 - #34 (
INFO  20:59:37,182 - #44 c
INFO  20:59:37,182 - #33 .
INFO  20:59:37,182 - #44 x
INFO  20:59:37,183 - #36 [
INFO  20:59:37,183 - #44 i
INFO  20:59:37,183 - #37 ]
INFO  20:59:37,183 - #35 )
INFO  20:59:37,183 - #31 ;
INFO  20:59:37,183 - #10 read
INFO  20:59:37,183 - #34 (
INFO  20:59:37,183 - #44 c
INFO  20:59:37,183 - #33 .
INFO  20:59:37,184 - #44 theA
INFO  20:59:37,184 - #33 .
INFO  20:59:37,184 - #44 x
INFO  20:59:37,184 - #36 [
INFO  20:59:37,184 - #44 i
INFO  20:59:37,184 - #37 ]
INFO  20:59:37,184 - #35 )
INFO  20:59:37,184 - #31 ;
INFO  20:59:37,184 - #44 i
INFO  20:59:37,184 - #29 ++
INFO  20:59:37,184 - #31 ;
INFO  20:59:37,184 - #39 }
INFO  20:59:37,185 - #9 print
INFO  20:59:37,185 - #34 (
INFO  20:59:37,185 - #44 c
INFO  20:59:37,185 - #33 .
INFO  20:59:37,185 - #44 getValue
INFO  20:59:37,185 - #34 (
INFO  20:59:37,185 - #44 c
INFO  20:59:37,185 - #33 .
INFO  20:59:37,185 - #44 theA
INFO  20:59:37,185 - #33 .
INFO  20:59:37,185 - #44 x
INFO  20:59:37,185 - #36 [
INFO  20:59:37,185 - #43 0
INFO  20:59:37,185 - #37 ]
INFO  20:59:37,186 - #35 )
INFO  20:59:37,186 - #35 )
INFO  20:59:37,186 - #31 ;
INFO  20:59:37,186 - #39 }
INFO  20:59:37,186 - #39 }
INFO  20:59:37,186 - GlobalVar = 0
INFO  20:59:37,186 - GlobalConst = 2
INFO  20:59:37,186 - LocalMainVar = 4
INFO  21:01:43,886 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:01:43,895 - #2 program
INFO  21:01:43,895 - #44 Program
INFO  21:01:43,895 - #4 class
INFO  21:01:43,895 - #44 A
INFO  21:01:43,895 - #38 {
INFO  21:01:43,895 - #44 int
INFO  21:01:43,895 - #44 x
INFO  21:01:43,895 - #36 [
INFO  21:01:43,896 - #37 ]
INFO  21:01:43,896 - #32 ,
INFO  21:01:43,896 - #44 y
INFO  21:01:43,896 - #36 [
INFO  21:01:43,896 - #37 ]
INFO  21:01:43,896 - #31 ;
INFO  21:01:43,896 - #39 }
INFO  21:01:43,896 - #6 const
INFO  21:01:43,896 - #44 int
INFO  21:01:43,896 - #44 pi
INFO  21:01:43,896 - #28 =
INFO  21:01:43,896 - #43 3
INFO  21:01:43,896 - #32 ,
INFO  21:01:43,897 - #44 e
INFO  21:01:43,897 - #28 =
INFO  21:01:43,897 - #43 2
INFO  21:01:43,897 - #31 ;
INFO  21:01:43,897 - #4 class
INFO  21:01:43,897 - #44 B
INFO  21:01:43,897 - #14 extends
INFO  21:01:43,897 - #44 A
INFO  21:01:43,898 - #38 {
INFO  21:01:43,898 - #44 int
INFO  21:01:43,898 - #44 i
INFO  21:01:43,898 - #31 ;
INFO  21:01:43,898 - #44 int
INFO  21:01:43,898 - #44 x
INFO  21:01:43,898 - #36 [
INFO  21:01:43,898 - #37 ]
INFO  21:01:43,898 - #31 ;
INFO  21:01:43,899 - #38 {
INFO  21:01:43,899 - #44 int
INFO  21:01:43,899 - #44 getValue
INFO  21:01:43,899 - #34 (
INFO  21:01:43,899 - #44 int
INFO  21:01:43,899 - #44 a
INFO  21:01:43,899 - #35 )
INFO  21:01:43,899 - #44 int
INFO  21:01:43,899 - #44 b
INFO  21:01:43,899 - #31 ;
INFO  21:01:43,900 - #44 bool
INFO  21:01:43,900 - #44 c
INFO  21:01:43,900 - #31 ;
INFO  21:01:43,900 - #38 {
INFO  21:01:43,900 - #11 return
INFO  21:01:43,900 - #44 this
INFO  21:01:43,900 - #33 .
INFO  21:01:43,900 - #44 i
INFO  21:01:43,900 - #15 +
INFO  21:01:43,901 - #44 this
INFO  21:01:43,901 - #33 .
INFO  21:01:43,901 - #44 x
INFO  21:01:43,901 - #36 [
INFO  21:01:43,901 - #43 0
INFO  21:01:43,901 - #37 ]
INFO  21:01:43,901 - #15 +
INFO  21:01:43,901 - #44 a
INFO  21:01:43,901 - #31 ;
INFO  21:01:43,901 - #39 }
INFO  21:01:43,902 - #39 }
INFO  21:01:43,902 - #39 }
INFO  21:01:43,902 - #4 class
INFO  21:01:43,902 - #44 C
INFO  21:01:43,902 - #14 extends
INFO  21:01:43,902 - #44 B
INFO  21:01:43,902 - #38 {
INFO  21:01:43,902 - #44 A
INFO  21:01:43,902 - #44 theA
INFO  21:01:43,902 - #31 ;
INFO  21:01:43,902 - #44 string
INFO  21:01:43,902 - #44 a
INFO  21:01:43,902 - #31 ;
INFO  21:01:43,903 - #39 }
INFO  21:01:43,903 - #38 {
INFO  21:01:43,903 - #12 void
INFO  21:01:43,903 - #44 main
INFO  21:01:43,903 - #34 (
INFO  21:01:43,903 - #35 )
INFO  21:01:43,903 - #44 A
INFO  21:01:43,903 - #44 a
INFO  21:01:43,903 - #31 ;
INFO  21:01:43,903 - #44 C
INFO  21:01:43,903 - #44 c
INFO  21:01:43,903 - #31 ;
INFO  21:01:43,904 - #44 int
INFO  21:01:43,904 - #44 i
INFO  21:01:43,904 - #31 ;
INFO  21:01:43,904 - #44 int
INFO  21:01:43,904 - #44 x
INFO  21:01:43,904 - #36 [
INFO  21:01:43,904 - #37 ]
INFO  21:01:43,904 - #31 ;
INFO  21:01:43,904 - #38 {
INFO  21:01:43,904 - #44 a
INFO  21:01:43,904 - #28 =
INFO  21:01:43,904 - #8 new
INFO  21:01:43,904 - #44 A
INFO  21:01:43,904 - #31 ;
INFO  21:01:43,905 - #44 a
INFO  21:01:43,905 - #33 .
INFO  21:01:43,905 - #44 x
INFO  21:01:43,905 - #28 =
INFO  21:01:43,905 - #8 new
INFO  21:01:43,905 - #44 int
INFO  21:01:43,905 - #36 [
INFO  21:01:43,905 - #43 5
INFO  21:01:43,905 - #37 ]
INFO  21:01:43,905 - #31 ;
INFO  21:01:43,905 - #44 a
INFO  21:01:43,905 - #33 .
INFO  21:01:43,906 - #44 y
INFO  21:01:43,906 - #28 =
INFO  21:01:43,906 - #8 new
INFO  21:01:43,906 - #44 int
INFO  21:01:43,906 - #36 [
INFO  21:01:43,906 - #43 5
INFO  21:01:43,906 - #37 ]
INFO  21:01:43,906 - #31 ;
INFO  21:01:43,906 - #44 c
INFO  21:01:43,906 - #28 =
INFO  21:01:43,907 - #8 new
INFO  21:01:43,907 - #44 C
INFO  21:01:43,907 - #31 ;
INFO  21:01:43,907 - #44 c
INFO  21:01:43,907 - #33 .
INFO  21:01:43,907 - #44 theA
INFO  21:01:43,907 - #28 =
INFO  21:01:43,907 - #44 a
INFO  21:01:43,907 - #31 ;
INFO  21:01:43,907 - #44 c
INFO  21:01:43,908 - #33 .
INFO  21:01:43,908 - #44 x
INFO  21:01:43,908 - #28 =
INFO  21:01:43,908 - #8 new
INFO  21:01:43,908 - #44 int
INFO  21:01:43,908 - #36 [
INFO  21:01:43,908 - #43 5
INFO  21:01:43,908 - #37 ]
INFO  21:01:43,908 - #31 ;
INFO  21:01:43,908 - #44 x
INFO  21:01:43,909 - #28 =
INFO  21:01:43,909 - #8 new
INFO  21:01:43,909 - #44 int
INFO  21:01:43,909 - #36 [
INFO  21:01:43,909 - #43 3
INFO  21:01:43,909 - #37 ]
INFO  21:01:43,909 - #31 ;
INFO  21:01:43,909 - #44 i
INFO  21:01:43,910 - #28 =
INFO  21:01:43,910 - #43 0
INFO  21:01:43,910 - #31 ;
INFO  21:01:43,910 - #10 read
INFO  21:01:43,910 - #34 (
INFO  21:01:43,910 - #44 c
INFO  21:01:43,910 - #33 .
INFO  21:01:43,910 - #44 i
INFO  21:01:43,910 - #35 )
INFO  21:01:43,911 - #31 ;
INFO  21:01:43,911 - #13 while
INFO  21:01:43,911 - #34 (
INFO  21:01:43,911 - #44 i
INFO  21:01:43,911 - #24 <
INFO  21:01:43,911 - #43 5
INFO  21:01:43,911 - #35 )
INFO  21:01:43,911 - #38 {
INFO  21:01:43,912 - #10 read
INFO  21:01:43,912 - #34 (
INFO  21:01:43,912 - #44 c
INFO  21:01:43,912 - #33 .
INFO  21:01:43,912 - #44 x
INFO  21:01:43,912 - #36 [
INFO  21:01:43,912 - #44 i
INFO  21:01:43,912 - #37 ]
INFO  21:01:43,912 - #35 )
INFO  21:01:43,913 - #31 ;
INFO  21:01:43,913 - #10 read
INFO  21:01:43,913 - #34 (
INFO  21:01:43,913 - #44 c
INFO  21:01:43,913 - #33 .
INFO  21:01:43,913 - #44 theA
INFO  21:01:43,913 - #33 .
INFO  21:01:43,913 - #44 x
INFO  21:01:43,913 - #36 [
INFO  21:01:43,914 - #44 i
INFO  21:01:43,914 - #37 ]
INFO  21:01:43,914 - #35 )
INFO  21:01:43,914 - #31 ;
INFO  21:01:43,914 - #44 i
INFO  21:01:43,914 - #29 ++
INFO  21:01:43,914 - #31 ;
INFO  21:01:43,914 - #39 }
INFO  21:01:43,914 - #9 print
INFO  21:01:43,915 - #34 (
INFO  21:01:43,915 - #44 c
INFO  21:01:43,915 - #33 .
INFO  21:01:43,915 - #44 getValue
INFO  21:01:43,915 - #34 (
INFO  21:01:43,915 - #44 c
INFO  21:01:43,915 - #33 .
INFO  21:01:43,915 - #44 theA
INFO  21:01:43,916 - #33 .
INFO  21:01:43,916 - #44 x
INFO  21:01:43,916 - #36 [
INFO  21:01:43,916 - #43 0
INFO  21:01:43,916 - #37 ]
INFO  21:01:43,916 - #35 )
INFO  21:01:43,916 - #35 )
INFO  21:01:43,916 - #31 ;
INFO  21:01:43,916 - #39 }
INFO  21:01:43,916 - #39 }
INFO  21:01:43,917 - GlobalVar = 0
INFO  21:01:43,917 - GlobalConst = 2
INFO  21:01:43,917 - LocalMainVar = 4
INFO  21:02:09,901 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:02:09,911 - #2 program
INFO  21:02:09,911 - #44 Program
INFO  21:02:09,911 - #4 class
INFO  21:02:09,911 - #44 A
INFO  21:02:09,912 - #38 {
INFO  21:02:09,912 - #44 int
INFO  21:02:09,912 - #44 x
INFO  21:02:09,912 - #36 [
INFO  21:02:09,912 - #37 ]
INFO  21:02:09,912 - #32 ,
INFO  21:02:09,912 - #44 y
INFO  21:02:09,912 - #36 [
INFO  21:02:09,912 - #37 ]
INFO  21:02:09,912 - #31 ;
INFO  21:02:09,912 - #39 }
INFO  21:02:09,912 - #6 const
INFO  21:02:09,913 - #44 int
INFO  21:02:09,913 - #44 pi
INFO  21:02:09,913 - #28 =
INFO  21:02:09,913 - #43 3
INFO  21:02:09,913 - #32 ,
INFO  21:02:09,913 - #44 e
INFO  21:02:09,913 - #28 =
INFO  21:02:09,913 - #43 2
INFO  21:02:09,913 - #31 ;
INFO  21:02:09,913 - #4 class
INFO  21:02:09,913 - #44 B
INFO  21:02:09,913 - #14 extends
INFO  21:02:09,913 - #44 A
INFO  21:02:09,913 - #38 {
INFO  21:02:09,914 - #44 int
INFO  21:02:09,914 - #44 i
INFO  21:02:09,914 - #31 ;
INFO  21:02:09,914 - #44 int
INFO  21:02:09,914 - #44 x
INFO  21:02:09,914 - #36 [
INFO  21:02:09,914 - #37 ]
INFO  21:02:09,914 - #31 ;
INFO  21:02:09,914 - #38 {
INFO  21:02:09,914 - #44 int
INFO  21:02:09,914 - #44 getValue
INFO  21:02:09,914 - #34 (
INFO  21:02:09,914 - #44 int
INFO  21:02:09,914 - #44 a
INFO  21:02:09,915 - #35 )
INFO  21:02:09,915 - #44 int
INFO  21:02:09,915 - #44 b
INFO  21:02:09,915 - #31 ;
INFO  21:02:09,915 - #44 bool
INFO  21:02:09,915 - #44 c
INFO  21:02:09,915 - #31 ;
INFO  21:02:09,915 - #38 {
INFO  21:02:09,915 - #11 return
INFO  21:02:09,915 - #44 this
INFO  21:02:09,915 - #33 .
INFO  21:02:09,916 - #44 i
INFO  21:02:09,916 - #15 +
INFO  21:02:09,916 - #44 this
INFO  21:02:09,916 - #33 .
INFO  21:02:09,916 - #44 x
INFO  21:02:09,916 - #36 [
INFO  21:02:09,916 - #43 0
INFO  21:02:09,916 - #37 ]
INFO  21:02:09,916 - #15 +
INFO  21:02:09,916 - #44 a
INFO  21:02:09,916 - #31 ;
INFO  21:02:09,917 - #39 }
INFO  21:02:09,917 - #39 }
INFO  21:02:09,917 - #39 }
INFO  21:02:09,917 - #4 class
INFO  21:02:09,917 - #44 C
INFO  21:02:09,917 - #14 extends
INFO  21:02:09,917 - #44 B
INFO  21:02:09,917 - #38 {
INFO  21:02:09,917 - #44 A
INFO  21:02:09,917 - #44 theA
INFO  21:02:09,917 - #31 ;
INFO  21:02:09,917 - #44 string
INFO  21:02:09,917 - #44 a
INFO  21:02:09,918 - #31 ;
INFO  21:02:09,918 - #39 }
INFO  21:02:09,918 - #38 {
INFO  21:02:09,918 - #12 void
INFO  21:02:09,918 - #44 main
INFO  21:02:09,918 - #34 (
INFO  21:02:09,918 - #35 )
INFO  21:02:09,918 - #44 A
INFO  21:02:09,918 - #44 a
INFO  21:02:09,918 - #31 ;
INFO  21:02:09,918 - #44 C
INFO  21:02:09,918 - #44 c
INFO  21:02:09,918 - #31 ;
INFO  21:02:09,919 - #44 int
INFO  21:02:09,919 - #44 i
INFO  21:02:09,919 - #31 ;
INFO  21:02:09,919 - #44 int
INFO  21:02:09,919 - #44 x
INFO  21:02:09,919 - #36 [
INFO  21:02:09,919 - #37 ]
INFO  21:02:09,919 - #31 ;
INFO  21:02:09,919 - #38 {
INFO  21:02:09,919 - #44 a
INFO  21:02:09,919 - #28 =
INFO  21:02:09,919 - #8 new
INFO  21:02:09,919 - #44 A
INFO  21:02:09,919 - #31 ;
INFO  21:02:09,920 - #44 a
INFO  21:02:09,920 - #33 .
INFO  21:02:09,920 - #44 x
INFO  21:02:09,920 - #28 =
INFO  21:02:09,920 - #8 new
INFO  21:02:09,920 - #44 int
INFO  21:02:09,920 - #36 [
INFO  21:02:09,920 - #43 5
INFO  21:02:09,920 - #37 ]
INFO  21:02:09,920 - #31 ;
INFO  21:02:09,920 - #44 a
INFO  21:02:09,920 - #33 .
INFO  21:02:09,920 - #44 y
INFO  21:02:09,921 - #28 =
INFO  21:02:09,921 - #8 new
INFO  21:02:09,921 - #44 int
INFO  21:02:09,921 - #36 [
INFO  21:02:09,921 - #43 5
INFO  21:02:09,921 - #37 ]
INFO  21:02:09,921 - #31 ;
INFO  21:02:09,921 - #44 c
INFO  21:02:09,921 - #28 =
INFO  21:02:09,921 - #8 new
INFO  21:02:09,922 - #44 C
INFO  21:02:09,922 - #31 ;
INFO  21:02:09,922 - #44 c
INFO  21:02:09,922 - #33 .
INFO  21:02:09,922 - #44 theA
INFO  21:02:09,922 - #28 =
INFO  21:02:09,922 - #44 a
INFO  21:02:09,922 - #31 ;
INFO  21:02:09,922 - #44 c
INFO  21:02:09,922 - #33 .
INFO  21:02:09,923 - #44 x
INFO  21:02:09,923 - #28 =
INFO  21:02:09,923 - #8 new
INFO  21:02:09,923 - #44 int
INFO  21:02:09,923 - #36 [
INFO  21:02:09,923 - #43 5
INFO  21:02:09,923 - #37 ]
INFO  21:02:09,923 - #31 ;
INFO  21:02:09,923 - #44 x
INFO  21:02:09,924 - #28 =
INFO  21:02:09,924 - #8 new
INFO  21:02:09,924 - #44 int
INFO  21:02:09,924 - #36 [
INFO  21:02:09,924 - #43 3
INFO  21:02:09,924 - #37 ]
INFO  21:02:09,924 - #31 ;
INFO  21:02:09,924 - #44 i
INFO  21:02:09,924 - #28 =
INFO  21:02:09,925 - #43 0
INFO  21:02:09,925 - #31 ;
INFO  21:02:09,925 - #10 read
INFO  21:02:09,925 - #34 (
INFO  21:02:09,925 - #44 c
INFO  21:02:09,925 - #33 .
INFO  21:02:09,925 - #44 i
INFO  21:02:09,925 - #35 )
INFO  21:02:09,925 - #31 ;
INFO  21:02:09,926 - #13 while
INFO  21:02:09,926 - #34 (
INFO  21:02:09,926 - #44 i
INFO  21:02:09,926 - #24 <
INFO  21:02:09,926 - #43 5
INFO  21:02:09,926 - #35 )
INFO  21:02:09,926 - #38 {
INFO  21:02:09,926 - #10 read
INFO  21:02:09,927 - #34 (
INFO  21:02:09,927 - #44 c
INFO  21:02:09,927 - #33 .
INFO  21:02:09,927 - #44 x
INFO  21:02:09,927 - #36 [
INFO  21:02:09,927 - #44 i
INFO  21:02:09,927 - #37 ]
INFO  21:02:09,927 - #35 )
INFO  21:02:09,928 - #31 ;
INFO  21:02:09,928 - #10 read
INFO  21:02:09,928 - #34 (
INFO  21:02:09,928 - #44 c
INFO  21:02:09,928 - #33 .
INFO  21:02:09,928 - #44 theA
INFO  21:02:09,928 - #33 .
INFO  21:02:09,928 - #44 x
INFO  21:02:09,928 - #36 [
INFO  21:02:09,928 - #44 i
INFO  21:02:09,929 - #37 ]
INFO  21:02:09,929 - #35 )
INFO  21:02:09,929 - #31 ;
INFO  21:02:09,929 - #44 i
INFO  21:02:09,929 - #29 ++
INFO  21:02:09,929 - #31 ;
INFO  21:02:09,929 - #39 }
INFO  21:02:09,929 - #9 print
INFO  21:02:09,929 - #34 (
INFO  21:02:09,930 - #44 c
INFO  21:02:09,930 - #33 .
INFO  21:02:09,930 - #44 getValue
INFO  21:02:09,930 - #34 (
INFO  21:02:09,930 - #44 c
INFO  21:02:09,930 - #33 .
INFO  21:02:09,930 - #44 theA
INFO  21:02:09,930 - #33 .
INFO  21:02:09,930 - #44 x
INFO  21:02:09,930 - #36 [
INFO  21:02:09,930 - #43 0
INFO  21:02:09,931 - #37 ]
INFO  21:02:09,931 - #35 )
INFO  21:02:09,931 - #35 )
INFO  21:02:09,931 - #31 ;
INFO  21:02:09,931 - #39 }
INFO  21:02:09,931 - #39 }
INFO  21:02:09,931 - GlobalVar = 0
INFO  21:02:09,931 - GlobalConst = 2
INFO  21:02:09,932 - LocalMainVar = 4
INFO  21:02:39,382 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:02:39,390 - #2 program
INFO  21:02:39,391 - #44 Program
INFO  21:02:39,391 - #4 class
INFO  21:02:39,391 - #44 A
INFO  21:02:39,391 - #38 {
INFO  21:02:39,391 - #44 int
INFO  21:02:39,391 - #44 x
INFO  21:02:39,391 - #36 [
INFO  21:02:39,391 - #37 ]
INFO  21:02:39,391 - #32 ,
INFO  21:02:39,391 - #44 y
INFO  21:02:39,392 - #36 [
INFO  21:02:39,392 - #37 ]
INFO  21:02:39,392 - #31 ;
INFO  21:02:39,392 - #39 }
INFO  21:02:39,392 - #6 const
INFO  21:02:39,392 - #44 int
INFO  21:02:39,392 - #44 pi
INFO  21:02:39,392 - #28 =
INFO  21:02:39,392 - #43 3
INFO  21:02:39,392 - #32 ,
INFO  21:02:39,392 - #44 e
INFO  21:02:39,392 - #28 =
INFO  21:02:39,392 - #43 2
INFO  21:02:39,393 - #31 ;
INFO  21:02:39,393 - #4 class
INFO  21:02:39,393 - #44 B
INFO  21:02:39,393 - #14 extends
INFO  21:02:39,393 - #44 A
INFO  21:02:39,393 - #38 {
INFO  21:02:39,393 - #44 int
INFO  21:02:39,393 - #44 i
INFO  21:02:39,393 - #31 ;
INFO  21:02:39,393 - #44 int
INFO  21:02:39,393 - #44 x
INFO  21:02:39,394 - #36 [
INFO  21:02:39,394 - #37 ]
INFO  21:02:39,394 - #31 ;
INFO  21:02:39,394 - #38 {
INFO  21:02:39,394 - #44 int
INFO  21:02:39,394 - #44 getValue
INFO  21:02:39,394 - #34 (
INFO  21:02:39,394 - #44 int
INFO  21:02:39,394 - #44 a
INFO  21:02:39,394 - #35 )
INFO  21:02:39,394 - #44 int
INFO  21:02:39,394 - #44 b
INFO  21:02:39,394 - #31 ;
INFO  21:02:39,394 - #44 bool
INFO  21:02:39,395 - #44 c
INFO  21:02:39,395 - #31 ;
INFO  21:02:39,395 - #38 {
INFO  21:02:39,395 - #11 return
INFO  21:02:39,395 - #44 this
INFO  21:02:39,395 - #33 .
INFO  21:02:39,395 - #44 i
INFO  21:02:39,395 - #15 +
INFO  21:02:39,395 - #44 this
INFO  21:02:39,395 - #33 .
INFO  21:02:39,395 - #44 x
INFO  21:02:39,396 - #36 [
INFO  21:02:39,396 - #43 0
INFO  21:02:39,396 - #37 ]
INFO  21:02:39,396 - #15 +
INFO  21:02:39,396 - #44 a
INFO  21:02:39,396 - #31 ;
INFO  21:02:39,396 - #39 }
INFO  21:02:39,396 - #39 }
INFO  21:02:39,396 - #39 }
INFO  21:02:39,396 - #4 class
INFO  21:02:39,396 - #44 C
INFO  21:02:39,396 - #14 extends
INFO  21:02:39,396 - #44 B
INFO  21:02:39,397 - #38 {
INFO  21:02:39,397 - #44 A
INFO  21:02:39,397 - #44 theA
INFO  21:02:39,397 - #31 ;
INFO  21:02:39,397 - #44 string
INFO  21:02:39,397 - #44 a
INFO  21:02:39,397 - #31 ;
INFO  21:02:39,397 - #39 }
INFO  21:02:39,398 - #38 {
INFO  21:02:39,398 - #12 void
INFO  21:02:39,398 - #44 main
INFO  21:02:39,398 - #34 (
INFO  21:02:39,398 - #35 )
INFO  21:02:39,398 - #44 A
INFO  21:02:39,398 - #44 a
INFO  21:02:39,398 - #31 ;
INFO  21:02:39,398 - #44 C
INFO  21:02:39,398 - #44 c
INFO  21:02:39,399 - #31 ;
INFO  21:02:39,399 - #44 int
INFO  21:02:39,399 - #44 i
INFO  21:02:39,399 - #31 ;
INFO  21:02:39,399 - #44 int
INFO  21:02:39,399 - #44 x
INFO  21:02:39,399 - #36 [
INFO  21:02:39,399 - #37 ]
INFO  21:02:39,399 - #31 ;
INFO  21:02:39,399 - #38 {
INFO  21:02:39,400 - #44 a
INFO  21:02:39,400 - #28 =
INFO  21:02:39,400 - #8 new
INFO  21:02:39,400 - #44 A
INFO  21:02:39,400 - #31 ;
INFO  21:02:39,400 - #44 a
INFO  21:02:39,400 - #33 .
INFO  21:02:39,400 - #44 x
INFO  21:02:39,400 - #28 =
INFO  21:02:39,400 - #8 new
INFO  21:02:39,400 - #44 int
INFO  21:02:39,401 - #36 [
INFO  21:02:39,401 - #43 5
INFO  21:02:39,401 - #37 ]
INFO  21:02:39,401 - #31 ;
INFO  21:02:39,401 - #44 a
INFO  21:02:39,401 - #33 .
INFO  21:02:39,401 - #44 y
INFO  21:02:39,401 - #28 =
INFO  21:02:39,401 - #8 new
INFO  21:02:39,402 - #44 int
INFO  21:02:39,402 - #36 [
INFO  21:02:39,402 - #43 5
INFO  21:02:39,402 - #37 ]
INFO  21:02:39,402 - #31 ;
INFO  21:02:39,402 - #44 c
INFO  21:02:39,402 - #28 =
INFO  21:02:39,403 - #8 new
INFO  21:02:39,403 - #44 C
INFO  21:02:39,403 - #31 ;
INFO  21:02:39,403 - #44 c
INFO  21:02:39,403 - #33 .
INFO  21:02:39,403 - #44 theA
INFO  21:02:39,403 - #28 =
INFO  21:02:39,403 - #44 a
INFO  21:02:39,403 - #31 ;
INFO  21:02:39,404 - #44 c
INFO  21:02:39,404 - #33 .
INFO  21:02:39,404 - #44 x
INFO  21:02:39,404 - #28 =
INFO  21:02:39,404 - #8 new
INFO  21:02:39,404 - #44 int
INFO  21:02:39,404 - #36 [
INFO  21:02:39,404 - #43 5
INFO  21:02:39,404 - #37 ]
INFO  21:02:39,405 - #31 ;
INFO  21:02:39,405 - #44 x
INFO  21:02:39,405 - #28 =
INFO  21:02:39,405 - #8 new
INFO  21:02:39,405 - #44 int
INFO  21:02:39,405 - #36 [
INFO  21:02:39,405 - #43 3
INFO  21:02:39,405 - #37 ]
INFO  21:02:39,406 - #31 ;
INFO  21:02:39,406 - #44 i
INFO  21:02:39,406 - #28 =
INFO  21:02:39,406 - #43 0
INFO  21:02:39,406 - #31 ;
INFO  21:02:39,406 - #10 read
INFO  21:02:39,406 - #34 (
INFO  21:02:39,406 - #44 c
INFO  21:02:39,407 - #33 .
INFO  21:02:39,407 - #44 i
INFO  21:02:39,407 - #35 )
INFO  21:02:39,407 - #31 ;
INFO  21:02:39,407 - #13 while
INFO  21:02:39,407 - #34 (
INFO  21:02:39,407 - #44 i
INFO  21:02:39,407 - #24 <
INFO  21:02:39,407 - #43 5
INFO  21:02:39,408 - #35 )
INFO  21:02:39,408 - #38 {
INFO  21:02:39,408 - #10 read
INFO  21:02:39,408 - #34 (
INFO  21:02:39,408 - #44 c
INFO  21:02:39,408 - #33 .
INFO  21:02:39,408 - #44 x
INFO  21:02:39,408 - #36 [
INFO  21:02:39,408 - #44 i
INFO  21:02:39,409 - #37 ]
INFO  21:02:39,409 - #35 )
INFO  21:02:39,409 - #31 ;
INFO  21:02:39,409 - #10 read
INFO  21:02:39,409 - #34 (
INFO  21:02:39,409 - #44 c
INFO  21:02:39,409 - #33 .
INFO  21:02:39,410 - #44 theA
INFO  21:02:39,410 - #33 .
INFO  21:02:39,410 - #44 x
INFO  21:02:39,410 - #36 [
INFO  21:02:39,410 - #44 i
INFO  21:02:39,410 - #37 ]
INFO  21:02:39,410 - #35 )
INFO  21:02:39,410 - #31 ;
INFO  21:02:39,410 - #44 i
INFO  21:02:39,410 - #29 ++
INFO  21:02:39,411 - #31 ;
INFO  21:02:39,411 - #39 }
INFO  21:02:39,411 - #9 print
INFO  21:02:39,411 - #34 (
INFO  21:02:39,411 - #44 c
INFO  21:02:39,411 - #33 .
INFO  21:02:39,411 - #44 getValue
INFO  21:02:39,411 - #34 (
INFO  21:02:39,411 - #44 c
INFO  21:02:39,411 - #33 .
INFO  21:02:39,411 - #44 theA
INFO  21:02:39,412 - #33 .
INFO  21:02:39,412 - #44 x
INFO  21:02:39,412 - #36 [
INFO  21:02:39,412 - #43 0
INFO  21:02:39,412 - #37 ]
INFO  21:02:39,412 - #35 )
INFO  21:02:39,412 - #35 )
INFO  21:02:39,412 - #31 ;
INFO  21:02:39,412 - #39 }
INFO  21:02:39,412 - #12 void
INFO  21:02:39,413 - #44 dsfdsfs
INFO  21:02:39,413 - #34 (
INFO  21:02:39,413 - #35 )
INFO  21:02:39,413 - #44 A
INFO  21:02:39,413 - #44 fdfd
INFO  21:02:39,413 - #31 ;
INFO  21:02:39,413 - #44 C
INFO  21:02:39,413 - #44 rtere
INFO  21:02:39,413 - #31 ;
INFO  21:02:39,413 - #44 int
INFO  21:02:39,414 - #44 dfdsfds
INFO  21:02:39,414 - #31 ;
INFO  21:02:39,414 - #44 int
INFO  21:02:39,414 - #44 fdfds
INFO  21:02:39,414 - #36 [
INFO  21:02:39,414 - #37 ]
INFO  21:02:39,414 - #31 ;
INFO  21:02:39,414 - #38 {
INFO  21:02:39,414 - #39 }
INFO  21:02:39,414 - #39 }
INFO  21:02:39,415 - GlobalVar = 0
INFO  21:02:39,415 - GlobalConst = 2
INFO  21:02:39,415 - LocalMainVar = 4
INFO  21:02:42,186 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:02:42,195 - #2 program
INFO  21:02:42,195 - #44 Program
INFO  21:02:42,195 - #4 class
INFO  21:02:42,195 - #44 A
INFO  21:02:42,196 - #38 {
INFO  21:02:42,196 - #44 int
INFO  21:02:42,196 - #44 x
INFO  21:02:42,196 - #36 [
INFO  21:02:42,196 - #37 ]
INFO  21:02:42,196 - #32 ,
INFO  21:02:42,196 - #44 y
INFO  21:02:42,197 - #36 [
INFO  21:02:42,197 - #37 ]
INFO  21:02:42,197 - #31 ;
INFO  21:02:42,197 - #39 }
INFO  21:02:42,197 - #6 const
INFO  21:02:42,197 - #44 int
INFO  21:02:42,197 - #44 pi
INFO  21:02:42,198 - #28 =
INFO  21:02:42,198 - #43 3
INFO  21:02:42,198 - #32 ,
INFO  21:02:42,198 - #44 e
INFO  21:02:42,198 - #28 =
INFO  21:02:42,198 - #43 2
INFO  21:02:42,198 - #31 ;
INFO  21:02:42,198 - #4 class
INFO  21:02:42,198 - #44 B
INFO  21:02:42,198 - #14 extends
INFO  21:02:42,199 - #44 A
INFO  21:02:42,199 - #38 {
INFO  21:02:42,199 - #44 int
INFO  21:02:42,199 - #44 i
INFO  21:02:42,199 - #31 ;
INFO  21:02:42,199 - #44 int
INFO  21:02:42,199 - #44 x
INFO  21:02:42,199 - #36 [
INFO  21:02:42,199 - #37 ]
INFO  21:02:42,199 - #31 ;
INFO  21:02:42,199 - #38 {
INFO  21:02:42,200 - #44 int
INFO  21:02:42,200 - #44 getValue
INFO  21:02:42,200 - #34 (
INFO  21:02:42,200 - #44 int
INFO  21:02:42,200 - #44 a
INFO  21:02:42,200 - #35 )
INFO  21:02:42,200 - #44 int
INFO  21:02:42,200 - #44 b
INFO  21:02:42,200 - #31 ;
INFO  21:02:42,200 - #44 bool
INFO  21:02:42,200 - #44 c
INFO  21:02:42,201 - #31 ;
INFO  21:02:42,201 - #38 {
INFO  21:02:42,201 - #11 return
INFO  21:02:42,201 - #44 this
INFO  21:02:42,201 - #33 .
INFO  21:02:42,201 - #44 i
INFO  21:02:42,201 - #15 +
INFO  21:02:42,201 - #44 this
INFO  21:02:42,201 - #33 .
INFO  21:02:42,202 - #44 x
INFO  21:02:42,202 - #36 [
INFO  21:02:42,202 - #43 0
INFO  21:02:42,202 - #37 ]
INFO  21:02:42,202 - #15 +
INFO  21:02:42,202 - #44 a
INFO  21:02:42,202 - #31 ;
INFO  21:02:42,202 - #39 }
INFO  21:02:42,202 - #39 }
INFO  21:02:42,203 - #39 }
INFO  21:02:42,203 - #4 class
INFO  21:02:42,203 - #44 C
INFO  21:02:42,203 - #14 extends
INFO  21:02:42,203 - #44 B
INFO  21:02:42,203 - #38 {
INFO  21:02:42,203 - #44 A
INFO  21:02:42,203 - #44 theA
INFO  21:02:42,203 - #31 ;
INFO  21:02:42,203 - #44 string
INFO  21:02:42,203 - #44 a
INFO  21:02:42,203 - #31 ;
INFO  21:02:42,204 - #39 }
INFO  21:02:42,204 - #38 {
INFO  21:02:42,204 - #12 void
INFO  21:02:42,204 - #44 main
INFO  21:02:42,204 - #34 (
INFO  21:02:42,204 - #35 )
INFO  21:02:42,204 - #44 A
INFO  21:02:42,204 - #44 a
INFO  21:02:42,204 - #31 ;
INFO  21:02:42,204 - #44 C
INFO  21:02:42,205 - #44 c
INFO  21:02:42,205 - #31 ;
INFO  21:02:42,205 - #44 int
INFO  21:02:42,205 - #44 i
INFO  21:02:42,205 - #31 ;
INFO  21:02:42,205 - #44 int
INFO  21:02:42,205 - #44 x
INFO  21:02:42,205 - #36 [
INFO  21:02:42,205 - #37 ]
INFO  21:02:42,205 - #31 ;
INFO  21:02:42,205 - #38 {
INFO  21:02:42,205 - #44 a
INFO  21:02:42,205 - #28 =
INFO  21:02:42,205 - #8 new
INFO  21:02:42,206 - #44 A
INFO  21:02:42,206 - #31 ;
INFO  21:02:42,206 - #44 a
INFO  21:02:42,206 - #33 .
INFO  21:02:42,206 - #44 x
INFO  21:02:42,206 - #28 =
INFO  21:02:42,206 - #8 new
INFO  21:02:42,206 - #44 int
INFO  21:02:42,206 - #36 [
INFO  21:02:42,206 - #43 5
INFO  21:02:42,206 - #37 ]
INFO  21:02:42,206 - #31 ;
INFO  21:02:42,206 - #44 a
INFO  21:02:42,207 - #33 .
INFO  21:02:42,207 - #44 y
INFO  21:02:42,207 - #28 =
INFO  21:02:42,207 - #8 new
INFO  21:02:42,207 - #44 int
INFO  21:02:42,207 - #36 [
INFO  21:02:42,207 - #43 5
INFO  21:02:42,207 - #37 ]
INFO  21:02:42,207 - #31 ;
INFO  21:02:42,207 - #44 c
INFO  21:02:42,208 - #28 =
INFO  21:02:42,208 - #8 new
INFO  21:02:42,208 - #44 C
INFO  21:02:42,208 - #31 ;
INFO  21:02:42,208 - #44 c
INFO  21:02:42,208 - #33 .
INFO  21:02:42,208 - #44 theA
INFO  21:02:42,208 - #28 =
INFO  21:02:42,208 - #44 a
INFO  21:02:42,208 - #31 ;
INFO  21:02:42,208 - #44 c
INFO  21:02:42,209 - #33 .
INFO  21:02:42,209 - #44 x
INFO  21:02:42,209 - #28 =
INFO  21:02:42,209 - #8 new
INFO  21:02:42,209 - #44 int
INFO  21:02:42,209 - #36 [
INFO  21:02:42,209 - #43 5
INFO  21:02:42,209 - #37 ]
INFO  21:02:42,209 - #31 ;
INFO  21:02:42,209 - #44 x
INFO  21:02:42,210 - #28 =
INFO  21:02:42,210 - #8 new
INFO  21:02:42,210 - #44 int
INFO  21:02:42,210 - #36 [
INFO  21:02:42,210 - #43 3
INFO  21:02:42,210 - #37 ]
INFO  21:02:42,210 - #31 ;
INFO  21:02:42,210 - #44 i
INFO  21:02:42,210 - #28 =
INFO  21:02:42,211 - #43 0
INFO  21:02:42,211 - #31 ;
INFO  21:02:42,211 - #10 read
INFO  21:02:42,211 - #34 (
INFO  21:02:42,211 - #44 c
INFO  21:02:42,211 - #33 .
INFO  21:02:42,211 - #44 i
INFO  21:02:42,211 - #35 )
INFO  21:02:42,211 - #31 ;
INFO  21:02:42,211 - #13 while
INFO  21:02:42,211 - #34 (
INFO  21:02:42,212 - #44 i
INFO  21:02:42,212 - #24 <
INFO  21:02:42,212 - #43 5
INFO  21:02:42,212 - #35 )
INFO  21:02:42,212 - #38 {
INFO  21:02:42,212 - #10 read
INFO  21:02:42,212 - #34 (
INFO  21:02:42,213 - #44 c
INFO  21:02:42,213 - #33 .
INFO  21:02:42,213 - #44 x
INFO  21:02:42,213 - #36 [
INFO  21:02:42,213 - #44 i
INFO  21:02:42,213 - #37 ]
INFO  21:02:42,213 - #35 )
INFO  21:02:42,213 - #31 ;
INFO  21:02:42,213 - #10 read
INFO  21:02:42,214 - #34 (
INFO  21:02:42,214 - #44 c
INFO  21:02:42,214 - #33 .
INFO  21:02:42,214 - #44 theA
INFO  21:02:42,214 - #33 .
INFO  21:02:42,214 - #44 x
INFO  21:02:42,214 - #36 [
INFO  21:02:42,214 - #44 i
INFO  21:02:42,214 - #37 ]
INFO  21:02:42,214 - #35 )
INFO  21:02:42,215 - #31 ;
INFO  21:02:42,215 - #44 i
INFO  21:02:42,215 - #29 ++
INFO  21:02:42,215 - #31 ;
INFO  21:02:42,215 - #39 }
INFO  21:02:42,215 - #9 print
INFO  21:02:42,215 - #34 (
INFO  21:02:42,215 - #44 c
INFO  21:02:42,215 - #33 .
INFO  21:02:42,215 - #44 getValue
INFO  21:02:42,216 - #34 (
INFO  21:02:42,216 - #44 c
INFO  21:02:42,216 - #33 .
INFO  21:02:42,216 - #44 theA
INFO  21:02:42,216 - #33 .
INFO  21:02:42,216 - #44 x
INFO  21:02:42,216 - #36 [
INFO  21:02:42,216 - #43 0
INFO  21:02:42,216 - #37 ]
INFO  21:02:42,216 - #35 )
INFO  21:02:42,216 - #35 )
INFO  21:02:42,217 - #31 ;
INFO  21:02:42,217 - #39 }
INFO  21:02:42,217 - #12 void
INFO  21:02:42,217 - #44 dsfdsfs
INFO  21:02:42,217 - #34 (
INFO  21:02:42,217 - #35 )
INFO  21:02:42,217 - #44 A
INFO  21:02:42,217 - #44 fdfd
INFO  21:02:42,217 - #31 ;
INFO  21:02:42,217 - #44 C
INFO  21:02:42,218 - #44 rtere
INFO  21:02:42,218 - #31 ;
INFO  21:02:42,218 - #44 int
INFO  21:02:42,218 - #44 dfdsfds
INFO  21:02:42,218 - #31 ;
INFO  21:02:42,218 - #44 int
INFO  21:02:42,218 - #44 fdfds
INFO  21:02:42,218 - #36 [
INFO  21:02:42,218 - #37 ]
INFO  21:02:42,218 - #31 ;
INFO  21:02:42,218 - #38 {
INFO  21:02:42,219 - #39 }
INFO  21:02:42,219 - #39 }
INFO  21:02:42,219 - GlobalVar = 0
INFO  21:02:42,219 - GlobalConst = 2
INFO  21:02:42,219 - LocalMainVar = 4
INFO  21:12:44,433 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:12:44,443 - #2 program
INFO  21:12:44,443 - #44 Program
INFO  21:12:44,443 - #4 class
INFO  21:12:44,443 - #44 A
INFO  21:12:44,443 - #38 {
INFO  21:12:44,444 - #44 int
INFO  21:12:44,444 - #44 x
INFO  21:12:44,444 - #36 [
INFO  21:12:44,444 - #37 ]
INFO  21:12:44,444 - #32 ,
INFO  21:12:44,444 - #44 y
INFO  21:12:44,444 - #36 [
INFO  21:12:44,444 - #37 ]
INFO  21:12:44,445 - #31 ;
INFO  21:12:44,445 - #39 }
INFO  21:12:44,445 - #6 const
INFO  21:12:44,445 - #44 int
INFO  21:12:44,445 - #44 pi
INFO  21:12:44,445 - #28 =
INFO  21:12:44,445 - #43 3
INFO  21:12:44,445 - #32 ,
INFO  21:12:44,445 - #44 e
INFO  21:12:44,445 - #28 =
INFO  21:12:44,445 - #43 2
INFO  21:12:44,446 - #31 ;
INFO  21:12:44,446 - #4 class
INFO  21:12:44,446 - #44 B
INFO  21:12:44,446 - #14 extends
INFO  21:12:44,446 - #44 A
INFO  21:12:44,446 - #38 {
INFO  21:12:44,446 - #44 int
INFO  21:12:44,446 - #44 i
INFO  21:12:44,446 - #31 ;
INFO  21:12:44,446 - #44 int
INFO  21:12:44,446 - #44 x
INFO  21:12:44,446 - #36 [
INFO  21:12:44,446 - #37 ]
INFO  21:12:44,447 - #31 ;
INFO  21:12:44,447 - #38 {
INFO  21:12:44,447 - #44 int
INFO  21:12:44,447 - #44 getValue
INFO  21:12:44,447 - #34 (
INFO  21:12:44,447 - #44 int
INFO  21:12:44,447 - #44 a
INFO  21:12:44,447 - #35 )
INFO  21:12:44,447 - #44 int
INFO  21:12:44,447 - #44 b
INFO  21:12:44,448 - #31 ;
INFO  21:12:44,448 - #44 bool
INFO  21:12:44,448 - #44 c
INFO  21:12:44,448 - #31 ;
INFO  21:12:44,448 - #38 {
INFO  21:12:44,448 - #11 return
INFO  21:12:44,448 - #44 this
INFO  21:12:44,448 - #33 .
INFO  21:12:44,448 - #44 i
INFO  21:12:44,448 - #15 +
INFO  21:12:44,448 - #44 this
INFO  21:12:44,448 - #33 .
INFO  21:12:44,449 - #44 x
INFO  21:12:44,449 - #36 [
INFO  21:12:44,449 - #43 0
INFO  21:12:44,449 - #37 ]
INFO  21:12:44,449 - #15 +
INFO  21:12:44,449 - #44 a
INFO  21:12:44,449 - #31 ;
INFO  21:12:44,449 - #39 }
INFO  21:12:44,449 - #39 }
INFO  21:12:44,449 - #39 }
INFO  21:12:44,449 - #4 class
INFO  21:12:44,449 - #44 C
INFO  21:12:44,450 - #14 extends
INFO  21:12:44,450 - #44 B
INFO  21:12:44,450 - #38 {
INFO  21:12:44,450 - #44 A
INFO  21:12:44,450 - #44 theA
INFO  21:12:44,450 - #31 ;
INFO  21:12:44,450 - #44 string
INFO  21:12:44,450 - #44 a
INFO  21:12:44,450 - #31 ;
INFO  21:12:44,450 - #39 }
INFO  21:12:44,450 - #38 {
INFO  21:12:44,450 - #12 void
INFO  21:12:44,450 - #44 main
INFO  21:12:44,450 - #34 (
INFO  21:12:44,451 - #35 )
INFO  21:12:44,451 - #44 A
INFO  21:12:44,451 - #44 a
INFO  21:12:44,451 - #31 ;
INFO  21:12:44,451 - #44 C
INFO  21:12:44,451 - #44 c
INFO  21:12:44,451 - #31 ;
INFO  21:12:44,451 - #44 int
INFO  21:12:44,451 - #44 i
INFO  21:12:44,451 - #31 ;
INFO  21:12:44,451 - #44 int
INFO  21:12:44,451 - #44 x
INFO  21:12:44,451 - #36 [
INFO  21:12:44,452 - #37 ]
INFO  21:12:44,452 - #31 ;
INFO  21:12:44,452 - #38 {
INFO  21:12:44,452 - #44 a
INFO  21:12:44,452 - #28 =
INFO  21:12:44,452 - #8 new
INFO  21:12:44,452 - #44 A
INFO  21:12:44,452 - #31 ;
INFO  21:12:44,452 - #44 a
INFO  21:12:44,452 - #33 .
INFO  21:12:44,452 - #44 x
INFO  21:12:44,452 - #28 =
INFO  21:12:44,452 - #8 new
INFO  21:12:44,453 - #44 int
INFO  21:12:44,453 - #36 [
INFO  21:12:44,453 - #43 5
INFO  21:12:44,453 - #37 ]
INFO  21:12:44,453 - #31 ;
INFO  21:12:44,453 - #44 a
INFO  21:12:44,453 - #33 .
INFO  21:12:44,453 - #44 y
INFO  21:12:44,453 - #28 =
INFO  21:12:44,453 - #8 new
INFO  21:12:44,453 - #44 int
INFO  21:12:44,453 - #36 [
INFO  21:12:44,454 - #43 5
INFO  21:12:44,454 - #37 ]
INFO  21:12:44,454 - #31 ;
INFO  21:12:44,454 - #44 c
INFO  21:12:44,454 - #28 =
INFO  21:12:44,454 - #8 new
INFO  21:12:44,454 - #44 C
INFO  21:12:44,454 - #31 ;
INFO  21:12:44,454 - #44 c
INFO  21:12:44,454 - #33 .
INFO  21:12:44,455 - #44 theA
INFO  21:12:44,455 - #28 =
INFO  21:12:44,455 - #44 a
INFO  21:12:44,455 - #31 ;
INFO  21:12:44,455 - #44 c
INFO  21:12:44,455 - #33 .
INFO  21:12:44,455 - #44 x
INFO  21:12:44,455 - #28 =
INFO  21:12:44,455 - #8 new
INFO  21:12:44,455 - #44 int
INFO  21:12:44,456 - #36 [
INFO  21:12:44,456 - #43 5
INFO  21:12:44,456 - #37 ]
INFO  21:12:44,456 - #31 ;
INFO  21:12:44,456 - #44 x
INFO  21:12:44,456 - #28 =
INFO  21:12:44,456 - #8 new
INFO  21:12:44,456 - #44 int
INFO  21:12:44,457 - #36 [
INFO  21:12:44,457 - #43 3
INFO  21:12:44,457 - #37 ]
INFO  21:12:44,457 - #31 ;
INFO  21:12:44,457 - #44 i
INFO  21:12:44,457 - #28 =
INFO  21:12:44,457 - #43 0
INFO  21:12:44,457 - #31 ;
INFO  21:12:44,458 - #10 read
INFO  21:12:44,458 - #34 (
INFO  21:12:44,458 - #44 c
INFO  21:12:44,458 - #33 .
INFO  21:12:44,458 - #44 i
INFO  21:12:44,458 - #35 )
INFO  21:12:44,458 - #31 ;
INFO  21:12:44,458 - #13 while
INFO  21:12:44,458 - #34 (
INFO  21:12:44,459 - #44 i
INFO  21:12:44,459 - #24 <
INFO  21:12:44,459 - #43 5
INFO  21:12:44,459 - #35 )
INFO  21:12:44,459 - #38 {
INFO  21:12:44,459 - #10 read
INFO  21:12:44,459 - #34 (
INFO  21:12:44,459 - #44 c
INFO  21:12:44,460 - #33 .
INFO  21:12:44,460 - #44 x
INFO  21:12:44,460 - #36 [
INFO  21:12:44,461 - #44 i
INFO  21:12:44,461 - #37 ]
INFO  21:12:44,461 - #35 )
INFO  21:12:44,461 - #31 ;
INFO  21:12:44,461 - #10 read
INFO  21:12:44,461 - #34 (
INFO  21:12:44,461 - #44 c
INFO  21:12:44,462 - #33 .
INFO  21:12:44,462 - #44 theA
INFO  21:12:44,462 - #33 .
INFO  21:12:44,462 - #44 x
INFO  21:12:44,462 - #36 [
INFO  21:12:44,462 - #44 i
INFO  21:12:44,462 - #37 ]
INFO  21:12:44,462 - #35 )
INFO  21:12:44,462 - #31 ;
INFO  21:12:44,462 - #44 i
INFO  21:12:44,463 - #29 ++
INFO  21:12:44,463 - #31 ;
INFO  21:12:44,463 - #39 }
INFO  21:12:44,463 - #9 print
INFO  21:12:44,463 - #34 (
INFO  21:12:44,463 - #44 c
INFO  21:12:44,463 - #33 .
INFO  21:12:44,463 - #44 getValue
INFO  21:12:44,463 - #34 (
INFO  21:12:44,463 - #44 c
INFO  21:12:44,464 - #33 .
INFO  21:12:44,464 - #44 theA
INFO  21:12:44,464 - #33 .
INFO  21:12:44,464 - #44 x
INFO  21:12:44,464 - #36 [
INFO  21:12:44,464 - #43 0
INFO  21:12:44,464 - #37 ]
INFO  21:12:44,464 - #35 )
INFO  21:12:44,464 - #35 )
INFO  21:12:44,464 - #31 ;
INFO  21:12:44,464 - #39 }
INFO  21:12:44,465 - #39 }
INFO  21:12:44,465 - GlobalVar = 0
INFO  21:12:44,465 - GlobalConst = 2
INFO  21:12:44,465 - LocalMainVar = 4
INFO  21:12:53,495 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:12:53,502 - #2 program
INFO  21:12:53,503 - #44 Program
INFO  21:12:53,503 - #4 class
INFO  21:13:51,875 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:13:51,883 - #2 program
INFO  21:13:51,884 - #44 Program
INFO  21:13:51,884 - #4 class
INFO  21:13:51,884 - #44 A
INFO  21:13:51,884 - #38 {
INFO  21:13:51,884 - #44 int
INFO  21:13:51,884 - #44 x
INFO  21:13:51,884 - #36 [
INFO  21:13:51,884 - #37 ]
INFO  21:13:51,884 - #32 ,
INFO  21:13:51,884 - #44 y
INFO  21:13:51,884 - #36 [
INFO  21:13:51,885 - #37 ]
INFO  21:13:51,885 - #31 ;
INFO  21:13:51,885 - #39 }
INFO  21:13:51,885 - #6 const
INFO  21:13:51,885 - #44 int
INFO  21:13:51,885 - #44 pi
INFO  21:13:51,885 - #28 =
INFO  21:13:51,885 - #43 3
INFO  21:13:51,885 - #32 ,
INFO  21:13:51,885 - #44 e
INFO  21:13:51,885 - #28 =
INFO  21:13:51,885 - #43 2
INFO  21:13:51,885 - #31 ;
INFO  21:13:51,886 - #4 class
INFO  21:13:51,886 - #44 B
INFO  21:13:51,886 - #14 extends
INFO  21:13:51,886 - #44 A
INFO  21:13:51,886 - #38 {
INFO  21:13:51,886 - #44 int
INFO  21:13:51,886 - #44 i
INFO  21:13:51,886 - #31 ;
INFO  21:13:51,886 - #44 int
INFO  21:13:51,886 - #44 x
INFO  21:13:51,886 - #36 [
INFO  21:13:51,886 - #37 ]
INFO  21:13:51,886 - #31 ;
INFO  21:13:51,887 - #38 {
INFO  21:13:51,887 - #44 int
INFO  21:13:51,887 - #44 getValue
INFO  21:13:51,887 - #34 (
INFO  21:13:51,887 - #44 int
INFO  21:13:51,887 - #44 a
INFO  21:13:51,887 - #35 )
INFO  21:13:51,887 - #44 int
INFO  21:13:51,887 - #44 b
INFO  21:13:51,887 - #31 ;
INFO  21:13:51,887 - #44 bool
INFO  21:13:51,887 - #44 c
INFO  21:13:51,887 - #31 ;
INFO  21:13:51,887 - #38 {
INFO  21:13:51,888 - #11 return
INFO  21:13:51,888 - #44 this
INFO  21:13:51,888 - #33 .
INFO  21:13:51,888 - #44 i
INFO  21:13:51,888 - #15 +
INFO  21:13:51,888 - #44 this
INFO  21:13:51,888 - #33 .
INFO  21:13:51,888 - #44 x
INFO  21:13:51,888 - #36 [
INFO  21:13:51,888 - #43 0
INFO  21:13:51,888 - #37 ]
INFO  21:13:51,889 - #15 +
INFO  21:13:51,889 - #44 a
INFO  21:13:51,889 - #31 ;
INFO  21:13:51,889 - #39 }
INFO  21:13:51,889 - #39 }
INFO  21:13:51,889 - #39 }
INFO  21:13:51,889 - #4 class
INFO  21:13:51,889 - #44 C
INFO  21:13:51,889 - #14 extends
INFO  21:13:51,889 - #44 B
INFO  21:13:51,889 - #38 {
INFO  21:13:51,889 - #44 A
INFO  21:13:51,889 - #44 theA
INFO  21:13:51,890 - #31 ;
INFO  21:13:51,890 - #44 string
INFO  21:13:51,890 - #44 a
INFO  21:13:51,890 - #31 ;
INFO  21:13:51,890 - #39 }
INFO  21:13:51,890 - #38 {
INFO  21:13:51,890 - #12 void
INFO  21:13:51,890 - #44 main
INFO  21:13:51,890 - #34 (
INFO  21:13:51,890 - #35 )
INFO  21:13:51,890 - #44 A
INFO  21:13:51,890 - #44 a
INFO  21:13:51,890 - #31 ;
INFO  21:13:51,891 - #44 C
INFO  21:13:51,891 - #44 c
INFO  21:13:51,891 - #31 ;
INFO  21:13:51,891 - #44 int
INFO  21:13:51,891 - #44 i
INFO  21:13:51,891 - #31 ;
INFO  21:13:51,891 - #44 int
INFO  21:13:51,891 - #44 x
INFO  21:13:51,891 - #36 [
INFO  21:13:51,891 - #37 ]
INFO  21:13:51,891 - #31 ;
INFO  21:13:51,891 - #38 {
INFO  21:13:51,891 - #44 a
INFO  21:13:51,891 - #28 =
INFO  21:13:51,892 - #8 new
INFO  21:13:51,892 - #44 A
INFO  21:13:51,892 - #31 ;
INFO  21:13:51,892 - #44 a
INFO  21:13:51,892 - #33 .
INFO  21:13:51,892 - #44 x
INFO  21:13:51,892 - #28 =
INFO  21:13:51,892 - #8 new
INFO  21:13:51,892 - #44 int
INFO  21:13:51,892 - #36 [
INFO  21:13:51,892 - #43 5
INFO  21:13:51,892 - #37 ]
INFO  21:13:51,892 - #31 ;
INFO  21:13:51,893 - #44 a
INFO  21:13:51,893 - #33 .
INFO  21:13:51,893 - #44 y
INFO  21:13:51,893 - #28 =
INFO  21:13:51,893 - #8 new
INFO  21:13:51,893 - #44 int
INFO  21:13:51,893 - #36 [
INFO  21:13:51,893 - #43 5
INFO  21:13:51,893 - #37 ]
INFO  21:13:51,893 - #31 ;
INFO  21:13:51,894 - #44 c
INFO  21:13:51,894 - #28 =
INFO  21:13:51,894 - #8 new
INFO  21:13:51,894 - #44 C
INFO  21:13:51,894 - #31 ;
INFO  21:13:51,894 - #44 c
INFO  21:13:51,894 - #33 .
INFO  21:13:51,894 - #44 theA
INFO  21:13:51,894 - #28 =
INFO  21:13:51,894 - #44 a
INFO  21:13:51,894 - #31 ;
INFO  21:13:51,895 - #44 c
INFO  21:13:51,895 - #33 .
INFO  21:13:51,895 - #44 x
INFO  21:13:51,895 - #28 =
INFO  21:13:51,895 - #8 new
INFO  21:13:51,895 - #44 int
INFO  21:13:51,895 - #36 [
INFO  21:13:51,895 - #43 5
INFO  21:13:51,895 - #37 ]
INFO  21:13:51,895 - #31 ;
INFO  21:13:51,896 - #44 x
INFO  21:13:51,896 - #28 =
INFO  21:13:51,896 - #8 new
INFO  21:13:51,896 - #44 int
INFO  21:13:51,896 - #36 [
INFO  21:13:51,896 - #43 3
INFO  21:13:51,896 - #37 ]
INFO  21:13:51,897 - #31 ;
INFO  21:13:51,897 - #44 i
INFO  21:13:51,897 - #28 =
INFO  21:13:51,897 - #43 0
INFO  21:13:51,897 - #31 ;
INFO  21:13:51,897 - #10 read
INFO  21:13:51,898 - #34 (
INFO  21:13:51,898 - #44 c
INFO  21:13:51,898 - #33 .
INFO  21:13:51,898 - #44 i
INFO  21:13:51,898 - #35 )
INFO  21:13:51,898 - #31 ;
INFO  21:13:51,898 - #13 while
INFO  21:13:51,898 - #34 (
INFO  21:13:51,899 - #44 i
INFO  21:13:51,899 - #24 <
INFO  21:13:51,899 - #43 5
INFO  21:13:51,899 - #35 )
INFO  21:13:51,899 - #38 {
INFO  21:13:51,899 - #10 read
INFO  21:13:51,900 - #34 (
INFO  21:13:51,900 - #44 c
INFO  21:13:51,900 - #33 .
INFO  21:13:51,900 - #44 x
INFO  21:13:51,900 - #36 [
INFO  21:13:51,900 - #44 i
INFO  21:13:51,901 - #37 ]
INFO  21:13:51,901 - #35 )
INFO  21:13:51,901 - #31 ;
INFO  21:13:51,901 - #10 read
INFO  21:13:51,901 - #34 (
INFO  21:13:51,901 - #44 c
INFO  21:13:51,901 - #33 .
INFO  21:13:51,901 - #44 theA
INFO  21:13:51,901 - #33 .
INFO  21:13:51,902 - #44 x
INFO  21:13:51,902 - #36 [
INFO  21:13:51,902 - #44 i
INFO  21:13:51,902 - #37 ]
INFO  21:13:51,902 - #35 )
INFO  21:13:51,902 - #31 ;
INFO  21:13:51,902 - #44 i
INFO  21:13:51,902 - #29 ++
INFO  21:13:51,902 - #31 ;
INFO  21:13:51,903 - #39 }
INFO  21:13:51,903 - #9 print
INFO  21:13:51,903 - #34 (
INFO  21:13:51,903 - #44 c
INFO  21:13:51,903 - #33 .
INFO  21:13:51,903 - #44 getValue
INFO  21:13:51,903 - #34 (
INFO  21:13:51,903 - #44 c
INFO  21:13:51,903 - #33 .
INFO  21:13:51,903 - #44 theA
INFO  21:13:51,904 - #33 .
INFO  21:13:51,904 - #44 x
INFO  21:13:51,904 - #36 [
INFO  21:13:51,904 - #43 0
INFO  21:13:51,904 - #37 ]
INFO  21:13:51,904 - #35 )
INFO  21:13:51,904 - #35 )
INFO  21:13:51,904 - #31 ;
INFO  21:13:51,905 - #39 }
INFO  21:13:51,905 - #39 }
INFO  21:13:51,905 - GlobalVar = 2
INFO  21:13:51,905 - GlobalConst = 0
INFO  21:13:51,905 - LocalMainVar = 4
INFO  21:15:25,875 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:15:25,885 - #2 program
INFO  21:15:25,886 - #44 Program
INFO  21:15:25,886 - #4 class
INFO  21:15:25,886 - #44 A
INFO  21:15:25,886 - #38 {
INFO  21:15:25,886 - #44 int
INFO  21:15:25,886 - #44 x
INFO  21:15:25,886 - #36 [
INFO  21:15:25,886 - #37 ]
INFO  21:15:25,886 - #32 ,
INFO  21:15:25,886 - #44 y
INFO  21:15:25,886 - #36 [
INFO  21:15:25,887 - #37 ]
INFO  21:15:25,887 - #31 ;
INFO  21:15:25,887 - #39 }
INFO  21:15:25,887 - #6 const
INFO  21:15:25,887 - #44 int
INFO  21:15:25,887 - #44 pi
INFO  21:15:25,887 - #28 =
INFO  21:15:25,887 - #43 3
INFO  21:15:25,887 - #32 ,
INFO  21:15:25,887 - #44 e
INFO  21:15:25,887 - #28 =
INFO  21:15:25,888 - #43 2
INFO  21:15:25,888 - #31 ;
INFO  21:15:25,888 - #12 void
ERROR 21:15:25,888 - 
Sintaksna greska na liniji 6
ERROR 21:15:25,888 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 6
INFO  21:15:25,888 - GlobalVar = 2
INFO  21:15:25,888 - GlobalConst = 0
INFO  21:15:25,888 - LocalMainVar = 0
INFO  21:15:58,125 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:15:58,135 - #2 program
INFO  21:15:58,135 - #44 Program
INFO  21:15:58,135 - #4 class
INFO  21:15:58,135 - #44 A
INFO  21:15:58,135 - #38 {
INFO  21:15:58,136 - #44 int
INFO  21:15:58,136 - #44 x
INFO  21:15:58,136 - #36 [
INFO  21:15:58,136 - #37 ]
INFO  21:15:58,136 - #32 ,
INFO  21:15:58,136 - #44 y
INFO  21:15:58,136 - #36 [
INFO  21:15:58,136 - #37 ]
INFO  21:15:58,136 - #31 ;
INFO  21:15:58,136 - #39 }
INFO  21:15:58,136 - #6 const
INFO  21:15:58,136 - #44 int
INFO  21:15:58,137 - #44 pi
INFO  21:15:58,137 - #28 =
INFO  21:15:58,137 - #43 3
INFO  21:15:58,137 - #32 ,
INFO  21:15:58,137 - #44 e
INFO  21:15:58,137 - #28 =
INFO  21:15:58,137 - #43 2
INFO  21:15:58,137 - #31 ;
INFO  21:15:58,137 - #38 {
INFO  21:15:58,137 - #12 void
INFO  21:15:58,137 - #44 main
INFO  21:15:58,137 - #34 (
INFO  21:15:58,137 - #35 )
INFO  21:15:58,138 - #44 A
INFO  21:15:58,138 - #44 a
INFO  21:15:58,138 - #31 ;
INFO  21:15:58,138 - #44 C
INFO  21:15:58,138 - #44 c
INFO  21:15:58,138 - #31 ;
INFO  21:15:58,138 - #44 int
INFO  21:15:58,138 - #44 i
INFO  21:15:58,138 - #31 ;
INFO  21:15:58,138 - #44 int
INFO  21:15:58,138 - #44 x
INFO  21:15:58,138 - #36 [
INFO  21:15:58,138 - #37 ]
INFO  21:15:58,138 - #31 ;
INFO  21:15:58,139 - #38 {
INFO  21:15:58,139 - #44 a
INFO  21:15:58,139 - #28 =
INFO  21:15:58,139 - #8 new
INFO  21:15:58,139 - #44 A
INFO  21:15:58,139 - #31 ;
INFO  21:15:58,139 - #44 a
INFO  21:15:58,139 - #33 .
INFO  21:15:58,139 - #44 x
INFO  21:15:58,139 - #28 =
INFO  21:15:58,139 - #8 new
INFO  21:15:58,139 - #44 int
INFO  21:15:58,140 - #36 [
INFO  21:15:58,140 - #43 5
INFO  21:15:58,140 - #37 ]
INFO  21:15:58,140 - #31 ;
INFO  21:15:58,140 - #44 a
INFO  21:15:58,140 - #33 .
INFO  21:15:58,140 - #44 y
INFO  21:15:58,140 - #28 =
INFO  21:15:58,140 - #8 new
INFO  21:15:58,140 - #44 int
INFO  21:15:58,140 - #36 [
INFO  21:15:58,140 - #43 5
INFO  21:15:58,141 - #37 ]
INFO  21:15:58,141 - #31 ;
INFO  21:15:58,141 - #44 c
INFO  21:15:58,141 - #28 =
INFO  21:15:58,141 - #8 new
INFO  21:15:58,141 - #44 C
INFO  21:15:58,141 - #31 ;
INFO  21:15:58,141 - #44 c
INFO  21:15:58,141 - #33 .
INFO  21:15:58,141 - #44 theA
INFO  21:15:58,141 - #28 =
INFO  21:15:58,141 - #44 a
INFO  21:15:58,141 - #31 ;
INFO  21:15:58,142 - #44 c
INFO  21:15:58,142 - #33 .
INFO  21:15:58,142 - #44 x
INFO  21:15:58,142 - #28 =
INFO  21:15:58,142 - #8 new
INFO  21:15:58,142 - #44 int
INFO  21:15:58,142 - #36 [
INFO  21:15:58,142 - #43 5
INFO  21:15:58,142 - #37 ]
INFO  21:15:58,142 - #31 ;
INFO  21:15:58,142 - #44 x
INFO  21:15:58,143 - #28 =
INFO  21:15:58,143 - #8 new
INFO  21:15:58,143 - #44 int
INFO  21:15:58,143 - #36 [
INFO  21:15:58,143 - #43 3
INFO  21:15:58,143 - #37 ]
INFO  21:15:58,143 - #31 ;
INFO  21:15:58,143 - #44 i
INFO  21:15:58,143 - #28 =
INFO  21:15:58,143 - #43 0
INFO  21:15:58,143 - #31 ;
INFO  21:15:58,143 - #10 read
INFO  21:15:58,144 - #34 (
INFO  21:15:58,144 - #44 c
INFO  21:15:58,144 - #33 .
INFO  21:15:58,144 - #44 i
INFO  21:15:58,144 - #35 )
INFO  21:15:58,144 - #31 ;
INFO  21:15:58,144 - #13 while
INFO  21:15:58,144 - #34 (
INFO  21:15:58,144 - #44 i
INFO  21:15:58,144 - #24 <
INFO  21:15:58,144 - #43 5
INFO  21:15:58,144 - #35 )
INFO  21:15:58,144 - #38 {
INFO  21:15:58,145 - #10 read
INFO  21:15:58,145 - #34 (
INFO  21:15:58,145 - #44 c
INFO  21:15:58,145 - #33 .
INFO  21:15:58,145 - #44 x
INFO  21:15:58,145 - #36 [
INFO  21:15:58,145 - #44 i
INFO  21:15:58,145 - #37 ]
INFO  21:15:58,145 - #35 )
INFO  21:15:58,145 - #31 ;
INFO  21:15:58,145 - #10 read
INFO  21:15:58,146 - #34 (
INFO  21:15:58,146 - #44 c
INFO  21:15:58,146 - #33 .
INFO  21:15:58,146 - #44 theA
INFO  21:15:58,146 - #33 .
INFO  21:15:58,146 - #44 x
INFO  21:15:58,146 - #36 [
INFO  21:15:58,146 - #44 i
INFO  21:15:58,146 - #37 ]
INFO  21:15:58,146 - #35 )
INFO  21:15:58,147 - #31 ;
INFO  21:15:58,147 - #44 i
INFO  21:15:58,147 - #29 ++
INFO  21:15:58,147 - #31 ;
INFO  21:15:58,147 - #39 }
INFO  21:15:58,147 - #9 print
INFO  21:15:58,147 - #34 (
INFO  21:15:58,147 - #44 c
INFO  21:15:58,148 - #33 .
INFO  21:15:58,148 - #44 getValue
INFO  21:15:58,148 - #34 (
INFO  21:15:58,148 - #44 c
INFO  21:15:58,148 - #33 .
INFO  21:15:58,148 - #44 theA
INFO  21:15:58,148 - #33 .
INFO  21:15:58,148 - #44 x
INFO  21:15:58,148 - #36 [
INFO  21:15:58,148 - #43 0
INFO  21:15:58,149 - #37 ]
INFO  21:15:58,149 - #35 )
INFO  21:15:58,149 - #35 )
INFO  21:15:58,149 - #31 ;
INFO  21:15:58,149 - #39 }
INFO  21:15:58,149 - #39 }
INFO  21:15:58,149 - GlobalVar = 2
INFO  21:15:58,149 - GlobalConst = 0
INFO  21:15:58,149 - LocalMainVar = 4
INFO  21:18:06,019 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:18:06,034 - #2 program
INFO  21:18:06,034 - #44 Program
INFO  21:18:06,034 - #4 class
INFO  21:18:06,035 - #44 A
INFO  21:18:06,035 - #38 {
INFO  21:18:06,035 - #44 int
INFO  21:18:06,035 - #44 x
INFO  21:18:06,035 - #36 [
INFO  21:18:06,035 - #37 ]
INFO  21:18:06,035 - #32 ,
INFO  21:18:06,035 - #44 y
INFO  21:18:06,036 - #36 [
INFO  21:18:06,036 - #37 ]
INFO  21:18:06,036 - #31 ;
INFO  21:18:06,036 - #39 }
INFO  21:18:06,036 - #6 const
INFO  21:18:06,036 - #44 int
INFO  21:18:06,036 - #44 pi
INFO  21:18:06,036 - #28 =
INFO  21:18:06,036 - #43 3
INFO  21:18:06,037 - #32 ,
INFO  21:18:06,037 - #44 e
INFO  21:18:06,037 - #28 =
INFO  21:18:06,037 - #43 2
INFO  21:18:06,037 - #31 ;
INFO  21:18:06,037 - #4 class
INFO  21:18:06,037 - #44 B
INFO  21:18:06,037 - #14 extends
INFO  21:18:06,037 - #44 A
INFO  21:18:06,038 - #38 {
INFO  21:18:06,038 - #44 int
INFO  21:18:06,038 - #44 i
INFO  21:18:06,038 - #31 ;
INFO  21:18:06,038 - #44 int
INFO  21:18:06,038 - #44 x
INFO  21:18:06,038 - #36 [
INFO  21:18:06,038 - #37 ]
INFO  21:18:06,038 - #31 ;
INFO  21:18:06,039 - #38 {
INFO  21:18:06,039 - #44 int
INFO  21:18:06,039 - #44 getValue
INFO  21:18:06,039 - #34 (
INFO  21:18:06,039 - #44 int
INFO  21:18:06,039 - #44 a
INFO  21:18:06,039 - #35 )
INFO  21:18:06,039 - #44 int
INFO  21:18:06,040 - #44 b
INFO  21:18:06,040 - #31 ;
INFO  21:18:06,040 - #44 bool
INFO  21:18:06,040 - #44 c
INFO  21:18:06,040 - #31 ;
INFO  21:18:06,040 - #38 {
INFO  21:18:06,040 - #11 return
INFO  21:18:06,040 - #44 this
INFO  21:18:06,041 - #33 .
INFO  21:18:06,041 - #44 i
INFO  21:18:06,041 - #15 +
INFO  21:18:06,042 - #44 this
INFO  21:18:06,042 - #33 .
INFO  21:18:06,042 - #44 x
INFO  21:18:06,042 - #36 [
INFO  21:18:06,042 - #43 0
INFO  21:18:06,042 - #37 ]
INFO  21:18:06,042 - #15 +
INFO  21:18:06,042 - #44 a
INFO  21:18:06,043 - #31 ;
INFO  21:18:06,043 - #39 }
INFO  21:18:06,043 - #39 }
INFO  21:18:06,043 - #39 }
INFO  21:18:06,043 - #4 class
INFO  21:18:06,043 - #44 C
INFO  21:18:06,043 - #14 extends
INFO  21:18:06,043 - #44 B
INFO  21:18:06,044 - #38 {
INFO  21:18:06,044 - #44 A
INFO  21:18:06,044 - #44 theA
INFO  21:18:06,044 - #31 ;
INFO  21:18:06,044 - #44 string
INFO  21:18:06,044 - #44 a
INFO  21:18:06,044 - #31 ;
INFO  21:18:06,044 - #39 }
INFO  21:18:06,044 - #38 {
INFO  21:18:06,045 - #12 void
INFO  21:18:06,045 - #44 main
INFO  21:18:06,045 - #34 (
INFO  21:18:06,045 - #35 )
INFO  21:18:06,045 - #44 A
INFO  21:18:06,045 - #44 a
INFO  21:18:06,045 - #31 ;
INFO  21:18:06,045 - #44 C
INFO  21:18:06,045 - #44 c
INFO  21:18:06,045 - #31 ;
INFO  21:18:06,045 - #44 int
INFO  21:18:06,045 - #44 i
INFO  21:18:06,045 - #31 ;
INFO  21:18:06,046 - #44 int
INFO  21:18:06,046 - #44 x
INFO  21:18:06,046 - #36 [
INFO  21:18:06,046 - #37 ]
INFO  21:18:06,046 - #31 ;
INFO  21:18:06,046 - #38 {
INFO  21:18:06,046 - #44 a
INFO  21:18:06,046 - #28 =
INFO  21:18:06,046 - #8 new
INFO  21:18:06,046 - #44 A
INFO  21:18:06,046 - #31 ;
INFO  21:18:06,046 - #44 a
INFO  21:18:06,047 - #33 .
INFO  21:18:06,047 - #44 x
INFO  21:18:06,047 - #28 =
INFO  21:18:06,047 - #8 new
INFO  21:18:06,047 - #44 int
INFO  21:18:06,047 - #36 [
INFO  21:18:06,047 - #43 5
INFO  21:18:06,047 - #37 ]
INFO  21:18:06,047 - #31 ;
INFO  21:18:06,047 - #44 a
INFO  21:18:06,047 - #33 .
INFO  21:18:06,048 - #44 y
INFO  21:18:06,048 - #28 =
INFO  21:18:06,048 - #8 new
INFO  21:18:06,048 - #44 int
INFO  21:18:06,048 - #36 [
INFO  21:18:06,048 - #43 5
INFO  21:18:06,048 - #37 ]
INFO  21:18:06,048 - #31 ;
INFO  21:18:06,048 - #44 c
INFO  21:18:06,048 - #28 =
INFO  21:18:06,049 - #8 new
INFO  21:18:06,049 - #44 C
INFO  21:18:06,049 - #31 ;
INFO  21:18:06,049 - #44 c
INFO  21:18:06,049 - #33 .
INFO  21:18:06,049 - #44 theA
INFO  21:18:06,049 - #28 =
INFO  21:18:06,049 - #44 a
INFO  21:18:06,049 - #31 ;
INFO  21:18:06,049 - #44 c
INFO  21:18:06,050 - #33 .
INFO  21:18:06,050 - #44 x
INFO  21:18:06,050 - #28 =
INFO  21:18:06,050 - #8 new
INFO  21:18:06,050 - #44 int
INFO  21:18:06,050 - #36 [
INFO  21:18:06,050 - #43 5
INFO  21:18:06,050 - #37 ]
INFO  21:18:06,050 - #31 ;
INFO  21:18:06,050 - #44 x
INFO  21:18:06,051 - #28 =
INFO  21:18:06,051 - #8 new
INFO  21:18:06,051 - #44 int
INFO  21:18:06,051 - #36 [
INFO  21:18:06,051 - #43 3
INFO  21:18:06,051 - #37 ]
INFO  21:18:06,051 - #31 ;
INFO  21:18:06,051 - #44 i
INFO  21:18:06,052 - #28 =
INFO  21:18:06,052 - #43 0
INFO  21:18:06,052 - #31 ;
INFO  21:18:06,052 - #10 read
INFO  21:18:06,052 - #34 (
INFO  21:18:06,052 - #44 c
INFO  21:18:06,052 - #33 .
INFO  21:18:06,052 - #44 i
INFO  21:18:06,052 - #35 )
INFO  21:18:06,053 - #31 ;
INFO  21:18:06,053 - #13 while
INFO  21:18:06,053 - #34 (
INFO  21:18:06,053 - #44 i
INFO  21:18:06,053 - #24 <
INFO  21:18:06,053 - #43 5
INFO  21:18:06,053 - #35 )
INFO  21:18:06,053 - #38 {
INFO  21:18:06,054 - #10 read
INFO  21:18:06,054 - #34 (
INFO  21:18:06,054 - #44 c
INFO  21:18:06,054 - #33 .
INFO  21:18:06,054 - #44 x
INFO  21:18:06,054 - #36 [
INFO  21:18:06,054 - #44 i
INFO  21:18:06,054 - #37 ]
INFO  21:18:06,054 - #35 )
INFO  21:18:06,055 - #31 ;
INFO  21:18:06,055 - #10 read
INFO  21:18:06,055 - #34 (
INFO  21:18:06,055 - #44 c
INFO  21:18:06,055 - #33 .
INFO  21:18:06,055 - #44 theA
INFO  21:18:06,055 - #33 .
INFO  21:18:06,055 - #44 x
INFO  21:18:06,055 - #36 [
INFO  21:18:06,056 - #44 i
INFO  21:18:06,056 - #37 ]
INFO  21:18:06,056 - #35 )
INFO  21:18:06,056 - #31 ;
INFO  21:18:06,056 - #44 i
INFO  21:18:06,056 - #29 ++
INFO  21:18:06,056 - #31 ;
INFO  21:18:06,056 - #39 }
INFO  21:18:06,056 - #9 print
INFO  21:18:06,056 - #34 (
INFO  21:18:06,057 - #44 c
INFO  21:18:06,057 - #33 .
INFO  21:18:06,057 - #44 getValue
INFO  21:18:06,057 - #34 (
INFO  21:18:06,057 - #44 c
INFO  21:18:06,057 - #33 .
INFO  21:18:06,057 - #44 theA
INFO  21:18:06,057 - #33 .
INFO  21:18:06,057 - #44 x
INFO  21:18:06,057 - #36 [
INFO  21:18:06,058 - #43 0
INFO  21:18:06,058 - #37 ]
INFO  21:18:06,058 - #35 )
INFO  21:18:06,058 - #35 )
INFO  21:18:06,058 - #31 ;
INFO  21:18:06,058 - #39 }
INFO  21:18:06,058 - #39 }
INFO  21:18:06,059 - GlobalVar = 2
INFO  21:18:06,059 - GlobalConst = 0
INFO  21:18:06,059 - LocalMainVar = 4
INFO  21:18:06,059 - GlobalArray = 0
INFO  21:18:27,603 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:18:27,619 - #2 program
INFO  21:18:27,619 - #44 Program
INFO  21:18:27,619 - #4 class
INFO  21:18:27,619 - #44 A
INFO  21:18:27,619 - #38 {
INFO  21:18:27,620 - #44 int
INFO  21:18:27,620 - #44 x
INFO  21:18:27,620 - #36 [
INFO  21:18:27,620 - #37 ]
INFO  21:18:27,620 - #32 ,
INFO  21:18:27,620 - #44 y
INFO  21:18:27,620 - #36 [
INFO  21:18:27,621 - #37 ]
INFO  21:18:27,621 - #31 ;
INFO  21:18:27,621 - #39 }
INFO  21:18:27,621 - #6 const
INFO  21:18:27,621 - #44 int
INFO  21:18:27,621 - #44 pi
INFO  21:18:27,621 - #28 =
INFO  21:18:27,621 - #43 3
INFO  21:18:27,622 - #32 ,
INFO  21:18:27,622 - #44 e
INFO  21:18:27,622 - #28 =
INFO  21:18:27,622 - #43 2
INFO  21:18:27,622 - #31 ;
INFO  21:18:27,622 - #44 int
INFO  21:18:27,622 - #44 a
INFO  21:18:27,622 - #36 [
INFO  21:18:27,622 - #37 ]
INFO  21:18:27,623 - #32 ,
INFO  21:18:27,623 - #44 b
INFO  21:18:27,623 - #36 [
INFO  21:18:27,623 - #37 ]
INFO  21:18:27,623 - #31 ;
INFO  21:18:27,623 - #44 char
INFO  21:18:27,623 - #44 t
INFO  21:18:27,623 - #36 [
INFO  21:18:27,623 - #37 ]
INFO  21:18:27,623 - #31 ;
INFO  21:18:27,624 - #4 class
INFO  21:18:27,624 - #44 B
INFO  21:18:27,624 - #14 extends
INFO  21:18:27,624 - #44 A
INFO  21:18:27,624 - #38 {
INFO  21:18:27,624 - #44 int
INFO  21:18:27,624 - #44 i
INFO  21:18:27,624 - #31 ;
INFO  21:18:27,624 - #44 int
INFO  21:18:27,624 - #44 x
INFO  21:18:27,625 - #36 [
INFO  21:18:27,625 - #37 ]
INFO  21:18:27,625 - #31 ;
INFO  21:18:27,625 - #38 {
INFO  21:18:27,625 - #44 int
INFO  21:18:27,625 - #44 getValue
INFO  21:18:27,625 - #34 (
INFO  21:18:27,625 - #44 int
INFO  21:18:27,625 - #44 a
INFO  21:18:27,626 - #35 )
INFO  21:18:27,626 - #44 int
INFO  21:18:27,626 - #44 b
INFO  21:18:27,626 - #31 ;
INFO  21:18:27,626 - #44 bool
INFO  21:18:27,627 - #44 c
INFO  21:18:27,627 - #31 ;
INFO  21:18:27,627 - #38 {
INFO  21:18:27,627 - #11 return
INFO  21:18:27,627 - #44 this
INFO  21:18:27,627 - #33 .
INFO  21:18:27,627 - #44 i
INFO  21:18:27,627 - #15 +
INFO  21:18:27,628 - #44 this
INFO  21:18:27,628 - #33 .
INFO  21:18:27,628 - #44 x
INFO  21:18:27,628 - #36 [
INFO  21:18:27,628 - #43 0
INFO  21:18:27,628 - #37 ]
INFO  21:18:27,628 - #15 +
INFO  21:18:27,628 - #44 a
INFO  21:18:27,628 - #31 ;
INFO  21:18:27,629 - #39 }
INFO  21:18:27,629 - #39 }
INFO  21:18:27,629 - #39 }
INFO  21:18:27,629 - #4 class
INFO  21:18:27,629 - #44 C
INFO  21:18:27,629 - #14 extends
INFO  21:18:27,629 - #44 B
INFO  21:18:27,629 - #38 {
INFO  21:18:27,629 - #44 A
INFO  21:18:27,629 - #44 theA
INFO  21:18:27,630 - #31 ;
INFO  21:18:27,630 - #44 string
INFO  21:18:27,630 - #44 a
INFO  21:18:27,630 - #31 ;
INFO  21:18:27,630 - #39 }
INFO  21:18:27,630 - #38 {
INFO  21:18:27,630 - #12 void
INFO  21:18:27,630 - #44 main
INFO  21:18:27,630 - #34 (
INFO  21:18:27,631 - #35 )
INFO  21:18:27,631 - #44 A
INFO  21:18:27,631 - #44 a
INFO  21:18:27,631 - #31 ;
INFO  21:18:27,631 - #44 C
INFO  21:18:27,631 - #44 c
INFO  21:18:27,631 - #31 ;
INFO  21:18:27,631 - #44 int
INFO  21:18:27,631 - #44 i
INFO  21:18:27,631 - #31 ;
INFO  21:18:27,632 - #44 int
INFO  21:18:27,632 - #44 x
INFO  21:18:27,632 - #36 [
INFO  21:18:27,632 - #37 ]
INFO  21:18:27,632 - #31 ;
INFO  21:18:27,632 - #38 {
INFO  21:18:27,632 - #44 a
INFO  21:18:27,632 - #28 =
INFO  21:18:27,632 - #8 new
INFO  21:18:27,633 - #44 A
INFO  21:18:27,633 - #31 ;
INFO  21:18:27,633 - #44 a
INFO  21:18:27,633 - #33 .
INFO  21:18:27,633 - #44 x
INFO  21:18:27,633 - #28 =
INFO  21:18:27,633 - #8 new
INFO  21:18:27,634 - #44 int
INFO  21:18:27,634 - #36 [
INFO  21:18:27,634 - #43 5
INFO  21:18:27,634 - #37 ]
INFO  21:18:27,634 - #31 ;
INFO  21:18:27,635 - #44 a
INFO  21:18:27,635 - #33 .
INFO  21:18:27,635 - #44 y
INFO  21:18:27,635 - #28 =
INFO  21:18:27,635 - #8 new
INFO  21:18:27,635 - #44 int
INFO  21:18:27,635 - #36 [
INFO  21:18:27,635 - #43 5
INFO  21:18:27,635 - #37 ]
INFO  21:18:27,636 - #31 ;
INFO  21:18:27,636 - #44 c
INFO  21:18:27,636 - #28 =
INFO  21:18:27,636 - #8 new
INFO  21:18:27,636 - #44 C
INFO  21:18:27,636 - #31 ;
INFO  21:18:27,636 - #44 c
INFO  21:18:27,636 - #33 .
INFO  21:18:27,636 - #44 theA
INFO  21:18:27,637 - #28 =
INFO  21:18:27,637 - #44 a
INFO  21:18:27,637 - #31 ;
INFO  21:18:27,637 - #44 c
INFO  21:18:27,637 - #33 .
INFO  21:18:27,637 - #44 x
INFO  21:18:27,637 - #28 =
INFO  21:18:27,637 - #8 new
INFO  21:18:27,638 - #44 int
INFO  21:18:27,638 - #36 [
INFO  21:18:27,638 - #43 5
INFO  21:18:27,638 - #37 ]
INFO  21:18:27,638 - #31 ;
INFO  21:18:27,638 - #44 x
INFO  21:18:27,638 - #28 =
INFO  21:18:27,639 - #8 new
INFO  21:18:27,639 - #44 int
INFO  21:18:27,639 - #36 [
INFO  21:18:27,639 - #43 3
INFO  21:18:27,639 - #37 ]
INFO  21:18:27,639 - #31 ;
INFO  21:18:27,639 - #44 i
INFO  21:18:27,639 - #28 =
INFO  21:18:27,639 - #43 0
INFO  21:18:27,640 - #31 ;
INFO  21:18:27,640 - #10 read
INFO  21:18:27,640 - #34 (
INFO  21:18:27,640 - #44 c
INFO  21:18:27,640 - #33 .
INFO  21:18:27,640 - #44 i
INFO  21:18:27,640 - #35 )
INFO  21:18:27,640 - #31 ;
INFO  21:18:27,640 - #13 while
INFO  21:18:27,640 - #34 (
INFO  21:18:27,641 - #44 i
INFO  21:18:27,641 - #24 <
INFO  21:18:27,641 - #43 5
INFO  21:18:27,641 - #35 )
INFO  21:18:27,641 - #38 {
INFO  21:18:27,641 - #10 read
INFO  21:18:27,641 - #34 (
INFO  21:18:27,641 - #44 c
INFO  21:18:27,641 - #33 .
INFO  21:18:27,641 - #44 x
INFO  21:18:27,642 - #36 [
INFO  21:18:27,642 - #44 i
INFO  21:18:27,642 - #37 ]
INFO  21:18:27,642 - #35 )
INFO  21:18:27,642 - #31 ;
INFO  21:18:27,642 - #10 read
INFO  21:18:27,642 - #34 (
INFO  21:18:27,642 - #44 c
INFO  21:18:27,642 - #33 .
INFO  21:18:27,642 - #44 theA
INFO  21:18:27,643 - #33 .
INFO  21:18:27,643 - #44 x
INFO  21:18:27,643 - #36 [
INFO  21:18:27,643 - #44 i
INFO  21:18:27,643 - #37 ]
INFO  21:18:27,643 - #35 )
INFO  21:18:27,643 - #31 ;
INFO  21:18:27,643 - #44 i
INFO  21:18:27,643 - #29 ++
INFO  21:18:27,643 - #31 ;
INFO  21:18:27,643 - #39 }
INFO  21:18:27,644 - #9 print
INFO  21:18:27,644 - #34 (
INFO  21:18:27,644 - #44 c
INFO  21:18:27,644 - #33 .
INFO  21:18:27,644 - #44 getValue
INFO  21:18:27,644 - #34 (
INFO  21:18:27,644 - #44 c
INFO  21:18:27,644 - #33 .
INFO  21:18:27,644 - #44 theA
INFO  21:18:27,645 - #33 .
INFO  21:18:27,645 - #44 x
INFO  21:18:27,645 - #36 [
INFO  21:18:27,645 - #43 0
INFO  21:18:27,645 - #37 ]
INFO  21:18:27,645 - #35 )
INFO  21:18:27,645 - #35 )
INFO  21:18:27,645 - #31 ;
INFO  21:18:27,646 - #39 }
INFO  21:18:27,646 - #39 }
INFO  21:18:27,646 - GlobalVar = 2
INFO  21:18:27,646 - GlobalConst = 0
INFO  21:18:27,646 - LocalMainVar = 4
INFO  21:18:27,646 - GlobalArray = 0
INFO  21:18:44,844 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:18:44,854 - #2 program
INFO  21:18:44,854 - #44 Program
INFO  21:18:44,854 - #4 class
INFO  21:18:44,854 - #44 A
INFO  21:18:44,854 - #38 {
INFO  21:18:44,855 - #44 int
INFO  21:18:44,855 - #44 x
INFO  21:18:44,855 - #36 [
INFO  21:18:44,855 - #37 ]
INFO  21:18:44,855 - #32 ,
INFO  21:18:44,855 - #44 y
INFO  21:18:44,855 - #36 [
INFO  21:18:44,855 - #37 ]
INFO  21:18:44,856 - #31 ;
INFO  21:18:44,856 - #39 }
INFO  21:18:44,856 - #6 const
INFO  21:18:44,856 - #44 int
INFO  21:18:44,856 - #44 pi
INFO  21:18:44,856 - #28 =
INFO  21:18:44,856 - #43 3
INFO  21:18:44,856 - #32 ,
INFO  21:18:44,856 - #44 e
INFO  21:18:44,856 - #28 =
INFO  21:18:44,857 - #43 2
INFO  21:18:44,857 - #31 ;
INFO  21:18:44,857 - #44 int
INFO  21:18:44,857 - #44 a
INFO  21:18:44,857 - #36 [
INFO  21:18:44,857 - #37 ]
INFO  21:18:44,857 - #32 ,
INFO  21:18:44,857 - #44 b
INFO  21:18:44,857 - #36 [
INFO  21:18:44,857 - #37 ]
INFO  21:18:44,857 - #31 ;
INFO  21:18:44,858 - #44 char
INFO  21:18:44,858 - #44 t
INFO  21:18:44,858 - #36 [
INFO  21:18:44,858 - #37 ]
INFO  21:18:44,858 - #31 ;
INFO  21:18:44,858 - #4 class
INFO  21:18:44,858 - #44 B
INFO  21:18:44,858 - #14 extends
INFO  21:18:44,858 - #44 A
INFO  21:18:44,858 - #38 {
INFO  21:18:44,858 - #44 int
INFO  21:18:44,859 - #44 i
INFO  21:18:44,859 - #31 ;
INFO  21:18:44,859 - #44 int
INFO  21:18:44,859 - #44 x
INFO  21:18:44,859 - #36 [
INFO  21:18:44,859 - #37 ]
INFO  21:18:44,859 - #31 ;
INFO  21:18:44,859 - #38 {
INFO  21:18:44,859 - #44 int
INFO  21:18:44,859 - #44 getValue
INFO  21:18:44,860 - #34 (
INFO  21:18:44,860 - #44 int
INFO  21:18:44,860 - #44 a
INFO  21:18:44,860 - #35 )
INFO  21:18:44,860 - #44 int
INFO  21:18:44,860 - #44 b
INFO  21:18:44,860 - #31 ;
INFO  21:18:44,860 - #44 bool
INFO  21:18:44,860 - #44 c
INFO  21:18:44,860 - #31 ;
INFO  21:18:44,861 - #38 {
INFO  21:18:44,861 - #11 return
INFO  21:18:44,861 - #44 this
INFO  21:18:44,861 - #33 .
INFO  21:18:44,861 - #44 i
INFO  21:18:44,861 - #15 +
INFO  21:18:44,861 - #44 this
INFO  21:18:44,861 - #33 .
INFO  21:18:44,861 - #44 x
INFO  21:18:44,861 - #36 [
INFO  21:18:44,862 - #43 0
INFO  21:18:44,862 - #37 ]
INFO  21:18:44,862 - #15 +
INFO  21:18:44,862 - #44 a
INFO  21:18:44,862 - #31 ;
INFO  21:18:44,862 - #39 }
INFO  21:18:44,862 - #39 }
INFO  21:18:44,862 - #39 }
INFO  21:18:44,862 - #4 class
INFO  21:18:44,863 - #44 C
INFO  21:18:44,863 - #14 extends
INFO  21:18:44,863 - #44 B
INFO  21:18:44,863 - #38 {
INFO  21:18:44,863 - #44 A
INFO  21:18:44,863 - #44 theA
INFO  21:18:44,863 - #31 ;
INFO  21:18:44,863 - #44 string
INFO  21:18:44,863 - #44 a
INFO  21:18:44,863 - #31 ;
INFO  21:18:44,864 - #39 }
INFO  21:18:44,864 - #38 {
INFO  21:18:44,864 - #12 void
INFO  21:18:44,864 - #44 main
INFO  21:18:44,864 - #34 (
INFO  21:18:44,864 - #35 )
INFO  21:18:44,864 - #44 A
INFO  21:18:44,864 - #44 a
INFO  21:18:44,864 - #31 ;
INFO  21:18:44,864 - #44 C
INFO  21:18:44,864 - #44 c
INFO  21:18:44,865 - #31 ;
INFO  21:18:44,865 - #44 int
INFO  21:18:44,865 - #44 i
INFO  21:18:44,865 - #31 ;
INFO  21:18:44,865 - #44 int
INFO  21:18:44,865 - #44 x
INFO  21:18:44,865 - #36 [
INFO  21:18:44,865 - #37 ]
INFO  21:18:44,865 - #31 ;
INFO  21:18:44,865 - #38 {
INFO  21:18:44,866 - #44 a
INFO  21:18:44,866 - #28 =
INFO  21:18:44,866 - #8 new
INFO  21:18:44,866 - #44 A
INFO  21:18:44,866 - #31 ;
INFO  21:18:44,866 - #44 a
INFO  21:18:44,866 - #33 .
INFO  21:18:44,866 - #44 x
INFO  21:18:44,866 - #28 =
INFO  21:18:44,867 - #8 new
INFO  21:18:44,867 - #44 int
INFO  21:18:44,867 - #36 [
INFO  21:18:44,867 - #43 5
INFO  21:18:44,867 - #37 ]
INFO  21:18:44,867 - #31 ;
INFO  21:18:44,867 - #44 a
INFO  21:18:44,867 - #33 .
INFO  21:18:44,867 - #44 y
INFO  21:18:44,868 - #28 =
INFO  21:18:44,868 - #8 new
INFO  21:18:44,868 - #44 int
INFO  21:18:44,868 - #36 [
INFO  21:18:44,868 - #43 5
INFO  21:18:44,868 - #37 ]
INFO  21:18:44,868 - #31 ;
INFO  21:18:44,868 - #44 c
INFO  21:18:44,868 - #28 =
INFO  21:18:44,869 - #8 new
INFO  21:18:44,869 - #44 C
INFO  21:18:44,869 - #31 ;
INFO  21:18:44,869 - #44 c
INFO  21:18:44,869 - #33 .
INFO  21:18:44,869 - #44 theA
INFO  21:18:44,869 - #28 =
INFO  21:18:44,869 - #44 a
INFO  21:18:44,869 - #31 ;
INFO  21:18:44,869 - #44 c
INFO  21:18:44,870 - #33 .
INFO  21:18:44,870 - #44 x
INFO  21:18:44,870 - #28 =
INFO  21:18:44,870 - #8 new
INFO  21:18:44,870 - #44 int
INFO  21:18:44,870 - #36 [
INFO  21:18:44,870 - #43 5
INFO  21:18:44,870 - #37 ]
INFO  21:18:44,870 - #31 ;
INFO  21:18:44,870 - #44 x
INFO  21:18:44,871 - #28 =
INFO  21:18:44,871 - #8 new
INFO  21:18:44,871 - #44 int
INFO  21:18:44,871 - #36 [
INFO  21:18:44,871 - #43 3
INFO  21:18:44,871 - #37 ]
INFO  21:18:44,871 - #31 ;
INFO  21:18:44,871 - #44 i
INFO  21:18:44,871 - #28 =
INFO  21:18:44,872 - #43 0
INFO  21:18:44,872 - #31 ;
INFO  21:18:44,872 - #10 read
INFO  21:18:44,872 - #34 (
INFO  21:18:44,872 - #44 c
INFO  21:18:44,872 - #33 .
INFO  21:18:44,872 - #44 i
INFO  21:18:44,872 - #35 )
INFO  21:18:44,872 - #31 ;
INFO  21:18:44,873 - #13 while
INFO  21:18:44,873 - #34 (
INFO  21:18:44,873 - #44 i
INFO  21:18:44,873 - #24 <
INFO  21:18:44,873 - #43 5
INFO  21:18:44,873 - #35 )
INFO  21:18:44,873 - #38 {
INFO  21:18:44,873 - #10 read
INFO  21:18:44,874 - #34 (
INFO  21:18:44,874 - #44 c
INFO  21:18:44,874 - #33 .
INFO  21:18:44,874 - #44 x
INFO  21:18:44,874 - #36 [
INFO  21:18:44,874 - #44 i
INFO  21:18:44,874 - #37 ]
INFO  21:18:44,874 - #35 )
INFO  21:18:44,874 - #31 ;
INFO  21:18:44,875 - #10 read
INFO  21:18:44,875 - #34 (
INFO  21:18:44,875 - #44 c
INFO  21:18:44,875 - #33 .
INFO  21:18:44,875 - #44 theA
INFO  21:18:44,875 - #33 .
INFO  21:18:44,875 - #44 x
INFO  21:18:44,875 - #36 [
INFO  21:18:44,875 - #44 i
INFO  21:18:44,875 - #37 ]
INFO  21:18:44,875 - #35 )
INFO  21:18:44,876 - #31 ;
INFO  21:18:44,876 - #44 i
INFO  21:18:44,876 - #29 ++
INFO  21:18:44,876 - #31 ;
INFO  21:18:44,876 - #39 }
INFO  21:18:44,876 - #9 print
INFO  21:18:44,876 - #34 (
INFO  21:18:44,876 - #44 c
INFO  21:18:44,876 - #33 .
INFO  21:18:44,876 - #44 getValue
INFO  21:18:44,877 - #34 (
INFO  21:18:44,877 - #44 c
INFO  21:18:44,877 - #33 .
INFO  21:18:44,877 - #44 theA
INFO  21:18:44,877 - #33 .
INFO  21:18:44,877 - #44 x
INFO  21:18:44,877 - #36 [
INFO  21:18:44,877 - #43 0
INFO  21:18:44,877 - #37 ]
INFO  21:18:44,877 - #35 )
INFO  21:18:44,878 - #35 )
INFO  21:18:44,878 - #31 ;
INFO  21:18:44,878 - #39 }
INFO  21:18:44,878 - #39 }
INFO  21:18:44,878 - GlobalVar = 2
INFO  21:18:44,878 - GlobalConst = 0
INFO  21:18:44,878 - LocalMainVar = 4
INFO  21:18:44,878 - GlobalArray = 0
INFO  21:19:39,676 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:19:39,685 - #2 program
INFO  21:19:39,685 - #44 Program
INFO  21:19:39,685 - #4 class
INFO  21:19:39,685 - #44 A
INFO  21:19:39,685 - #38 {
INFO  21:19:39,685 - #44 int
INFO  21:19:39,685 - #44 x
INFO  21:19:39,685 - #36 [
INFO  21:19:39,686 - #37 ]
INFO  21:19:39,686 - #32 ,
INFO  21:19:39,686 - #44 y
INFO  21:19:39,686 - #36 [
INFO  21:19:39,686 - #37 ]
INFO  21:19:39,686 - #31 ;
INFO  21:19:39,686 - #39 }
INFO  21:19:39,686 - #6 const
INFO  21:19:39,686 - #44 int
INFO  21:19:39,686 - #44 pi
INFO  21:19:39,686 - #28 =
INFO  21:19:39,686 - #43 3
INFO  21:19:39,686 - #32 ,
INFO  21:19:39,687 - #44 e
INFO  21:19:39,687 - #28 =
INFO  21:19:39,687 - #43 2
INFO  21:19:39,687 - #31 ;
INFO  21:19:39,687 - #44 int
INFO  21:19:39,687 - #44 a
INFO  21:19:39,687 - #32 ,
INFO  21:19:39,687 - #44 b
INFO  21:19:39,687 - #31 ;
INFO  21:19:39,687 - #44 char
INFO  21:19:39,687 - #44 t
INFO  21:19:39,687 - #31 ;
INFO  21:19:39,687 - #4 class
INFO  21:19:39,687 - #44 B
INFO  21:19:39,688 - #14 extends
INFO  21:19:39,688 - #44 A
INFO  21:19:39,688 - #38 {
INFO  21:19:39,688 - #44 int
INFO  21:19:39,688 - #44 i
INFO  21:19:39,688 - #31 ;
INFO  21:19:39,688 - #44 int
INFO  21:19:39,688 - #44 x
INFO  21:19:39,688 - #36 [
INFO  21:19:39,688 - #37 ]
INFO  21:19:39,688 - #31 ;
INFO  21:19:39,688 - #38 {
INFO  21:19:39,688 - #44 int
INFO  21:19:39,688 - #44 getValue
INFO  21:19:39,689 - #34 (
INFO  21:19:39,689 - #44 int
INFO  21:19:39,689 - #44 a
INFO  21:19:39,689 - #35 )
INFO  21:19:39,689 - #44 int
INFO  21:19:39,689 - #44 b
INFO  21:19:39,689 - #31 ;
INFO  21:19:39,689 - #44 bool
INFO  21:19:39,689 - #44 c
INFO  21:19:39,689 - #31 ;
INFO  21:19:39,689 - #38 {
INFO  21:19:39,689 - #11 return
INFO  21:19:39,690 - #44 this
INFO  21:19:39,690 - #33 .
INFO  21:19:39,690 - #44 i
INFO  21:19:39,690 - #15 +
INFO  21:19:39,690 - #44 this
INFO  21:19:39,690 - #33 .
INFO  21:19:39,690 - #44 x
INFO  21:19:39,690 - #36 [
INFO  21:19:39,690 - #43 0
INFO  21:19:39,690 - #37 ]
INFO  21:19:39,690 - #15 +
INFO  21:19:39,690 - #44 a
INFO  21:19:39,691 - #31 ;
INFO  21:19:39,691 - #39 }
INFO  21:19:39,691 - #39 }
INFO  21:19:39,691 - #39 }
INFO  21:19:39,691 - #4 class
INFO  21:19:39,691 - #44 C
INFO  21:19:39,691 - #14 extends
INFO  21:19:39,691 - #44 B
INFO  21:19:39,691 - #38 {
INFO  21:19:39,691 - #44 A
INFO  21:19:39,691 - #44 theA
INFO  21:19:39,691 - #31 ;
INFO  21:19:39,691 - #44 string
INFO  21:19:39,692 - #44 a
INFO  21:19:39,692 - #31 ;
INFO  21:19:39,692 - #39 }
INFO  21:19:39,692 - #38 {
INFO  21:19:39,692 - #12 void
INFO  21:19:39,692 - #44 main
INFO  21:19:39,692 - #34 (
INFO  21:19:39,692 - #35 )
INFO  21:19:39,692 - #44 A
INFO  21:19:39,692 - #44 a
INFO  21:19:39,692 - #31 ;
INFO  21:19:39,692 - #44 C
INFO  21:19:39,692 - #44 c
INFO  21:19:39,692 - #31 ;
INFO  21:19:39,693 - #44 int
INFO  21:19:39,693 - #44 i
INFO  21:19:39,693 - #31 ;
INFO  21:19:39,693 - #44 int
INFO  21:19:39,693 - #44 x
INFO  21:19:39,693 - #36 [
INFO  21:19:39,693 - #37 ]
INFO  21:19:39,693 - #31 ;
INFO  21:19:39,693 - #38 {
INFO  21:19:39,693 - #44 a
INFO  21:19:39,693 - #28 =
INFO  21:19:39,693 - #8 new
INFO  21:19:39,694 - #44 A
INFO  21:19:39,694 - #31 ;
INFO  21:19:39,694 - #44 a
INFO  21:19:39,694 - #33 .
INFO  21:19:39,694 - #44 x
INFO  21:19:39,694 - #28 =
INFO  21:19:39,694 - #8 new
INFO  21:19:39,694 - #44 int
INFO  21:19:39,694 - #36 [
INFO  21:19:39,694 - #43 5
INFO  21:19:39,694 - #37 ]
INFO  21:19:39,694 - #31 ;
INFO  21:19:39,695 - #44 a
INFO  21:19:39,695 - #33 .
INFO  21:19:39,695 - #44 y
INFO  21:19:39,695 - #28 =
INFO  21:19:39,695 - #8 new
INFO  21:19:39,695 - #44 int
INFO  21:19:39,695 - #36 [
INFO  21:19:39,695 - #43 5
INFO  21:19:39,695 - #37 ]
INFO  21:19:39,695 - #31 ;
INFO  21:19:39,695 - #44 c
INFO  21:19:39,695 - #28 =
INFO  21:19:39,696 - #8 new
INFO  21:19:39,696 - #44 C
INFO  21:19:39,696 - #31 ;
INFO  21:19:39,696 - #44 c
INFO  21:19:39,696 - #33 .
INFO  21:19:39,696 - #44 theA
INFO  21:19:39,696 - #28 =
INFO  21:19:39,696 - #44 a
INFO  21:19:39,696 - #31 ;
INFO  21:19:39,697 - #44 c
INFO  21:19:39,697 - #33 .
INFO  21:19:39,697 - #44 x
INFO  21:19:39,697 - #28 =
INFO  21:19:39,697 - #8 new
INFO  21:19:39,697 - #44 int
INFO  21:19:39,697 - #36 [
INFO  21:19:39,697 - #43 5
INFO  21:19:39,697 - #37 ]
INFO  21:19:39,697 - #31 ;
INFO  21:19:39,698 - #44 x
INFO  21:19:39,698 - #28 =
INFO  21:19:39,698 - #8 new
INFO  21:19:39,698 - #44 int
INFO  21:19:39,698 - #36 [
INFO  21:19:39,698 - #43 3
INFO  21:19:39,698 - #37 ]
INFO  21:19:39,698 - #31 ;
INFO  21:19:39,698 - #44 i
INFO  21:19:39,698 - #28 =
INFO  21:19:39,699 - #43 0
INFO  21:19:39,699 - #31 ;
INFO  21:19:39,699 - #10 read
INFO  21:19:39,699 - #34 (
INFO  21:19:39,699 - #44 c
INFO  21:19:39,699 - #33 .
INFO  21:19:39,699 - #44 i
INFO  21:19:39,699 - #35 )
INFO  21:19:39,699 - #31 ;
INFO  21:19:39,700 - #13 while
INFO  21:19:39,700 - #34 (
INFO  21:19:39,700 - #44 i
INFO  21:19:39,700 - #24 <
INFO  21:19:39,700 - #43 5
INFO  21:19:39,700 - #35 )
INFO  21:19:39,700 - #38 {
INFO  21:19:39,700 - #10 read
INFO  21:19:39,701 - #34 (
INFO  21:19:39,701 - #44 c
INFO  21:19:39,701 - #33 .
INFO  21:19:39,701 - #44 x
INFO  21:19:39,701 - #36 [
INFO  21:19:39,701 - #44 i
INFO  21:19:39,701 - #37 ]
INFO  21:19:39,701 - #35 )
INFO  21:19:39,701 - #31 ;
INFO  21:19:39,702 - #10 read
INFO  21:19:39,702 - #34 (
INFO  21:19:39,702 - #44 c
INFO  21:19:39,702 - #33 .
INFO  21:19:39,702 - #44 theA
INFO  21:19:39,702 - #33 .
INFO  21:19:39,702 - #44 x
INFO  21:19:39,702 - #36 [
INFO  21:19:39,702 - #44 i
INFO  21:19:39,702 - #37 ]
INFO  21:19:39,703 - #35 )
INFO  21:19:39,703 - #31 ;
INFO  21:19:39,703 - #44 i
INFO  21:19:39,703 - #29 ++
INFO  21:19:39,703 - #31 ;
INFO  21:19:39,703 - #39 }
INFO  21:19:39,703 - #9 print
INFO  21:19:39,703 - #34 (
INFO  21:19:39,703 - #44 c
INFO  21:19:39,704 - #33 .
INFO  21:19:39,704 - #44 getValue
INFO  21:19:39,704 - #34 (
INFO  21:19:39,704 - #44 c
INFO  21:19:39,704 - #33 .
INFO  21:19:39,704 - #44 theA
INFO  21:19:39,704 - #33 .
INFO  21:19:39,704 - #44 x
INFO  21:19:39,704 - #36 [
INFO  21:19:39,704 - #43 0
INFO  21:19:39,704 - #37 ]
INFO  21:19:39,705 - #35 )
INFO  21:19:39,705 - #35 )
INFO  21:19:39,705 - #31 ;
INFO  21:19:39,705 - #39 }
INFO  21:19:39,705 - #39 }
INFO  21:19:39,705 - GlobalVar = 2
INFO  21:19:39,705 - GlobalConst = 0
INFO  21:19:39,705 - LocalMainVar = 4
INFO  21:19:39,705 - GlobalArray = 0
INFO  21:21:19,214 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:21:19,223 - #2 program
INFO  21:21:19,223 - #44 Program
INFO  21:21:19,223 - #4 class
INFO  21:21:19,223 - #44 A
INFO  21:21:19,223 - #38 {
INFO  21:21:19,223 - #44 int
INFO  21:21:19,223 - #44 x
INFO  21:21:19,223 - #36 [
INFO  21:21:19,224 - #37 ]
INFO  21:21:19,224 - #32 ,
INFO  21:21:19,224 - #44 y
INFO  21:21:19,224 - #36 [
INFO  21:21:19,224 - #37 ]
INFO  21:21:19,224 - #31 ;
INFO  21:21:19,224 - #39 }
INFO  21:21:19,224 - #6 const
INFO  21:21:19,224 - #44 int
INFO  21:21:19,224 - #44 pi
INFO  21:21:19,224 - #28 =
INFO  21:21:19,224 - #43 3
INFO  21:21:19,225 - #32 ,
INFO  21:21:19,225 - #44 e
INFO  21:21:19,225 - #28 =
INFO  21:21:19,225 - #43 2
INFO  21:21:19,225 - #31 ;
INFO  21:21:19,225 - #44 int
INFO  21:21:19,225 - #44 a
INFO  21:21:19,225 - #32 ,
INFO  21:21:19,225 - #44 b
INFO  21:21:19,225 - #31 ;
INFO  21:21:19,225 - #44 char
INFO  21:21:19,225 - #44 t
INFO  21:21:19,225 - #31 ;
INFO  21:21:19,226 - #4 class
INFO  21:21:19,226 - #44 B
INFO  21:21:19,226 - #14 extends
INFO  21:21:19,226 - #44 A
INFO  21:21:19,226 - #38 {
INFO  21:21:19,226 - #44 int
INFO  21:21:19,226 - #44 i
INFO  21:21:19,226 - #31 ;
INFO  21:21:19,226 - #44 int
INFO  21:21:19,226 - #44 x
INFO  21:21:19,226 - #36 [
INFO  21:21:19,226 - #37 ]
INFO  21:21:19,226 - #31 ;
INFO  21:21:19,226 - #38 {
INFO  21:21:19,227 - #44 int
INFO  21:21:19,227 - #44 getValue
INFO  21:21:19,227 - #34 (
INFO  21:21:19,227 - #44 int
INFO  21:21:19,227 - #44 a
INFO  21:21:19,227 - #35 )
INFO  21:21:19,227 - #44 int
INFO  21:21:19,227 - #44 b
INFO  21:21:19,227 - #31 ;
INFO  21:21:19,227 - #44 bool
INFO  21:21:19,228 - #44 c
INFO  21:21:19,228 - #31 ;
INFO  21:21:19,228 - #38 {
INFO  21:21:19,228 - #11 return
INFO  21:21:19,228 - #44 this
INFO  21:21:19,228 - #33 .
INFO  21:21:19,228 - #44 i
INFO  21:21:19,228 - #15 +
INFO  21:21:19,228 - #44 this
INFO  21:21:19,228 - #33 .
INFO  21:21:19,228 - #44 x
INFO  21:21:19,228 - #36 [
INFO  21:21:19,229 - #43 0
INFO  21:21:19,229 - #37 ]
INFO  21:21:19,229 - #15 +
INFO  21:21:19,229 - #44 a
INFO  21:21:19,229 - #31 ;
INFO  21:21:19,229 - #39 }
INFO  21:21:19,229 - #39 }
INFO  21:21:19,229 - #39 }
INFO  21:21:19,229 - #4 class
INFO  21:21:19,229 - #44 C
INFO  21:21:19,229 - #14 extends
INFO  21:21:19,229 - #44 B
INFO  21:21:19,230 - #38 {
INFO  21:21:19,230 - #44 A
INFO  21:21:19,230 - #44 theA
INFO  21:21:19,230 - #31 ;
INFO  21:21:19,230 - #44 string
INFO  21:21:19,230 - #44 a
INFO  21:21:19,230 - #31 ;
INFO  21:21:19,230 - #39 }
INFO  21:21:19,230 - #38 {
INFO  21:21:19,230 - #12 void
INFO  21:21:19,230 - #44 main
INFO  21:21:19,230 - #34 (
INFO  21:21:19,230 - #35 )
INFO  21:21:19,231 - #44 A
INFO  21:21:19,231 - #44 a
INFO  21:21:19,231 - #31 ;
INFO  21:21:19,231 - #44 C
INFO  21:21:19,231 - #44 c
INFO  21:21:19,231 - #31 ;
INFO  21:21:19,231 - #44 int
INFO  21:21:19,231 - #44 i
INFO  21:21:19,231 - #31 ;
INFO  21:21:19,231 - #44 int
INFO  21:21:19,231 - #44 x
INFO  21:21:19,231 - #36 [
INFO  21:21:19,231 - #37 ]
INFO  21:21:19,232 - #31 ;
INFO  21:21:19,232 - #38 {
INFO  21:21:19,232 - #44 a
INFO  21:21:19,232 - #28 =
INFO  21:21:19,232 - #8 new
INFO  21:21:19,232 - #44 A
INFO  21:21:19,232 - #31 ;
INFO  21:21:19,232 - #44 a
INFO  21:21:19,232 - #33 .
INFO  21:21:19,232 - #44 x
INFO  21:21:19,232 - #28 =
INFO  21:21:19,232 - #8 new
INFO  21:21:19,232 - #44 int
INFO  21:21:19,233 - #36 [
INFO  21:21:19,233 - #43 5
INFO  21:21:19,233 - #37 ]
INFO  21:21:19,233 - #31 ;
INFO  21:21:19,233 - #44 a
INFO  21:21:19,233 - #33 .
INFO  21:21:19,233 - #44 y
INFO  21:21:19,233 - #28 =
INFO  21:21:19,233 - #8 new
INFO  21:21:19,233 - #44 int
INFO  21:21:19,233 - #36 [
INFO  21:21:19,234 - #43 5
INFO  21:21:19,234 - #37 ]
INFO  21:21:19,234 - #31 ;
INFO  21:21:19,234 - #44 c
INFO  21:21:19,234 - #28 =
INFO  21:21:19,234 - #8 new
INFO  21:21:19,234 - #44 C
INFO  21:21:19,234 - #31 ;
INFO  21:21:19,234 - #44 c
INFO  21:21:19,234 - #33 .
INFO  21:21:19,235 - #44 theA
INFO  21:21:19,235 - #28 =
INFO  21:21:19,235 - #44 a
INFO  21:21:19,235 - #31 ;
INFO  21:21:19,235 - #44 c
INFO  21:21:19,235 - #33 .
INFO  21:21:19,235 - #44 x
INFO  21:21:19,235 - #28 =
INFO  21:21:19,235 - #8 new
INFO  21:21:19,236 - #44 int
INFO  21:21:19,236 - #36 [
INFO  21:21:19,236 - #43 5
INFO  21:21:19,236 - #37 ]
INFO  21:21:19,236 - #31 ;
INFO  21:21:19,236 - #44 x
INFO  21:21:19,236 - #28 =
INFO  21:21:19,236 - #8 new
INFO  21:21:19,237 - #44 int
INFO  21:21:19,237 - #36 [
INFO  21:21:19,237 - #43 3
INFO  21:21:19,237 - #37 ]
INFO  21:21:19,237 - #31 ;
INFO  21:21:19,237 - #44 i
INFO  21:21:19,237 - #28 =
INFO  21:21:19,237 - #43 0
INFO  21:21:19,238 - #31 ;
INFO  21:21:19,238 - #10 read
INFO  21:21:19,238 - #34 (
INFO  21:21:19,238 - #44 c
INFO  21:21:19,238 - #33 .
INFO  21:21:19,238 - #44 i
INFO  21:21:19,238 - #35 )
INFO  21:21:19,238 - #31 ;
INFO  21:21:19,239 - #13 while
INFO  21:21:19,239 - #34 (
INFO  21:21:19,239 - #44 i
INFO  21:21:19,239 - #24 <
INFO  21:21:19,239 - #43 5
INFO  21:21:19,239 - #35 )
INFO  21:21:19,239 - #38 {
INFO  21:21:19,239 - #10 read
INFO  21:21:19,240 - #34 (
INFO  21:21:19,240 - #44 c
INFO  21:21:19,240 - #33 .
INFO  21:21:19,240 - #44 x
INFO  21:21:19,240 - #36 [
INFO  21:21:19,240 - #44 i
INFO  21:21:19,240 - #37 ]
INFO  21:21:19,240 - #35 )
INFO  21:21:19,240 - #31 ;
INFO  21:21:19,240 - #10 read
INFO  21:21:19,241 - #34 (
INFO  21:21:19,241 - #44 c
INFO  21:21:19,241 - #33 .
INFO  21:21:19,241 - #44 theA
INFO  21:21:19,241 - #33 .
INFO  21:21:19,241 - #44 x
INFO  21:21:19,241 - #36 [
INFO  21:21:19,241 - #44 i
INFO  21:21:19,241 - #37 ]
INFO  21:21:19,241 - #35 )
INFO  21:21:19,242 - #31 ;
INFO  21:21:19,242 - #44 i
INFO  21:21:19,242 - #29 ++
INFO  21:21:19,242 - #31 ;
INFO  21:21:19,242 - #39 }
INFO  21:21:19,242 - #9 print
INFO  21:21:19,242 - #34 (
INFO  21:21:19,242 - #44 c
INFO  21:21:19,243 - #33 .
INFO  21:21:19,243 - #44 getValue
INFO  21:21:19,243 - #34 (
INFO  21:21:19,243 - #44 c
INFO  21:21:19,243 - #33 .
INFO  21:21:19,243 - #44 theA
INFO  21:21:19,243 - #33 .
INFO  21:21:19,243 - #44 x
INFO  21:21:19,243 - #36 [
INFO  21:21:19,243 - #43 0
INFO  21:21:19,244 - #37 ]
INFO  21:21:19,244 - #35 )
INFO  21:21:19,244 - #35 )
INFO  21:21:19,244 - #31 ;
INFO  21:21:19,244 - #39 }
INFO  21:21:19,244 - #39 }
INFO  21:21:19,244 - GlobalVar = 2
INFO  21:21:19,244 - GlobalConst = 0
INFO  21:21:19,245 - LocalMainVar = 4
INFO  21:21:19,245 - GlobalArray = 0
INFO  21:21:57,031 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:21:57,040 - #2 program
INFO  21:21:57,040 - #44 Program
INFO  21:21:57,040 - #4 class
INFO  21:21:57,040 - #44 A
INFO  21:21:57,040 - #38 {
INFO  21:21:57,040 - #44 int
INFO  21:21:57,040 - #44 x
INFO  21:21:57,040 - #36 [
INFO  21:21:57,041 - #37 ]
INFO  21:21:57,041 - #32 ,
INFO  21:21:57,041 - #44 y
INFO  21:21:57,041 - #36 [
INFO  21:21:57,041 - #37 ]
INFO  21:21:57,041 - #31 ;
INFO  21:21:57,041 - #39 }
INFO  21:21:57,041 - #44 char
INFO  21:21:57,041 - #44 t
INFO  21:21:57,041 - #31 ;
INFO  21:21:57,041 - #6 const
INFO  21:21:57,041 - #44 int
INFO  21:21:57,041 - #44 pi
INFO  21:21:57,042 - #28 =
INFO  21:21:57,042 - #43 3
INFO  21:21:57,042 - #32 ,
INFO  21:21:57,042 - #44 e
INFO  21:21:57,042 - #28 =
INFO  21:21:57,042 - #43 2
INFO  21:21:57,042 - #31 ;
INFO  21:21:57,042 - #44 int
INFO  21:21:57,042 - #44 a
INFO  21:21:57,042 - #32 ,
INFO  21:21:57,042 - #44 b
INFO  21:21:57,042 - #31 ;
INFO  21:21:57,042 - #4 class
INFO  21:21:57,043 - #44 B
INFO  21:21:57,043 - #14 extends
INFO  21:21:57,043 - #44 A
INFO  21:21:57,043 - #38 {
INFO  21:21:57,043 - #44 int
INFO  21:21:57,043 - #44 i
INFO  21:21:57,043 - #31 ;
INFO  21:21:57,043 - #44 int
INFO  21:21:57,043 - #44 x
INFO  21:21:57,043 - #36 [
INFO  21:21:57,043 - #37 ]
INFO  21:21:57,043 - #31 ;
INFO  21:21:57,043 - #38 {
INFO  21:21:57,043 - #44 int
INFO  21:21:57,044 - #44 getValue
INFO  21:21:57,044 - #34 (
INFO  21:21:57,044 - #44 int
INFO  21:21:57,044 - #44 a
INFO  21:21:57,044 - #35 )
INFO  21:21:57,044 - #44 int
INFO  21:21:57,044 - #44 b
INFO  21:21:57,044 - #31 ;
INFO  21:21:57,044 - #44 bool
INFO  21:21:57,044 - #44 c
INFO  21:21:57,044 - #31 ;
INFO  21:21:57,045 - #38 {
INFO  21:21:57,045 - #11 return
INFO  21:21:57,045 - #44 this
INFO  21:21:57,045 - #33 .
INFO  21:21:57,045 - #44 i
INFO  21:21:57,045 - #15 +
INFO  21:21:57,045 - #44 this
INFO  21:21:57,045 - #33 .
INFO  21:21:57,045 - #44 x
INFO  21:21:57,045 - #36 [
INFO  21:21:57,045 - #43 0
INFO  21:21:57,045 - #37 ]
INFO  21:21:57,046 - #15 +
INFO  21:21:57,046 - #44 a
INFO  21:21:57,046 - #31 ;
INFO  21:21:57,046 - #39 }
INFO  21:21:57,046 - #39 }
INFO  21:21:57,046 - #39 }
INFO  21:21:57,046 - #4 class
INFO  21:21:57,046 - #44 C
INFO  21:21:57,046 - #14 extends
INFO  21:21:57,046 - #44 B
INFO  21:21:57,046 - #38 {
INFO  21:21:57,046 - #44 A
INFO  21:21:57,046 - #44 theA
INFO  21:21:57,047 - #31 ;
INFO  21:21:57,047 - #44 string
INFO  21:21:57,047 - #44 a
INFO  21:21:57,047 - #31 ;
INFO  21:21:57,047 - #39 }
INFO  21:21:57,047 - #38 {
INFO  21:21:57,047 - #12 void
INFO  21:21:57,047 - #44 main
INFO  21:21:57,047 - #34 (
INFO  21:21:57,047 - #35 )
INFO  21:21:57,047 - #44 A
INFO  21:21:57,047 - #44 a
INFO  21:21:57,047 - #31 ;
INFO  21:21:57,048 - #44 C
INFO  21:21:57,048 - #44 c
INFO  21:21:57,048 - #31 ;
INFO  21:21:57,048 - #44 int
INFO  21:21:57,048 - #44 i
INFO  21:21:57,048 - #31 ;
INFO  21:21:57,048 - #44 int
INFO  21:21:57,048 - #44 x
INFO  21:21:57,048 - #36 [
INFO  21:21:57,048 - #37 ]
INFO  21:21:57,048 - #31 ;
INFO  21:21:57,048 - #38 {
INFO  21:21:57,048 - #44 a
INFO  21:21:57,049 - #28 =
INFO  21:21:57,049 - #8 new
INFO  21:21:57,049 - #44 A
INFO  21:21:57,049 - #31 ;
INFO  21:21:57,049 - #44 a
INFO  21:21:57,049 - #33 .
INFO  21:21:57,049 - #44 x
INFO  21:21:57,049 - #28 =
INFO  21:21:57,049 - #8 new
INFO  21:21:57,049 - #44 int
INFO  21:21:57,050 - #36 [
INFO  21:21:57,050 - #43 5
INFO  21:21:57,050 - #37 ]
INFO  21:21:57,050 - #31 ;
INFO  21:21:57,050 - #44 a
INFO  21:21:57,050 - #33 .
INFO  21:21:57,050 - #44 y
INFO  21:21:57,050 - #28 =
INFO  21:21:57,050 - #8 new
INFO  21:21:57,050 - #44 int
INFO  21:21:57,050 - #36 [
INFO  21:21:57,051 - #43 5
INFO  21:21:57,051 - #37 ]
INFO  21:21:57,051 - #31 ;
INFO  21:21:57,051 - #44 c
INFO  21:21:57,051 - #28 =
INFO  21:21:57,051 - #8 new
INFO  21:21:57,051 - #44 C
INFO  21:21:57,051 - #31 ;
INFO  21:21:57,051 - #44 c
INFO  21:21:57,051 - #33 .
INFO  21:21:57,051 - #44 theA
INFO  21:21:57,052 - #28 =
INFO  21:21:57,052 - #44 a
INFO  21:21:57,052 - #31 ;
INFO  21:21:57,052 - #44 c
INFO  21:21:57,052 - #33 .
INFO  21:21:57,052 - #44 x
INFO  21:21:57,052 - #28 =
INFO  21:21:57,052 - #8 new
INFO  21:21:57,052 - #44 int
INFO  21:21:57,052 - #36 [
INFO  21:21:57,052 - #43 5
INFO  21:21:57,053 - #37 ]
INFO  21:21:57,053 - #31 ;
INFO  21:21:57,053 - #44 x
INFO  21:21:57,053 - #28 =
INFO  21:21:57,053 - #8 new
INFO  21:21:57,053 - #44 int
INFO  21:21:57,053 - #36 [
INFO  21:21:57,053 - #43 3
INFO  21:21:57,053 - #37 ]
INFO  21:21:57,053 - #31 ;
INFO  21:21:57,054 - #44 i
INFO  21:21:57,054 - #28 =
INFO  21:21:57,054 - #43 0
INFO  21:21:57,054 - #31 ;
INFO  21:21:57,054 - #10 read
INFO  21:21:57,054 - #34 (
INFO  21:21:57,054 - #44 c
INFO  21:21:57,054 - #33 .
INFO  21:21:57,054 - #44 i
INFO  21:21:57,055 - #35 )
INFO  21:21:57,055 - #31 ;
INFO  21:21:57,055 - #13 while
INFO  21:21:57,055 - #34 (
INFO  21:21:57,056 - #44 i
INFO  21:21:57,056 - #24 <
INFO  21:21:57,056 - #43 5
INFO  21:21:57,056 - #35 )
INFO  21:21:57,056 - #38 {
INFO  21:21:57,056 - #10 read
INFO  21:21:57,056 - #34 (
INFO  21:21:57,057 - #44 c
INFO  21:21:57,057 - #33 .
INFO  21:21:57,057 - #44 x
INFO  21:21:57,057 - #36 [
INFO  21:21:57,057 - #44 i
INFO  21:21:57,057 - #37 ]
INFO  21:21:57,057 - #35 )
INFO  21:21:57,057 - #31 ;
INFO  21:21:57,057 - #10 read
INFO  21:21:57,057 - #34 (
INFO  21:21:57,058 - #44 c
INFO  21:21:57,058 - #33 .
INFO  21:21:57,058 - #44 theA
INFO  21:21:57,058 - #33 .
INFO  21:21:57,058 - #44 x
INFO  21:21:57,058 - #36 [
INFO  21:21:57,058 - #44 i
INFO  21:21:57,058 - #37 ]
INFO  21:21:57,058 - #35 )
INFO  21:21:57,058 - #31 ;
INFO  21:21:57,058 - #44 i
INFO  21:21:57,059 - #29 ++
INFO  21:21:57,059 - #31 ;
INFO  21:21:57,059 - #39 }
INFO  21:21:57,059 - #9 print
INFO  21:21:57,059 - #34 (
INFO  21:21:57,059 - #44 c
INFO  21:21:57,059 - #33 .
INFO  21:21:57,059 - #44 getValue
INFO  21:21:57,059 - #34 (
INFO  21:21:57,060 - #44 c
INFO  21:21:57,060 - #33 .
INFO  21:21:57,060 - #44 theA
INFO  21:21:57,060 - #33 .
INFO  21:21:57,060 - #44 x
INFO  21:21:57,060 - #36 [
INFO  21:21:57,060 - #43 0
INFO  21:21:57,060 - #37 ]
INFO  21:21:57,060 - #35 )
INFO  21:21:57,060 - #35 )
INFO  21:21:57,061 - #31 ;
INFO  21:21:57,061 - #39 }
INFO  21:21:57,061 - #39 }
INFO  21:21:57,061 - GlobalVar = 11
INFO  21:21:57,061 - GlobalConst = 2
INFO  21:21:57,061 - LocalMainVar = 4
INFO  21:21:57,061 - GlobalArray = 3
INFO  21:22:30,152 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:22:30,165 - #2 program
INFO  21:22:30,165 - #44 Program
INFO  21:22:30,165 - #4 class
INFO  21:22:30,165 - #44 A
INFO  21:22:30,165 - #38 {
INFO  21:22:30,165 - #44 int
INFO  21:22:30,165 - #44 x
INFO  21:22:30,166 - #36 [
INFO  21:22:30,166 - #37 ]
INFO  21:22:30,166 - #32 ,
INFO  21:22:30,166 - #44 y
INFO  21:22:30,166 - #36 [
INFO  21:22:30,166 - #37 ]
INFO  21:22:30,166 - #31 ;
INFO  21:22:30,166 - #39 }
INFO  21:22:30,167 - #6 const
INFO  21:22:30,167 - #44 int
INFO  21:22:30,167 - #44 pi
INFO  21:22:30,167 - #28 =
INFO  21:22:30,167 - #43 3
INFO  21:22:30,167 - #32 ,
INFO  21:22:30,167 - #44 e
INFO  21:22:30,167 - #28 =
INFO  21:22:30,167 - #43 2
INFO  21:22:30,167 - #31 ;
INFO  21:22:30,168 - #44 int
INFO  21:22:30,168 - #44 a
INFO  21:22:30,168 - #36 [
INFO  21:22:30,168 - #37 ]
INFO  21:22:30,168 - #32 ,
INFO  21:22:30,168 - #44 b
INFO  21:22:30,168 - #36 [
INFO  21:22:30,168 - #37 ]
INFO  21:22:30,168 - #31 ;
INFO  21:22:30,169 - #44 char
INFO  21:22:30,169 - #44 t
INFO  21:22:30,169 - #36 [
INFO  21:22:30,169 - #37 ]
INFO  21:22:30,169 - #31 ;
INFO  21:22:30,169 - #4 class
INFO  21:22:30,169 - #44 B
INFO  21:22:30,169 - #14 extends
INFO  21:22:30,169 - #44 A
INFO  21:22:30,169 - #38 {
INFO  21:22:30,170 - #44 int
INFO  21:22:30,170 - #44 i
INFO  21:22:30,170 - #31 ;
INFO  21:22:30,170 - #44 int
INFO  21:22:30,170 - #44 x
INFO  21:22:30,170 - #36 [
INFO  21:22:30,170 - #37 ]
INFO  21:22:30,170 - #31 ;
INFO  21:22:30,170 - #38 {
INFO  21:22:30,171 - #44 int
INFO  21:22:30,171 - #44 getValue
INFO  21:22:30,171 - #34 (
INFO  21:22:30,171 - #44 int
INFO  21:22:30,171 - #44 a
INFO  21:22:30,171 - #35 )
INFO  21:22:30,171 - #44 int
INFO  21:22:30,171 - #44 b
INFO  21:22:30,171 - #31 ;
INFO  21:22:30,172 - #44 bool
INFO  21:22:30,172 - #44 c
INFO  21:22:30,172 - #31 ;
INFO  21:22:30,172 - #38 {
INFO  21:22:30,172 - #11 return
INFO  21:22:30,172 - #44 this
INFO  21:22:30,172 - #33 .
INFO  21:22:30,172 - #44 i
INFO  21:22:30,172 - #15 +
INFO  21:22:30,172 - #44 this
INFO  21:22:30,173 - #33 .
INFO  21:22:30,173 - #44 x
INFO  21:22:30,173 - #36 [
INFO  21:22:30,173 - #43 0
INFO  21:22:30,173 - #37 ]
INFO  21:22:30,173 - #15 +
INFO  21:22:30,173 - #44 a
INFO  21:22:30,173 - #31 ;
INFO  21:22:30,173 - #39 }
INFO  21:22:30,174 - #39 }
INFO  21:22:30,174 - #39 }
INFO  21:22:30,174 - #4 class
INFO  21:22:30,174 - #44 C
INFO  21:22:30,174 - #14 extends
INFO  21:22:30,174 - #44 B
INFO  21:22:30,174 - #38 {
INFO  21:22:30,174 - #44 A
INFO  21:22:30,174 - #44 theA
INFO  21:22:30,174 - #31 ;
INFO  21:22:30,174 - #44 string
INFO  21:22:30,175 - #44 a
INFO  21:22:30,175 - #31 ;
INFO  21:22:30,175 - #39 }
INFO  21:22:30,175 - #38 {
INFO  21:22:30,175 - #12 void
INFO  21:22:30,175 - #44 main
INFO  21:22:30,175 - #34 (
INFO  21:22:30,175 - #35 )
INFO  21:22:30,175 - #44 A
INFO  21:22:30,176 - #44 a
INFO  21:22:30,176 - #31 ;
INFO  21:22:30,176 - #44 C
INFO  21:22:30,176 - #44 c
INFO  21:22:30,176 - #31 ;
INFO  21:22:30,176 - #44 int
INFO  21:22:30,176 - #44 i
INFO  21:22:30,176 - #31 ;
INFO  21:22:30,176 - #44 int
INFO  21:22:30,176 - #44 x
INFO  21:22:30,177 - #36 [
INFO  21:22:30,177 - #37 ]
INFO  21:22:30,177 - #31 ;
INFO  21:22:30,177 - #38 {
INFO  21:22:30,177 - #44 a
INFO  21:22:30,177 - #28 =
INFO  21:22:30,177 - #8 new
INFO  21:22:30,177 - #44 A
INFO  21:22:30,177 - #31 ;
INFO  21:22:30,178 - #44 a
INFO  21:22:30,178 - #33 .
INFO  21:22:30,178 - #44 x
INFO  21:22:30,178 - #28 =
INFO  21:22:30,178 - #8 new
INFO  21:22:30,178 - #44 int
INFO  21:22:30,178 - #36 [
INFO  21:22:30,178 - #43 5
INFO  21:22:30,179 - #37 ]
INFO  21:22:30,179 - #31 ;
INFO  21:22:30,179 - #44 a
INFO  21:22:30,179 - #33 .
INFO  21:22:30,179 - #44 y
INFO  21:22:30,179 - #28 =
INFO  21:22:30,179 - #8 new
INFO  21:22:30,180 - #44 int
INFO  21:22:30,180 - #36 [
INFO  21:22:30,180 - #43 5
INFO  21:22:30,180 - #37 ]
INFO  21:22:30,180 - #31 ;
INFO  21:22:30,180 - #44 c
INFO  21:22:30,180 - #28 =
INFO  21:22:30,181 - #8 new
INFO  21:22:30,181 - #44 C
INFO  21:22:30,181 - #31 ;
INFO  21:22:30,181 - #44 c
INFO  21:22:30,181 - #33 .
INFO  21:22:30,181 - #44 theA
INFO  21:22:30,181 - #28 =
INFO  21:22:30,181 - #44 a
INFO  21:22:30,182 - #31 ;
INFO  21:22:30,182 - #44 c
INFO  21:22:30,182 - #33 .
INFO  21:22:30,182 - #44 x
INFO  21:22:30,182 - #28 =
INFO  21:22:30,182 - #8 new
INFO  21:22:30,182 - #44 int
INFO  21:22:30,182 - #36 [
INFO  21:22:30,182 - #43 5
INFO  21:22:30,182 - #37 ]
INFO  21:22:30,183 - #31 ;
INFO  21:22:30,183 - #44 x
INFO  21:22:30,183 - #28 =
INFO  21:22:30,183 - #8 new
INFO  21:22:30,183 - #44 int
INFO  21:22:30,183 - #36 [
INFO  21:22:30,183 - #43 3
INFO  21:22:30,183 - #37 ]
INFO  21:22:30,183 - #31 ;
INFO  21:22:30,184 - #44 i
INFO  21:22:30,184 - #28 =
INFO  21:22:30,184 - #43 0
INFO  21:22:30,184 - #31 ;
INFO  21:22:30,184 - #10 read
INFO  21:22:30,184 - #34 (
INFO  21:22:30,184 - #44 c
INFO  21:22:30,184 - #33 .
INFO  21:22:30,185 - #44 i
INFO  21:22:30,185 - #35 )
INFO  21:22:30,185 - #31 ;
INFO  21:22:30,185 - #13 while
INFO  21:22:30,185 - #34 (
INFO  21:22:30,185 - #44 i
INFO  21:22:30,185 - #24 <
INFO  21:22:30,186 - #43 5
INFO  21:22:30,186 - #35 )
INFO  21:22:30,186 - #38 {
INFO  21:22:30,186 - #10 read
INFO  21:22:30,186 - #34 (
INFO  21:22:30,187 - #44 c
INFO  21:22:30,187 - #33 .
INFO  21:22:30,187 - #44 x
INFO  21:22:30,187 - #36 [
INFO  21:22:30,187 - #44 i
INFO  21:22:30,187 - #37 ]
INFO  21:22:30,187 - #35 )
INFO  21:22:30,187 - #31 ;
INFO  21:22:30,187 - #10 read
INFO  21:22:30,188 - #34 (
INFO  21:22:30,188 - #44 c
INFO  21:22:30,188 - #33 .
INFO  21:22:30,188 - #44 theA
INFO  21:22:30,188 - #33 .
INFO  21:22:30,188 - #44 x
INFO  21:22:30,188 - #36 [
INFO  21:22:30,188 - #44 i
INFO  21:22:30,188 - #37 ]
INFO  21:22:30,189 - #35 )
INFO  21:22:30,189 - #31 ;
INFO  21:22:30,189 - #44 i
INFO  21:22:30,189 - #29 ++
INFO  21:22:30,189 - #31 ;
INFO  21:22:30,189 - #39 }
INFO  21:22:30,189 - #9 print
INFO  21:22:30,189 - #34 (
INFO  21:22:30,190 - #44 c
INFO  21:22:30,190 - #33 .
INFO  21:22:30,190 - #44 getValue
INFO  21:22:30,190 - #34 (
INFO  21:22:30,190 - #44 c
INFO  21:22:30,190 - #33 .
INFO  21:22:30,190 - #44 theA
INFO  21:22:30,190 - #33 .
INFO  21:22:30,190 - #44 x
INFO  21:22:30,190 - #36 [
INFO  21:22:30,190 - #43 0
INFO  21:22:30,191 - #37 ]
INFO  21:22:30,191 - #35 )
INFO  21:22:30,191 - #35 )
INFO  21:22:30,191 - #31 ;
INFO  21:22:30,191 - #39 }
INFO  21:22:30,191 - #39 }
INFO  21:22:30,191 - GlobalVar = 11
INFO  21:22:30,192 - GlobalConst = 2
INFO  21:22:30,192 - LocalMainVar = 4
INFO  21:22:30,192 - GlobalArray = 6
INFO  21:25:38,076 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:25:38,085 - #2 program
INFO  21:25:38,085 - #44 Program
INFO  21:25:38,085 - #4 class
INFO  21:25:38,085 - #44 A
INFO  21:25:38,085 - #38 {
INFO  21:25:38,086 - #44 int
INFO  21:25:38,086 - #44 x
INFO  21:25:38,086 - #36 [
INFO  21:25:38,086 - #37 ]
INFO  21:25:38,086 - #32 ,
INFO  21:25:38,086 - #44 y
INFO  21:25:38,086 - #36 [
INFO  21:25:38,086 - #37 ]
INFO  21:25:38,086 - #31 ;
INFO  21:25:38,086 - #39 }
INFO  21:25:38,086 - #6 const
INFO  21:25:38,086 - #44 int
INFO  21:25:38,087 - #44 pi
INFO  21:25:38,087 - #28 =
INFO  21:25:38,087 - #43 3
INFO  21:25:38,087 - #32 ,
INFO  21:25:38,087 - #44 e
INFO  21:25:38,087 - #28 =
INFO  21:25:38,087 - #43 2
INFO  21:25:38,087 - #31 ;
INFO  21:25:38,087 - #44 int
INFO  21:25:38,087 - #44 a
INFO  21:25:38,087 - #36 [
INFO  21:25:38,087 - #37 ]
INFO  21:25:38,087 - #32 ,
INFO  21:25:38,088 - #44 b
INFO  21:25:38,088 - #36 [
INFO  21:25:38,088 - #37 ]
INFO  21:25:38,088 - #31 ;
INFO  21:25:38,088 - #44 char
INFO  21:25:38,088 - #44 t
INFO  21:25:38,088 - #36 [
INFO  21:25:38,088 - #37 ]
INFO  21:25:38,088 - #31 ;
INFO  21:25:38,088 - #4 class
INFO  21:25:38,088 - #44 B
INFO  21:25:38,088 - #14 extends
INFO  21:25:38,088 - #44 A
INFO  21:25:38,088 - #38 {
INFO  21:25:38,089 - #44 int
INFO  21:25:38,089 - #44 i
INFO  21:25:38,089 - #31 ;
INFO  21:25:38,089 - #44 int
INFO  21:25:38,089 - #44 x
INFO  21:25:38,089 - #36 [
INFO  21:25:38,089 - #37 ]
INFO  21:25:38,089 - #31 ;
INFO  21:25:38,089 - #38 {
INFO  21:25:38,089 - #44 int
INFO  21:25:38,089 - #44 getValue
INFO  21:25:38,089 - #34 (
INFO  21:25:38,090 - #44 int
INFO  21:25:38,090 - #44 a
INFO  21:25:38,090 - #35 )
INFO  21:25:38,090 - #44 int
INFO  21:25:38,090 - #44 b
INFO  21:25:38,090 - #31 ;
INFO  21:25:38,090 - #44 bool
INFO  21:25:38,090 - #44 c
INFO  21:25:38,090 - #31 ;
INFO  21:25:38,090 - #38 {
INFO  21:25:38,090 - #11 return
INFO  21:25:38,090 - #44 this
INFO  21:25:38,090 - #33 .
INFO  21:25:38,091 - #44 i
INFO  21:25:38,091 - #15 +
INFO  21:25:38,091 - #44 this
INFO  21:25:38,091 - #33 .
INFO  21:25:38,091 - #44 x
INFO  21:25:38,091 - #36 [
INFO  21:25:38,091 - #43 0
INFO  21:25:38,091 - #37 ]
INFO  21:25:38,091 - #15 +
INFO  21:25:38,092 - #44 a
INFO  21:25:38,092 - #31 ;
INFO  21:25:38,092 - #39 }
INFO  21:25:38,092 - #39 }
INFO  21:25:38,092 - #39 }
INFO  21:25:38,092 - #4 class
INFO  21:25:38,092 - #44 C
INFO  21:25:38,093 - #14 extends
INFO  21:25:38,093 - #44 B
INFO  21:25:38,093 - #38 {
INFO  21:25:38,093 - #44 A
INFO  21:25:38,093 - #44 theA
INFO  21:25:38,093 - #31 ;
INFO  21:25:38,093 - #44 string
INFO  21:25:38,093 - #44 a
INFO  21:25:38,093 - #31 ;
INFO  21:25:38,093 - #39 }
INFO  21:25:38,094 - #38 {
INFO  21:25:38,094 - #12 void
INFO  21:25:38,094 - #44 main
INFO  21:25:38,094 - #34 (
INFO  21:25:38,094 - #35 )
INFO  21:25:38,094 - #44 A
INFO  21:25:38,094 - #44 a
INFO  21:25:38,094 - #31 ;
INFO  21:25:38,094 - #44 C
INFO  21:25:38,094 - #44 c
INFO  21:25:38,095 - #31 ;
INFO  21:25:38,095 - #44 int
INFO  21:25:38,095 - #44 i
INFO  21:25:38,095 - #31 ;
INFO  21:25:38,095 - #44 int
INFO  21:25:38,095 - #44 x
INFO  21:25:38,095 - #36 [
INFO  21:25:38,095 - #37 ]
INFO  21:25:38,095 - #31 ;
INFO  21:25:38,095 - #38 {
INFO  21:25:38,095 - #44 a
INFO  21:25:38,096 - #28 =
INFO  21:25:38,096 - #8 new
INFO  21:25:38,096 - #44 A
INFO  21:25:38,096 - #31 ;
INFO  21:25:38,096 - #44 a
INFO  21:25:38,096 - #33 .
INFO  21:25:38,096 - #44 x
INFO  21:25:38,096 - #28 =
INFO  21:25:38,096 - #8 new
INFO  21:25:38,096 - #44 int
INFO  21:25:38,097 - #36 [
INFO  21:25:38,097 - #43 5
INFO  21:25:38,097 - #37 ]
INFO  21:25:38,097 - #31 ;
INFO  21:25:38,097 - #44 a
INFO  21:25:38,097 - #33 .
INFO  21:25:38,097 - #44 y
INFO  21:25:38,097 - #28 =
INFO  21:25:38,097 - #8 new
INFO  21:25:38,097 - #44 int
INFO  21:25:38,097 - #36 [
INFO  21:25:38,098 - #43 5
INFO  21:25:38,098 - #37 ]
INFO  21:25:38,098 - #31 ;
INFO  21:25:38,098 - #44 c
INFO  21:25:38,098 - #28 =
INFO  21:25:38,098 - #8 new
INFO  21:25:38,098 - #44 C
INFO  21:25:38,098 - #31 ;
INFO  21:25:38,098 - #44 c
INFO  21:25:38,098 - #33 .
INFO  21:25:38,098 - #44 theA
INFO  21:25:38,098 - #28 =
INFO  21:25:38,098 - #44 a
INFO  21:25:38,099 - #31 ;
INFO  21:25:38,099 - #44 c
INFO  21:25:38,099 - #33 .
INFO  21:25:38,099 - #44 x
INFO  21:25:38,099 - #28 =
INFO  21:25:38,099 - #8 new
INFO  21:25:38,099 - #44 int
INFO  21:25:38,099 - #36 [
INFO  21:25:38,099 - #43 5
INFO  21:25:38,099 - #37 ]
INFO  21:25:38,099 - #31 ;
INFO  21:25:38,099 - #44 x
INFO  21:25:38,099 - #28 =
INFO  21:25:38,100 - #8 new
INFO  21:25:38,100 - #44 int
INFO  21:25:38,100 - #36 [
INFO  21:25:38,100 - #43 3
INFO  21:25:38,100 - #37 ]
INFO  21:25:38,100 - #31 ;
INFO  21:25:38,100 - #44 i
INFO  21:25:38,100 - #28 =
INFO  21:25:38,100 - #43 0
INFO  21:25:38,101 - #31 ;
INFO  21:25:38,101 - #10 read
INFO  21:25:38,101 - #34 (
INFO  21:25:38,101 - #44 c
INFO  21:25:38,102 - #33 .
INFO  21:25:38,102 - #44 i
INFO  21:25:38,102 - #35 )
INFO  21:25:38,102 - #31 ;
INFO  21:25:38,102 - #13 while
INFO  21:25:38,102 - #34 (
INFO  21:25:38,102 - #44 i
INFO  21:25:38,102 - #24 <
INFO  21:25:38,102 - #43 5
INFO  21:25:38,103 - #35 )
INFO  21:25:38,103 - #38 {
INFO  21:25:38,103 - #10 read
INFO  21:25:38,103 - #34 (
INFO  21:25:38,103 - #44 c
INFO  21:25:38,103 - #33 .
INFO  21:25:38,103 - #44 x
INFO  21:25:38,103 - #36 [
INFO  21:25:38,103 - #44 i
INFO  21:25:38,104 - #37 ]
INFO  21:25:38,104 - #35 )
INFO  21:25:38,104 - #31 ;
INFO  21:25:38,104 - #10 read
INFO  21:25:38,104 - #34 (
INFO  21:25:38,104 - #44 c
INFO  21:25:38,104 - #33 .
INFO  21:25:38,104 - #44 theA
INFO  21:25:38,104 - #33 .
INFO  21:25:38,104 - #44 x
INFO  21:25:38,104 - #36 [
INFO  21:25:38,105 - #44 i
INFO  21:25:38,105 - #37 ]
INFO  21:25:38,105 - #35 )
INFO  21:25:38,105 - #31 ;
INFO  21:25:38,105 - #44 i
INFO  21:25:38,105 - #29 ++
INFO  21:25:38,105 - #31 ;
INFO  21:25:38,105 - #39 }
INFO  21:25:38,105 - #9 print
INFO  21:25:38,105 - #34 (
INFO  21:25:38,105 - #44 c
INFO  21:25:38,106 - #33 .
INFO  21:25:38,106 - #44 getValue
INFO  21:25:38,106 - #34 (
INFO  21:25:38,106 - #44 c
INFO  21:25:38,106 - #33 .
INFO  21:25:38,106 - #44 theA
INFO  21:25:38,106 - #33 .
INFO  21:25:38,106 - #44 x
INFO  21:25:38,106 - #36 [
INFO  21:25:38,106 - #43 0
INFO  21:25:38,106 - #37 ]
INFO  21:25:38,107 - #35 )
INFO  21:25:38,107 - #35 )
INFO  21:25:38,107 - #31 ;
INFO  21:25:38,107 - #39 }
INFO  21:25:38,107 - #39 }
INFO  21:25:38,107 - GlobalVar = 11
INFO  21:25:38,107 - GlobalConst = 2
INFO  21:25:38,107 - LocalMainVar = 4
INFO  21:25:38,108 - GlobalArray = 6
INFO  21:25:56,332 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:25:56,340 - #2 program
INFO  21:25:56,340 - #44 Program
INFO  21:25:56,340 - #4 class
INFO  21:25:56,341 - #44 A
INFO  21:25:56,341 - #38 {
INFO  21:25:56,341 - #44 int
INFO  21:25:56,341 - #44 x
INFO  21:25:56,341 - #36 [
INFO  21:25:56,341 - #37 ]
INFO  21:25:56,341 - #32 ,
INFO  21:25:56,341 - #44 y
INFO  21:25:56,341 - #36 [
INFO  21:25:56,341 - #37 ]
INFO  21:25:56,341 - #31 ;
INFO  21:25:56,341 - #39 }
INFO  21:25:56,342 - #6 const
INFO  21:25:56,342 - #44 int
INFO  21:25:56,342 - #44 pi
INFO  21:25:56,342 - #28 =
INFO  21:25:56,342 - #43 3
INFO  21:25:56,342 - #32 ,
INFO  21:25:56,342 - #44 e
INFO  21:25:56,342 - #28 =
INFO  21:25:56,342 - #43 2
INFO  21:25:56,342 - #31 ;
INFO  21:25:56,342 - #44 int
INFO  21:25:56,342 - #44 a
INFO  21:25:56,343 - #36 [
INFO  21:25:56,343 - #37 ]
INFO  21:25:56,343 - #32 ,
INFO  21:25:56,343 - #44 b
INFO  21:25:56,343 - #36 [
INFO  21:25:56,343 - #37 ]
INFO  21:25:56,343 - #31 ;
INFO  21:25:56,343 - #44 char
INFO  21:25:56,343 - #44 t
INFO  21:25:56,343 - #36 [
INFO  21:25:56,343 - #37 ]
INFO  21:25:56,343 - #31 ;
INFO  21:25:56,343 - #4 class
INFO  21:25:56,343 - #44 B
INFO  21:25:56,344 - #14 extends
INFO  21:25:56,344 - #44 A
INFO  21:25:56,344 - #38 {
INFO  21:25:56,344 - #44 int
INFO  21:25:56,344 - #44 i
INFO  21:25:56,344 - #31 ;
INFO  21:25:56,344 - #44 int
INFO  21:25:56,344 - #44 x
INFO  21:25:56,344 - #36 [
INFO  21:25:56,344 - #37 ]
INFO  21:25:56,344 - #31 ;
INFO  21:25:56,344 - #38 {
INFO  21:25:56,344 - #44 int
INFO  21:25:56,345 - #44 getValue
INFO  21:25:56,345 - #34 (
INFO  21:25:56,345 - #44 int
INFO  21:25:56,345 - #44 a
INFO  21:25:56,345 - #35 )
INFO  21:25:56,345 - #44 int
INFO  21:25:56,345 - #44 b
INFO  21:25:56,345 - #31 ;
INFO  21:25:56,345 - #44 bool
INFO  21:25:56,345 - #44 c
INFO  21:25:56,345 - #31 ;
INFO  21:25:56,345 - #38 {
INFO  21:25:56,346 - #11 return
INFO  21:25:56,346 - #44 this
INFO  21:25:56,346 - #33 .
INFO  21:25:56,346 - #44 i
INFO  21:25:56,346 - #15 +
INFO  21:25:56,346 - #44 this
INFO  21:25:56,346 - #33 .
INFO  21:25:56,346 - #44 x
INFO  21:25:56,346 - #36 [
INFO  21:25:56,347 - #43 0
INFO  21:25:56,347 - #37 ]
INFO  21:25:56,347 - #15 +
INFO  21:25:56,347 - #44 a
INFO  21:25:56,347 - #31 ;
INFO  21:25:56,347 - #39 }
INFO  21:25:56,347 - #39 }
INFO  21:25:56,347 - #39 }
INFO  21:25:56,348 - #4 class
INFO  21:25:56,348 - #44 C
INFO  21:25:56,348 - #14 extends
INFO  21:25:56,348 - #44 B
INFO  21:25:56,348 - #38 {
INFO  21:25:56,348 - #44 A
INFO  21:25:56,348 - #44 theA
INFO  21:25:56,348 - #31 ;
INFO  21:25:56,348 - #44 string
INFO  21:25:56,349 - #44 a
INFO  21:25:56,349 - #31 ;
INFO  21:25:56,349 - #39 }
INFO  21:25:56,349 - #38 {
INFO  21:25:56,349 - #12 void
INFO  21:25:56,349 - #44 main
INFO  21:25:56,349 - #34 (
INFO  21:25:56,349 - #35 )
INFO  21:25:56,349 - #44 A
INFO  21:25:56,350 - #44 a
INFO  21:25:56,350 - #31 ;
INFO  21:25:56,350 - #44 C
INFO  21:25:56,350 - #44 c
INFO  21:25:56,350 - #31 ;
INFO  21:25:56,350 - #44 int
INFO  21:25:56,350 - #44 i
INFO  21:25:56,350 - #31 ;
INFO  21:25:56,350 - #44 int
INFO  21:25:56,351 - #44 x
INFO  21:25:56,351 - #36 [
INFO  21:25:56,351 - #37 ]
INFO  21:25:56,351 - #31 ;
INFO  21:25:56,351 - #38 {
INFO  21:25:56,351 - #44 a
INFO  21:25:56,351 - #28 =
INFO  21:25:56,351 - #8 new
INFO  21:25:56,351 - #44 A
INFO  21:25:56,351 - #31 ;
INFO  21:25:56,351 - #44 a
INFO  21:25:56,351 - #33 .
INFO  21:25:56,352 - #44 x
INFO  21:25:56,352 - #28 =
INFO  21:25:56,352 - #8 new
INFO  21:25:56,352 - #44 int
INFO  21:25:56,352 - #36 [
INFO  21:25:56,352 - #43 5
INFO  21:25:56,352 - #37 ]
INFO  21:25:56,352 - #31 ;
INFO  21:25:56,352 - #44 a
INFO  21:25:56,353 - #33 .
INFO  21:25:56,353 - #44 y
INFO  21:25:56,353 - #28 =
INFO  21:25:56,353 - #8 new
INFO  21:25:56,353 - #44 int
INFO  21:25:56,353 - #36 [
INFO  21:25:56,353 - #43 5
INFO  21:25:56,353 - #37 ]
INFO  21:25:56,353 - #31 ;
INFO  21:25:56,354 - #44 c
INFO  21:25:56,354 - #28 =
INFO  21:25:56,354 - #8 new
INFO  21:25:56,354 - #44 C
INFO  21:25:56,354 - #31 ;
INFO  21:25:56,354 - #44 c
INFO  21:25:56,354 - #33 .
INFO  21:25:56,354 - #44 theA
INFO  21:25:56,354 - #28 =
INFO  21:25:56,355 - #44 a
INFO  21:25:56,355 - #31 ;
INFO  21:25:56,355 - #44 c
INFO  21:25:56,355 - #33 .
INFO  21:25:56,355 - #44 x
INFO  21:25:56,355 - #28 =
INFO  21:25:56,355 - #8 new
INFO  21:25:56,355 - #44 int
INFO  21:25:56,355 - #36 [
INFO  21:25:56,355 - #43 5
INFO  21:25:56,355 - #37 ]
INFO  21:25:56,355 - #31 ;
INFO  21:25:56,356 - #44 x
INFO  21:25:56,356 - #28 =
INFO  21:25:56,356 - #8 new
INFO  21:25:56,356 - #44 int
INFO  21:25:56,356 - #36 [
INFO  21:25:56,356 - #43 3
INFO  21:25:56,356 - #37 ]
INFO  21:25:56,356 - #31 ;
INFO  21:25:56,356 - #44 i
INFO  21:25:56,357 - #28 =
INFO  21:25:56,357 - #43 0
INFO  21:25:56,357 - #31 ;
INFO  21:25:56,357 - #10 read
INFO  21:25:56,357 - #34 (
INFO  21:25:56,357 - #44 c
INFO  21:25:56,358 - #33 .
INFO  21:25:56,358 - #44 i
INFO  21:25:56,358 - #35 )
INFO  21:25:56,358 - #31 ;
INFO  21:25:56,358 - #13 while
INFO  21:25:56,358 - #34 (
INFO  21:25:56,358 - #44 i
INFO  21:25:56,358 - #24 <
INFO  21:25:56,359 - #43 5
INFO  21:25:56,359 - #35 )
INFO  21:25:56,359 - #38 {
INFO  21:25:56,359 - #10 read
INFO  21:25:56,359 - #34 (
INFO  21:25:56,359 - #44 c
INFO  21:25:56,359 - #33 .
INFO  21:25:56,359 - #44 x
INFO  21:25:56,359 - #36 [
INFO  21:25:56,360 - #44 i
INFO  21:25:56,360 - #37 ]
INFO  21:25:56,360 - #35 )
INFO  21:25:56,360 - #31 ;
INFO  21:25:56,360 - #10 read
INFO  21:25:56,360 - #34 (
INFO  21:25:56,360 - #44 c
INFO  21:25:56,360 - #33 .
INFO  21:25:56,360 - #44 theA
INFO  21:25:56,361 - #33 .
INFO  21:25:56,361 - #44 x
INFO  21:25:56,361 - #36 [
INFO  21:25:56,361 - #44 i
INFO  21:25:56,361 - #37 ]
INFO  21:25:56,361 - #35 )
INFO  21:25:56,361 - #31 ;
INFO  21:25:56,361 - #44 i
INFO  21:25:56,361 - #29 ++
INFO  21:25:56,362 - #31 ;
INFO  21:25:56,362 - #39 }
INFO  21:25:56,362 - #9 print
INFO  21:25:56,362 - #34 (
INFO  21:25:56,362 - #44 c
INFO  21:25:56,362 - #33 .
INFO  21:25:56,362 - #44 getValue
INFO  21:25:56,362 - #34 (
INFO  21:25:56,363 - #44 c
INFO  21:25:56,363 - #33 .
INFO  21:25:56,363 - #44 theA
INFO  21:25:56,363 - #33 .
INFO  21:25:56,363 - #44 x
INFO  21:25:56,363 - #36 [
INFO  21:25:56,363 - #43 0
INFO  21:25:56,363 - #37 ]
INFO  21:25:56,363 - #35 )
INFO  21:25:56,364 - #35 )
INFO  21:25:56,364 - #31 ;
INFO  21:25:56,364 - #39 }
INFO  21:25:56,364 - #39 }
INFO  21:25:56,364 - GlobalVar = 11
INFO  21:25:56,364 - GlobalConst = 2
INFO  21:25:56,364 - LocalMainVar = 4
INFO  21:25:56,365 - GlobalArray = 6
INFO  21:28:31,853 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:28:31,861 - #2 program
INFO  21:28:31,861 - #44 Program
INFO  21:28:31,862 - #4 class
INFO  21:28:31,862 - #44 A
INFO  21:28:31,862 - #38 {
INFO  21:28:31,862 - #44 int
INFO  21:28:31,862 - #44 x
INFO  21:28:31,862 - #36 [
INFO  21:28:31,862 - #37 ]
INFO  21:28:31,862 - #32 ,
INFO  21:28:31,862 - #44 y
INFO  21:28:31,862 - #36 [
INFO  21:28:31,862 - #37 ]
INFO  21:28:31,862 - #31 ;
INFO  21:28:31,863 - #39 }
INFO  21:28:31,863 - #6 const
INFO  21:28:31,863 - #44 int
INFO  21:28:31,863 - #44 pi
INFO  21:28:31,863 - #28 =
INFO  21:28:31,863 - #43 3
INFO  21:28:31,863 - #32 ,
INFO  21:28:31,863 - #44 e
INFO  21:28:31,863 - #28 =
INFO  21:28:31,863 - #43 2
INFO  21:28:31,863 - #31 ;
INFO  21:28:31,863 - #44 int
INFO  21:28:31,863 - #44 a
INFO  21:28:31,864 - #36 [
INFO  21:28:31,864 - #37 ]
INFO  21:28:31,864 - #32 ,
INFO  21:28:31,864 - #44 b
INFO  21:28:31,864 - #36 [
INFO  21:28:31,864 - #37 ]
INFO  21:28:31,864 - #31 ;
INFO  21:28:31,864 - #44 char
INFO  21:28:31,864 - #44 t
INFO  21:28:31,864 - #36 [
INFO  21:28:31,864 - #37 ]
INFO  21:28:31,864 - #31 ;
INFO  21:28:31,864 - #4 class
INFO  21:28:31,864 - #44 B
INFO  21:28:31,865 - #14 extends
INFO  21:28:31,865 - #44 A
INFO  21:28:31,865 - #38 {
INFO  21:28:31,865 - #44 int
INFO  21:28:31,865 - #44 i
INFO  21:28:31,865 - #31 ;
INFO  21:28:31,865 - #44 int
INFO  21:28:31,865 - #44 x
INFO  21:28:31,865 - #36 [
INFO  21:28:31,865 - #37 ]
INFO  21:28:31,865 - #31 ;
INFO  21:28:31,865 - #38 {
INFO  21:28:31,865 - #44 int
INFO  21:28:31,865 - #44 getValue
INFO  21:28:31,866 - #34 (
INFO  21:28:31,866 - #44 int
INFO  21:28:31,866 - #44 a
INFO  21:28:31,866 - #35 )
INFO  21:28:31,866 - #44 int
INFO  21:28:31,866 - #44 b
INFO  21:28:31,866 - #31 ;
INFO  21:28:31,866 - #44 bool
INFO  21:28:31,867 - #44 c
INFO  21:28:31,867 - #31 ;
INFO  21:28:31,867 - #38 {
INFO  21:28:31,867 - #11 return
INFO  21:28:31,867 - #44 this
INFO  21:28:31,867 - #33 .
INFO  21:28:31,867 - #44 i
INFO  21:28:31,867 - #15 +
INFO  21:28:31,867 - #44 this
INFO  21:28:31,868 - #33 .
INFO  21:28:31,868 - #44 x
INFO  21:28:31,868 - #36 [
INFO  21:28:31,868 - #43 0
INFO  21:28:31,868 - #37 ]
INFO  21:28:31,868 - #15 +
INFO  21:28:31,868 - #44 a
INFO  21:28:31,868 - #31 ;
INFO  21:28:31,869 - #39 }
INFO  21:28:31,869 - #39 }
INFO  21:28:31,869 - #39 }
INFO  21:28:31,869 - #4 class
INFO  21:28:31,869 - #44 C
INFO  21:28:31,869 - #14 extends
INFO  21:28:31,869 - #44 B
INFO  21:28:31,869 - #38 {
INFO  21:28:31,869 - #44 A
INFO  21:28:31,870 - #44 theA
INFO  21:28:31,870 - #31 ;
INFO  21:28:31,870 - #44 string
INFO  21:28:31,870 - #44 a
INFO  21:28:31,870 - #31 ;
INFO  21:28:31,870 - #39 }
INFO  21:28:31,870 - #38 {
INFO  21:28:31,870 - #12 void
INFO  21:28:31,871 - #44 main
INFO  21:28:31,871 - #34 (
INFO  21:28:31,871 - #35 )
INFO  21:28:31,871 - #44 A
INFO  21:28:31,871 - #44 a
INFO  21:28:31,871 - #31 ;
INFO  21:28:31,871 - #44 C
INFO  21:28:31,871 - #44 c
INFO  21:28:31,871 - #31 ;
INFO  21:28:31,871 - #44 int
INFO  21:28:31,872 - #44 i
INFO  21:28:31,872 - #31 ;
INFO  21:28:31,872 - #44 int
INFO  21:28:31,872 - #44 x
INFO  21:28:31,872 - #36 [
INFO  21:28:31,872 - #37 ]
INFO  21:28:31,872 - #31 ;
INFO  21:28:31,872 - #38 {
INFO  21:28:31,872 - #44 a
INFO  21:28:31,872 - #28 =
INFO  21:28:31,872 - #8 new
INFO  21:28:31,872 - #44 A
INFO  21:28:31,872 - #31 ;
INFO  21:28:31,873 - #44 a
INFO  21:28:31,873 - #33 .
INFO  21:28:31,873 - #44 x
INFO  21:28:31,873 - #28 =
INFO  21:28:31,873 - #8 new
INFO  21:28:31,873 - #44 int
INFO  21:28:31,873 - #36 [
INFO  21:28:31,873 - #43 5
INFO  21:28:31,873 - #37 ]
INFO  21:28:31,873 - #31 ;
INFO  21:28:31,874 - #44 a
INFO  21:28:31,874 - #33 .
INFO  21:28:31,874 - #44 y
INFO  21:28:31,874 - #28 =
INFO  21:28:31,874 - #8 new
INFO  21:28:31,874 - #44 int
INFO  21:28:31,874 - #36 [
INFO  21:28:31,874 - #43 5
INFO  21:28:31,874 - #37 ]
INFO  21:28:31,874 - #31 ;
INFO  21:28:31,875 - #44 c
INFO  21:28:31,875 - #28 =
INFO  21:28:31,875 - #8 new
INFO  21:28:31,875 - #44 C
INFO  21:28:31,875 - #31 ;
INFO  21:28:31,875 - #44 c
INFO  21:28:31,875 - #33 .
INFO  21:28:31,875 - #44 theA
INFO  21:28:31,875 - #28 =
INFO  21:28:31,875 - #44 a
INFO  21:28:31,875 - #31 ;
INFO  21:28:31,876 - #44 c
INFO  21:28:31,876 - #33 .
INFO  21:28:31,876 - #44 x
INFO  21:28:31,876 - #28 =
INFO  21:28:31,876 - #8 new
INFO  21:28:31,876 - #44 int
INFO  21:28:31,876 - #36 [
INFO  21:28:31,876 - #43 5
INFO  21:28:31,876 - #37 ]
INFO  21:28:31,876 - #31 ;
INFO  21:28:31,876 - #44 x
INFO  21:28:31,876 - #28 =
INFO  21:28:31,876 - #8 new
INFO  21:28:31,876 - #44 int
INFO  21:28:31,877 - #36 [
INFO  21:28:31,877 - #43 3
INFO  21:28:31,877 - #37 ]
INFO  21:28:31,877 - #31 ;
INFO  21:28:31,877 - #44 i
INFO  21:28:31,877 - #28 =
INFO  21:28:31,877 - #43 0
INFO  21:28:31,877 - #31 ;
INFO  21:28:31,877 - #10 read
INFO  21:28:31,878 - #34 (
INFO  21:28:31,878 - #44 c
INFO  21:28:31,878 - #33 .
INFO  21:28:31,878 - #44 i
INFO  21:28:31,878 - #35 )
INFO  21:28:31,878 - #31 ;
INFO  21:28:31,878 - #13 while
INFO  21:28:31,878 - #34 (
INFO  21:28:31,878 - #44 i
INFO  21:28:31,879 - #24 <
INFO  21:28:31,879 - #43 5
INFO  21:28:31,879 - #35 )
INFO  21:28:31,879 - #38 {
INFO  21:28:31,879 - #10 read
INFO  21:28:31,879 - #34 (
INFO  21:28:31,879 - #44 c
INFO  21:28:31,879 - #33 .
INFO  21:28:31,880 - #44 x
INFO  21:28:31,880 - #36 [
INFO  21:28:31,880 - #44 i
INFO  21:28:31,880 - #37 ]
INFO  21:28:31,880 - #35 )
INFO  21:28:31,880 - #31 ;
INFO  21:28:31,880 - #10 read
INFO  21:28:31,880 - #34 (
INFO  21:28:31,880 - #44 c
INFO  21:28:31,881 - #33 .
INFO  21:28:31,881 - #44 theA
INFO  21:28:31,881 - #33 .
INFO  21:28:31,881 - #44 x
INFO  21:28:31,881 - #36 [
INFO  21:28:31,881 - #44 i
INFO  21:28:31,881 - #37 ]
INFO  21:28:31,881 - #35 )
INFO  21:28:31,881 - #31 ;
INFO  21:28:31,882 - #44 i
INFO  21:28:31,882 - #29 ++
INFO  21:28:31,882 - #31 ;
INFO  21:28:31,882 - #39 }
INFO  21:28:31,882 - #9 print
INFO  21:28:31,882 - #34 (
INFO  21:28:31,882 - #44 c
INFO  21:28:31,882 - #33 .
INFO  21:28:31,882 - #44 getValue
INFO  21:28:31,882 - #34 (
INFO  21:28:31,883 - #44 c
INFO  21:28:31,883 - #33 .
INFO  21:28:31,883 - #44 theA
INFO  21:28:31,883 - #33 .
INFO  21:28:31,883 - #44 x
INFO  21:28:31,883 - #36 [
INFO  21:28:31,883 - #43 0
INFO  21:28:31,884 - #37 ]
INFO  21:28:31,884 - #35 )
INFO  21:28:31,884 - #35 )
INFO  21:28:31,884 - #31 ;
INFO  21:28:31,884 - #39 }
INFO  21:28:31,884 - #39 }
INFO  21:28:31,885 - GlobalVar = 5
INFO  21:28:31,885 - GlobalConst = 2
INFO  21:28:31,885 - LocalMainVar = 4
INFO  21:28:31,885 - GlobalArray = 3
INFO  21:36:38,571 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:36:38,579 - #2 program
INFO  21:36:38,579 - #44 Program
INFO  21:36:38,579 - #4 class
INFO  21:36:38,580 - #44 A
INFO  21:36:38,580 - #38 {
INFO  21:36:38,580 - #44 int
INFO  21:36:38,580 - #44 x
INFO  21:36:38,580 - #36 [
INFO  21:36:38,580 - #37 ]
INFO  21:36:38,580 - #32 ,
INFO  21:36:38,581 - #44 y
INFO  21:36:38,581 - #36 [
INFO  21:36:38,581 - #37 ]
INFO  21:36:38,581 - #31 ;
INFO  21:36:38,581 - #39 }
INFO  21:36:38,581 - #6 const
INFO  21:36:38,581 - #44 int
INFO  21:36:38,581 - #44 pi
INFO  21:36:38,581 - #28 =
INFO  21:36:38,582 - #43 3
INFO  21:36:38,582 - #32 ,
INFO  21:36:38,582 - #44 e
INFO  21:36:38,582 - #28 =
INFO  21:36:38,582 - #43 2
INFO  21:36:38,582 - #31 ;
INFO  21:36:38,582 - #4 class
INFO  21:36:38,582 - #44 B
INFO  21:36:38,582 - #14 extends
INFO  21:36:38,583 - #44 A
INFO  21:36:38,583 - #38 {
INFO  21:36:38,583 - #44 int
INFO  21:36:38,583 - #44 i
INFO  21:36:38,583 - #31 ;
INFO  21:36:38,583 - #44 int
INFO  21:36:38,583 - #44 x
INFO  21:36:38,583 - #36 [
INFO  21:36:38,583 - #37 ]
INFO  21:36:38,584 - #31 ;
INFO  21:36:38,584 - #38 {
INFO  21:36:38,584 - #44 int
INFO  21:36:38,584 - #44 getValue
INFO  21:36:38,584 - #34 (
INFO  21:36:38,584 - #44 int
INFO  21:36:38,584 - #44 a
INFO  21:36:38,584 - #35 )
INFO  21:36:38,584 - #44 int
INFO  21:36:38,584 - #44 b
INFO  21:36:38,584 - #31 ;
INFO  21:36:38,585 - #44 bool
INFO  21:36:38,585 - #44 c
INFO  21:36:38,585 - #31 ;
INFO  21:36:38,585 - #38 {
INFO  21:36:38,585 - #11 return
INFO  21:36:38,585 - #44 this
INFO  21:36:38,585 - #33 .
INFO  21:36:38,586 - #44 i
INFO  21:36:38,586 - #15 +
INFO  21:36:38,586 - #44 this
INFO  21:36:38,586 - #33 .
INFO  21:36:38,586 - #44 x
INFO  21:36:38,586 - #36 [
INFO  21:36:38,586 - #43 0
INFO  21:36:38,586 - #37 ]
INFO  21:36:38,586 - #15 +
INFO  21:36:38,587 - #44 a
INFO  21:36:38,587 - #31 ;
INFO  21:36:38,587 - #39 }
INFO  21:36:38,587 - #39 }
INFO  21:36:38,587 - #39 }
INFO  21:36:38,587 - #4 class
INFO  21:36:38,587 - #44 C
INFO  21:36:38,587 - #14 extends
INFO  21:36:38,587 - #44 B
INFO  21:36:38,587 - #38 {
INFO  21:36:38,588 - #44 A
INFO  21:36:38,588 - #44 theA
INFO  21:36:38,588 - #31 ;
INFO  21:36:38,588 - #44 string
INFO  21:36:38,588 - #44 a
INFO  21:36:38,588 - #31 ;
INFO  21:36:38,588 - #39 }
INFO  21:36:38,588 - #38 {
INFO  21:36:38,589 - #12 void
INFO  21:36:38,589 - #44 main
INFO  21:36:38,589 - #34 (
INFO  21:36:38,589 - #35 )
INFO  21:36:38,589 - #44 A
INFO  21:36:38,589 - #44 a
INFO  21:36:38,589 - #31 ;
INFO  21:36:38,589 - #44 C
INFO  21:36:38,590 - #44 c
INFO  21:36:38,590 - #31 ;
INFO  21:36:38,590 - #44 int
INFO  21:36:38,590 - #44 i
INFO  21:36:38,590 - #31 ;
INFO  21:36:38,590 - #44 int
INFO  21:36:38,590 - #44 x
INFO  21:36:38,590 - #36 [
INFO  21:36:38,590 - #37 ]
INFO  21:36:38,591 - #31 ;
INFO  21:36:38,591 - #38 {
INFO  21:36:38,591 - #44 a
INFO  21:36:38,591 - #28 =
INFO  21:36:38,591 - #8 new
INFO  21:36:38,591 - #44 A
INFO  21:36:38,591 - #31 ;
INFO  21:36:38,591 - #44 a
INFO  21:36:38,591 - #33 .
INFO  21:36:38,592 - #44 x
INFO  21:36:38,592 - #28 =
INFO  21:36:38,592 - #8 new
INFO  21:36:38,592 - #44 int
INFO  21:36:38,592 - #36 [
INFO  21:36:38,592 - #43 5
INFO  21:36:38,592 - #37 ]
INFO  21:36:38,592 - #31 ;
INFO  21:36:38,592 - #44 a
INFO  21:36:38,593 - #33 .
INFO  21:36:38,593 - #44 y
INFO  21:36:38,593 - #28 =
INFO  21:36:38,593 - #8 new
INFO  21:36:38,593 - #44 int
INFO  21:36:38,593 - #36 [
INFO  21:36:38,593 - #43 5
INFO  21:36:38,593 - #37 ]
INFO  21:36:38,593 - #31 ;
INFO  21:36:38,594 - #44 c
INFO  21:36:38,594 - #28 =
INFO  21:36:38,594 - #8 new
INFO  21:36:38,594 - #44 C
INFO  21:36:38,594 - #31 ;
INFO  21:36:38,594 - #44 c
INFO  21:36:38,594 - #33 .
INFO  21:36:38,594 - #44 theA
INFO  21:36:38,595 - #28 =
INFO  21:36:38,595 - #44 a
INFO  21:36:38,595 - #31 ;
INFO  21:36:38,595 - #44 c
INFO  21:36:38,595 - #33 .
INFO  21:36:38,595 - #44 x
INFO  21:36:38,595 - #28 =
INFO  21:36:38,595 - #8 new
INFO  21:36:38,596 - #44 int
INFO  21:36:38,596 - #36 [
INFO  21:36:38,596 - #43 5
INFO  21:36:38,596 - #37 ]
INFO  21:36:38,596 - #31 ;
INFO  21:36:38,596 - #44 x
INFO  21:36:38,596 - #28 =
INFO  21:36:38,596 - #8 new
INFO  21:36:38,597 - #44 int
INFO  21:36:38,597 - #36 [
INFO  21:36:38,597 - #43 3
INFO  21:36:38,597 - #37 ]
INFO  21:36:38,597 - #31 ;
INFO  21:36:38,597 - #44 i
INFO  21:36:38,597 - #28 =
INFO  21:36:38,597 - #43 0
INFO  21:36:38,598 - #31 ;
INFO  21:36:38,598 - #10 read
INFO  21:36:38,598 - #34 (
INFO  21:36:38,598 - #44 c
INFO  21:36:38,598 - #33 .
INFO  21:36:38,598 - #44 i
INFO  21:36:38,598 - #35 )
INFO  21:36:38,598 - #31 ;
INFO  21:36:38,599 - #13 while
INFO  21:36:38,599 - #34 (
INFO  21:36:38,599 - #44 i
INFO  21:36:38,599 - #24 <
INFO  21:36:38,599 - #43 5
INFO  21:36:38,599 - #35 )
INFO  21:36:38,599 - #38 {
INFO  21:36:38,600 - #10 read
INFO  21:36:38,600 - #34 (
INFO  21:36:38,600 - #44 c
INFO  21:36:38,600 - #33 .
INFO  21:36:38,600 - #44 x
INFO  21:36:38,600 - #36 [
INFO  21:36:38,601 - #44 i
INFO  21:36:38,601 - #37 ]
INFO  21:36:38,601 - #35 )
INFO  21:36:38,601 - #31 ;
INFO  21:36:38,601 - #10 read
INFO  21:36:38,601 - #34 (
INFO  21:36:38,601 - #44 c
INFO  21:36:38,602 - #33 .
INFO  21:36:38,602 - #44 theA
INFO  21:36:38,602 - #33 .
INFO  21:36:38,602 - #44 x
INFO  21:36:38,602 - #36 [
INFO  21:36:38,602 - #44 i
INFO  21:36:38,602 - #37 ]
INFO  21:36:38,602 - #35 )
INFO  21:36:38,602 - #31 ;
INFO  21:36:38,602 - #44 i
INFO  21:36:38,603 - #29 ++
INFO  21:36:38,603 - #31 ;
INFO  21:36:38,603 - #39 }
INFO  21:36:38,603 - #9 print
INFO  21:36:38,603 - #34 (
INFO  21:36:38,603 - #44 c
INFO  21:36:38,603 - #33 .
INFO  21:36:38,603 - #44 getValue
INFO  21:36:38,603 - #34 (
INFO  21:36:38,603 - #44 c
INFO  21:36:38,604 - #33 .
INFO  21:36:38,604 - #44 theA
INFO  21:36:38,604 - #33 .
INFO  21:36:38,604 - #44 x
INFO  21:36:38,604 - #36 [
INFO  21:36:38,604 - #43 0
INFO  21:36:38,604 - #37 ]
INFO  21:36:38,604 - #35 )
INFO  21:36:38,604 - #35 )
INFO  21:36:38,604 - #31 ;
INFO  21:36:38,605 - #39 }
INFO  21:36:38,605 - #39 }
INFO  21:36:38,605 - GlobalVar = 2
INFO  21:36:38,605 - GlobalConst = 2
INFO  21:36:38,605 - LocalMainVar = 4
INFO  21:36:38,605 - GlobalArray = 0
INFO  21:36:38,605 - FuncProg = 1
INFO  21:37:21,781 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:37:21,790 - #2 program
INFO  21:37:21,790 - #44 Program
INFO  21:37:21,790 - #4 class
INFO  21:37:21,790 - #44 A
INFO  21:37:21,790 - #38 {
INFO  21:37:21,790 - #44 int
INFO  21:37:21,790 - #44 x
INFO  21:37:21,790 - #36 [
INFO  21:37:21,790 - #37 ]
INFO  21:37:21,791 - #32 ,
INFO  21:37:21,791 - #44 y
INFO  21:37:21,791 - #36 [
INFO  21:37:21,791 - #37 ]
INFO  21:37:21,791 - #31 ;
INFO  21:37:21,791 - #39 }
INFO  21:37:21,791 - #6 const
INFO  21:37:21,791 - #44 int
INFO  21:37:21,791 - #44 pi
INFO  21:37:21,791 - #28 =
INFO  21:37:21,791 - #43 3
INFO  21:37:21,791 - #32 ,
INFO  21:37:21,792 - #44 e
INFO  21:37:21,792 - #28 =
INFO  21:37:21,792 - #43 2
INFO  21:37:21,792 - #31 ;
INFO  21:37:21,792 - #4 class
INFO  21:37:21,792 - #44 B
INFO  21:37:21,792 - #14 extends
INFO  21:37:21,792 - #44 A
INFO  21:37:21,792 - #38 {
INFO  21:37:21,792 - #44 int
INFO  21:37:21,793 - #44 i
INFO  21:37:21,793 - #31 ;
INFO  21:37:21,793 - #44 int
INFO  21:37:21,793 - #44 x
INFO  21:37:21,793 - #36 [
INFO  21:37:21,793 - #37 ]
INFO  21:37:21,793 - #31 ;
INFO  21:37:21,793 - #38 {
INFO  21:37:21,793 - #44 int
INFO  21:37:21,793 - #44 getValue
INFO  21:37:21,793 - #34 (
INFO  21:37:21,793 - #44 int
INFO  21:37:21,793 - #44 a
INFO  21:37:21,793 - #35 )
INFO  21:37:21,794 - #44 int
INFO  21:37:21,794 - #44 b
INFO  21:37:21,794 - #31 ;
INFO  21:37:21,794 - #44 bool
INFO  21:37:21,794 - #44 c
INFO  21:37:21,794 - #31 ;
INFO  21:37:21,794 - #38 {
INFO  21:37:21,794 - #11 return
INFO  21:37:21,794 - #44 this
INFO  21:37:21,794 - #33 .
INFO  21:37:21,794 - #44 i
INFO  21:37:21,794 - #15 +
INFO  21:37:21,795 - #44 this
INFO  21:37:21,795 - #33 .
INFO  21:37:21,795 - #44 x
INFO  21:37:21,795 - #36 [
INFO  21:37:21,795 - #43 0
INFO  21:37:21,795 - #37 ]
INFO  21:37:21,795 - #15 +
INFO  21:37:21,795 - #44 a
INFO  21:37:21,795 - #31 ;
INFO  21:37:21,795 - #39 }
INFO  21:37:21,795 - #39 }
INFO  21:37:21,796 - #39 }
INFO  21:37:21,796 - #4 class
INFO  21:37:21,796 - #44 C
INFO  21:37:21,796 - #14 extends
INFO  21:37:21,796 - #44 B
INFO  21:37:21,796 - #38 {
INFO  21:37:21,796 - #44 A
INFO  21:37:21,796 - #44 theA
INFO  21:37:21,796 - #31 ;
INFO  21:37:21,797 - #44 string
INFO  21:37:21,797 - #44 a
INFO  21:37:21,797 - #31 ;
INFO  21:37:21,797 - #39 }
INFO  21:37:21,797 - #38 {
INFO  21:37:21,797 - #12 void
INFO  21:37:21,797 - #44 main
INFO  21:37:21,797 - #34 (
INFO  21:37:21,798 - #35 )
INFO  21:37:21,798 - #44 A
INFO  21:37:21,798 - #44 a
INFO  21:37:21,798 - #31 ;
INFO  21:37:21,798 - #44 C
INFO  21:37:21,798 - #44 c
INFO  21:37:21,798 - #31 ;
INFO  21:37:21,798 - #44 int
INFO  21:37:21,798 - #44 i
INFO  21:37:21,799 - #31 ;
INFO  21:37:21,799 - #44 int
INFO  21:37:21,799 - #44 x
INFO  21:37:21,799 - #36 [
INFO  21:37:21,799 - #37 ]
INFO  21:37:21,799 - #31 ;
INFO  21:37:21,799 - #38 {
INFO  21:37:21,799 - #44 a
INFO  21:37:21,799 - #28 =
INFO  21:37:21,800 - #8 new
INFO  21:37:21,800 - #44 A
INFO  21:37:21,800 - #31 ;
INFO  21:37:21,800 - #44 a
INFO  21:37:21,800 - #33 .
INFO  21:37:21,800 - #44 x
INFO  21:37:21,800 - #28 =
INFO  21:37:21,800 - #8 new
INFO  21:37:21,800 - #44 int
INFO  21:37:21,800 - #36 [
INFO  21:37:21,800 - #43 5
INFO  21:37:21,801 - #37 ]
INFO  21:37:21,801 - #31 ;
INFO  21:37:21,801 - #44 a
INFO  21:37:21,801 - #33 .
INFO  21:37:21,801 - #44 y
INFO  21:37:21,801 - #28 =
INFO  21:37:21,801 - #8 new
INFO  21:37:21,801 - #44 int
INFO  21:37:21,801 - #36 [
INFO  21:37:21,801 - #43 5
INFO  21:37:21,801 - #37 ]
INFO  21:37:21,802 - #31 ;
INFO  21:37:21,802 - #44 c
INFO  21:37:21,802 - #28 =
INFO  21:37:21,802 - #8 new
INFO  21:37:21,802 - #44 C
INFO  21:37:21,802 - #31 ;
INFO  21:37:21,802 - #44 c
INFO  21:37:21,802 - #33 .
INFO  21:37:21,802 - #44 theA
INFO  21:37:21,802 - #28 =
INFO  21:37:21,803 - #44 a
INFO  21:37:21,803 - #31 ;
INFO  21:37:21,803 - #44 c
INFO  21:37:21,803 - #33 .
INFO  21:37:21,803 - #44 x
INFO  21:37:21,803 - #28 =
INFO  21:37:21,803 - #8 new
INFO  21:37:21,803 - #44 int
INFO  21:37:21,803 - #36 [
INFO  21:37:21,803 - #43 5
INFO  21:37:21,803 - #37 ]
INFO  21:37:21,804 - #31 ;
INFO  21:37:21,804 - #44 x
INFO  21:37:21,804 - #28 =
INFO  21:37:21,804 - #8 new
INFO  21:37:21,804 - #44 int
INFO  21:37:21,804 - #36 [
INFO  21:37:21,804 - #43 3
INFO  21:37:21,804 - #37 ]
INFO  21:37:21,804 - #31 ;
INFO  21:37:21,804 - #44 i
INFO  21:37:21,804 - #28 =
INFO  21:37:21,805 - #43 0
INFO  21:37:21,805 - #31 ;
INFO  21:37:21,805 - #10 read
INFO  21:37:21,805 - #34 (
INFO  21:37:21,805 - #44 c
INFO  21:37:21,805 - #33 .
INFO  21:37:21,805 - #44 i
INFO  21:37:21,805 - #35 )
INFO  21:37:21,805 - #31 ;
INFO  21:37:21,805 - #13 while
INFO  21:37:21,805 - #34 (
INFO  21:37:21,805 - #44 i
INFO  21:37:21,806 - #24 <
INFO  21:37:21,806 - #43 5
INFO  21:37:21,806 - #35 )
INFO  21:37:21,806 - #38 {
INFO  21:37:21,806 - #10 read
INFO  21:37:21,806 - #34 (
INFO  21:37:21,806 - #44 c
INFO  21:37:21,806 - #33 .
INFO  21:37:21,806 - #44 x
INFO  21:37:21,807 - #36 [
INFO  21:37:21,807 - #44 i
INFO  21:37:21,807 - #37 ]
INFO  21:37:21,807 - #35 )
INFO  21:37:21,807 - #31 ;
INFO  21:37:21,807 - #10 read
INFO  21:37:21,807 - #34 (
INFO  21:37:21,808 - #44 c
INFO  21:37:21,808 - #33 .
INFO  21:37:21,808 - #44 theA
INFO  21:37:21,808 - #33 .
INFO  21:37:21,808 - #44 x
INFO  21:37:21,808 - #36 [
INFO  21:37:21,808 - #44 i
INFO  21:37:21,808 - #37 ]
INFO  21:37:21,809 - #35 )
INFO  21:37:21,809 - #31 ;
INFO  21:37:21,809 - #44 i
INFO  21:37:21,809 - #29 ++
INFO  21:37:21,809 - #31 ;
INFO  21:37:21,809 - #39 }
INFO  21:37:21,809 - #9 print
INFO  21:37:21,809 - #34 (
INFO  21:37:21,810 - #44 c
INFO  21:37:21,810 - #33 .
INFO  21:37:21,810 - #44 getValue
INFO  21:37:21,810 - #34 (
INFO  21:37:21,810 - #44 c
INFO  21:37:21,810 - #33 .
INFO  21:37:21,810 - #44 theA
INFO  21:37:21,810 - #33 .
INFO  21:37:21,810 - #44 x
INFO  21:37:21,810 - #36 [
INFO  21:37:21,811 - #43 0
INFO  21:37:21,811 - #37 ]
INFO  21:37:21,811 - #35 )
INFO  21:37:21,811 - #35 )
INFO  21:37:21,811 - #31 ;
INFO  21:37:21,811 - #39 }
INFO  21:37:21,811 - #12 void
INFO  21:37:21,811 - #44 aaa
INFO  21:37:21,812 - #34 (
INFO  21:37:21,812 - #35 )
INFO  21:37:21,812 - #44 A
INFO  21:37:21,812 - #44 a
INFO  21:37:21,812 - #31 ;
INFO  21:37:21,812 - #44 C
INFO  21:37:21,812 - #44 c
INFO  21:37:21,812 - #31 ;
INFO  21:37:21,813 - #44 int
INFO  21:37:21,813 - #44 i
INFO  21:37:21,813 - #31 ;
INFO  21:37:21,813 - #44 int
INFO  21:37:21,813 - #44 x
INFO  21:37:21,813 - #36 [
INFO  21:37:21,813 - #37 ]
INFO  21:37:21,813 - #31 ;
INFO  21:37:21,813 - #38 {
INFO  21:37:21,814 - #39 }
INFO  21:37:21,814 - #12 void
INFO  21:37:21,814 - #44 bbb
INFO  21:37:21,814 - #34 (
INFO  21:37:21,814 - #35 )
INFO  21:37:21,814 - #44 A
INFO  21:37:21,814 - #44 a
INFO  21:37:21,814 - #31 ;
INFO  21:37:21,814 - #44 C
INFO  21:37:21,815 - #44 c
INFO  21:37:21,815 - #31 ;
INFO  21:37:21,815 - #44 int
INFO  21:37:21,815 - #44 i
INFO  21:37:21,815 - #31 ;
INFO  21:37:21,815 - #44 int
INFO  21:37:21,815 - #44 x
INFO  21:37:21,815 - #36 [
INFO  21:37:21,816 - #37 ]
INFO  21:37:21,816 - #31 ;
INFO  21:37:21,816 - #38 {
INFO  21:37:21,816 - #39 }
INFO  21:37:21,816 - #12 void
INFO  21:37:21,816 - #44 ccc
INFO  21:37:21,816 - #34 (
INFO  21:37:21,816 - #35 )
INFO  21:37:21,817 - #44 A
INFO  21:37:21,817 - #44 a
INFO  21:37:21,817 - #31 ;
INFO  21:37:21,817 - #44 C
INFO  21:37:21,817 - #44 c
INFO  21:37:21,817 - #31 ;
INFO  21:37:21,817 - #44 int
INFO  21:37:21,817 - #44 i
INFO  21:37:21,817 - #31 ;
INFO  21:37:21,817 - #44 int
INFO  21:37:21,817 - #44 x
INFO  21:37:21,817 - #36 [
INFO  21:37:21,817 - #37 ]
INFO  21:37:21,818 - #31 ;
INFO  21:37:21,818 - #38 {
INFO  21:37:21,818 - #39 }
INFO  21:37:21,818 - #39 }
INFO  21:37:21,818 - GlobalVar = 2
INFO  21:37:21,818 - GlobalConst = 2
INFO  21:37:21,818 - LocalMainVar = 4
INFO  21:37:21,818 - GlobalArray = 0
INFO  21:37:21,818 - FuncProg = 4
INFO  22:08:55,613 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:08:55,623 - #2 program
INFO  22:08:55,623 - #44 Program
INFO  22:08:55,623 - #4 class
INFO  22:08:55,623 - #44 A
INFO  22:08:55,623 - #38 {
INFO  22:08:55,624 - #44 int
INFO  22:08:55,624 - #44 x
INFO  22:08:55,624 - #36 [
INFO  22:08:55,624 - #37 ]
INFO  22:08:55,624 - #32 ,
INFO  22:08:55,624 - #44 y
INFO  22:08:55,624 - #36 [
INFO  22:08:55,624 - #37 ]
INFO  22:08:55,624 - #31 ;
INFO  22:08:55,624 - #39 }
INFO  22:08:55,624 - #6 const
INFO  22:08:55,625 - #44 int
INFO  22:08:55,625 - #44 pi
INFO  22:08:55,625 - #28 =
INFO  22:08:55,625 - #43 3
INFO  22:08:55,625 - #32 ,
INFO  22:08:55,625 - #44 e
INFO  22:08:55,625 - #28 =
INFO  22:08:55,625 - #43 2
INFO  22:08:55,625 - #31 ;
INFO  22:08:55,625 - #4 class
INFO  22:08:55,625 - #44 B
INFO  22:08:55,625 - #14 extends
INFO  22:08:55,626 - #44 A
INFO  22:08:55,626 - #38 {
INFO  22:08:55,626 - #44 int
INFO  22:08:55,626 - #44 i
INFO  22:08:55,626 - #31 ;
INFO  22:08:55,626 - #44 int
INFO  22:08:55,626 - #44 x
INFO  22:08:55,626 - #36 [
INFO  22:08:55,626 - #37 ]
INFO  22:08:55,626 - #31 ;
INFO  22:08:55,626 - #38 {
INFO  22:08:55,627 - #44 int
INFO  22:08:55,627 - #44 getValue
INFO  22:08:55,627 - #34 (
INFO  22:08:55,627 - #44 int
INFO  22:08:55,627 - #44 a
INFO  22:08:55,627 - #35 )
INFO  22:08:55,627 - #44 int
INFO  22:08:55,627 - #44 b
INFO  22:08:55,627 - #31 ;
INFO  22:08:55,627 - #44 bool
INFO  22:08:55,627 - #44 c
INFO  22:08:55,627 - #31 ;
INFO  22:08:55,628 - #38 {
INFO  22:08:55,628 - #11 return
INFO  22:08:55,628 - #44 this
INFO  22:08:55,628 - #33 .
INFO  22:08:55,628 - #44 i
INFO  22:08:55,628 - #15 +
INFO  22:08:55,628 - #44 this
INFO  22:08:55,628 - #33 .
INFO  22:08:55,628 - #44 x
INFO  22:08:55,628 - #36 [
INFO  22:08:55,628 - #43 0
INFO  22:08:55,629 - #37 ]
INFO  22:08:55,629 - #15 +
INFO  22:08:55,629 - #44 a
INFO  22:08:55,629 - #31 ;
INFO  22:08:55,629 - #39 }
INFO  22:08:55,629 - #39 }
INFO  22:08:55,629 - #39 }
INFO  22:08:55,629 - #4 class
INFO  22:08:55,629 - #44 C
INFO  22:08:55,629 - #14 extends
INFO  22:08:55,630 - #44 B
INFO  22:08:55,630 - #38 {
INFO  22:08:55,630 - #44 A
INFO  22:08:55,630 - #44 theA
INFO  22:08:55,630 - #31 ;
INFO  22:08:55,630 - #44 string
INFO  22:08:55,630 - #44 a
INFO  22:08:55,630 - #31 ;
INFO  22:08:55,630 - #39 }
INFO  22:08:55,630 - #38 {
INFO  22:08:55,631 - #12 void
INFO  22:08:55,631 - #44 main
INFO  22:08:55,631 - #34 (
INFO  22:08:55,631 - #35 )
INFO  22:08:55,631 - #44 A
INFO  22:08:55,631 - #44 a
INFO  22:08:55,631 - #31 ;
INFO  22:08:55,631 - #44 C
INFO  22:08:55,631 - #44 c
INFO  22:08:55,631 - #31 ;
INFO  22:08:55,631 - #44 int
INFO  22:08:55,632 - #44 i
INFO  22:08:55,632 - #31 ;
INFO  22:08:55,632 - #44 int
INFO  22:08:55,632 - #44 x
INFO  22:08:55,632 - #36 [
INFO  22:08:55,632 - #37 ]
INFO  22:08:55,632 - #31 ;
INFO  22:08:55,632 - #38 {
INFO  22:08:55,632 - #44 a
INFO  22:08:55,632 - #28 =
INFO  22:08:55,632 - #8 new
INFO  22:08:55,633 - #44 A
INFO  22:08:55,633 - #31 ;
INFO  22:08:55,633 - #44 a
INFO  22:08:55,633 - #33 .
INFO  22:08:55,633 - #44 x
INFO  22:08:55,633 - #28 =
INFO  22:08:55,633 - #8 new
INFO  22:08:55,633 - #44 int
INFO  22:08:55,633 - #36 [
INFO  22:08:55,633 - #43 5
INFO  22:08:55,633 - #37 ]
INFO  22:08:55,634 - #31 ;
INFO  22:08:55,634 - #44 a
INFO  22:08:55,634 - #33 .
INFO  22:08:55,634 - #44 y
INFO  22:08:55,634 - #28 =
INFO  22:08:55,634 - #8 new
INFO  22:08:55,634 - #44 int
INFO  22:08:55,634 - #36 [
INFO  22:08:55,634 - #43 5
INFO  22:08:55,635 - #37 ]
INFO  22:08:55,635 - #31 ;
INFO  22:08:55,635 - #44 c
INFO  22:08:55,635 - #28 =
INFO  22:08:55,635 - #8 new
INFO  22:08:55,635 - #44 C
INFO  22:08:55,635 - #31 ;
INFO  22:08:55,636 - #44 c
INFO  22:08:55,636 - #33 .
INFO  22:08:55,636 - #44 theA
INFO  22:08:55,636 - #28 =
INFO  22:08:55,636 - #44 a
INFO  22:08:55,636 - #31 ;
INFO  22:08:55,637 - #44 c
INFO  22:08:55,637 - #33 .
INFO  22:08:55,637 - #44 x
INFO  22:08:55,637 - #28 =
INFO  22:08:55,637 - #8 new
INFO  22:08:55,637 - #44 int
INFO  22:08:55,637 - #36 [
INFO  22:08:55,637 - #43 5
INFO  22:08:55,638 - #37 ]
INFO  22:08:55,638 - #31 ;
INFO  22:08:55,638 - #44 x
INFO  22:08:55,638 - #28 =
INFO  22:08:55,638 - #8 new
INFO  22:08:55,638 - #44 int
INFO  22:08:55,638 - #36 [
INFO  22:08:55,638 - #43 3
INFO  22:08:55,638 - #37 ]
INFO  22:08:55,639 - #31 ;
INFO  22:08:55,639 - #44 i
INFO  22:08:55,639 - #28 =
INFO  22:08:55,639 - #43 0
INFO  22:08:55,639 - #31 ;
INFO  22:08:55,639 - #10 read
INFO  22:08:55,639 - #34 (
INFO  22:08:55,639 - #44 c
INFO  22:08:55,639 - #33 .
INFO  22:08:55,639 - #44 i
INFO  22:08:55,639 - #35 )
INFO  22:08:55,640 - #31 ;
INFO  22:08:55,640 - #13 while
INFO  22:08:55,640 - #34 (
INFO  22:08:55,640 - #44 i
INFO  22:08:55,640 - #24 <
INFO  22:08:55,640 - #43 5
INFO  22:08:55,640 - #35 )
INFO  22:08:55,640 - #38 {
INFO  22:08:55,641 - #10 read
INFO  22:08:55,641 - #34 (
INFO  22:08:55,641 - #44 c
INFO  22:08:55,641 - #33 .
INFO  22:08:55,641 - #44 x
INFO  22:08:55,641 - #36 [
INFO  22:08:55,641 - #44 i
INFO  22:08:55,641 - #37 ]
INFO  22:08:55,642 - #35 )
INFO  22:08:55,642 - #31 ;
INFO  22:08:55,642 - #10 read
INFO  22:08:55,642 - #34 (
INFO  22:08:55,642 - #44 c
INFO  22:08:55,642 - #33 .
INFO  22:08:55,642 - #44 theA
INFO  22:08:55,642 - #33 .
INFO  22:08:55,642 - #44 x
INFO  22:08:55,642 - #36 [
INFO  22:08:55,642 - #44 i
INFO  22:08:55,642 - #37 ]
INFO  22:08:55,643 - #35 )
INFO  22:08:55,643 - #31 ;
INFO  22:08:55,643 - #44 i
INFO  22:08:55,643 - #29 ++
INFO  22:08:55,643 - #31 ;
INFO  22:08:55,643 - #39 }
INFO  22:08:55,643 - #9 print
INFO  22:08:55,643 - #34 (
INFO  22:08:55,643 - #44 c
INFO  22:08:55,643 - #33 .
INFO  22:08:55,643 - #44 getValue
INFO  22:08:55,644 - #34 (
INFO  22:08:55,644 - #44 c
INFO  22:08:55,644 - #33 .
INFO  22:08:55,644 - #44 theA
INFO  22:08:55,644 - #33 .
INFO  22:08:55,644 - #44 x
INFO  22:08:55,644 - #36 [
INFO  22:08:55,645 - #43 0
INFO  22:08:55,645 - #37 ]
INFO  22:08:55,645 - #35 )
INFO  22:08:55,645 - #35 )
INFO  22:08:55,645 - #31 ;
INFO  22:08:55,645 - #39 }
INFO  22:08:55,645 - #12 void
INFO  22:08:55,646 - #44 aaa
INFO  22:08:55,646 - #34 (
INFO  22:08:55,646 - #35 )
INFO  22:08:55,646 - #44 A
INFO  22:08:55,646 - #44 a
INFO  22:08:55,646 - #31 ;
INFO  22:08:55,646 - #44 C
INFO  22:08:55,647 - #44 c
INFO  22:08:55,647 - #31 ;
INFO  22:08:55,647 - #44 int
INFO  22:08:55,647 - #44 i
INFO  22:08:55,647 - #31 ;
INFO  22:08:55,647 - #44 int
INFO  22:08:55,647 - #44 x
INFO  22:08:55,647 - #36 [
INFO  22:08:55,647 - #37 ]
INFO  22:08:55,647 - #31 ;
INFO  22:08:55,648 - #38 {
INFO  22:08:55,648 - #39 }
INFO  22:08:55,648 - #12 void
INFO  22:08:55,648 - #44 bbb
INFO  22:08:55,648 - #34 (
INFO  22:08:55,648 - #35 )
INFO  22:08:55,648 - #44 A
INFO  22:08:55,648 - #44 a
INFO  22:08:55,648 - #31 ;
INFO  22:08:55,648 - #44 C
INFO  22:08:55,648 - #44 c
INFO  22:08:55,648 - #31 ;
INFO  22:08:55,649 - #44 int
INFO  22:08:55,649 - #44 i
INFO  22:08:55,649 - #31 ;
INFO  22:08:55,649 - #44 int
INFO  22:08:55,649 - #44 x
INFO  22:08:55,649 - #36 [
INFO  22:08:55,649 - #37 ]
INFO  22:08:55,650 - #31 ;
INFO  22:08:55,650 - #38 {
INFO  22:08:55,650 - #39 }
INFO  22:08:55,650 - #12 void
INFO  22:08:55,650 - #44 ccc
INFO  22:08:55,650 - #34 (
INFO  22:08:55,650 - #35 )
INFO  22:08:55,651 - #44 A
INFO  22:08:55,651 - #44 a
INFO  22:08:55,651 - #31 ;
INFO  22:08:55,651 - #44 C
INFO  22:08:55,651 - #44 c
INFO  22:08:55,651 - #31 ;
INFO  22:08:55,651 - #44 int
INFO  22:08:55,652 - #44 i
INFO  22:08:55,652 - #31 ;
INFO  22:08:55,652 - #44 int
INFO  22:08:55,652 - #44 x
INFO  22:08:55,652 - #36 [
INFO  22:08:55,652 - #37 ]
INFO  22:08:55,652 - #31 ;
INFO  22:08:55,653 - #38 {
INFO  22:08:55,653 - #39 }
INFO  22:08:55,653 - #39 }
INFO  22:08:55,653 - GlobalVar = 2
INFO  22:08:55,653 - GlobalConst = 2
INFO  22:08:55,653 - LocalMainVar = 4
INFO  22:08:55,653 - GlobalArray = 0
INFO  22:08:55,653 - FuncProg = 4
INFO  22:08:55,653 - Blocks = 5
INFO  22:15:13,433 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:15:13,442 - #2 program
INFO  22:15:13,443 - #44 Program
INFO  22:15:13,443 - #4 class
INFO  22:15:13,443 - #44 A
INFO  22:15:13,443 - #38 {
INFO  22:16:19,264 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:16:19,273 - #2 program
INFO  22:16:19,273 - #44 Program
INFO  22:16:19,273 - #4 class
INFO  22:16:19,273 - #44 A
INFO  22:16:19,273 - #38 {
INFO  22:16:19,274 - #44 int
INFO  22:16:19,274 - #44 x
INFO  22:16:19,274 - #36 [
INFO  22:16:19,274 - #37 ]
INFO  22:16:19,274 - #32 ,
INFO  22:16:19,274 - #44 y
INFO  22:16:19,274 - #36 [
INFO  22:16:19,274 - #37 ]
INFO  22:16:19,274 - #31 ;
INFO  22:16:19,274 - #39 }
INFO  22:16:19,274 - #6 const
INFO  22:16:19,274 - #44 int
INFO  22:16:19,275 - #44 pi
INFO  22:16:19,275 - #28 =
INFO  22:16:19,275 - #43 3
INFO  22:16:19,275 - #32 ,
INFO  22:16:19,275 - #44 e
INFO  22:16:19,275 - #28 =
INFO  22:16:19,275 - #43 2
INFO  22:16:19,275 - #31 ;
INFO  22:16:19,275 - #4 class
INFO  22:16:19,275 - #44 B
INFO  22:16:19,275 - #14 extends
INFO  22:16:19,275 - #44 A
INFO  22:16:19,275 - #38 {
INFO  22:16:19,276 - #44 int
INFO  22:16:19,276 - #44 i
INFO  22:16:19,276 - #31 ;
INFO  22:16:19,276 - #44 int
INFO  22:16:19,276 - #44 x
INFO  22:16:19,276 - #36 [
INFO  22:16:19,276 - #37 ]
INFO  22:16:19,276 - #31 ;
INFO  22:16:19,276 - #38 {
INFO  22:16:19,276 - #44 int
INFO  22:16:19,276 - #44 getValue
INFO  22:16:19,276 - #34 (
INFO  22:16:19,276 - #44 int
INFO  22:16:19,276 - #44 a
INFO  22:16:19,277 - #35 )
INFO  22:16:19,277 - #44 int
INFO  22:16:19,277 - #44 b
INFO  22:16:19,277 - #31 ;
INFO  22:16:19,277 - #44 bool
INFO  22:16:19,277 - #44 c
INFO  22:16:19,277 - #31 ;
INFO  22:16:19,277 - #38 {
INFO  22:16:19,277 - #11 return
INFO  22:16:19,277 - #44 this
INFO  22:16:19,277 - #33 .
INFO  22:16:19,278 - #44 i
INFO  22:16:19,278 - #15 +
INFO  22:16:19,278 - #44 this
INFO  22:16:19,278 - #33 .
INFO  22:16:19,278 - #44 x
INFO  22:16:19,278 - #36 [
INFO  22:16:19,278 - #43 0
INFO  22:16:19,278 - #37 ]
INFO  22:16:19,278 - #15 +
INFO  22:16:19,278 - #44 a
INFO  22:16:19,278 - #31 ;
INFO  22:16:19,279 - #39 }
INFO  22:16:19,279 - #39 }
INFO  22:16:19,279 - #39 }
INFO  22:16:19,279 - #4 class
INFO  22:16:19,279 - #44 C
INFO  22:16:19,279 - #14 extends
INFO  22:16:19,279 - #44 B
INFO  22:16:19,279 - #38 {
INFO  22:16:19,279 - #44 A
INFO  22:16:19,280 - #44 theA
INFO  22:16:19,280 - #31 ;
INFO  22:16:19,280 - #44 string
INFO  22:16:19,280 - #44 a
INFO  22:16:19,280 - #31 ;
INFO  22:16:19,280 - #39 }
INFO  22:16:19,280 - #38 {
INFO  22:16:19,280 - #12 void
INFO  22:16:19,280 - #44 main
INFO  22:16:19,280 - #34 (
INFO  22:16:19,281 - #35 )
INFO  22:16:19,281 - #44 A
INFO  22:16:19,281 - #44 a
INFO  22:16:19,281 - #31 ;
INFO  22:16:19,281 - #44 C
INFO  22:16:19,281 - #44 c
INFO  22:16:19,281 - #31 ;
INFO  22:16:19,281 - #44 int
INFO  22:16:19,281 - #44 i
INFO  22:16:19,281 - #31 ;
INFO  22:16:19,281 - #44 int
INFO  22:16:19,282 - #44 x
INFO  22:16:19,282 - #36 [
INFO  22:16:19,282 - #37 ]
INFO  22:16:19,282 - #31 ;
INFO  22:16:19,282 - #38 {
INFO  22:16:19,282 - #44 a
INFO  22:16:19,282 - #28 =
INFO  22:16:19,282 - #8 new
INFO  22:16:19,282 - #44 A
INFO  22:16:19,282 - #31 ;
INFO  22:16:19,282 - #44 a
INFO  22:16:19,283 - #33 .
INFO  22:16:19,283 - #44 x
INFO  22:16:19,283 - #28 =
INFO  22:16:19,283 - #8 new
INFO  22:16:19,283 - #44 int
INFO  22:16:19,283 - #36 [
INFO  22:16:19,283 - #43 5
INFO  22:16:19,283 - #37 ]
INFO  22:16:19,283 - #31 ;
INFO  22:16:19,283 - #44 a
INFO  22:16:19,284 - #33 .
INFO  22:16:19,284 - #44 y
INFO  22:16:19,284 - #28 =
INFO  22:16:19,284 - #8 new
INFO  22:16:19,284 - #44 int
INFO  22:16:19,284 - #36 [
INFO  22:16:19,284 - #43 5
INFO  22:16:19,284 - #37 ]
INFO  22:16:19,284 - #31 ;
INFO  22:16:19,285 - #44 c
INFO  22:16:19,285 - #28 =
INFO  22:16:19,285 - #8 new
INFO  22:16:19,285 - #44 C
INFO  22:16:19,285 - #31 ;
INFO  22:16:19,285 - #44 c
INFO  22:16:19,285 - #33 .
INFO  22:16:19,285 - #44 theA
INFO  22:16:19,286 - #28 =
INFO  22:16:19,286 - #44 a
INFO  22:16:19,286 - #31 ;
INFO  22:16:19,286 - #44 c
INFO  22:16:19,286 - #33 .
INFO  22:16:19,286 - #44 x
INFO  22:16:19,286 - #28 =
INFO  22:16:19,286 - #8 new
INFO  22:16:19,286 - #44 int
INFO  22:16:19,287 - #36 [
INFO  22:16:19,287 - #43 5
INFO  22:16:19,287 - #37 ]
INFO  22:16:19,287 - #31 ;
INFO  22:16:19,287 - #44 x
INFO  22:16:19,287 - #28 =
INFO  22:16:19,287 - #8 new
INFO  22:16:19,287 - #44 int
INFO  22:16:19,287 - #36 [
INFO  22:16:19,288 - #43 3
INFO  22:16:19,288 - #37 ]
INFO  22:16:19,288 - #31 ;
INFO  22:16:19,288 - #44 i
INFO  22:16:19,288 - #28 =
INFO  22:16:19,288 - #43 0
INFO  22:16:19,288 - #31 ;
INFO  22:16:19,288 - #10 read
INFO  22:16:19,288 - #34 (
INFO  22:16:19,288 - #44 c
INFO  22:16:19,288 - #33 .
INFO  22:16:19,288 - #44 i
INFO  22:16:19,289 - #35 )
INFO  22:16:19,289 - #31 ;
INFO  22:16:19,289 - #13 while
INFO  22:16:19,289 - #34 (
INFO  22:16:19,289 - #44 i
INFO  22:16:19,289 - #24 <
INFO  22:16:19,289 - #43 5
INFO  22:16:19,289 - #35 )
INFO  22:16:19,289 - #38 {
INFO  22:16:19,290 - #10 read
INFO  22:16:19,290 - #34 (
INFO  22:16:19,290 - #44 c
INFO  22:16:19,290 - #33 .
INFO  22:16:19,290 - #44 x
INFO  22:16:19,290 - #36 [
INFO  22:16:19,290 - #44 i
INFO  22:16:19,290 - #37 ]
INFO  22:16:19,290 - #35 )
INFO  22:16:19,291 - #31 ;
INFO  22:16:19,291 - #10 read
INFO  22:16:19,291 - #34 (
INFO  22:16:19,291 - #44 c
INFO  22:16:19,291 - #33 .
INFO  22:16:19,291 - #44 theA
INFO  22:16:19,291 - #33 .
INFO  22:16:19,291 - #44 x
INFO  22:16:19,291 - #36 [
INFO  22:16:19,292 - #44 i
INFO  22:16:19,292 - #37 ]
INFO  22:16:19,292 - #35 )
INFO  22:16:19,292 - #31 ;
INFO  22:16:19,292 - #44 i
INFO  22:16:19,292 - #29 ++
INFO  22:16:19,292 - #31 ;
INFO  22:16:19,292 - #39 }
INFO  22:16:19,292 - #9 print
INFO  22:16:19,292 - #34 (
INFO  22:16:19,293 - #44 c
INFO  22:16:19,293 - #33 .
INFO  22:16:19,293 - #44 getValue
INFO  22:16:19,293 - #34 (
INFO  22:16:19,293 - #44 c
INFO  22:16:19,293 - #33 .
INFO  22:16:19,293 - #44 theA
INFO  22:16:19,293 - #33 .
INFO  22:16:19,293 - #44 x
INFO  22:16:19,293 - #36 [
INFO  22:16:19,294 - #43 0
INFO  22:16:19,294 - #37 ]
INFO  22:16:19,294 - #35 )
INFO  22:16:19,294 - #35 )
INFO  22:16:19,294 - #31 ;
INFO  22:16:19,294 - #39 }
INFO  22:16:19,294 - #12 void
INFO  22:16:19,294 - #44 aaa
INFO  22:16:19,294 - #34 (
INFO  22:16:19,294 - #35 )
INFO  22:16:19,294 - #44 A
INFO  22:16:19,295 - #44 a
INFO  22:16:19,295 - #31 ;
INFO  22:16:19,295 - #44 C
INFO  22:16:19,295 - #44 c
INFO  22:16:19,295 - #31 ;
INFO  22:16:19,295 - #44 int
INFO  22:16:19,295 - #44 i
INFO  22:16:19,295 - #31 ;
INFO  22:16:19,295 - #44 int
INFO  22:16:19,296 - #44 x
INFO  22:16:19,296 - #36 [
INFO  22:16:19,296 - #37 ]
INFO  22:16:19,296 - #31 ;
INFO  22:16:19,296 - #38 {
INFO  22:16:19,296 - #39 }
INFO  22:16:19,296 - #12 void
INFO  22:16:19,296 - #44 bbb
INFO  22:16:19,296 - #34 (
INFO  22:16:19,296 - #35 )
INFO  22:16:19,297 - #44 A
INFO  22:16:19,297 - #44 a
INFO  22:16:19,297 - #31 ;
INFO  22:16:19,297 - #44 C
INFO  22:16:19,297 - #44 c
INFO  22:16:19,297 - #31 ;
INFO  22:16:19,297 - #44 int
INFO  22:16:19,297 - #44 i
INFO  22:16:19,297 - #31 ;
INFO  22:16:19,297 - #44 int
INFO  22:16:19,298 - #44 x
INFO  22:16:19,298 - #36 [
INFO  22:16:19,298 - #37 ]
INFO  22:16:19,298 - #31 ;
INFO  22:16:19,298 - #38 {
INFO  22:16:19,298 - #39 }
INFO  22:16:19,298 - #12 void
INFO  22:16:19,298 - #44 ccc
INFO  22:16:19,298 - #34 (
INFO  22:16:19,298 - #35 )
INFO  22:16:19,298 - #44 A
INFO  22:16:19,298 - #44 a
INFO  22:16:19,299 - #31 ;
INFO  22:16:19,299 - #44 C
INFO  22:16:19,299 - #44 c
INFO  22:16:19,299 - #31 ;
INFO  22:16:19,299 - #44 int
INFO  22:16:19,299 - #44 i
INFO  22:16:19,299 - #31 ;
INFO  22:16:19,299 - #44 int
INFO  22:16:19,299 - #44 x
INFO  22:16:19,299 - #36 [
INFO  22:16:19,299 - #37 ]
INFO  22:16:19,299 - #31 ;
INFO  22:16:19,299 - #38 {
INFO  22:16:19,299 - #39 }
INFO  22:16:19,299 - #39 }
INFO  22:16:19,300 - GlobalVar = 2
INFO  22:16:19,300 - GlobalConst = 2
INFO  22:16:19,300 - LocalMainVar = 4
INFO  22:16:19,300 - GlobalArray = 0
INFO  22:16:19,300 - FuncProg = 4
INFO  22:16:19,300 - Blocks = 5
INFO  22:17:02,744 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:17:02,753 - #2 program
INFO  22:17:02,753 - #44 Program
INFO  22:17:02,753 - #4 class
INFO  22:17:02,753 - #44 A
INFO  22:17:02,753 - #38 {
INFO  22:17:02,753 - #44 int
INFO  22:17:02,753 - #44 x
INFO  22:17:02,753 - #36 [
INFO  22:17:02,754 - #37 ]
INFO  22:17:02,754 - #32 ,
INFO  22:17:02,754 - #44 y
INFO  22:17:02,754 - #36 [
INFO  22:17:02,754 - #37 ]
INFO  22:17:02,754 - #31 ;
INFO  22:17:02,754 - #39 }
INFO  22:17:02,754 - #6 const
INFO  22:17:02,754 - #44 int
INFO  22:17:02,754 - #44 pi
INFO  22:17:02,754 - #28 =
INFO  22:17:02,754 - #43 3
INFO  22:17:02,754 - #32 ,
INFO  22:17:02,755 - #44 e
INFO  22:17:02,755 - #28 =
INFO  22:17:02,755 - #43 2
INFO  22:17:02,755 - #31 ;
INFO  22:17:02,755 - #4 class
INFO  22:17:02,755 - #44 B
INFO  22:17:02,755 - #14 extends
INFO  22:17:02,755 - #44 A
INFO  22:17:02,755 - #38 {
INFO  22:17:02,755 - #44 int
INFO  22:17:02,755 - #44 i
INFO  22:17:02,755 - #31 ;
INFO  22:17:02,755 - #44 int
INFO  22:17:02,755 - #44 x
INFO  22:17:02,756 - #36 [
INFO  22:17:02,756 - #37 ]
INFO  22:17:02,756 - #31 ;
INFO  22:17:02,756 - #38 {
INFO  22:17:02,756 - #44 int
INFO  22:17:02,756 - #44 getValue
INFO  22:17:02,756 - #34 (
INFO  22:17:02,756 - #44 int
INFO  22:17:02,756 - #44 a
INFO  22:17:02,756 - #35 )
INFO  22:17:02,756 - #44 int
INFO  22:17:02,756 - #44 b
INFO  22:17:02,756 - #31 ;
INFO  22:17:02,757 - #44 bool
INFO  22:17:02,757 - #44 c
INFO  22:17:02,757 - #31 ;
INFO  22:17:02,757 - #38 {
INFO  22:17:02,757 - #11 return
INFO  22:17:02,757 - #44 this
INFO  22:17:02,757 - #33 .
INFO  22:17:02,757 - #44 i
INFO  22:17:02,757 - #15 +
INFO  22:17:02,757 - #44 this
INFO  22:17:02,757 - #33 .
INFO  22:17:02,758 - #44 x
INFO  22:17:02,758 - #36 [
INFO  22:17:02,758 - #43 0
INFO  22:17:02,758 - #37 ]
INFO  22:17:02,758 - #15 +
INFO  22:17:02,758 - #44 a
INFO  22:17:02,758 - #31 ;
INFO  22:17:02,758 - #39 }
INFO  22:17:02,758 - #39 }
INFO  22:17:02,758 - #39 }
INFO  22:17:02,758 - #4 class
INFO  22:17:02,759 - #44 C
INFO  22:17:02,759 - #14 extends
INFO  22:17:02,759 - #44 B
INFO  22:17:02,759 - #38 {
INFO  22:17:02,759 - #44 A
INFO  22:17:02,759 - #44 theA
INFO  22:17:02,759 - #31 ;
INFO  22:17:02,759 - #44 string
INFO  22:17:02,759 - #44 a
INFO  22:17:02,759 - #31 ;
INFO  22:17:02,759 - #39 }
INFO  22:17:02,760 - #38 {
INFO  22:17:02,760 - #12 void
INFO  22:17:02,760 - #44 main
INFO  22:17:02,760 - #34 (
INFO  22:17:02,760 - #35 )
INFO  22:17:02,760 - #44 A
INFO  22:17:02,760 - #44 a
INFO  22:17:02,760 - #31 ;
INFO  22:17:02,760 - #44 C
INFO  22:17:02,760 - #44 c
INFO  22:17:02,761 - #31 ;
INFO  22:17:02,761 - #44 int
INFO  22:17:02,761 - #44 i
INFO  22:17:02,761 - #31 ;
INFO  22:17:02,761 - #44 int
INFO  22:17:02,761 - #44 x
INFO  22:17:02,761 - #36 [
INFO  22:17:02,761 - #37 ]
INFO  22:17:02,761 - #31 ;
INFO  22:17:02,762 - #38 {
INFO  22:17:02,762 - #44 a
INFO  22:17:02,762 - #28 =
INFO  22:17:02,762 - #8 new
INFO  22:17:02,762 - #44 A
INFO  22:17:02,762 - #31 ;
INFO  22:17:02,762 - #44 a
INFO  22:17:02,762 - #33 .
INFO  22:17:02,762 - #44 x
INFO  22:17:02,762 - #28 =
INFO  22:17:02,762 - #8 new
INFO  22:17:02,762 - #44 int
INFO  22:17:02,762 - #36 [
INFO  22:17:02,763 - #43 5
INFO  22:17:02,763 - #37 ]
INFO  22:17:02,763 - #31 ;
INFO  22:17:02,763 - #44 a
INFO  22:17:02,763 - #33 .
INFO  22:17:02,763 - #44 y
INFO  22:17:02,763 - #28 =
INFO  22:17:02,763 - #8 new
INFO  22:17:02,763 - #44 int
INFO  22:17:02,763 - #36 [
INFO  22:17:02,763 - #43 5
INFO  22:17:02,763 - #37 ]
INFO  22:17:02,764 - #31 ;
INFO  22:17:02,764 - #44 c
INFO  22:17:02,764 - #28 =
INFO  22:17:02,764 - #8 new
INFO  22:17:02,764 - #44 C
INFO  22:17:02,764 - #31 ;
INFO  22:17:02,764 - #44 c
INFO  22:17:02,764 - #33 .
INFO  22:17:02,764 - #44 theA
INFO  22:17:02,764 - #28 =
INFO  22:17:02,765 - #44 a
INFO  22:17:02,765 - #31 ;
INFO  22:17:02,765 - #44 c
INFO  22:17:02,765 - #33 .
INFO  22:17:02,765 - #44 x
INFO  22:17:02,765 - #28 =
INFO  22:17:02,765 - #8 new
INFO  22:17:02,765 - #44 int
INFO  22:17:02,766 - #36 [
INFO  22:17:02,766 - #43 5
INFO  22:17:02,766 - #37 ]
INFO  22:17:02,766 - #31 ;
INFO  22:17:02,766 - #44 x
INFO  22:17:02,766 - #28 =
INFO  22:17:02,766 - #8 new
INFO  22:17:02,766 - #44 int
INFO  22:17:02,766 - #36 [
INFO  22:17:02,766 - #43 3
INFO  22:17:02,767 - #37 ]
INFO  22:17:02,767 - #31 ;
INFO  22:17:02,767 - #44 i
INFO  22:17:02,767 - #28 =
INFO  22:17:02,767 - #43 0
INFO  22:17:02,767 - #31 ;
INFO  22:17:02,767 - #10 read
INFO  22:17:02,767 - #34 (
INFO  22:17:02,767 - #44 c
INFO  22:17:02,767 - #33 .
INFO  22:17:02,767 - #44 i
INFO  22:17:02,767 - #35 )
INFO  22:17:02,767 - #31 ;
INFO  22:17:02,768 - #13 while
INFO  22:17:02,768 - #34 (
INFO  22:17:02,768 - #44 i
INFO  22:17:02,768 - #24 <
INFO  22:17:02,768 - #43 5
INFO  22:17:02,768 - #35 )
INFO  22:17:02,768 - #38 {
INFO  22:17:02,768 - #10 read
INFO  22:17:02,768 - #34 (
INFO  22:17:02,769 - #44 c
INFO  22:17:02,769 - #33 .
INFO  22:17:02,769 - #44 x
INFO  22:17:02,769 - #36 [
INFO  22:17:02,769 - #44 i
INFO  22:17:02,769 - #37 ]
INFO  22:17:02,769 - #35 )
INFO  22:17:02,769 - #31 ;
INFO  22:17:02,769 - #10 read
INFO  22:17:02,770 - #34 (
INFO  22:17:02,770 - #44 c
INFO  22:17:02,770 - #33 .
INFO  22:17:02,770 - #44 theA
INFO  22:17:02,770 - #33 .
INFO  22:17:02,770 - #44 x
INFO  22:17:02,770 - #36 [
INFO  22:17:02,770 - #44 i
INFO  22:17:02,770 - #37 ]
INFO  22:17:02,770 - #35 )
INFO  22:17:02,770 - #31 ;
INFO  22:17:02,771 - #44 i
INFO  22:17:02,771 - #29 ++
INFO  22:17:02,771 - #31 ;
INFO  22:17:02,771 - #39 }
INFO  22:17:02,771 - #9 print
INFO  22:17:02,771 - #34 (
INFO  22:17:02,771 - #44 c
INFO  22:17:02,771 - #33 .
INFO  22:17:02,771 - #44 getValue
INFO  22:17:02,771 - #34 (
INFO  22:17:02,772 - #44 c
INFO  22:17:02,772 - #33 .
INFO  22:17:02,772 - #44 theA
INFO  22:17:02,772 - #33 .
INFO  22:17:02,772 - #44 x
INFO  22:17:02,772 - #36 [
INFO  22:17:02,772 - #43 0
INFO  22:17:02,772 - #37 ]
INFO  22:17:02,772 - #35 )
INFO  22:17:02,773 - #35 )
INFO  22:17:02,773 - #31 ;
INFO  22:17:02,773 - #39 }
INFO  22:17:02,773 - #12 void
INFO  22:17:02,773 - #44 aaa
INFO  22:17:02,773 - #34 (
INFO  22:17:02,773 - #35 )
INFO  22:17:02,773 - #44 A
INFO  22:17:02,773 - #44 a
INFO  22:17:02,773 - #31 ;
INFO  22:17:02,773 - #44 C
INFO  22:17:02,774 - #44 c
INFO  22:17:02,774 - #31 ;
INFO  22:17:02,774 - #44 int
INFO  22:17:02,774 - #44 i
INFO  22:17:02,774 - #31 ;
INFO  22:17:02,774 - #44 int
INFO  22:17:02,774 - #44 x
INFO  22:17:02,774 - #36 [
INFO  22:17:02,774 - #37 ]
INFO  22:17:02,774 - #31 ;
INFO  22:17:02,774 - #38 {
INFO  22:17:02,775 - #39 }
INFO  22:17:02,775 - #12 void
INFO  22:17:02,775 - #44 bbb
INFO  22:17:02,775 - #34 (
INFO  22:17:02,775 - #35 )
INFO  22:17:02,775 - #44 A
INFO  22:17:02,775 - #44 a
INFO  22:17:02,775 - #31 ;
INFO  22:17:02,775 - #44 C
INFO  22:17:02,775 - #44 c
INFO  22:17:02,776 - #31 ;
INFO  22:17:02,776 - #44 int
INFO  22:17:02,776 - #44 i
INFO  22:17:02,776 - #31 ;
INFO  22:17:02,776 - #44 int
INFO  22:17:02,776 - #44 x
INFO  22:17:02,776 - #36 [
INFO  22:17:02,776 - #37 ]
INFO  22:17:02,776 - #31 ;
INFO  22:17:02,776 - #38 {
INFO  22:17:02,776 - #39 }
INFO  22:17:02,776 - #12 void
INFO  22:17:02,776 - #44 ccc
INFO  22:17:02,777 - #34 (
INFO  22:17:02,777 - #35 )
INFO  22:17:02,777 - #44 A
INFO  22:17:02,777 - #44 a
INFO  22:17:02,777 - #31 ;
INFO  22:17:02,777 - #44 C
INFO  22:17:02,777 - #44 c
INFO  22:17:02,777 - #31 ;
INFO  22:17:02,777 - #44 int
INFO  22:17:02,777 - #44 i
INFO  22:17:02,777 - #31 ;
INFO  22:17:02,777 - #44 int
INFO  22:17:02,777 - #44 x
INFO  22:17:02,777 - #36 [
INFO  22:17:02,777 - #37 ]
INFO  22:17:02,777 - #31 ;
INFO  22:17:02,778 - #38 {
INFO  22:17:02,778 - #39 }
INFO  22:17:02,778 - #39 }
INFO  22:17:02,778 - GlobalVar = 2
INFO  22:17:02,778 - GlobalConst = 2
INFO  22:17:02,778 - LocalMainVar = 4
INFO  22:17:02,778 - GlobalArray = 0
INFO  22:17:02,778 - FuncProg = 4
INFO  22:17:02,778 - Blocks = 5
INFO  22:17:02,778 - FuncCalls = 5
INFO  22:21:10,502 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:21:10,511 - #2 program
INFO  22:21:10,511 - #44 Program
INFO  22:21:10,511 - #4 class
INFO  22:21:10,511 - #44 A
INFO  22:21:10,511 - #38 {
INFO  22:21:10,512 - #44 int
INFO  22:21:10,512 - #44 x
INFO  22:21:10,512 - #36 [
INFO  22:21:10,512 - #37 ]
INFO  22:21:10,512 - #32 ,
INFO  22:21:10,512 - #44 y
INFO  22:21:10,512 - #36 [
INFO  22:21:10,512 - #37 ]
INFO  22:21:10,512 - #31 ;
INFO  22:21:10,512 - #39 }
INFO  22:21:10,512 - #6 const
INFO  22:21:10,512 - #44 int
INFO  22:21:10,512 - #44 pi
INFO  22:21:10,513 - #28 =
INFO  22:21:10,513 - #43 3
INFO  22:21:10,513 - #32 ,
INFO  22:21:10,513 - #44 e
INFO  22:21:10,513 - #28 =
INFO  22:21:10,513 - #43 2
INFO  22:21:10,513 - #31 ;
INFO  22:21:10,513 - #4 class
INFO  22:21:10,513 - #44 B
INFO  22:21:10,513 - #14 extends
INFO  22:21:10,513 - #44 A
INFO  22:21:10,513 - #38 {
INFO  22:21:10,513 - #44 int
INFO  22:21:10,514 - #44 i
INFO  22:21:10,514 - #31 ;
INFO  22:21:10,514 - #44 int
INFO  22:21:10,514 - #44 x
INFO  22:21:10,514 - #36 [
INFO  22:21:10,514 - #37 ]
INFO  22:21:10,514 - #31 ;
INFO  22:21:10,514 - #38 {
INFO  22:21:10,514 - #44 int
INFO  22:21:10,514 - #44 getValue
INFO  22:21:10,514 - #34 (
INFO  22:21:10,515 - #44 int
INFO  22:21:10,515 - #44 a
INFO  22:21:10,515 - #35 )
INFO  22:21:10,515 - #44 int
INFO  22:21:10,515 - #44 b
INFO  22:21:10,515 - #31 ;
INFO  22:21:10,515 - #44 bool
INFO  22:21:10,515 - #44 c
INFO  22:21:10,515 - #31 ;
INFO  22:21:10,515 - #38 {
INFO  22:21:10,515 - #11 return
INFO  22:21:10,515 - #44 this
INFO  22:21:10,516 - #33 .
INFO  22:21:10,516 - #44 i
INFO  22:21:10,516 - #15 +
INFO  22:21:10,516 - #44 this
INFO  22:21:10,516 - #33 .
INFO  22:21:10,516 - #44 x
INFO  22:21:10,516 - #36 [
INFO  22:21:10,516 - #43 0
INFO  22:21:10,516 - #37 ]
INFO  22:21:10,516 - #15 +
INFO  22:21:10,516 - #44 a
INFO  22:21:10,517 - #31 ;
INFO  22:21:10,517 - #39 }
INFO  22:21:10,517 - #39 }
INFO  22:21:10,517 - #39 }
INFO  22:21:10,517 - #4 class
INFO  22:21:10,517 - #44 C
INFO  22:21:10,517 - #14 extends
INFO  22:21:10,517 - #44 B
INFO  22:21:10,517 - #38 {
INFO  22:21:10,517 - #44 A
INFO  22:21:10,518 - #44 theA
INFO  22:21:10,518 - #31 ;
INFO  22:21:10,518 - #44 string
INFO  22:21:10,518 - #44 a
INFO  22:21:10,518 - #31 ;
INFO  22:21:10,518 - #39 }
INFO  22:21:10,518 - #38 {
INFO  22:21:10,518 - #12 void
INFO  22:21:10,519 - #44 main
INFO  22:21:10,519 - #34 (
INFO  22:21:10,519 - #35 )
INFO  22:21:10,519 - #44 A
INFO  22:21:10,519 - #44 a
INFO  22:21:10,519 - #31 ;
INFO  22:21:10,519 - #44 C
INFO  22:21:10,519 - #44 c
INFO  22:21:10,520 - #31 ;
INFO  22:21:10,520 - #44 int
INFO  22:21:10,520 - #44 i
INFO  22:21:10,520 - #31 ;
INFO  22:21:10,520 - #44 int
INFO  22:21:10,520 - #44 x
INFO  22:21:10,520 - #36 [
INFO  22:21:10,520 - #37 ]
INFO  22:21:10,520 - #31 ;
INFO  22:21:10,520 - #38 {
INFO  22:21:10,521 - #44 a
INFO  22:21:10,521 - #28 =
INFO  22:21:10,521 - #8 new
INFO  22:21:10,521 - #44 A
INFO  22:21:10,521 - #31 ;
INFO  22:21:10,521 - #44 a
INFO  22:21:10,521 - #33 .
INFO  22:21:10,521 - #44 x
INFO  22:21:10,521 - #28 =
INFO  22:21:10,521 - #8 new
INFO  22:21:10,522 - #44 int
INFO  22:21:10,522 - #36 [
INFO  22:21:10,522 - #43 5
INFO  22:21:10,522 - #37 ]
INFO  22:21:10,522 - #31 ;
INFO  22:21:10,522 - #44 a
INFO  22:21:10,522 - #33 .
INFO  22:21:10,522 - #44 y
INFO  22:21:10,522 - #28 =
INFO  22:21:10,522 - #8 new
INFO  22:21:10,522 - #44 int
INFO  22:21:10,522 - #36 [
INFO  22:21:10,523 - #43 5
INFO  22:21:10,523 - #37 ]
INFO  22:21:10,523 - #31 ;
INFO  22:21:10,523 - #44 c
INFO  22:21:10,523 - #28 =
INFO  22:21:10,523 - #8 new
INFO  22:21:10,523 - #44 C
INFO  22:21:10,523 - #31 ;
INFO  22:21:10,523 - #44 c
INFO  22:21:10,523 - #33 .
INFO  22:21:10,524 - #44 theA
INFO  22:21:10,524 - #28 =
INFO  22:21:10,524 - #44 a
INFO  22:21:10,524 - #31 ;
INFO  22:21:10,524 - #44 c
INFO  22:21:10,524 - #33 .
INFO  22:21:10,524 - #44 x
INFO  22:21:10,524 - #28 =
INFO  22:21:10,524 - #8 new
INFO  22:21:10,524 - #44 int
INFO  22:21:10,525 - #36 [
INFO  22:21:10,525 - #43 5
INFO  22:21:10,525 - #37 ]
INFO  22:21:10,525 - #31 ;
INFO  22:21:10,525 - #44 x
INFO  22:21:10,525 - #28 =
INFO  22:21:10,525 - #8 new
INFO  22:21:10,525 - #44 int
INFO  22:21:10,525 - #36 [
INFO  22:21:10,525 - #43 3
INFO  22:21:10,525 - #37 ]
INFO  22:21:10,525 - #31 ;
INFO  22:21:10,525 - #44 i
INFO  22:21:10,526 - #28 =
INFO  22:21:10,526 - #43 0
INFO  22:21:10,526 - #31 ;
INFO  22:21:10,526 - #13 while
INFO  22:21:10,526 - #34 (
INFO  22:21:10,526 - #44 i
INFO  22:21:10,526 - #24 <
INFO  22:21:10,526 - #43 5
INFO  22:21:10,526 - #35 )
INFO  22:21:10,526 - #38 {
INFO  22:21:10,527 - #44 i
INFO  22:21:10,527 - #29 ++
INFO  22:21:10,527 - #31 ;
INFO  22:21:10,527 - #39 }
INFO  22:21:10,527 - #39 }
INFO  22:21:10,527 - #12 void
INFO  22:21:10,527 - #44 aaa
INFO  22:21:10,527 - #34 (
INFO  22:21:10,527 - #35 )
INFO  22:21:10,527 - #44 A
INFO  22:21:10,528 - #44 a
INFO  22:21:10,528 - #31 ;
INFO  22:21:10,528 - #44 C
INFO  22:21:10,528 - #44 c
INFO  22:21:10,528 - #31 ;
INFO  22:21:10,528 - #44 int
INFO  22:21:10,528 - #44 i
INFO  22:21:10,528 - #31 ;
INFO  22:21:10,528 - #44 int
INFO  22:21:10,529 - #44 x
INFO  22:21:10,529 - #36 [
INFO  22:21:10,529 - #37 ]
INFO  22:21:10,529 - #31 ;
INFO  22:21:10,529 - #38 {
INFO  22:21:10,529 - #39 }
INFO  22:21:10,529 - #12 void
INFO  22:21:10,529 - #44 bbb
INFO  22:21:10,529 - #34 (
INFO  22:21:10,529 - #35 )
INFO  22:21:10,529 - #44 A
INFO  22:21:10,530 - #44 a
INFO  22:21:10,530 - #31 ;
INFO  22:21:10,530 - #44 C
INFO  22:21:10,530 - #44 c
INFO  22:21:10,530 - #31 ;
INFO  22:21:10,530 - #44 int
INFO  22:21:10,530 - #44 i
INFO  22:21:10,530 - #31 ;
INFO  22:21:10,530 - #44 int
INFO  22:21:10,531 - #44 x
INFO  22:21:10,531 - #36 [
INFO  22:21:10,531 - #37 ]
INFO  22:21:10,531 - #31 ;
INFO  22:21:10,531 - #38 {
INFO  22:21:10,531 - #39 }
INFO  22:21:10,531 - #12 void
INFO  22:21:10,531 - #44 ccc
INFO  22:21:10,531 - #34 (
INFO  22:21:10,532 - #35 )
INFO  22:21:10,532 - #44 A
INFO  22:21:10,532 - #44 a
INFO  22:21:10,532 - #31 ;
INFO  22:21:10,532 - #44 C
INFO  22:21:10,532 - #44 c
INFO  22:21:10,532 - #31 ;
INFO  22:21:10,532 - #44 int
INFO  22:21:10,532 - #44 i
INFO  22:21:10,532 - #31 ;
INFO  22:21:10,532 - #44 int
INFO  22:21:10,533 - #44 x
INFO  22:21:10,533 - #36 [
INFO  22:21:10,533 - #37 ]
INFO  22:21:10,533 - #31 ;
INFO  22:21:10,533 - #38 {
INFO  22:21:10,533 - #39 }
INFO  22:21:10,533 - #39 }
INFO  22:21:10,533 - GlobalVar = 2
INFO  22:21:10,533 - GlobalConst = 2
INFO  22:21:10,533 - LocalMainVar = 4
INFO  22:21:10,534 - GlobalArray = 0
INFO  22:21:10,534 - FuncProg = 4
INFO  22:21:10,534 - Blocks = 5
INFO  22:21:10,534 - FuncCalls = 0
INFO  22:21:16,799 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:21:16,810 - #2 program
INFO  22:21:16,810 - #44 Program
INFO  22:21:16,810 - #4 class
INFO  22:21:16,810 - #44 A
INFO  22:21:16,810 - #38 {
INFO  22:21:16,811 - #44 int
INFO  22:21:16,811 - #44 x
INFO  22:21:16,811 - #36 [
INFO  22:21:16,811 - #37 ]
INFO  22:21:16,811 - #32 ,
INFO  22:21:16,811 - #44 y
INFO  22:21:16,811 - #36 [
INFO  22:21:16,811 - #37 ]
INFO  22:21:16,811 - #31 ;
INFO  22:21:16,812 - #39 }
INFO  22:21:16,812 - #6 const
INFO  22:21:16,812 - #44 int
INFO  22:21:16,812 - #44 pi
INFO  22:21:16,812 - #28 =
INFO  22:21:16,812 - #43 3
INFO  22:21:16,812 - #32 ,
INFO  22:21:16,812 - #44 e
INFO  22:21:16,812 - #28 =
INFO  22:21:16,812 - #43 2
INFO  22:21:16,813 - #31 ;
INFO  22:21:16,813 - #4 class
INFO  22:21:16,813 - #44 B
INFO  22:21:16,813 - #14 extends
INFO  22:21:16,813 - #44 A
INFO  22:21:16,813 - #38 {
INFO  22:21:16,813 - #44 int
INFO  22:21:16,813 - #44 i
INFO  22:21:16,813 - #31 ;
INFO  22:21:16,813 - #44 int
INFO  22:21:16,813 - #44 x
INFO  22:21:16,814 - #36 [
INFO  22:21:16,814 - #37 ]
INFO  22:21:16,814 - #31 ;
INFO  22:21:16,814 - #38 {
INFO  22:21:16,814 - #44 int
INFO  22:21:16,814 - #44 getValue
INFO  22:21:16,814 - #34 (
INFO  22:21:16,814 - #44 int
INFO  22:21:16,814 - #44 a
INFO  22:21:16,814 - #35 )
INFO  22:21:16,815 - #44 int
INFO  22:21:16,815 - #44 b
INFO  22:21:16,815 - #31 ;
INFO  22:21:16,815 - #44 bool
INFO  22:21:16,815 - #44 c
INFO  22:21:16,815 - #31 ;
INFO  22:21:16,815 - #38 {
INFO  22:21:16,815 - #11 return
INFO  22:21:16,815 - #44 this
INFO  22:21:16,816 - #33 .
INFO  22:21:16,816 - #44 i
INFO  22:21:16,816 - #15 +
INFO  22:21:16,816 - #44 this
INFO  22:21:16,816 - #33 .
INFO  22:21:16,816 - #44 x
INFO  22:21:16,816 - #36 [
INFO  22:21:16,816 - #43 0
INFO  22:21:16,817 - #37 ]
INFO  22:21:16,817 - #15 +
INFO  22:21:16,817 - #44 a
INFO  22:21:16,817 - #31 ;
INFO  22:21:16,817 - #39 }
INFO  22:21:16,817 - #39 }
INFO  22:21:16,817 - #39 }
INFO  22:21:16,817 - #4 class
INFO  22:21:16,818 - #44 C
INFO  22:21:16,818 - #14 extends
INFO  22:21:16,818 - #44 B
INFO  22:21:16,818 - #38 {
INFO  22:21:16,818 - #44 A
INFO  22:21:16,818 - #44 theA
INFO  22:21:16,818 - #31 ;
INFO  22:21:16,818 - #44 string
INFO  22:21:16,819 - #44 a
INFO  22:21:16,819 - #31 ;
INFO  22:21:16,819 - #39 }
INFO  22:21:16,819 - #38 {
INFO  22:21:16,819 - #12 void
INFO  22:21:16,819 - #44 main
INFO  22:21:16,819 - #34 (
INFO  22:21:16,819 - #35 )
INFO  22:21:16,820 - #44 A
INFO  22:21:16,820 - #44 a
INFO  22:21:16,820 - #31 ;
INFO  22:21:16,820 - #44 C
INFO  22:21:16,820 - #44 c
INFO  22:21:16,820 - #31 ;
INFO  22:21:16,820 - #44 int
INFO  22:21:16,820 - #44 i
INFO  22:21:16,820 - #31 ;
INFO  22:21:16,821 - #44 int
INFO  22:21:16,821 - #44 x
INFO  22:21:16,821 - #36 [
INFO  22:21:16,821 - #37 ]
INFO  22:21:16,821 - #31 ;
INFO  22:21:16,821 - #38 {
INFO  22:21:16,821 - #44 a
INFO  22:21:16,821 - #28 =
INFO  22:21:16,822 - #8 new
INFO  22:21:16,822 - #44 A
INFO  22:21:16,822 - #31 ;
INFO  22:21:16,822 - #44 a
INFO  22:21:16,822 - #33 .
INFO  22:21:16,822 - #44 x
INFO  22:21:16,822 - #28 =
INFO  22:21:16,822 - #8 new
INFO  22:21:16,822 - #44 int
INFO  22:21:16,822 - #36 [
INFO  22:21:16,822 - #43 5
INFO  22:21:16,823 - #37 ]
INFO  22:21:16,823 - #31 ;
INFO  22:21:16,823 - #44 a
INFO  22:21:16,823 - #33 .
INFO  22:21:16,823 - #44 y
INFO  22:21:16,823 - #28 =
INFO  22:21:16,823 - #8 new
INFO  22:21:16,823 - #44 int
INFO  22:21:16,823 - #36 [
INFO  22:21:16,824 - #43 5
INFO  22:21:16,824 - #37 ]
INFO  22:21:16,824 - #31 ;
INFO  22:21:16,824 - #44 c
INFO  22:21:16,824 - #28 =
INFO  22:21:16,824 - #8 new
INFO  22:21:16,824 - #44 C
INFO  22:21:16,824 - #31 ;
INFO  22:21:16,824 - #44 c
INFO  22:21:16,825 - #33 .
INFO  22:21:16,825 - #44 theA
INFO  22:21:16,825 - #28 =
INFO  22:21:16,825 - #44 a
INFO  22:21:16,825 - #31 ;
INFO  22:21:16,825 - #44 c
INFO  22:21:16,825 - #33 .
INFO  22:21:16,826 - #44 x
INFO  22:21:16,826 - #28 =
INFO  22:21:16,826 - #8 new
INFO  22:21:16,826 - #44 int
INFO  22:21:16,826 - #36 [
INFO  22:21:16,826 - #43 5
INFO  22:21:16,826 - #37 ]
INFO  22:21:16,826 - #31 ;
INFO  22:21:16,827 - #44 x
INFO  22:21:16,827 - #28 =
INFO  22:21:16,827 - #8 new
INFO  22:21:16,827 - #44 int
INFO  22:21:16,827 - #36 [
INFO  22:21:16,827 - #43 3
INFO  22:21:16,827 - #37 ]
INFO  22:21:16,827 - #31 ;
INFO  22:21:16,827 - #44 i
INFO  22:21:16,827 - #28 =
INFO  22:21:16,827 - #43 0
INFO  22:21:16,828 - #31 ;
INFO  22:21:16,828 - #10 read
INFO  22:21:16,828 - #34 (
INFO  22:21:16,828 - #44 c
INFO  22:21:16,828 - #33 .
INFO  22:21:16,828 - #44 i
INFO  22:21:16,828 - #35 )
INFO  22:21:16,828 - #31 ;
INFO  22:21:16,828 - #13 while
INFO  22:21:16,828 - #34 (
INFO  22:21:16,828 - #44 i
INFO  22:21:16,828 - #24 <
INFO  22:21:16,829 - #43 5
INFO  22:21:16,829 - #35 )
INFO  22:21:16,829 - #38 {
INFO  22:21:16,829 - #44 i
INFO  22:21:16,829 - #29 ++
INFO  22:21:16,829 - #31 ;
INFO  22:21:16,829 - #39 }
INFO  22:21:16,829 - #39 }
INFO  22:21:16,830 - #12 void
INFO  22:21:16,830 - #44 aaa
INFO  22:21:16,830 - #34 (
INFO  22:21:16,830 - #35 )
INFO  22:21:16,830 - #44 A
INFO  22:21:16,830 - #44 a
INFO  22:21:16,830 - #31 ;
INFO  22:21:16,830 - #44 C
INFO  22:21:16,831 - #44 c
INFO  22:21:16,831 - #31 ;
INFO  22:21:16,831 - #44 int
INFO  22:21:16,831 - #44 i
INFO  22:21:16,831 - #31 ;
INFO  22:21:16,831 - #44 int
INFO  22:21:16,831 - #44 x
INFO  22:21:16,831 - #36 [
INFO  22:21:16,831 - #37 ]
INFO  22:21:16,832 - #31 ;
INFO  22:21:16,832 - #38 {
INFO  22:21:16,832 - #39 }
INFO  22:21:16,832 - #12 void
INFO  22:21:16,832 - #44 bbb
INFO  22:21:16,832 - #34 (
INFO  22:21:16,832 - #35 )
INFO  22:21:16,832 - #44 A
INFO  22:21:16,832 - #44 a
INFO  22:21:16,833 - #31 ;
INFO  22:21:16,833 - #44 C
INFO  22:21:16,833 - #44 c
INFO  22:21:16,833 - #31 ;
INFO  22:21:16,833 - #44 int
INFO  22:21:16,833 - #44 i
INFO  22:21:16,833 - #31 ;
INFO  22:21:16,833 - #44 int
INFO  22:21:16,833 - #44 x
INFO  22:21:16,833 - #36 [
INFO  22:21:16,834 - #37 ]
INFO  22:21:16,834 - #31 ;
INFO  22:21:16,834 - #38 {
INFO  22:21:16,834 - #39 }
INFO  22:21:16,834 - #12 void
INFO  22:21:16,834 - #44 ccc
INFO  22:21:16,834 - #34 (
INFO  22:21:16,834 - #35 )
INFO  22:21:16,834 - #44 A
INFO  22:21:16,835 - #44 a
INFO  22:21:16,835 - #31 ;
INFO  22:21:16,835 - #44 C
INFO  22:21:16,835 - #44 c
INFO  22:21:16,835 - #31 ;
INFO  22:21:16,835 - #44 int
INFO  22:21:16,835 - #44 i
INFO  22:21:16,835 - #31 ;
INFO  22:21:16,835 - #44 int
INFO  22:21:16,836 - #44 x
INFO  22:21:16,836 - #36 [
INFO  22:21:16,836 - #37 ]
INFO  22:21:16,836 - #31 ;
INFO  22:21:16,836 - #38 {
INFO  22:21:16,836 - #39 }
INFO  22:21:16,836 - #39 }
INFO  22:21:16,836 - GlobalVar = 2
INFO  22:21:16,836 - GlobalConst = 2
INFO  22:21:16,837 - LocalMainVar = 4
INFO  22:21:16,837 - GlobalArray = 0
INFO  22:21:16,837 - FuncProg = 4
INFO  22:21:16,837 - Blocks = 5
INFO  22:21:16,837 - FuncCalls = 1
INFO  22:21:24,432 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:21:24,442 - #2 program
INFO  22:21:24,443 - #44 Program
INFO  22:21:24,443 - #4 class
INFO  22:21:24,443 - #44 A
INFO  22:21:24,443 - #38 {
INFO  22:21:24,443 - #44 int
INFO  22:21:24,443 - #44 x
INFO  22:21:24,443 - #36 [
INFO  22:21:24,443 - #37 ]
INFO  22:21:24,443 - #32 ,
INFO  22:21:24,443 - #44 y
INFO  22:21:24,443 - #36 [
INFO  22:21:24,443 - #37 ]
INFO  22:21:24,444 - #31 ;
INFO  22:21:24,444 - #39 }
INFO  22:21:24,444 - #6 const
INFO  22:21:24,444 - #44 int
INFO  22:21:24,444 - #44 pi
INFO  22:21:24,444 - #28 =
INFO  22:21:24,445 - #43 3
INFO  22:21:24,445 - #32 ,
INFO  22:21:24,445 - #44 e
INFO  22:21:24,445 - #28 =
INFO  22:21:24,445 - #43 2
INFO  22:21:24,445 - #31 ;
INFO  22:21:24,445 - #4 class
INFO  22:21:24,446 - #44 B
INFO  22:21:24,446 - #14 extends
INFO  22:21:24,446 - #44 A
INFO  22:21:24,446 - #38 {
INFO  22:21:24,446 - #44 int
INFO  22:21:24,446 - #44 i
INFO  22:21:24,446 - #31 ;
INFO  22:21:24,446 - #44 int
INFO  22:21:24,446 - #44 x
INFO  22:21:24,447 - #36 [
INFO  22:21:24,447 - #37 ]
INFO  22:21:24,447 - #31 ;
INFO  22:21:24,447 - #38 {
INFO  22:21:24,447 - #44 int
INFO  22:21:24,448 - #44 getValue
INFO  22:21:24,448 - #34 (
INFO  22:21:24,448 - #44 int
INFO  22:21:24,448 - #44 a
INFO  22:21:24,448 - #35 )
INFO  22:21:24,448 - #44 int
INFO  22:21:24,448 - #44 b
INFO  22:21:24,449 - #31 ;
INFO  22:21:24,449 - #44 bool
INFO  22:21:24,449 - #44 c
INFO  22:21:24,449 - #31 ;
INFO  22:21:24,449 - #38 {
INFO  22:21:24,449 - #11 return
INFO  22:21:24,450 - #44 this
INFO  22:21:24,450 - #33 .
INFO  22:21:24,450 - #44 i
INFO  22:21:24,450 - #15 +
INFO  22:21:24,450 - #44 this
INFO  22:21:24,451 - #33 .
INFO  22:21:24,451 - #44 x
INFO  22:21:24,451 - #36 [
INFO  22:21:24,451 - #43 0
INFO  22:21:24,451 - #37 ]
INFO  22:21:24,451 - #15 +
INFO  22:21:24,451 - #44 a
INFO  22:21:24,451 - #31 ;
INFO  22:21:24,452 - #39 }
INFO  22:21:24,452 - #39 }
INFO  22:21:24,452 - #39 }
INFO  22:21:24,452 - #4 class
INFO  22:21:24,452 - #44 C
INFO  22:21:24,452 - #14 extends
INFO  22:21:24,452 - #44 B
INFO  22:21:24,453 - #38 {
INFO  22:21:24,453 - #44 A
INFO  22:21:24,453 - #44 theA
INFO  22:21:24,453 - #31 ;
INFO  22:21:24,453 - #44 string
INFO  22:21:24,453 - #44 a
INFO  22:21:24,453 - #31 ;
INFO  22:21:24,453 - #39 }
INFO  22:21:24,454 - #38 {
INFO  22:21:24,454 - #12 void
INFO  22:21:24,454 - #44 main
INFO  22:21:24,454 - #34 (
INFO  22:21:24,454 - #35 )
INFO  22:21:24,454 - #44 A
INFO  22:21:24,454 - #44 a
INFO  22:21:24,454 - #31 ;
INFO  22:21:24,454 - #44 C
INFO  22:21:24,454 - #44 c
INFO  22:21:24,455 - #31 ;
INFO  22:21:24,455 - #44 int
INFO  22:21:24,455 - #44 i
INFO  22:21:24,455 - #31 ;
INFO  22:21:24,455 - #44 int
INFO  22:21:24,455 - #44 x
INFO  22:21:24,455 - #36 [
INFO  22:21:24,455 - #37 ]
INFO  22:21:24,455 - #31 ;
INFO  22:21:24,455 - #38 {
INFO  22:21:24,455 - #44 a
INFO  22:21:24,456 - #28 =
INFO  22:21:24,456 - #8 new
INFO  22:21:24,456 - #44 A
INFO  22:21:24,456 - #31 ;
INFO  22:21:24,456 - #44 a
INFO  22:21:24,456 - #33 .
INFO  22:21:24,456 - #44 x
INFO  22:21:24,456 - #28 =
INFO  22:21:24,456 - #8 new
INFO  22:21:24,456 - #44 int
INFO  22:21:24,456 - #36 [
INFO  22:21:24,456 - #43 5
INFO  22:21:24,456 - #37 ]
INFO  22:21:24,457 - #31 ;
INFO  22:21:24,457 - #44 a
INFO  22:21:24,457 - #33 .
INFO  22:21:24,457 - #44 y
INFO  22:21:24,457 - #28 =
INFO  22:21:24,457 - #8 new
INFO  22:21:24,457 - #44 int
INFO  22:21:24,457 - #36 [
INFO  22:21:24,457 - #43 5
INFO  22:21:24,457 - #37 ]
INFO  22:21:24,457 - #31 ;
INFO  22:21:24,458 - #44 c
INFO  22:21:24,458 - #28 =
INFO  22:21:24,458 - #8 new
INFO  22:21:24,458 - #44 C
INFO  22:21:24,458 - #31 ;
INFO  22:21:24,458 - #44 c
INFO  22:21:24,458 - #33 .
INFO  22:21:24,458 - #44 theA
INFO  22:21:24,458 - #28 =
INFO  22:21:24,459 - #44 a
INFO  22:21:24,459 - #31 ;
INFO  22:21:24,459 - #44 c
INFO  22:21:24,459 - #33 .
INFO  22:21:24,459 - #44 x
INFO  22:21:24,459 - #28 =
INFO  22:21:24,459 - #8 new
INFO  22:21:24,459 - #44 int
INFO  22:21:24,459 - #36 [
INFO  22:21:24,459 - #43 5
INFO  22:21:24,459 - #37 ]
INFO  22:21:24,460 - #31 ;
INFO  22:21:24,460 - #44 x
INFO  22:21:24,460 - #28 =
INFO  22:21:24,460 - #8 new
INFO  22:21:24,460 - #44 int
INFO  22:21:24,460 - #36 [
INFO  22:21:24,460 - #43 3
INFO  22:21:24,460 - #37 ]
INFO  22:21:24,460 - #31 ;
INFO  22:21:24,460 - #44 i
INFO  22:21:24,460 - #28 =
INFO  22:21:24,460 - #43 0
INFO  22:21:24,460 - #31 ;
INFO  22:21:24,461 - #10 read
INFO  22:21:24,461 - #34 (
INFO  22:21:24,461 - #44 c
INFO  22:21:24,461 - #33 .
INFO  22:21:24,461 - #44 i
INFO  22:21:24,461 - #35 )
INFO  22:21:24,461 - #31 ;
INFO  22:21:24,461 - #13 while
INFO  22:21:24,461 - #34 (
INFO  22:21:24,461 - #44 i
INFO  22:21:24,461 - #24 <
INFO  22:21:24,462 - #43 5
INFO  22:21:24,462 - #35 )
INFO  22:21:24,462 - #38 {
INFO  22:21:24,462 - #10 read
INFO  22:21:24,462 - #34 (
INFO  22:21:24,462 - #44 c
INFO  22:21:24,462 - #33 .
INFO  22:21:24,462 - #44 x
INFO  22:21:24,463 - #36 [
INFO  22:21:24,463 - #44 i
INFO  22:21:24,463 - #37 ]
INFO  22:21:24,463 - #35 )
INFO  22:21:24,463 - #31 ;
INFO  22:21:24,463 - #10 read
INFO  22:21:24,463 - #34 (
INFO  22:21:24,463 - #44 c
INFO  22:21:24,463 - #33 .
INFO  22:21:24,463 - #44 theA
INFO  22:21:24,464 - #33 .
INFO  22:21:24,464 - #44 x
INFO  22:21:24,464 - #36 [
INFO  22:21:24,464 - #44 i
INFO  22:21:24,464 - #37 ]
INFO  22:21:24,464 - #35 )
INFO  22:21:24,464 - #31 ;
INFO  22:21:24,464 - #44 i
INFO  22:21:24,464 - #29 ++
INFO  22:21:24,464 - #31 ;
INFO  22:21:24,465 - #39 }
INFO  22:21:24,465 - #39 }
INFO  22:21:24,465 - #12 void
INFO  22:21:24,465 - #44 aaa
INFO  22:21:24,465 - #34 (
INFO  22:21:24,465 - #35 )
INFO  22:21:24,465 - #44 A
INFO  22:21:24,465 - #44 a
INFO  22:21:24,465 - #31 ;
INFO  22:21:24,465 - #44 C
INFO  22:21:24,465 - #44 c
INFO  22:21:24,466 - #31 ;
INFO  22:21:24,466 - #44 int
INFO  22:21:24,466 - #44 i
INFO  22:21:24,466 - #31 ;
INFO  22:21:24,466 - #44 int
INFO  22:21:24,466 - #44 x
INFO  22:21:24,466 - #36 [
INFO  22:21:24,466 - #37 ]
INFO  22:21:24,466 - #31 ;
INFO  22:21:24,466 - #38 {
INFO  22:21:24,467 - #39 }
INFO  22:21:24,467 - #12 void
INFO  22:21:24,467 - #44 bbb
INFO  22:21:24,467 - #34 (
INFO  22:21:24,467 - #35 )
INFO  22:21:24,467 - #44 A
INFO  22:21:24,467 - #44 a
INFO  22:21:24,467 - #31 ;
INFO  22:21:24,468 - #44 C
INFO  22:21:24,468 - #44 c
INFO  22:21:24,468 - #31 ;
INFO  22:21:24,468 - #44 int
INFO  22:21:24,468 - #44 i
INFO  22:21:24,468 - #31 ;
INFO  22:21:24,468 - #44 int
INFO  22:21:24,468 - #44 x
INFO  22:21:24,468 - #36 [
INFO  22:21:24,468 - #37 ]
INFO  22:21:24,468 - #31 ;
INFO  22:21:24,469 - #38 {
INFO  22:21:24,469 - #39 }
INFO  22:21:24,469 - #12 void
INFO  22:21:24,469 - #44 ccc
INFO  22:21:24,469 - #34 (
INFO  22:21:24,469 - #35 )
INFO  22:21:24,469 - #44 A
INFO  22:21:24,469 - #44 a
INFO  22:21:24,469 - #31 ;
INFO  22:21:24,469 - #44 C
INFO  22:21:24,470 - #44 c
INFO  22:21:24,470 - #31 ;
INFO  22:21:24,470 - #44 int
INFO  22:21:24,470 - #44 i
INFO  22:21:24,470 - #31 ;
INFO  22:21:24,470 - #44 int
INFO  22:21:24,470 - #44 x
INFO  22:21:24,470 - #36 [
INFO  22:21:24,470 - #37 ]
INFO  22:21:24,470 - #31 ;
INFO  22:21:24,470 - #38 {
INFO  22:21:24,470 - #39 }
INFO  22:21:24,470 - #39 }
INFO  22:21:24,471 - GlobalVar = 2
INFO  22:21:24,471 - GlobalConst = 2
INFO  22:21:24,471 - LocalMainVar = 4
INFO  22:21:24,471 - GlobalArray = 0
INFO  22:21:24,471 - FuncProg = 4
INFO  22:21:24,471 - Blocks = 5
INFO  22:21:24,471 - FuncCalls = 3
INFO  22:22:28,821 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:22:28,830 - #2 program
INFO  22:22:28,830 - #44 Program
INFO  22:22:28,830 - #4 class
INFO  22:22:28,830 - #44 A
INFO  22:22:28,830 - #38 {
INFO  22:22:28,830 - #44 int
INFO  22:22:28,830 - #44 x
INFO  22:22:28,830 - #36 [
INFO  22:22:28,830 - #37 ]
INFO  22:22:28,831 - #32 ,
INFO  22:22:28,831 - #44 y
INFO  22:22:28,831 - #36 [
INFO  22:22:28,831 - #37 ]
INFO  22:22:28,831 - #31 ;
INFO  22:22:28,831 - #39 }
INFO  22:22:28,831 - #6 const
INFO  22:22:28,831 - #44 int
INFO  22:22:28,831 - #44 pi
INFO  22:22:28,831 - #28 =
INFO  22:22:28,831 - #43 3
INFO  22:22:28,831 - #32 ,
INFO  22:22:28,831 - #44 e
INFO  22:22:28,832 - #28 =
INFO  22:22:28,832 - #43 2
INFO  22:22:28,832 - #31 ;
INFO  22:22:28,832 - #4 class
INFO  22:22:28,832 - #44 B
INFO  22:22:28,832 - #14 extends
INFO  22:22:28,832 - #44 A
INFO  22:22:28,832 - #38 {
INFO  22:22:28,832 - #44 int
INFO  22:22:28,832 - #44 i
INFO  22:22:28,832 - #31 ;
INFO  22:22:28,832 - #44 int
INFO  22:22:28,832 - #44 x
INFO  22:22:28,832 - #36 [
INFO  22:22:28,833 - #37 ]
INFO  22:22:28,833 - #31 ;
INFO  22:22:28,833 - #38 {
INFO  22:22:28,833 - #44 int
INFO  22:22:28,833 - #44 getValue
INFO  22:22:28,833 - #34 (
INFO  22:22:28,833 - #44 int
INFO  22:22:28,833 - #44 a
INFO  22:22:28,833 - #35 )
INFO  22:22:28,833 - #44 int
INFO  22:22:28,833 - #44 b
INFO  22:22:28,833 - #31 ;
INFO  22:22:28,833 - #44 bool
INFO  22:22:28,833 - #44 c
INFO  22:22:28,834 - #31 ;
INFO  22:22:28,834 - #38 {
INFO  22:22:28,834 - #11 return
INFO  22:22:28,834 - #44 this
INFO  22:22:28,834 - #33 .
INFO  22:22:28,834 - #44 i
INFO  22:22:28,834 - #15 +
INFO  22:22:28,834 - #44 this
INFO  22:22:28,834 - #33 .
INFO  22:22:28,834 - #44 x
INFO  22:22:28,834 - #36 [
INFO  22:22:28,834 - #43 0
INFO  22:22:28,835 - #37 ]
INFO  22:22:28,835 - #15 +
INFO  22:22:28,835 - #44 a
INFO  22:22:28,835 - #31 ;
INFO  22:22:28,835 - #39 }
INFO  22:22:28,835 - #39 }
INFO  22:22:28,835 - #39 }
INFO  22:22:28,835 - #4 class
INFO  22:22:28,835 - #44 C
INFO  22:22:28,835 - #14 extends
INFO  22:22:28,835 - #44 B
INFO  22:22:28,836 - #38 {
INFO  22:22:28,836 - #44 A
INFO  22:22:28,836 - #44 theA
INFO  22:22:28,836 - #31 ;
INFO  22:22:28,836 - #44 string
INFO  22:22:28,836 - #44 a
INFO  22:22:28,836 - #31 ;
INFO  22:22:28,836 - #39 }
INFO  22:22:28,836 - #38 {
INFO  22:22:28,836 - #12 void
INFO  22:22:28,837 - #44 main
INFO  22:22:28,837 - #34 (
INFO  22:22:28,837 - #35 )
INFO  22:22:28,837 - #44 A
INFO  22:22:28,837 - #44 a
INFO  22:22:28,837 - #31 ;
INFO  22:22:28,837 - #44 C
INFO  22:22:28,837 - #44 c
INFO  22:22:28,837 - #31 ;
INFO  22:22:28,837 - #44 int
INFO  22:22:28,838 - #44 i
INFO  22:22:28,838 - #31 ;
INFO  22:22:28,838 - #44 int
INFO  22:22:28,838 - #44 x
INFO  22:22:28,838 - #36 [
INFO  22:22:28,838 - #37 ]
INFO  22:22:28,838 - #31 ;
INFO  22:22:28,838 - #38 {
INFO  22:22:28,838 - #44 a
INFO  22:22:28,838 - #28 =
INFO  22:22:28,839 - #8 new
INFO  22:22:28,839 - #44 A
INFO  22:22:28,839 - #31 ;
INFO  22:22:28,839 - #44 a
INFO  22:22:28,839 - #33 .
INFO  22:22:28,839 - #44 x
INFO  22:22:28,839 - #28 =
INFO  22:22:28,839 - #8 new
INFO  22:22:28,839 - #44 int
INFO  22:22:28,840 - #36 [
INFO  22:22:28,840 - #43 5
INFO  22:22:28,840 - #37 ]
INFO  22:22:28,840 - #31 ;
INFO  22:22:28,840 - #44 a
INFO  22:22:28,840 - #33 .
INFO  22:22:28,840 - #44 y
INFO  22:22:28,840 - #28 =
INFO  22:22:28,840 - #8 new
INFO  22:22:28,840 - #44 int
INFO  22:22:28,840 - #36 [
INFO  22:22:28,841 - #43 5
INFO  22:22:28,841 - #37 ]
INFO  22:22:28,841 - #31 ;
INFO  22:22:28,841 - #44 c
INFO  22:22:28,841 - #28 =
INFO  22:22:28,841 - #8 new
INFO  22:22:28,841 - #44 C
INFO  22:22:28,841 - #31 ;
INFO  22:22:28,841 - #44 c
INFO  22:22:28,841 - #33 .
INFO  22:22:28,841 - #44 theA
INFO  22:22:28,842 - #28 =
INFO  22:22:28,842 - #44 a
INFO  22:22:28,842 - #31 ;
INFO  22:22:28,842 - #44 c
INFO  22:22:28,842 - #33 .
INFO  22:22:28,842 - #44 x
INFO  22:22:28,842 - #28 =
INFO  22:22:28,842 - #8 new
INFO  22:22:28,842 - #44 int
INFO  22:22:28,842 - #36 [
INFO  22:22:28,843 - #43 5
INFO  22:22:28,843 - #37 ]
INFO  22:22:28,843 - #31 ;
INFO  22:22:28,843 - #44 x
INFO  22:22:28,843 - #28 =
INFO  22:22:28,843 - #8 new
INFO  22:22:28,843 - #44 int
INFO  22:22:28,843 - #36 [
INFO  22:22:28,843 - #43 3
INFO  22:22:28,843 - #37 ]
INFO  22:22:28,843 - #31 ;
INFO  22:22:28,843 - #44 i
INFO  22:22:28,844 - #28 =
INFO  22:22:28,844 - #43 0
INFO  22:22:28,844 - #31 ;
INFO  22:22:28,844 - #10 read
INFO  22:22:28,844 - #34 (
INFO  22:22:28,844 - #44 c
INFO  22:22:28,844 - #33 .
INFO  22:22:28,844 - #44 i
INFO  22:22:28,844 - #35 )
INFO  22:22:28,844 - #31 ;
INFO  22:22:28,844 - #13 while
INFO  22:22:28,844 - #34 (
INFO  22:22:28,844 - #44 i
INFO  22:22:28,845 - #24 <
INFO  22:22:28,845 - #43 5
INFO  22:22:28,845 - #35 )
INFO  22:22:28,845 - #38 {
INFO  22:22:28,845 - #10 read
INFO  22:22:28,845 - #34 (
INFO  22:22:28,845 - #44 c
INFO  22:22:28,845 - #33 .
INFO  22:22:28,846 - #44 x
INFO  22:22:28,846 - #36 [
INFO  22:22:28,846 - #44 i
INFO  22:22:28,846 - #37 ]
INFO  22:22:28,846 - #35 )
INFO  22:22:28,846 - #31 ;
INFO  22:22:28,846 - #10 read
INFO  22:22:28,846 - #34 (
INFO  22:22:28,846 - #44 c
INFO  22:22:28,847 - #33 .
INFO  22:22:28,847 - #44 theA
INFO  22:22:28,847 - #33 .
INFO  22:22:28,847 - #44 x
INFO  22:22:28,847 - #36 [
INFO  22:22:28,847 - #44 i
INFO  22:22:28,847 - #37 ]
INFO  22:22:28,847 - #35 )
INFO  22:22:28,847 - #31 ;
INFO  22:22:28,847 - #44 i
INFO  22:22:28,847 - #29 ++
INFO  22:22:28,848 - #31 ;
INFO  22:22:28,848 - #39 }
INFO  22:22:28,848 - #9 print
INFO  22:22:28,848 - #34 (
INFO  22:22:28,848 - #44 c
INFO  22:22:28,848 - #33 .
INFO  22:22:28,848 - #44 getValue
INFO  22:22:28,848 - #34 (
INFO  22:22:28,848 - #44 c
INFO  22:22:28,848 - #33 .
INFO  22:22:28,848 - #44 theA
INFO  22:22:28,849 - #33 .
INFO  22:22:28,849 - #44 x
INFO  22:22:28,849 - #36 [
INFO  22:22:28,849 - #43 0
INFO  22:22:28,849 - #37 ]
INFO  22:22:28,849 - #35 )
INFO  22:22:28,849 - #35 )
INFO  22:22:28,849 - #31 ;
INFO  22:22:28,849 - #44 aaa
INFO  22:22:28,849 - #34 (
INFO  22:22:28,850 - #35 )
INFO  22:22:28,850 - #15 +
ERROR 22:22:28,850 - 
Sintaksna greska na liniji 32
ERROR 22:22:28,850 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 32
INFO  22:22:28,850 - GlobalVar = 2
INFO  22:22:28,850 - GlobalConst = 2
INFO  22:22:28,850 - LocalMainVar = 4
INFO  22:22:28,850 - GlobalArray = 0
INFO  22:22:28,851 - FuncProg = 0
INFO  22:22:28,851 - Blocks = 1
INFO  22:22:28,851 - FuncCalls = 5
INFO  22:22:47,499 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:22:47,517 - #2 program
INFO  22:22:47,517 - #44 Program
INFO  22:22:47,517 - #4 class
INFO  22:22:47,517 - #44 A
INFO  22:22:47,517 - #38 {
INFO  22:22:47,518 - #44 int
INFO  22:22:47,518 - #44 x
INFO  22:22:47,518 - #36 [
INFO  22:22:47,518 - #37 ]
INFO  22:22:47,518 - #32 ,
INFO  22:22:47,519 - #44 y
INFO  22:22:47,519 - #36 [
INFO  22:22:47,519 - #37 ]
INFO  22:22:47,519 - #31 ;
INFO  22:22:47,519 - #39 }
INFO  22:22:47,519 - #6 const
INFO  22:22:47,519 - #44 int
INFO  22:22:47,520 - #44 pi
INFO  22:22:47,520 - #28 =
INFO  22:22:47,520 - #43 3
INFO  22:22:47,520 - #32 ,
INFO  22:22:47,520 - #44 e
INFO  22:22:47,520 - #28 =
INFO  22:22:47,521 - #43 2
INFO  22:22:47,521 - #31 ;
INFO  22:22:47,521 - #4 class
INFO  22:22:47,521 - #44 B
INFO  22:22:47,521 - #14 extends
INFO  22:22:47,521 - #44 A
INFO  22:22:47,522 - #38 {
INFO  22:22:47,522 - #44 int
INFO  22:22:47,522 - #44 i
INFO  22:22:47,522 - #31 ;
INFO  22:22:47,522 - #44 int
INFO  22:22:47,522 - #44 x
INFO  22:22:47,522 - #36 [
INFO  22:22:47,522 - #37 ]
INFO  22:22:47,522 - #31 ;
INFO  22:22:47,522 - #38 {
INFO  22:22:47,523 - #44 int
INFO  22:22:47,523 - #44 getValue
INFO  22:22:47,523 - #34 (
INFO  22:22:47,523 - #44 int
INFO  22:22:47,523 - #44 a
INFO  22:22:47,523 - #35 )
INFO  22:22:47,523 - #44 int
INFO  22:22:47,523 - #44 b
INFO  22:22:47,523 - #31 ;
INFO  22:22:47,523 - #44 bool
INFO  22:22:47,524 - #44 c
INFO  22:22:47,524 - #31 ;
INFO  22:22:47,524 - #38 {
INFO  22:22:47,524 - #11 return
INFO  22:22:47,524 - #44 this
INFO  22:22:47,524 - #33 .
INFO  22:22:47,524 - #44 i
INFO  22:22:47,524 - #15 +
INFO  22:22:47,525 - #44 this
INFO  22:22:47,525 - #33 .
INFO  22:22:47,525 - #44 x
INFO  22:22:47,525 - #36 [
INFO  22:22:47,525 - #43 0
INFO  22:22:47,525 - #37 ]
INFO  22:22:47,525 - #15 +
INFO  22:22:47,525 - #44 a
INFO  22:22:47,525 - #31 ;
INFO  22:22:47,526 - #39 }
INFO  22:22:47,526 - #39 }
INFO  22:22:47,526 - #39 }
INFO  22:22:47,526 - #4 class
INFO  22:22:47,526 - #44 C
INFO  22:22:47,526 - #14 extends
INFO  22:22:47,526 - #44 B
INFO  22:22:47,526 - #38 {
INFO  22:22:47,527 - #44 A
INFO  22:22:47,527 - #44 theA
INFO  22:22:47,527 - #31 ;
INFO  22:22:47,527 - #44 string
INFO  22:22:47,527 - #44 a
INFO  22:22:47,527 - #31 ;
INFO  22:22:47,527 - #39 }
INFO  22:22:47,528 - #38 {
INFO  22:22:47,528 - #12 void
INFO  22:22:47,528 - #44 main
INFO  22:22:47,528 - #34 (
INFO  22:22:47,528 - #35 )
INFO  22:22:47,528 - #44 A
INFO  22:22:47,528 - #44 a
INFO  22:22:47,528 - #31 ;
INFO  22:22:47,528 - #44 C
INFO  22:22:47,528 - #44 c
INFO  22:22:47,528 - #31 ;
INFO  22:22:47,529 - #44 int
INFO  22:22:47,529 - #44 i
INFO  22:22:47,529 - #31 ;
INFO  22:22:47,529 - #44 int
INFO  22:22:47,529 - #44 x
INFO  22:22:47,529 - #36 [
INFO  22:22:47,529 - #37 ]
INFO  22:22:47,529 - #31 ;
INFO  22:22:47,529 - #38 {
INFO  22:22:47,529 - #44 a
INFO  22:22:47,530 - #28 =
INFO  22:22:47,530 - #8 new
INFO  22:22:47,530 - #44 A
INFO  22:22:47,530 - #31 ;
INFO  22:22:47,530 - #44 a
INFO  22:22:47,530 - #33 .
INFO  22:22:47,530 - #44 x
INFO  22:22:47,530 - #28 =
INFO  22:22:47,530 - #8 new
INFO  22:22:47,530 - #44 int
INFO  22:22:47,531 - #36 [
INFO  22:22:47,531 - #43 5
INFO  22:22:47,531 - #37 ]
INFO  22:22:47,531 - #31 ;
INFO  22:22:47,531 - #44 a
INFO  22:22:47,531 - #33 .
INFO  22:22:47,531 - #44 y
INFO  22:22:47,531 - #28 =
INFO  22:22:47,531 - #8 new
INFO  22:22:47,531 - #44 int
INFO  22:22:47,532 - #36 [
INFO  22:22:47,532 - #43 5
INFO  22:22:47,532 - #37 ]
INFO  22:22:47,532 - #31 ;
INFO  22:22:47,532 - #44 c
INFO  22:22:47,532 - #28 =
INFO  22:22:47,532 - #8 new
INFO  22:22:47,532 - #44 C
INFO  22:22:47,533 - #31 ;
INFO  22:22:47,533 - #44 c
INFO  22:22:47,533 - #33 .
INFO  22:22:47,533 - #44 theA
INFO  22:22:47,533 - #28 =
INFO  22:22:47,533 - #44 a
INFO  22:22:47,534 - #31 ;
INFO  22:22:47,534 - #44 c
INFO  22:22:47,534 - #33 .
INFO  22:22:47,534 - #44 x
INFO  22:22:47,534 - #28 =
INFO  22:22:47,534 - #8 new
INFO  22:22:47,534 - #44 int
INFO  22:22:47,534 - #36 [
INFO  22:22:47,534 - #43 5
INFO  22:22:47,535 - #37 ]
INFO  22:22:47,535 - #31 ;
INFO  22:22:47,535 - #44 x
INFO  22:22:47,535 - #28 =
INFO  22:22:47,535 - #8 new
INFO  22:22:47,535 - #44 int
INFO  22:22:47,536 - #36 [
INFO  22:22:47,536 - #43 3
INFO  22:22:47,536 - #37 ]
INFO  22:22:47,536 - #31 ;
INFO  22:22:47,536 - #44 i
INFO  22:22:47,536 - #28 =
INFO  22:22:47,537 - #43 0
INFO  22:22:47,537 - #31 ;
INFO  22:22:47,537 - #10 read
INFO  22:22:47,537 - #34 (
INFO  22:22:47,537 - #44 c
INFO  22:22:47,537 - #33 .
INFO  22:22:47,538 - #44 i
INFO  22:22:47,538 - #35 )
INFO  22:22:47,538 - #31 ;
INFO  22:22:47,538 - #13 while
INFO  22:22:47,538 - #34 (
INFO  22:22:47,538 - #44 i
INFO  22:22:47,539 - #24 <
INFO  22:22:47,539 - #43 5
INFO  22:22:47,539 - #35 )
INFO  22:22:47,539 - #38 {
INFO  22:22:47,539 - #10 read
INFO  22:22:47,540 - #34 (
INFO  22:22:47,540 - #44 c
INFO  22:22:47,541 - #33 .
INFO  22:22:47,541 - #44 x
INFO  22:22:47,541 - #36 [
INFO  22:22:47,541 - #44 i
INFO  22:22:47,541 - #37 ]
INFO  22:22:47,541 - #35 )
INFO  22:22:47,541 - #31 ;
INFO  22:22:47,542 - #10 read
INFO  22:22:47,542 - #34 (
INFO  22:22:47,542 - #44 c
INFO  22:22:47,542 - #33 .
INFO  22:22:47,542 - #44 theA
INFO  22:22:47,542 - #33 .
INFO  22:22:47,543 - #44 x
INFO  22:22:47,543 - #36 [
INFO  22:22:47,543 - #44 i
INFO  22:22:47,543 - #37 ]
INFO  22:22:47,543 - #35 )
INFO  22:22:47,543 - #31 ;
INFO  22:22:47,543 - #44 i
INFO  22:22:47,543 - #29 ++
INFO  22:22:47,544 - #31 ;
INFO  22:22:47,544 - #39 }
INFO  22:22:47,544 - #9 print
INFO  22:22:47,544 - #34 (
INFO  22:22:47,544 - #44 c
INFO  22:22:47,544 - #33 .
INFO  22:22:47,544 - #44 getValue
INFO  22:22:47,544 - #34 (
INFO  22:22:47,545 - #44 c
INFO  22:22:47,545 - #33 .
INFO  22:22:47,545 - #44 theA
INFO  22:22:47,545 - #33 .
INFO  22:22:47,545 - #44 x
INFO  22:22:47,545 - #36 [
INFO  22:22:47,546 - #43 0
INFO  22:22:47,546 - #37 ]
INFO  22:22:47,546 - #35 )
INFO  22:22:47,546 - #35 )
INFO  22:22:47,546 - #31 ;
INFO  22:22:47,547 - #44 ccc
INFO  22:22:47,547 - #34 (
INFO  22:22:47,547 - #35 )
INFO  22:22:47,547 - #31 ;
INFO  22:22:47,547 - #39 }
INFO  22:22:47,547 - #12 void
INFO  22:22:47,548 - #44 aaa
INFO  22:22:47,548 - #34 (
INFO  22:22:47,548 - #35 )
INFO  22:22:47,548 - #44 A
INFO  22:22:47,548 - #44 a
INFO  22:22:47,548 - #31 ;
INFO  22:22:47,548 - #44 C
INFO  22:22:47,549 - #44 c
INFO  22:22:47,549 - #31 ;
INFO  22:22:47,549 - #44 int
INFO  22:22:47,549 - #44 i
INFO  22:22:47,549 - #31 ;
INFO  22:22:47,549 - #44 int
INFO  22:22:47,549 - #44 x
INFO  22:22:47,550 - #36 [
INFO  22:22:47,550 - #37 ]
INFO  22:22:47,550 - #31 ;
INFO  22:22:47,550 - #38 {
INFO  22:22:47,550 - #39 }
INFO  22:22:47,550 - #12 void
INFO  22:22:47,550 - #44 bbb
INFO  22:22:47,550 - #34 (
INFO  22:22:47,550 - #35 )
INFO  22:22:47,550 - #44 A
INFO  22:22:47,550 - #44 a
INFO  22:22:47,551 - #31 ;
INFO  22:22:47,551 - #44 C
INFO  22:22:47,551 - #44 c
INFO  22:22:47,551 - #31 ;
INFO  22:22:47,551 - #44 int
INFO  22:22:47,551 - #44 i
INFO  22:22:47,551 - #31 ;
INFO  22:22:47,551 - #44 int
INFO  22:22:47,551 - #44 x
INFO  22:22:47,551 - #36 [
INFO  22:22:47,551 - #37 ]
INFO  22:22:47,551 - #31 ;
INFO  22:22:47,552 - #38 {
INFO  22:22:47,552 - #39 }
INFO  22:22:47,552 - #12 void
INFO  22:22:47,552 - #44 ccc
INFO  22:22:47,552 - #34 (
INFO  22:22:47,552 - #35 )
INFO  22:22:47,552 - #44 A
INFO  22:22:47,552 - #44 a
INFO  22:22:47,552 - #31 ;
INFO  22:22:47,552 - #44 C
INFO  22:22:47,552 - #44 c
INFO  22:22:47,553 - #31 ;
INFO  22:22:47,553 - #44 int
INFO  22:22:47,553 - #44 i
INFO  22:22:47,553 - #31 ;
INFO  22:22:47,553 - #44 int
INFO  22:22:47,553 - #44 x
INFO  22:22:47,553 - #36 [
INFO  22:22:47,553 - #37 ]
INFO  22:22:47,553 - #31 ;
INFO  22:22:47,553 - #38 {
INFO  22:22:47,553 - #39 }
INFO  22:22:47,553 - #39 }
INFO  22:22:47,554 - GlobalVar = 2
INFO  22:22:47,554 - GlobalConst = 2
INFO  22:22:47,554 - LocalMainVar = 4
INFO  22:22:47,554 - GlobalArray = 0
INFO  22:22:47,554 - FuncProg = 4
INFO  22:22:47,554 - Blocks = 5
INFO  22:22:47,554 - FuncCalls = 6
INFO  22:22:54,775 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:22:54,784 - #2 program
INFO  22:22:54,784 - #44 Program
INFO  22:22:54,784 - #4 class
INFO  22:22:54,784 - #44 A
INFO  22:22:54,784 - #38 {
INFO  22:22:54,784 - #44 int
INFO  22:22:54,784 - #44 x
INFO  22:22:54,784 - #36 [
INFO  22:22:54,784 - #37 ]
INFO  22:22:54,785 - #32 ,
INFO  22:22:54,785 - #44 y
INFO  22:22:54,785 - #36 [
INFO  22:22:54,785 - #37 ]
INFO  22:22:54,785 - #31 ;
INFO  22:22:54,785 - #39 }
INFO  22:22:54,785 - #6 const
INFO  22:22:54,785 - #44 int
INFO  22:22:54,785 - #44 pi
INFO  22:22:54,785 - #28 =
INFO  22:22:54,785 - #43 3
INFO  22:22:54,785 - #32 ,
INFO  22:22:54,786 - #44 e
INFO  22:22:54,786 - #28 =
INFO  22:22:54,786 - #43 2
INFO  22:22:54,786 - #31 ;
INFO  22:22:54,786 - #4 class
INFO  22:22:54,786 - #44 B
INFO  22:22:54,786 - #14 extends
INFO  22:22:54,786 - #44 A
INFO  22:22:54,786 - #38 {
INFO  22:22:54,786 - #44 int
INFO  22:22:54,786 - #44 i
INFO  22:22:54,786 - #31 ;
INFO  22:22:54,786 - #44 int
INFO  22:22:54,787 - #44 x
INFO  22:22:54,787 - #36 [
INFO  22:22:54,787 - #37 ]
INFO  22:22:54,787 - #31 ;
INFO  22:22:54,787 - #38 {
INFO  22:22:54,787 - #44 int
INFO  22:22:54,787 - #44 getValue
INFO  22:22:54,787 - #34 (
INFO  22:22:54,787 - #44 int
INFO  22:22:54,787 - #44 a
INFO  22:22:54,787 - #35 )
INFO  22:22:54,787 - #44 int
INFO  22:22:54,787 - #44 b
INFO  22:22:54,788 - #31 ;
INFO  22:22:54,788 - #44 bool
INFO  22:22:54,788 - #44 c
INFO  22:22:54,788 - #31 ;
INFO  22:22:54,788 - #38 {
INFO  22:22:54,788 - #11 return
INFO  22:22:54,788 - #44 this
INFO  22:22:54,788 - #33 .
INFO  22:22:54,788 - #44 i
INFO  22:22:54,788 - #15 +
INFO  22:22:54,789 - #44 this
INFO  22:22:54,789 - #33 .
INFO  22:22:54,789 - #44 x
INFO  22:22:54,789 - #36 [
INFO  22:22:54,789 - #43 0
INFO  22:22:54,789 - #37 ]
INFO  22:22:54,789 - #15 +
INFO  22:22:54,789 - #44 a
INFO  22:22:54,789 - #31 ;
INFO  22:22:54,789 - #39 }
INFO  22:22:54,789 - #39 }
INFO  22:22:54,789 - #39 }
INFO  22:22:54,790 - #4 class
INFO  22:22:54,790 - #44 C
INFO  22:22:54,790 - #14 extends
INFO  22:22:54,790 - #44 B
INFO  22:22:54,790 - #38 {
INFO  22:22:54,790 - #44 A
INFO  22:22:54,790 - #44 theA
INFO  22:22:54,790 - #31 ;
INFO  22:22:54,790 - #44 string
INFO  22:22:54,790 - #44 a
INFO  22:22:54,790 - #31 ;
INFO  22:22:54,791 - #39 }
INFO  22:22:54,791 - #38 {
INFO  22:22:54,791 - #12 void
INFO  22:22:54,791 - #44 main
INFO  22:22:54,791 - #34 (
INFO  22:22:54,791 - #35 )
INFO  22:22:54,791 - #44 A
INFO  22:22:54,792 - #44 a
INFO  22:22:54,792 - #31 ;
INFO  22:22:54,792 - #44 C
INFO  22:22:54,792 - #44 c
INFO  22:22:54,792 - #31 ;
INFO  22:22:54,792 - #44 int
INFO  22:22:54,792 - #44 i
INFO  22:22:54,792 - #31 ;
INFO  22:22:54,792 - #44 int
INFO  22:22:54,792 - #44 x
INFO  22:22:54,793 - #36 [
INFO  22:22:54,793 - #37 ]
INFO  22:22:54,793 - #31 ;
INFO  22:22:54,793 - #38 {
INFO  22:22:54,793 - #44 a
INFO  22:22:54,793 - #28 =
INFO  22:22:54,793 - #8 new
INFO  22:22:54,793 - #44 A
INFO  22:22:54,793 - #31 ;
INFO  22:22:54,793 - #44 a
INFO  22:22:54,793 - #33 .
INFO  22:22:54,793 - #44 x
INFO  22:22:54,793 - #28 =
INFO  22:22:54,794 - #8 new
INFO  22:22:54,794 - #44 int
INFO  22:22:54,794 - #36 [
INFO  22:22:54,794 - #43 5
INFO  22:22:54,794 - #37 ]
INFO  22:22:54,794 - #31 ;
INFO  22:22:54,794 - #44 a
INFO  22:22:54,794 - #33 .
INFO  22:22:54,794 - #44 y
INFO  22:22:54,794 - #28 =
INFO  22:22:54,794 - #8 new
INFO  22:22:54,794 - #44 int
INFO  22:22:54,794 - #36 [
INFO  22:22:54,795 - #43 5
INFO  22:22:54,795 - #37 ]
INFO  22:22:54,795 - #31 ;
INFO  22:22:54,795 - #44 c
INFO  22:22:54,795 - #28 =
INFO  22:22:54,795 - #8 new
INFO  22:22:54,795 - #44 C
INFO  22:22:54,795 - #31 ;
INFO  22:22:54,795 - #44 c
INFO  22:22:54,795 - #33 .
INFO  22:22:54,796 - #44 theA
INFO  22:22:54,796 - #28 =
INFO  22:22:54,796 - #44 a
INFO  22:22:54,796 - #31 ;
INFO  22:22:54,796 - #44 c
INFO  22:22:54,796 - #33 .
INFO  22:22:54,796 - #44 x
INFO  22:22:54,796 - #28 =
INFO  22:22:54,796 - #8 new
INFO  22:22:54,796 - #44 int
INFO  22:22:54,797 - #36 [
INFO  22:22:54,797 - #43 5
INFO  22:22:54,797 - #37 ]
INFO  22:22:54,797 - #31 ;
INFO  22:22:54,797 - #44 x
INFO  22:22:54,797 - #28 =
INFO  22:22:54,797 - #8 new
INFO  22:22:54,797 - #44 int
INFO  22:22:54,797 - #36 [
INFO  22:22:54,797 - #43 3
INFO  22:22:54,797 - #37 ]
INFO  22:22:54,797 - #31 ;
INFO  22:22:54,797 - #44 i
INFO  22:22:54,798 - #28 =
INFO  22:22:54,798 - #43 0
INFO  22:22:54,798 - #31 ;
INFO  22:22:54,798 - #10 read
INFO  22:22:54,798 - #34 (
INFO  22:22:54,798 - #44 c
INFO  22:22:54,798 - #33 .
INFO  22:22:54,798 - #44 i
INFO  22:22:54,798 - #35 )
INFO  22:22:54,798 - #31 ;
INFO  22:22:54,798 - #13 while
INFO  22:22:54,798 - #34 (
INFO  22:22:54,798 - #44 i
INFO  22:22:54,799 - #24 <
INFO  22:22:54,799 - #43 5
INFO  22:22:54,799 - #35 )
INFO  22:22:54,799 - #38 {
INFO  22:22:54,799 - #10 read
INFO  22:22:54,799 - #34 (
INFO  22:22:54,799 - #44 c
INFO  22:22:54,799 - #33 .
INFO  22:22:54,800 - #44 x
INFO  22:22:54,800 - #36 [
INFO  22:22:54,800 - #44 i
INFO  22:22:54,800 - #37 ]
INFO  22:22:54,800 - #35 )
INFO  22:22:54,800 - #31 ;
INFO  22:22:54,800 - #10 read
INFO  22:22:54,800 - #34 (
INFO  22:22:54,800 - #44 c
INFO  22:22:54,800 - #33 .
INFO  22:22:54,801 - #44 theA
INFO  22:22:54,801 - #33 .
INFO  22:22:54,801 - #44 x
INFO  22:22:54,801 - #36 [
INFO  22:22:54,801 - #44 i
INFO  22:22:54,801 - #37 ]
INFO  22:22:54,801 - #35 )
INFO  22:22:54,801 - #31 ;
INFO  22:22:54,801 - #44 i
INFO  22:22:54,802 - #29 ++
INFO  22:22:54,802 - #31 ;
INFO  22:22:54,802 - #39 }
INFO  22:22:54,802 - #9 print
INFO  22:22:54,802 - #34 (
INFO  22:22:54,802 - #44 c
INFO  22:22:54,802 - #33 .
INFO  22:22:54,802 - #44 getValue
INFO  22:22:54,802 - #34 (
INFO  22:22:54,802 - #44 c
INFO  22:22:54,802 - #33 .
INFO  22:22:54,803 - #44 theA
INFO  22:22:54,803 - #33 .
INFO  22:22:54,803 - #44 x
INFO  22:22:54,803 - #36 [
INFO  22:22:54,803 - #43 0
INFO  22:22:54,803 - #37 ]
INFO  22:22:54,803 - #35 )
INFO  22:22:54,803 - #35 )
INFO  22:22:54,803 - #31 ;
INFO  22:22:54,803 - #44 aaa
INFO  22:22:54,804 - #34 (
INFO  22:22:54,804 - #35 )
INFO  22:22:54,804 - #15 +
ERROR 22:22:54,804 - 
Sintaksna greska na liniji 32
ERROR 22:22:54,804 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 32
INFO  22:22:54,804 - GlobalVar = 2
INFO  22:22:54,804 - GlobalConst = 2
INFO  22:22:54,804 - LocalMainVar = 4
INFO  22:22:54,804 - GlobalArray = 0
INFO  22:22:54,804 - FuncProg = 0
INFO  22:22:54,804 - Blocks = 1
INFO  22:22:54,805 - FuncCalls = 5
INFO  22:23:15,161 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:23:15,170 - #2 program
INFO  22:23:15,170 - #44 Program
INFO  22:23:15,170 - #4 class
INFO  22:23:15,170 - #44 A
INFO  22:23:15,170 - #38 {
INFO  22:23:15,171 - #44 int
INFO  22:23:15,171 - #44 x
INFO  22:23:15,171 - #36 [
INFO  22:23:15,171 - #37 ]
INFO  22:23:15,171 - #32 ,
INFO  22:23:15,171 - #44 y
INFO  22:23:15,171 - #36 [
INFO  22:23:15,171 - #37 ]
INFO  22:23:15,172 - #31 ;
INFO  22:23:15,172 - #39 }
INFO  22:23:15,172 - #6 const
INFO  22:23:15,172 - #44 int
INFO  22:23:15,172 - #44 pi
INFO  22:23:15,172 - #28 =
INFO  22:23:15,172 - #43 3
INFO  22:23:15,172 - #32 ,
INFO  22:23:15,172 - #44 e
INFO  22:23:15,172 - #28 =
INFO  22:23:15,172 - #43 2
INFO  22:23:15,173 - #31 ;
INFO  22:23:15,173 - #4 class
INFO  22:23:15,173 - #44 B
INFO  22:23:15,173 - #14 extends
INFO  22:23:15,173 - #44 A
INFO  22:23:15,173 - #38 {
INFO  22:23:15,173 - #44 int
INFO  22:23:15,173 - #44 i
INFO  22:23:15,173 - #31 ;
INFO  22:23:15,173 - #44 int
INFO  22:23:15,173 - #44 x
INFO  22:23:15,173 - #36 [
INFO  22:23:15,173 - #37 ]
INFO  22:23:15,174 - #31 ;
INFO  22:23:15,174 - #38 {
INFO  22:23:15,174 - #44 int
INFO  22:23:15,174 - #44 getValue
INFO  22:23:15,174 - #34 (
INFO  22:23:15,174 - #44 int
INFO  22:23:15,174 - #44 a
INFO  22:23:15,174 - #35 )
INFO  22:23:15,174 - #44 int
INFO  22:23:15,174 - #44 b
INFO  22:23:15,174 - #31 ;
INFO  22:23:15,174 - #44 bool
INFO  22:23:15,174 - #44 c
INFO  22:23:15,175 - #31 ;
INFO  22:23:15,175 - #38 {
INFO  22:23:15,175 - #11 return
INFO  22:23:15,175 - #44 this
INFO  22:23:15,175 - #33 .
INFO  22:23:15,175 - #44 i
INFO  22:23:15,175 - #15 +
INFO  22:23:15,175 - #44 this
INFO  22:23:15,175 - #33 .
INFO  22:23:15,175 - #44 x
INFO  22:23:15,175 - #36 [
INFO  22:23:15,176 - #43 0
INFO  22:23:15,176 - #37 ]
INFO  22:23:15,176 - #15 +
INFO  22:23:15,176 - #44 a
INFO  22:23:15,176 - #31 ;
INFO  22:23:15,176 - #39 }
INFO  22:23:15,176 - #39 }
INFO  22:23:15,176 - #39 }
INFO  22:23:15,176 - #4 class
INFO  22:23:15,176 - #44 C
INFO  22:23:15,176 - #14 extends
INFO  22:23:15,177 - #44 B
INFO  22:23:15,177 - #38 {
INFO  22:23:15,177 - #44 A
INFO  22:23:15,177 - #44 theA
INFO  22:23:15,177 - #31 ;
INFO  22:23:15,177 - #44 string
INFO  22:23:15,177 - #44 a
INFO  22:23:15,177 - #31 ;
INFO  22:23:15,177 - #39 }
INFO  22:23:15,177 - #38 {
INFO  22:23:15,178 - #12 void
INFO  22:23:15,178 - #44 main
INFO  22:23:15,178 - #34 (
INFO  22:23:15,178 - #35 )
INFO  22:23:15,178 - #44 A
INFO  22:23:15,178 - #44 a
INFO  22:23:15,178 - #31 ;
INFO  22:23:15,178 - #44 C
INFO  22:23:15,178 - #44 c
INFO  22:23:15,178 - #31 ;
INFO  22:23:15,178 - #44 int
INFO  22:23:15,179 - #44 i
INFO  22:23:15,179 - #31 ;
INFO  22:23:15,179 - #44 int
INFO  22:23:15,179 - #44 x
INFO  22:23:15,179 - #36 [
INFO  22:23:15,179 - #37 ]
INFO  22:23:15,179 - #31 ;
INFO  22:23:15,179 - #38 {
INFO  22:23:15,180 - #44 a
INFO  22:23:15,180 - #28 =
INFO  22:23:15,180 - #8 new
INFO  22:23:15,180 - #44 A
INFO  22:23:15,180 - #31 ;
INFO  22:23:15,180 - #44 a
INFO  22:23:15,180 - #33 .
INFO  22:23:15,180 - #44 x
INFO  22:23:15,180 - #28 =
INFO  22:23:15,180 - #8 new
INFO  22:23:15,180 - #44 int
INFO  22:23:15,180 - #36 [
INFO  22:23:15,181 - #43 5
INFO  22:23:15,181 - #37 ]
INFO  22:23:15,181 - #31 ;
INFO  22:23:15,181 - #44 a
INFO  22:23:15,181 - #33 .
INFO  22:23:15,181 - #44 y
INFO  22:23:15,181 - #28 =
INFO  22:23:15,181 - #8 new
INFO  22:23:15,181 - #44 int
INFO  22:23:15,181 - #36 [
INFO  22:23:15,181 - #43 5
INFO  22:23:15,182 - #37 ]
INFO  22:23:15,182 - #31 ;
INFO  22:23:15,182 - #44 c
INFO  22:23:15,182 - #28 =
INFO  22:23:15,182 - #8 new
INFO  22:23:15,182 - #44 C
INFO  22:23:15,182 - #31 ;
INFO  22:23:15,182 - #44 c
INFO  22:23:15,183 - #33 .
INFO  22:23:15,183 - #44 theA
INFO  22:23:15,183 - #28 =
INFO  22:23:15,183 - #44 a
INFO  22:23:15,183 - #31 ;
INFO  22:23:15,183 - #44 c
INFO  22:23:15,183 - #33 .
INFO  22:23:15,184 - #44 x
INFO  22:23:15,184 - #28 =
INFO  22:23:15,184 - #8 new
INFO  22:23:15,184 - #44 int
INFO  22:23:15,184 - #36 [
INFO  22:23:15,184 - #43 5
INFO  22:23:15,184 - #37 ]
INFO  22:23:15,184 - #31 ;
INFO  22:23:15,184 - #44 x
INFO  22:23:15,185 - #28 =
INFO  22:23:15,185 - #8 new
INFO  22:23:15,185 - #44 int
INFO  22:23:15,185 - #36 [
INFO  22:23:15,185 - #43 3
INFO  22:23:15,185 - #37 ]
INFO  22:23:15,185 - #31 ;
INFO  22:23:15,185 - #44 i
INFO  22:23:15,185 - #28 =
INFO  22:23:15,185 - #43 0
INFO  22:23:15,185 - #31 ;
INFO  22:23:15,185 - #10 read
INFO  22:23:15,186 - #34 (
INFO  22:23:15,186 - #44 c
INFO  22:23:15,186 - #33 .
INFO  22:23:15,186 - #44 i
INFO  22:23:15,186 - #35 )
INFO  22:23:15,186 - #31 ;
INFO  22:23:15,186 - #13 while
INFO  22:23:15,186 - #34 (
INFO  22:23:15,186 - #44 i
INFO  22:23:15,186 - #24 <
INFO  22:23:15,186 - #43 5
INFO  22:23:15,187 - #35 )
INFO  22:23:15,187 - #38 {
INFO  22:23:15,187 - #10 read
INFO  22:23:15,187 - #34 (
INFO  22:23:15,187 - #44 c
INFO  22:23:15,187 - #33 .
INFO  22:23:15,187 - #44 x
INFO  22:23:15,187 - #36 [
INFO  22:23:15,187 - #44 i
INFO  22:23:15,188 - #37 ]
INFO  22:23:15,188 - #35 )
INFO  22:23:15,188 - #31 ;
INFO  22:23:15,188 - #10 read
INFO  22:23:15,188 - #34 (
INFO  22:23:15,188 - #44 c
INFO  22:23:15,188 - #33 .
INFO  22:23:15,188 - #44 theA
INFO  22:23:15,188 - #33 .
INFO  22:23:15,188 - #44 x
INFO  22:23:15,189 - #36 [
INFO  22:23:15,189 - #44 i
INFO  22:23:15,189 - #37 ]
INFO  22:23:15,189 - #35 )
INFO  22:23:15,189 - #31 ;
INFO  22:23:15,189 - #44 i
INFO  22:23:15,189 - #29 ++
INFO  22:23:15,189 - #31 ;
INFO  22:23:15,189 - #39 }
INFO  22:23:15,189 - #9 print
INFO  22:23:15,189 - #34 (
INFO  22:23:15,190 - #44 c
INFO  22:23:15,190 - #33 .
INFO  22:23:15,190 - #44 getValue
INFO  22:23:15,190 - #34 (
INFO  22:23:15,190 - #44 c
INFO  22:23:15,190 - #33 .
INFO  22:23:15,190 - #44 theA
INFO  22:23:15,190 - #33 .
INFO  22:23:15,190 - #44 x
INFO  22:23:15,190 - #36 [
INFO  22:23:15,190 - #43 0
INFO  22:23:15,191 - #37 ]
INFO  22:23:15,191 - #35 )
INFO  22:23:15,191 - #35 )
INFO  22:23:15,191 - #31 ;
INFO  22:23:15,191 - #44 a
INFO  22:23:15,191 - #28 =
INFO  22:23:15,191 - #44 aaa
INFO  22:23:15,191 - #34 (
INFO  22:23:15,191 - #35 )
INFO  22:23:15,191 - #15 +
INFO  22:23:15,192 - #44 bbb
INFO  22:23:15,192 - #34 (
INFO  22:23:15,192 - #35 )
INFO  22:23:15,192 - #31 ;
INFO  22:23:15,192 - #44 ccc
INFO  22:23:15,192 - #34 (
INFO  22:23:15,192 - #35 )
INFO  22:23:15,192 - #31 ;
INFO  22:23:15,192 - #39 }
INFO  22:23:15,192 - #12 void
INFO  22:23:15,193 - #44 aaa
INFO  22:23:15,193 - #34 (
INFO  22:23:15,193 - #35 )
INFO  22:23:15,193 - #44 A
INFO  22:23:15,193 - #44 a
INFO  22:23:15,193 - #31 ;
INFO  22:23:15,193 - #44 C
INFO  22:23:15,193 - #44 c
INFO  22:23:15,193 - #31 ;
INFO  22:23:15,193 - #44 int
INFO  22:23:15,194 - #44 i
INFO  22:23:15,194 - #31 ;
INFO  22:23:15,194 - #44 int
INFO  22:23:15,194 - #44 x
INFO  22:23:15,194 - #36 [
INFO  22:23:15,194 - #37 ]
INFO  22:23:15,194 - #31 ;
INFO  22:23:15,194 - #38 {
INFO  22:23:15,194 - #39 }
INFO  22:23:15,194 - #12 void
INFO  22:23:15,194 - #44 bbb
INFO  22:23:15,195 - #34 (
INFO  22:23:15,195 - #35 )
INFO  22:23:15,195 - #44 A
INFO  22:23:15,195 - #44 a
INFO  22:23:15,195 - #31 ;
INFO  22:23:15,195 - #44 C
INFO  22:23:15,195 - #44 c
INFO  22:23:15,195 - #31 ;
INFO  22:23:15,195 - #44 int
INFO  22:23:15,195 - #44 i
INFO  22:23:15,195 - #31 ;
INFO  22:23:15,195 - #44 int
INFO  22:23:15,196 - #44 x
INFO  22:23:15,196 - #36 [
INFO  22:23:15,196 - #37 ]
INFO  22:23:15,196 - #31 ;
INFO  22:23:15,196 - #38 {
INFO  22:23:15,196 - #39 }
INFO  22:23:15,196 - #12 void
INFO  22:23:15,196 - #44 ccc
INFO  22:23:15,196 - #34 (
INFO  22:23:15,196 - #35 )
INFO  22:23:15,196 - #44 A
INFO  22:23:15,196 - #44 a
INFO  22:23:15,196 - #31 ;
INFO  22:23:15,196 - #44 C
INFO  22:23:15,196 - #44 c
INFO  22:23:15,197 - #31 ;
INFO  22:23:15,197 - #44 int
INFO  22:23:15,197 - #44 i
INFO  22:23:15,197 - #31 ;
INFO  22:23:15,197 - #44 int
INFO  22:23:15,197 - #44 x
INFO  22:23:15,197 - #36 [
INFO  22:23:15,197 - #37 ]
INFO  22:23:15,197 - #31 ;
INFO  22:23:15,197 - #38 {
INFO  22:23:15,197 - #39 }
INFO  22:23:15,197 - #39 }
INFO  22:23:15,198 - GlobalVar = 2
INFO  22:23:15,198 - GlobalConst = 2
INFO  22:23:15,198 - LocalMainVar = 4
INFO  22:23:15,198 - GlobalArray = 0
INFO  22:23:15,198 - FuncProg = 4
INFO  22:23:15,198 - Blocks = 5
INFO  22:23:15,198 - FuncCalls = 8
INFO  22:29:38,441 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:29:38,450 - #2 program
INFO  22:29:38,451 - #44 Program
INFO  22:29:38,451 - #4 class
INFO  22:29:38,451 - #44 A
INFO  22:29:38,451 - #38 {
INFO  22:29:38,451 - #44 int
INFO  22:29:38,451 - #44 x
INFO  22:29:38,451 - #36 [
INFO  22:29:38,451 - #37 ]
INFO  22:29:38,451 - #32 ,
INFO  22:29:38,452 - #44 y
INFO  22:29:38,452 - #36 [
INFO  22:29:38,452 - #37 ]
INFO  22:29:38,452 - #31 ;
INFO  22:29:38,452 - #39 }
INFO  22:29:38,452 - #6 const
INFO  22:29:38,452 - #44 int
INFO  22:29:38,452 - #44 pi
INFO  22:29:38,452 - #28 =
INFO  22:29:38,453 - #43 3
INFO  22:29:38,453 - #32 ,
INFO  22:29:38,453 - #44 e
INFO  22:29:38,453 - #28 =
INFO  22:29:38,453 - #43 2
INFO  22:29:38,453 - #31 ;
INFO  22:29:38,453 - #4 class
INFO  22:29:38,453 - #44 B
INFO  22:29:38,454 - #14 extends
INFO  22:29:38,454 - #44 A
INFO  22:29:38,454 - #38 {
INFO  22:29:38,454 - #44 int
INFO  22:29:38,454 - #44 i
INFO  22:29:38,454 - #31 ;
INFO  22:29:38,454 - #44 int
INFO  22:29:38,454 - #44 x
INFO  22:29:38,454 - #36 [
INFO  22:29:38,454 - #37 ]
INFO  22:29:38,455 - #31 ;
INFO  22:29:38,455 - #38 {
INFO  22:29:38,455 - #44 int
INFO  22:29:38,455 - #44 getValue
INFO  22:29:38,455 - #34 (
INFO  22:29:38,455 - #44 int
INFO  22:29:38,455 - #44 a
INFO  22:29:38,455 - #35 )
INFO  22:29:38,456 - #44 int
INFO  22:29:38,456 - #44 b
INFO  22:29:38,456 - #31 ;
INFO  22:29:38,456 - #44 bool
INFO  22:29:38,456 - #44 c
INFO  22:29:38,456 - #31 ;
INFO  22:29:38,456 - #38 {
INFO  22:29:38,456 - #11 return
INFO  22:29:38,457 - #44 this
INFO  22:29:38,457 - #33 .
INFO  22:29:38,457 - #44 i
INFO  22:29:38,457 - #15 +
INFO  22:29:38,457 - #44 this
INFO  22:29:38,457 - #33 .
INFO  22:29:38,457 - #44 x
INFO  22:29:38,457 - #36 [
INFO  22:29:38,457 - #43 0
INFO  22:29:38,457 - #37 ]
INFO  22:29:38,458 - #15 +
INFO  22:29:38,458 - #44 a
INFO  22:29:38,458 - #31 ;
INFO  22:29:38,458 - #39 }
INFO  22:29:38,458 - #39 }
INFO  22:29:38,458 - #39 }
INFO  22:29:38,458 - #4 class
INFO  22:29:38,459 - #44 C
INFO  22:29:38,459 - #14 extends
INFO  22:29:38,459 - #44 B
INFO  22:29:38,459 - #38 {
INFO  22:29:38,459 - #44 A
INFO  22:29:38,459 - #44 theA
INFO  22:29:38,459 - #31 ;
INFO  22:29:38,459 - #44 string
INFO  22:29:38,460 - #44 a
INFO  22:29:38,460 - #31 ;
INFO  22:29:38,460 - #39 }
INFO  22:29:38,460 - #38 {
INFO  22:29:38,460 - #12 void
INFO  22:29:38,460 - #44 main
INFO  22:29:38,460 - #34 (
INFO  22:29:38,461 - #35 )
INFO  22:29:38,461 - #44 A
INFO  22:29:38,461 - #44 a
INFO  22:29:38,461 - #31 ;
INFO  22:29:38,461 - #44 C
INFO  22:29:38,461 - #44 c
INFO  22:29:38,461 - #31 ;
INFO  22:29:38,461 - #44 int
INFO  22:29:38,462 - #44 i
INFO  22:29:38,462 - #31 ;
INFO  22:29:38,462 - #44 int
INFO  22:29:38,462 - #44 x
INFO  22:29:38,463 - #36 [
INFO  22:29:38,463 - #37 ]
INFO  22:29:38,463 - #31 ;
INFO  22:29:38,463 - #38 {
INFO  22:29:38,463 - #44 a
INFO  22:29:38,463 - #28 =
INFO  22:29:38,463 - #8 new
INFO  22:29:38,463 - #44 A
INFO  22:29:38,463 - #31 ;
INFO  22:29:38,464 - #44 a
INFO  22:29:38,464 - #33 .
INFO  22:29:38,464 - #44 x
INFO  22:29:38,464 - #28 =
INFO  22:29:38,464 - #8 new
INFO  22:29:38,464 - #44 int
INFO  22:29:38,464 - #36 [
INFO  22:29:38,464 - #43 5
INFO  22:29:38,464 - #37 ]
INFO  22:29:38,464 - #31 ;
INFO  22:29:38,465 - #44 a
INFO  22:29:38,465 - #33 .
INFO  22:29:38,465 - #44 y
INFO  22:29:38,465 - #28 =
INFO  22:29:38,465 - #8 new
INFO  22:29:38,465 - #44 int
INFO  22:29:38,465 - #36 [
INFO  22:29:38,465 - #43 5
INFO  22:29:38,465 - #37 ]
INFO  22:29:38,465 - #31 ;
INFO  22:29:38,465 - #44 c
INFO  22:29:38,466 - #28 =
INFO  22:29:38,466 - #8 new
INFO  22:29:38,466 - #44 C
INFO  22:29:38,466 - #31 ;
INFO  22:29:38,466 - #44 c
INFO  22:29:38,466 - #33 .
INFO  22:29:38,466 - #44 theA
INFO  22:29:38,466 - #28 =
INFO  22:29:38,466 - #44 a
INFO  22:29:38,466 - #31 ;
INFO  22:29:38,467 - #44 c
INFO  22:29:38,467 - #33 .
INFO  22:29:38,467 - #44 x
INFO  22:29:38,467 - #28 =
INFO  22:29:38,467 - #8 new
INFO  22:29:38,467 - #44 int
INFO  22:29:38,467 - #36 [
INFO  22:29:38,467 - #43 5
INFO  22:29:38,467 - #37 ]
INFO  22:29:38,467 - #31 ;
INFO  22:29:38,468 - #44 x
INFO  22:29:38,468 - #28 =
INFO  22:29:38,468 - #8 new
INFO  22:29:38,468 - #44 int
INFO  22:29:38,468 - #36 [
INFO  22:29:38,468 - #43 3
INFO  22:29:38,468 - #37 ]
INFO  22:29:38,468 - #31 ;
INFO  22:29:38,468 - #44 i
INFO  22:29:38,468 - #28 =
INFO  22:29:38,468 - #43 0
INFO  22:29:38,468 - #31 ;
INFO  22:29:38,468 - #10 read
INFO  22:29:38,469 - #34 (
INFO  22:29:38,469 - #44 c
INFO  22:29:38,469 - #33 .
INFO  22:29:38,469 - #44 i
INFO  22:29:38,469 - #35 )
INFO  22:29:38,469 - #31 ;
INFO  22:29:38,469 - #13 while
INFO  22:29:38,469 - #34 (
INFO  22:29:38,469 - #44 i
INFO  22:29:38,469 - #24 <
INFO  22:29:38,469 - #43 5
INFO  22:29:38,469 - #35 )
INFO  22:29:38,470 - #38 {
INFO  22:29:38,470 - #10 read
INFO  22:29:38,470 - #34 (
INFO  22:29:38,470 - #44 c
INFO  22:29:38,470 - #33 .
INFO  22:29:38,470 - #44 x
INFO  22:29:38,470 - #36 [
INFO  22:29:38,470 - #44 i
INFO  22:29:38,471 - #37 ]
INFO  22:29:38,471 - #35 )
INFO  22:29:38,471 - #31 ;
INFO  22:29:38,471 - #10 read
INFO  22:29:38,471 - #34 (
INFO  22:29:38,471 - #44 c
INFO  22:29:38,471 - #33 .
INFO  22:29:38,471 - #44 theA
INFO  22:29:38,471 - #33 .
INFO  22:29:38,471 - #44 x
INFO  22:29:38,472 - #36 [
INFO  22:29:38,472 - #44 i
INFO  22:29:38,472 - #37 ]
INFO  22:29:38,472 - #35 )
INFO  22:29:38,472 - #31 ;
INFO  22:29:38,472 - #44 i
INFO  22:29:38,472 - #29 ++
INFO  22:29:38,472 - #31 ;
INFO  22:29:38,472 - #39 }
INFO  22:29:38,472 - #9 print
INFO  22:29:38,473 - #34 (
INFO  22:29:38,473 - #44 c
INFO  22:29:38,473 - #33 .
INFO  22:29:38,473 - #44 getValue
INFO  22:29:38,473 - #34 (
INFO  22:29:38,473 - #44 c
INFO  22:29:38,473 - #33 .
INFO  22:29:38,473 - #44 theA
INFO  22:29:38,473 - #33 .
INFO  22:29:38,473 - #44 x
INFO  22:29:38,473 - #36 [
INFO  22:29:38,474 - #43 0
INFO  22:29:38,474 - #37 ]
INFO  22:29:38,474 - #35 )
INFO  22:29:38,474 - #35 )
INFO  22:29:38,474 - #31 ;
INFO  22:29:38,474 - #39 }
INFO  22:29:38,474 - #12 void
INFO  22:29:38,474 - #44 aaa
INFO  22:29:38,474 - #34 (
INFO  22:29:38,474 - #35 )
INFO  22:29:38,475 - #44 A
INFO  22:29:38,475 - #44 a
INFO  22:29:38,475 - #31 ;
INFO  22:29:38,475 - #44 C
INFO  22:29:38,475 - #44 c
INFO  22:29:38,475 - #31 ;
INFO  22:29:38,475 - #44 int
INFO  22:29:38,475 - #44 i
INFO  22:29:38,475 - #31 ;
INFO  22:29:38,475 - #44 int
INFO  22:29:38,476 - #44 x
INFO  22:29:38,476 - #36 [
INFO  22:29:38,476 - #37 ]
INFO  22:29:38,476 - #31 ;
INFO  22:29:38,476 - #38 {
INFO  22:29:38,476 - #39 }
INFO  22:29:38,476 - #12 void
INFO  22:29:38,476 - #44 bbb
INFO  22:29:38,476 - #34 (
INFO  22:29:38,476 - #35 )
INFO  22:29:38,476 - #44 A
INFO  22:29:38,477 - #44 a
INFO  22:29:38,477 - #31 ;
INFO  22:29:38,477 - #44 C
INFO  22:29:38,477 - #44 c
INFO  22:29:38,477 - #31 ;
INFO  22:29:38,477 - #44 int
INFO  22:29:38,477 - #44 i
INFO  22:29:38,477 - #31 ;
INFO  22:29:38,477 - #44 int
INFO  22:29:38,477 - #44 x
INFO  22:29:38,477 - #36 [
INFO  22:29:38,477 - #37 ]
INFO  22:29:38,478 - #31 ;
INFO  22:29:38,478 - #38 {
INFO  22:29:38,478 - #39 }
INFO  22:29:38,478 - #12 void
INFO  22:29:38,478 - #44 ccc
INFO  22:29:38,478 - #34 (
INFO  22:29:38,478 - #35 )
INFO  22:29:38,478 - #44 A
INFO  22:29:38,478 - #44 a
INFO  22:29:38,478 - #31 ;
INFO  22:29:38,478 - #44 C
INFO  22:29:38,478 - #44 c
INFO  22:29:38,478 - #31 ;
INFO  22:29:38,478 - #44 int
INFO  22:29:38,478 - #44 i
INFO  22:29:38,479 - #31 ;
INFO  22:29:38,479 - #44 int
INFO  22:29:38,479 - #44 x
INFO  22:29:38,479 - #36 [
INFO  22:29:38,479 - #37 ]
INFO  22:29:38,479 - #31 ;
INFO  22:29:38,479 - #38 {
INFO  22:29:38,479 - #39 }
INFO  22:29:38,479 - #39 }
INFO  22:29:38,479 - GlobalVar = 2
INFO  22:29:38,479 - GlobalConst = 2
INFO  22:29:38,479 - LocalMainVar = 4
INFO  22:29:38,479 - GlobalArray = 0
INFO  22:29:38,480 - FuncProg = 4
INFO  22:29:38,480 - Blocks = 5
INFO  22:29:38,480 - FuncCalls = 5
INFO  22:29:38,480 - FormalArg = 0
INFO  22:30:04,721 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:30:04,732 - #2 program
INFO  22:30:04,732 - #44 Program
INFO  22:30:04,732 - #4 class
INFO  22:30:04,732 - #44 A
INFO  22:30:04,732 - #38 {
INFO  22:30:04,732 - #44 int
INFO  22:30:04,732 - #44 x
INFO  22:30:04,732 - #36 [
INFO  22:30:04,732 - #37 ]
INFO  22:30:04,733 - #32 ,
INFO  22:30:04,733 - #44 y
INFO  22:30:04,733 - #36 [
INFO  22:30:04,733 - #37 ]
INFO  22:30:04,733 - #31 ;
INFO  22:30:04,733 - #39 }
INFO  22:30:04,733 - #6 const
INFO  22:30:04,733 - #44 int
INFO  22:30:04,733 - #44 pi
INFO  22:30:04,733 - #28 =
INFO  22:30:04,733 - #43 3
INFO  22:30:04,733 - #32 ,
INFO  22:30:04,733 - #44 e
INFO  22:30:04,734 - #28 =
INFO  22:30:04,734 - #43 2
INFO  22:30:04,734 - #31 ;
INFO  22:30:04,734 - #4 class
INFO  22:30:04,734 - #44 B
INFO  22:30:04,734 - #14 extends
INFO  22:30:04,734 - #44 A
INFO  22:30:04,734 - #38 {
INFO  22:30:04,734 - #44 int
INFO  22:30:04,734 - #44 i
INFO  22:30:04,734 - #31 ;
INFO  22:30:04,734 - #44 int
INFO  22:30:04,734 - #44 x
INFO  22:30:04,734 - #36 [
INFO  22:30:04,735 - #37 ]
INFO  22:30:04,735 - #31 ;
INFO  22:30:04,735 - #38 {
INFO  22:30:04,735 - #44 int
INFO  22:30:04,735 - #44 getValue
INFO  22:30:04,735 - #34 (
INFO  22:30:04,735 - #44 int
INFO  22:30:04,735 - #44 a
INFO  22:30:04,735 - #35 )
INFO  22:30:04,735 - #44 int
INFO  22:30:04,735 - #44 b
INFO  22:30:04,735 - #31 ;
INFO  22:30:04,735 - #44 bool
INFO  22:30:04,736 - #44 c
INFO  22:30:04,736 - #31 ;
INFO  22:30:04,736 - #38 {
INFO  22:30:04,736 - #11 return
INFO  22:30:04,736 - #44 this
INFO  22:30:04,736 - #33 .
INFO  22:30:04,736 - #44 i
INFO  22:30:04,736 - #15 +
INFO  22:30:04,736 - #44 this
INFO  22:30:04,736 - #33 .
INFO  22:30:04,736 - #44 x
INFO  22:30:04,736 - #36 [
INFO  22:30:04,737 - #43 0
INFO  22:30:04,737 - #37 ]
INFO  22:30:04,737 - #15 +
INFO  22:30:04,737 - #44 a
INFO  22:30:04,737 - #31 ;
INFO  22:30:04,737 - #39 }
INFO  22:30:04,737 - #39 }
INFO  22:30:04,737 - #39 }
INFO  22:30:04,737 - #4 class
INFO  22:30:04,738 - #44 C
INFO  22:30:04,738 - #14 extends
INFO  22:30:04,738 - #44 B
INFO  22:30:04,738 - #38 {
INFO  22:30:04,738 - #44 A
INFO  22:30:04,738 - #44 theA
INFO  22:30:04,738 - #31 ;
INFO  22:30:04,738 - #44 string
INFO  22:30:04,739 - #44 a
INFO  22:30:04,739 - #31 ;
INFO  22:30:04,739 - #39 }
INFO  22:30:04,739 - #38 {
INFO  22:30:04,739 - #12 void
INFO  22:30:04,739 - #44 main
INFO  22:30:04,739 - #34 (
INFO  22:30:04,739 - #35 )
INFO  22:30:04,740 - #44 A
INFO  22:30:04,740 - #44 a
INFO  22:30:04,740 - #31 ;
INFO  22:30:04,740 - #44 C
INFO  22:30:04,740 - #44 c
INFO  22:30:04,740 - #31 ;
INFO  22:30:04,740 - #44 int
INFO  22:30:04,740 - #44 i
INFO  22:30:04,740 - #31 ;
INFO  22:30:04,740 - #44 int
INFO  22:30:04,741 - #44 x
INFO  22:30:04,741 - #36 [
INFO  22:30:04,741 - #37 ]
INFO  22:30:04,741 - #31 ;
INFO  22:30:04,741 - #38 {
INFO  22:30:04,741 - #44 a
INFO  22:30:04,741 - #28 =
INFO  22:30:04,741 - #8 new
INFO  22:30:04,741 - #44 A
INFO  22:30:04,741 - #31 ;
INFO  22:30:04,741 - #44 a
INFO  22:30:04,742 - #33 .
INFO  22:30:04,742 - #44 x
INFO  22:30:04,742 - #28 =
INFO  22:30:04,742 - #8 new
INFO  22:30:04,742 - #44 int
INFO  22:30:04,742 - #36 [
INFO  22:30:04,742 - #43 5
INFO  22:30:04,742 - #37 ]
INFO  22:30:04,742 - #31 ;
INFO  22:30:04,742 - #44 a
INFO  22:30:04,742 - #33 .
INFO  22:30:04,742 - #44 y
INFO  22:30:04,742 - #28 =
INFO  22:30:04,743 - #8 new
INFO  22:30:04,743 - #44 int
INFO  22:30:04,743 - #36 [
INFO  22:30:04,743 - #43 5
INFO  22:30:04,743 - #37 ]
INFO  22:30:04,743 - #31 ;
INFO  22:30:04,743 - #44 c
INFO  22:30:04,743 - #28 =
INFO  22:30:04,743 - #8 new
INFO  22:30:04,743 - #44 C
INFO  22:30:04,744 - #31 ;
INFO  22:30:04,744 - #44 c
INFO  22:30:04,744 - #33 .
INFO  22:30:04,744 - #44 theA
INFO  22:30:04,744 - #28 =
INFO  22:30:04,744 - #44 a
INFO  22:30:04,744 - #31 ;
INFO  22:30:04,744 - #44 c
INFO  22:30:04,744 - #33 .
INFO  22:30:04,744 - #44 x
INFO  22:30:04,744 - #28 =
INFO  22:30:04,745 - #8 new
INFO  22:30:04,745 - #44 int
INFO  22:30:04,745 - #36 [
INFO  22:30:04,745 - #43 5
INFO  22:30:04,745 - #37 ]
INFO  22:30:04,745 - #31 ;
INFO  22:30:04,745 - #44 x
INFO  22:30:04,745 - #28 =
INFO  22:30:04,745 - #8 new
INFO  22:30:04,745 - #44 int
INFO  22:30:04,745 - #36 [
INFO  22:30:04,746 - #43 3
INFO  22:30:04,746 - #37 ]
INFO  22:30:04,746 - #31 ;
INFO  22:30:04,746 - #44 i
INFO  22:30:04,746 - #28 =
INFO  22:30:04,746 - #43 0
INFO  22:30:04,746 - #31 ;
INFO  22:30:04,746 - #10 read
INFO  22:30:04,746 - #34 (
INFO  22:30:04,746 - #44 c
INFO  22:30:04,746 - #33 .
INFO  22:30:04,746 - #44 i
INFO  22:30:04,746 - #35 )
INFO  22:30:04,746 - #31 ;
INFO  22:30:04,747 - #13 while
INFO  22:30:04,747 - #34 (
INFO  22:30:04,747 - #44 i
INFO  22:30:04,747 - #24 <
INFO  22:30:04,747 - #43 5
INFO  22:30:04,747 - #35 )
INFO  22:30:04,748 - #38 {
INFO  22:30:04,748 - #10 read
INFO  22:30:04,748 - #34 (
INFO  22:30:04,748 - #44 c
INFO  22:30:04,748 - #33 .
INFO  22:30:04,748 - #44 x
INFO  22:30:04,748 - #36 [
INFO  22:30:04,748 - #44 i
INFO  22:30:04,748 - #37 ]
INFO  22:30:04,749 - #35 )
INFO  22:30:04,749 - #31 ;
INFO  22:30:04,749 - #10 read
INFO  22:30:04,749 - #34 (
INFO  22:30:04,749 - #44 c
INFO  22:30:04,749 - #33 .
INFO  22:30:04,749 - #44 theA
INFO  22:30:04,749 - #33 .
INFO  22:30:04,749 - #44 x
INFO  22:30:04,749 - #36 [
INFO  22:30:04,749 - #44 i
INFO  22:30:04,750 - #37 ]
INFO  22:30:04,750 - #35 )
INFO  22:30:04,750 - #31 ;
INFO  22:30:04,750 - #44 i
INFO  22:30:04,750 - #29 ++
INFO  22:30:04,750 - #31 ;
INFO  22:30:04,750 - #39 }
INFO  22:30:04,750 - #9 print
INFO  22:30:04,750 - #34 (
INFO  22:30:04,750 - #44 c
INFO  22:30:04,750 - #33 .
INFO  22:30:04,751 - #44 getValue
INFO  22:30:04,751 - #34 (
INFO  22:30:04,751 - #44 c
INFO  22:30:04,751 - #33 .
INFO  22:30:04,751 - #44 theA
INFO  22:30:04,751 - #33 .
INFO  22:30:04,751 - #44 x
INFO  22:30:04,751 - #36 [
INFO  22:30:04,751 - #43 0
INFO  22:30:04,752 - #37 ]
INFO  22:30:04,752 - #35 )
INFO  22:30:04,752 - #35 )
INFO  22:30:04,752 - #31 ;
INFO  22:30:04,752 - #39 }
INFO  22:30:04,752 - #12 void
INFO  22:30:04,752 - #44 aaa
INFO  22:30:04,752 - #34 (
INFO  22:30:04,752 - #44 A
INFO  22:30:04,752 - #44 a
INFO  22:30:04,753 - #32 ,
INFO  22:30:04,753 - #44 B
INFO  22:30:04,753 - #44 b
INFO  22:30:04,753 - #32 ,
INFO  22:30:04,753 - #44 int
INFO  22:30:04,753 - #44 ff
INFO  22:30:04,753 - #35 )
INFO  22:30:04,753 - #44 A
INFO  22:30:04,753 - #44 a
INFO  22:30:04,753 - #31 ;
INFO  22:30:04,754 - #44 C
INFO  22:30:04,754 - #44 c
INFO  22:30:04,754 - #31 ;
INFO  22:30:04,754 - #44 int
INFO  22:30:04,754 - #44 i
INFO  22:30:04,754 - #31 ;
INFO  22:30:04,754 - #44 int
INFO  22:30:04,754 - #44 x
INFO  22:30:04,754 - #36 [
INFO  22:30:04,754 - #37 ]
INFO  22:30:04,754 - #31 ;
INFO  22:30:04,755 - #38 {
INFO  22:30:04,755 - #39 }
INFO  22:30:04,755 - #12 void
INFO  22:30:04,755 - #44 bbb
INFO  22:30:04,755 - #34 (
INFO  22:30:04,755 - #44 dfd
INFO  22:30:04,755 - #44 fdfd
INFO  22:30:04,755 - #35 )
INFO  22:30:04,755 - #44 A
INFO  22:30:04,755 - #44 a
INFO  22:30:04,755 - #31 ;
INFO  22:30:04,755 - #44 C
INFO  22:30:04,756 - #44 c
INFO  22:30:04,756 - #31 ;
INFO  22:30:04,756 - #44 int
INFO  22:30:04,756 - #44 i
INFO  22:30:04,756 - #31 ;
INFO  22:30:04,756 - #44 int
INFO  22:30:04,756 - #44 x
INFO  22:30:04,756 - #36 [
INFO  22:30:04,756 - #37 ]
INFO  22:30:04,756 - #31 ;
INFO  22:30:04,756 - #38 {
INFO  22:30:04,756 - #39 }
INFO  22:30:04,756 - #12 void
INFO  22:30:04,756 - #44 ccc
INFO  22:30:04,757 - #34 (
INFO  22:30:04,757 - #35 )
INFO  22:30:04,757 - #44 A
INFO  22:30:04,757 - #44 a
INFO  22:30:04,757 - #31 ;
INFO  22:30:04,757 - #44 C
INFO  22:30:04,757 - #44 c
INFO  22:30:04,757 - #31 ;
INFO  22:30:04,757 - #44 int
INFO  22:30:04,757 - #44 i
INFO  22:30:04,757 - #31 ;
INFO  22:30:04,757 - #44 int
INFO  22:30:04,757 - #44 x
INFO  22:30:04,757 - #36 [
INFO  22:30:04,757 - #37 ]
INFO  22:30:04,758 - #31 ;
INFO  22:30:04,758 - #38 {
INFO  22:30:04,758 - #39 }
INFO  22:30:04,758 - #39 }
INFO  22:30:04,758 - GlobalVar = 2
INFO  22:30:04,758 - GlobalConst = 2
INFO  22:30:04,758 - LocalMainVar = 4
INFO  22:30:04,758 - GlobalArray = 0
INFO  22:30:04,758 - FuncProg = 4
INFO  22:30:04,758 - Blocks = 5
INFO  22:30:04,758 - FuncCalls = 5
INFO  22:30:04,758 - FormalArg = 5
INFO  22:30:20,475 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:30:20,484 - #2 program
INFO  22:30:20,485 - #44 Program
INFO  22:30:20,485 - #4 class
INFO  22:30:20,485 - #44 A
INFO  22:30:20,485 - #38 {
INFO  22:30:20,485 - #44 int
INFO  22:30:20,485 - #44 x
INFO  22:30:20,485 - #36 [
INFO  22:30:20,485 - #37 ]
INFO  22:30:20,485 - #32 ,
INFO  22:30:20,486 - #44 y
INFO  22:30:20,486 - #36 [
INFO  22:30:20,486 - #37 ]
INFO  22:30:20,486 - #31 ;
INFO  22:30:20,486 - #39 }
INFO  22:30:20,486 - #6 const
INFO  22:30:20,486 - #44 int
INFO  22:30:20,486 - #44 pi
INFO  22:30:20,487 - #28 =
INFO  22:30:20,487 - #43 3
INFO  22:30:20,487 - #32 ,
INFO  22:30:20,487 - #44 e
INFO  22:30:20,487 - #28 =
INFO  22:30:20,487 - #43 2
INFO  22:30:20,487 - #31 ;
INFO  22:30:20,487 - #4 class
INFO  22:30:20,488 - #44 B
INFO  22:30:20,488 - #14 extends
INFO  22:30:20,488 - #44 A
INFO  22:30:20,488 - #38 {
INFO  22:30:20,488 - #44 int
INFO  22:30:20,488 - #44 i
INFO  22:30:20,488 - #31 ;
INFO  22:30:20,488 - #44 int
INFO  22:30:20,488 - #44 x
INFO  22:30:20,488 - #36 [
INFO  22:30:20,489 - #37 ]
INFO  22:30:20,489 - #31 ;
INFO  22:30:20,489 - #38 {
INFO  22:30:20,489 - #44 int
INFO  22:30:20,489 - #44 getValue
INFO  22:30:20,489 - #34 (
INFO  22:30:20,489 - #44 int
INFO  22:30:20,489 - #44 a
INFO  22:30:20,489 - #35 )
INFO  22:30:20,489 - #44 int
INFO  22:30:20,490 - #44 b
INFO  22:30:20,490 - #31 ;
INFO  22:30:20,490 - #44 bool
INFO  22:30:20,490 - #44 c
INFO  22:30:20,490 - #31 ;
INFO  22:30:20,490 - #38 {
INFO  22:30:20,490 - #11 return
INFO  22:30:20,490 - #44 this
INFO  22:30:20,490 - #33 .
INFO  22:30:20,491 - #44 i
INFO  22:30:20,491 - #15 +
INFO  22:30:20,491 - #44 this
INFO  22:30:20,491 - #33 .
INFO  22:30:20,492 - #44 x
INFO  22:30:20,492 - #36 [
INFO  22:30:20,492 - #43 0
INFO  22:30:20,492 - #37 ]
INFO  22:30:20,492 - #15 +
INFO  22:30:20,492 - #44 a
INFO  22:30:20,492 - #31 ;
INFO  22:30:20,492 - #39 }
INFO  22:30:20,492 - #39 }
INFO  22:30:20,493 - #39 }
INFO  22:30:20,493 - #4 class
INFO  22:30:20,493 - #44 C
INFO  22:30:20,493 - #14 extends
INFO  22:30:20,493 - #44 B
INFO  22:30:20,493 - #38 {
INFO  22:30:20,493 - #44 A
INFO  22:30:20,493 - #44 theA
INFO  22:30:20,494 - #31 ;
INFO  22:30:20,494 - #44 string
INFO  22:30:20,494 - #44 a
INFO  22:30:20,494 - #31 ;
INFO  22:30:20,494 - #39 }
INFO  22:30:20,494 - #38 {
INFO  22:30:20,494 - #12 void
INFO  22:30:20,494 - #44 main
INFO  22:30:20,494 - #34 (
INFO  22:30:20,495 - #35 )
INFO  22:30:20,495 - #44 A
INFO  22:30:20,495 - #44 a
INFO  22:30:20,495 - #31 ;
INFO  22:30:20,495 - #44 C
INFO  22:30:20,495 - #44 c
INFO  22:30:20,495 - #31 ;
INFO  22:30:20,495 - #44 int
INFO  22:30:20,495 - #44 i
INFO  22:30:20,495 - #31 ;
INFO  22:30:20,496 - #44 int
INFO  22:30:20,496 - #44 x
INFO  22:30:20,496 - #36 [
INFO  22:30:20,496 - #37 ]
INFO  22:30:20,496 - #31 ;
INFO  22:30:20,496 - #38 {
INFO  22:30:20,496 - #44 a
INFO  22:30:20,496 - #28 =
INFO  22:30:20,496 - #8 new
INFO  22:30:20,496 - #44 A
INFO  22:30:20,496 - #31 ;
INFO  22:30:20,496 - #44 a
INFO  22:30:20,497 - #33 .
INFO  22:30:20,497 - #44 x
INFO  22:30:20,497 - #28 =
INFO  22:30:20,497 - #8 new
INFO  22:30:20,497 - #44 int
INFO  22:30:20,497 - #36 [
INFO  22:30:20,497 - #43 5
INFO  22:30:20,497 - #37 ]
INFO  22:30:20,497 - #31 ;
INFO  22:30:20,497 - #44 a
INFO  22:30:20,497 - #33 .
INFO  22:30:20,497 - #44 y
INFO  22:30:20,497 - #28 =
INFO  22:30:20,498 - #8 new
INFO  22:30:20,498 - #44 int
INFO  22:30:20,498 - #36 [
INFO  22:30:20,498 - #43 5
INFO  22:30:20,498 - #37 ]
INFO  22:30:20,498 - #31 ;
INFO  22:30:20,498 - #44 c
INFO  22:30:20,498 - #28 =
INFO  22:30:20,498 - #8 new
INFO  22:30:20,498 - #44 C
INFO  22:30:20,499 - #31 ;
INFO  22:30:20,499 - #44 c
INFO  22:30:20,499 - #33 .
INFO  22:30:20,499 - #44 theA
INFO  22:30:20,499 - #28 =
INFO  22:30:20,499 - #44 a
INFO  22:30:20,499 - #31 ;
INFO  22:30:20,499 - #44 c
INFO  22:30:20,499 - #33 .
INFO  22:30:20,499 - #44 x
INFO  22:30:20,499 - #28 =
INFO  22:30:20,500 - #8 new
INFO  22:30:20,500 - #44 int
INFO  22:30:20,500 - #36 [
INFO  22:30:20,500 - #43 5
INFO  22:30:20,500 - #37 ]
INFO  22:30:20,500 - #31 ;
INFO  22:30:20,500 - #44 x
INFO  22:30:20,500 - #28 =
INFO  22:30:20,500 - #8 new
INFO  22:30:20,500 - #44 int
INFO  22:30:20,500 - #36 [
INFO  22:30:20,500 - #43 3
INFO  22:30:20,501 - #37 ]
INFO  22:30:20,501 - #31 ;
INFO  22:30:20,501 - #44 i
INFO  22:30:20,501 - #28 =
INFO  22:30:20,501 - #43 0
INFO  22:30:20,501 - #31 ;
INFO  22:30:20,501 - #10 read
INFO  22:30:20,501 - #34 (
INFO  22:30:20,501 - #44 c
INFO  22:30:20,501 - #33 .
INFO  22:30:20,501 - #44 i
INFO  22:30:20,501 - #35 )
INFO  22:30:20,501 - #31 ;
INFO  22:30:20,502 - #13 while
INFO  22:30:20,502 - #34 (
INFO  22:30:20,502 - #44 i
INFO  22:30:20,502 - #24 <
INFO  22:30:20,502 - #43 5
INFO  22:30:20,502 - #35 )
INFO  22:30:20,502 - #38 {
INFO  22:30:20,502 - #10 read
INFO  22:30:20,503 - #34 (
INFO  22:30:20,503 - #44 c
INFO  22:30:20,503 - #33 .
INFO  22:30:20,503 - #44 x
INFO  22:30:20,503 - #36 [
INFO  22:30:20,504 - #44 i
INFO  22:30:20,504 - #37 ]
INFO  22:30:20,504 - #35 )
INFO  22:30:20,504 - #31 ;
INFO  22:30:20,504 - #10 read
INFO  22:30:20,504 - #34 (
INFO  22:30:20,504 - #44 c
INFO  22:30:20,504 - #33 .
INFO  22:30:20,504 - #44 theA
INFO  22:30:20,504 - #33 .
INFO  22:30:20,504 - #44 x
INFO  22:30:20,505 - #36 [
INFO  22:30:20,505 - #44 i
INFO  22:30:20,505 - #37 ]
INFO  22:30:20,505 - #35 )
INFO  22:30:20,505 - #31 ;
INFO  22:30:20,505 - #44 i
INFO  22:30:20,505 - #29 ++
INFO  22:30:20,505 - #31 ;
INFO  22:30:20,505 - #39 }
INFO  22:30:20,506 - #9 print
INFO  22:30:20,506 - #34 (
INFO  22:30:20,506 - #44 c
INFO  22:30:20,506 - #33 .
INFO  22:30:20,506 - #44 getValue
INFO  22:30:20,506 - #34 (
INFO  22:30:20,506 - #44 c
INFO  22:30:20,506 - #33 .
INFO  22:30:20,506 - #44 theA
INFO  22:30:20,506 - #33 .
INFO  22:30:20,507 - #44 x
INFO  22:30:20,507 - #36 [
INFO  22:30:20,507 - #43 0
INFO  22:30:20,507 - #37 ]
INFO  22:30:20,507 - #35 )
INFO  22:30:20,507 - #35 )
INFO  22:30:20,507 - #31 ;
INFO  22:30:20,507 - #39 }
INFO  22:30:20,507 - #12 void
INFO  22:30:20,507 - #44 aaa
INFO  22:30:20,508 - #34 (
INFO  22:30:20,508 - #44 A
INFO  22:30:20,508 - #44 a
INFO  22:30:20,508 - #32 ,
INFO  22:30:20,508 - #44 B
INFO  22:30:20,508 - #44 b
INFO  22:30:20,508 - #32 ,
INFO  22:30:20,508 - #44 int
INFO  22:30:20,508 - #44 ff
INFO  22:30:20,508 - #35 )
INFO  22:30:20,508 - #44 A
INFO  22:30:20,509 - #44 a
INFO  22:30:20,509 - #31 ;
INFO  22:30:20,509 - #44 C
INFO  22:30:20,509 - #44 c
INFO  22:30:20,509 - #31 ;
INFO  22:30:20,509 - #44 int
INFO  22:30:20,509 - #44 i
INFO  22:30:20,509 - #31 ;
INFO  22:30:20,509 - #44 int
INFO  22:30:20,509 - #44 x
INFO  22:30:20,510 - #36 [
INFO  22:30:20,510 - #37 ]
INFO  22:30:20,510 - #31 ;
INFO  22:30:20,510 - #38 {
INFO  22:30:20,510 - #39 }
INFO  22:30:20,510 - #12 void
INFO  22:30:20,510 - #44 bbb
INFO  22:30:20,510 - #34 (
INFO  22:30:20,510 - #35 )
INFO  22:30:20,510 - #44 A
INFO  22:30:20,510 - #44 a
INFO  22:30:20,510 - #31 ;
INFO  22:30:20,511 - #44 C
INFO  22:30:20,511 - #44 c
INFO  22:30:20,511 - #31 ;
INFO  22:30:20,511 - #44 int
INFO  22:30:20,511 - #44 i
INFO  22:30:20,511 - #31 ;
INFO  22:30:20,511 - #44 int
INFO  22:30:20,511 - #44 x
INFO  22:30:20,511 - #36 [
INFO  22:30:20,511 - #37 ]
INFO  22:30:20,511 - #31 ;
INFO  22:30:20,511 - #38 {
INFO  22:30:20,511 - #39 }
INFO  22:30:20,511 - #12 void
INFO  22:30:20,511 - #44 ccc
INFO  22:30:20,512 - #34 (
INFO  22:30:20,512 - #35 )
INFO  22:30:20,512 - #44 A
INFO  22:30:20,512 - #44 a
INFO  22:30:20,512 - #31 ;
INFO  22:30:20,512 - #44 C
INFO  22:30:20,512 - #44 c
INFO  22:30:20,512 - #31 ;
INFO  22:30:20,512 - #44 int
INFO  22:30:20,512 - #44 i
INFO  22:30:20,512 - #31 ;
INFO  22:30:20,512 - #44 int
INFO  22:30:20,512 - #44 x
INFO  22:30:20,512 - #36 [
INFO  22:30:20,512 - #37 ]
INFO  22:30:20,513 - #31 ;
INFO  22:30:20,513 - #38 {
INFO  22:30:20,513 - #39 }
INFO  22:30:20,513 - #39 }
INFO  22:30:20,513 - GlobalVar = 2
INFO  22:30:20,513 - GlobalConst = 2
INFO  22:30:20,513 - LocalMainVar = 4
INFO  22:30:20,513 - GlobalArray = 0
INFO  22:30:20,513 - FuncProg = 4
INFO  22:30:20,513 - Blocks = 5
INFO  22:30:20,513 - FuncCalls = 5
INFO  22:30:20,513 - FormalArg = 4
INFO  22:30:35,460 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:30:35,470 - #2 program
INFO  22:30:35,470 - #44 Program
INFO  22:30:35,470 - #4 class
INFO  22:30:35,470 - #44 A
INFO  22:30:35,470 - #38 {
INFO  22:30:35,470 - #44 int
INFO  22:30:35,470 - #44 x
INFO  22:30:35,470 - #36 [
INFO  22:30:35,470 - #37 ]
INFO  22:30:35,470 - #32 ,
INFO  22:30:35,470 - #44 y
INFO  22:30:35,471 - #36 [
INFO  22:30:35,471 - #37 ]
INFO  22:30:35,471 - #31 ;
INFO  22:30:35,471 - #39 }
INFO  22:30:35,471 - #6 const
INFO  22:30:35,471 - #44 int
INFO  22:30:35,471 - #44 pi
INFO  22:30:35,471 - #28 =
INFO  22:30:35,471 - #43 3
INFO  22:30:35,471 - #32 ,
INFO  22:30:35,471 - #44 e
INFO  22:30:35,471 - #28 =
INFO  22:30:35,471 - #43 2
INFO  22:30:35,472 - #31 ;
INFO  22:30:35,472 - #4 class
INFO  22:30:35,472 - #44 B
INFO  22:30:35,472 - #14 extends
INFO  22:30:35,472 - #44 A
INFO  22:30:35,472 - #38 {
INFO  22:30:35,472 - #44 int
INFO  22:30:35,472 - #44 i
INFO  22:30:35,472 - #31 ;
INFO  22:30:35,472 - #44 int
INFO  22:30:35,472 - #44 x
INFO  22:30:35,472 - #36 [
INFO  22:30:35,472 - #37 ]
INFO  22:30:35,472 - #31 ;
INFO  22:30:35,473 - #38 {
INFO  22:30:35,473 - #44 int
INFO  22:30:35,473 - #44 getValue
INFO  22:30:35,473 - #34 (
INFO  22:30:35,473 - #44 int
INFO  22:30:35,473 - #44 a
INFO  22:30:35,473 - #35 )
INFO  22:30:35,473 - #44 int
INFO  22:30:35,473 - #44 b
INFO  22:30:35,473 - #31 ;
INFO  22:30:35,473 - #44 bool
INFO  22:30:35,473 - #44 c
INFO  22:30:35,474 - #31 ;
INFO  22:30:35,474 - #38 {
INFO  22:30:35,474 - #11 return
INFO  22:30:35,474 - #44 this
INFO  22:30:35,474 - #33 .
INFO  22:30:35,474 - #44 i
INFO  22:30:35,474 - #15 +
INFO  22:30:35,474 - #44 this
INFO  22:30:35,474 - #33 .
INFO  22:30:35,474 - #44 x
INFO  22:30:35,474 - #36 [
INFO  22:30:35,474 - #43 0
INFO  22:30:35,475 - #37 ]
INFO  22:30:35,475 - #15 +
INFO  22:30:35,475 - #44 a
INFO  22:30:35,475 - #31 ;
INFO  22:30:35,475 - #39 }
INFO  22:30:35,475 - #39 }
INFO  22:30:35,475 - #39 }
INFO  22:30:35,475 - #4 class
INFO  22:30:35,475 - #44 C
INFO  22:30:35,475 - #14 extends
INFO  22:30:35,475 - #44 B
INFO  22:30:35,476 - #38 {
INFO  22:30:35,476 - #44 A
INFO  22:30:35,476 - #44 theA
INFO  22:30:35,476 - #31 ;
INFO  22:30:35,476 - #44 string
INFO  22:30:35,476 - #44 a
INFO  22:30:35,476 - #31 ;
INFO  22:30:35,477 - #39 }
INFO  22:30:35,477 - #38 {
INFO  22:30:35,477 - #12 void
INFO  22:30:35,477 - #44 main
INFO  22:30:35,477 - #34 (
INFO  22:30:35,477 - #35 )
INFO  22:30:35,477 - #44 A
INFO  22:30:35,477 - #44 a
INFO  22:30:35,477 - #31 ;
INFO  22:30:35,478 - #44 C
INFO  22:30:35,478 - #44 c
INFO  22:30:35,478 - #31 ;
INFO  22:30:35,478 - #44 int
INFO  22:30:35,478 - #44 i
INFO  22:30:35,478 - #31 ;
INFO  22:30:35,478 - #44 int
INFO  22:30:35,478 - #44 x
INFO  22:30:35,478 - #36 [
INFO  22:30:35,479 - #37 ]
INFO  22:30:35,479 - #31 ;
INFO  22:30:35,479 - #38 {
INFO  22:30:35,479 - #44 a
INFO  22:30:35,479 - #28 =
INFO  22:30:35,479 - #8 new
INFO  22:30:35,479 - #44 A
INFO  22:30:35,479 - #31 ;
INFO  22:30:35,479 - #44 a
INFO  22:30:35,479 - #33 .
INFO  22:30:35,479 - #44 x
INFO  22:30:35,480 - #28 =
INFO  22:30:35,480 - #8 new
INFO  22:30:35,480 - #44 int
INFO  22:30:35,480 - #36 [
INFO  22:30:35,480 - #43 5
INFO  22:30:35,480 - #37 ]
INFO  22:30:35,480 - #31 ;
INFO  22:30:35,480 - #44 a
INFO  22:30:35,480 - #33 .
INFO  22:30:35,480 - #44 y
INFO  22:30:35,480 - #28 =
INFO  22:30:35,480 - #8 new
INFO  22:30:35,480 - #44 int
INFO  22:30:35,481 - #36 [
INFO  22:30:35,481 - #43 5
INFO  22:30:35,481 - #37 ]
INFO  22:30:35,481 - #31 ;
INFO  22:30:35,481 - #44 c
INFO  22:30:35,481 - #28 =
INFO  22:30:35,481 - #8 new
INFO  22:30:35,481 - #44 C
INFO  22:30:35,481 - #31 ;
INFO  22:30:35,481 - #44 c
INFO  22:30:35,482 - #33 .
INFO  22:30:35,482 - #44 theA
INFO  22:30:35,482 - #28 =
INFO  22:30:35,482 - #44 a
INFO  22:30:35,482 - #31 ;
INFO  22:30:35,482 - #44 c
INFO  22:30:35,482 - #33 .
INFO  22:30:35,482 - #44 x
INFO  22:30:35,482 - #28 =
INFO  22:30:35,482 - #8 new
INFO  22:30:35,483 - #44 int
INFO  22:30:35,483 - #36 [
INFO  22:30:35,483 - #43 5
INFO  22:30:35,483 - #37 ]
INFO  22:30:35,483 - #31 ;
INFO  22:30:35,483 - #44 x
INFO  22:30:35,483 - #28 =
INFO  22:30:35,483 - #8 new
INFO  22:30:35,483 - #44 int
INFO  22:30:35,483 - #36 [
INFO  22:30:35,483 - #43 3
INFO  22:30:35,483 - #37 ]
INFO  22:30:35,484 - #31 ;
INFO  22:30:35,484 - #44 i
INFO  22:30:35,484 - #28 =
INFO  22:30:35,484 - #43 0
INFO  22:30:35,484 - #31 ;
INFO  22:30:35,484 - #10 read
INFO  22:30:35,484 - #34 (
INFO  22:30:35,484 - #44 c
INFO  22:30:35,484 - #33 .
INFO  22:30:35,484 - #44 i
INFO  22:30:35,484 - #35 )
INFO  22:30:35,484 - #31 ;
INFO  22:30:35,484 - #13 while
INFO  22:30:35,485 - #34 (
INFO  22:30:35,485 - #44 i
INFO  22:30:35,485 - #24 <
INFO  22:30:35,485 - #43 5
INFO  22:30:35,485 - #35 )
INFO  22:30:35,485 - #38 {
INFO  22:30:35,485 - #10 read
INFO  22:30:35,486 - #34 (
INFO  22:30:35,486 - #44 c
INFO  22:30:35,486 - #33 .
INFO  22:30:35,486 - #44 x
INFO  22:30:35,486 - #36 [
INFO  22:30:35,486 - #44 i
INFO  22:30:35,486 - #37 ]
INFO  22:30:35,486 - #35 )
INFO  22:30:35,486 - #31 ;
INFO  22:30:35,486 - #10 read
INFO  22:30:35,487 - #34 (
INFO  22:30:35,487 - #44 c
INFO  22:30:35,487 - #33 .
INFO  22:30:35,487 - #44 theA
INFO  22:30:35,487 - #33 .
INFO  22:30:35,487 - #44 x
INFO  22:30:35,487 - #36 [
INFO  22:30:35,487 - #44 i
INFO  22:30:35,487 - #37 ]
INFO  22:30:35,487 - #35 )
INFO  22:30:35,487 - #31 ;
INFO  22:30:35,488 - #44 i
INFO  22:30:35,488 - #29 ++
INFO  22:30:35,488 - #31 ;
INFO  22:30:35,488 - #39 }
INFO  22:30:35,488 - #9 print
INFO  22:30:35,488 - #34 (
INFO  22:30:35,488 - #44 c
INFO  22:30:35,488 - #33 .
INFO  22:30:35,488 - #44 getValue
INFO  22:30:35,489 - #34 (
INFO  22:30:35,489 - #44 c
INFO  22:30:35,489 - #33 .
INFO  22:30:35,489 - #44 theA
INFO  22:30:35,489 - #33 .
INFO  22:30:35,489 - #44 x
INFO  22:30:35,489 - #36 [
INFO  22:30:35,489 - #43 0
INFO  22:30:35,489 - #37 ]
INFO  22:30:35,489 - #35 )
INFO  22:30:35,490 - #35 )
INFO  22:30:35,490 - #31 ;
INFO  22:30:35,490 - #39 }
INFO  22:30:35,490 - #12 void
INFO  22:30:35,490 - #44 aaa
INFO  22:30:35,490 - #34 (
INFO  22:30:35,490 - #44 A
INFO  22:30:35,490 - #44 a
INFO  22:30:35,490 - #32 ,
INFO  22:30:35,491 - #44 B
INFO  22:30:35,491 - #44 b
INFO  22:30:35,491 - #35 )
INFO  22:30:35,491 - #44 A
INFO  22:30:35,491 - #44 a
INFO  22:30:35,491 - #31 ;
INFO  22:30:35,491 - #44 C
INFO  22:30:35,491 - #44 c
INFO  22:30:35,491 - #31 ;
INFO  22:30:35,492 - #44 int
INFO  22:30:35,492 - #44 i
INFO  22:30:35,492 - #31 ;
INFO  22:30:35,492 - #44 int
INFO  22:30:35,492 - #44 x
INFO  22:30:35,492 - #36 [
INFO  22:30:35,492 - #37 ]
INFO  22:30:35,492 - #31 ;
INFO  22:30:35,493 - #38 {
INFO  22:30:35,493 - #39 }
INFO  22:30:35,493 - #12 void
INFO  22:30:35,493 - #44 bbb
INFO  22:30:35,493 - #34 (
INFO  22:30:35,493 - #35 )
INFO  22:30:35,493 - #44 A
INFO  22:30:35,493 - #44 a
INFO  22:30:35,494 - #31 ;
INFO  22:30:35,494 - #44 C
INFO  22:30:35,494 - #44 c
INFO  22:30:35,494 - #31 ;
INFO  22:30:35,494 - #44 int
INFO  22:30:35,494 - #44 i
INFO  22:30:35,494 - #31 ;
INFO  22:30:35,495 - #44 int
INFO  22:30:35,495 - #44 x
INFO  22:30:35,495 - #36 [
INFO  22:30:35,495 - #37 ]
INFO  22:30:35,495 - #31 ;
INFO  22:30:35,495 - #38 {
INFO  22:30:35,495 - #39 }
INFO  22:30:35,495 - #12 void
INFO  22:30:35,496 - #44 ccc
INFO  22:30:35,496 - #34 (
INFO  22:30:35,496 - #35 )
INFO  22:30:35,496 - #44 A
INFO  22:30:35,496 - #44 a
INFO  22:30:35,496 - #31 ;
INFO  22:30:35,496 - #44 C
INFO  22:30:35,496 - #44 c
INFO  22:30:35,496 - #31 ;
INFO  22:30:35,496 - #44 int
INFO  22:30:35,496 - #44 i
INFO  22:30:35,496 - #31 ;
INFO  22:30:35,497 - #44 int
INFO  22:30:35,497 - #44 x
INFO  22:30:35,497 - #36 [
INFO  22:30:35,497 - #37 ]
INFO  22:30:35,497 - #31 ;
INFO  22:30:35,497 - #38 {
INFO  22:30:35,497 - #39 }
INFO  22:30:35,497 - #39 }
INFO  22:30:35,497 - GlobalVar = 2
INFO  22:30:35,497 - GlobalConst = 2
INFO  22:30:35,498 - LocalMainVar = 4
INFO  22:30:35,498 - GlobalArray = 0
INFO  22:30:35,498 - FuncProg = 4
INFO  22:30:35,498 - Blocks = 5
INFO  22:30:35,498 - FuncCalls = 5
INFO  22:30:35,498 - FormalArg = 3
INFO  22:30:44,840 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:30:44,851 - #2 program
INFO  22:30:44,851 - #44 Program
INFO  22:30:44,852 - #4 class
INFO  22:30:44,852 - #44 A
INFO  22:30:44,852 - #38 {
INFO  22:30:44,852 - #44 int
INFO  22:30:44,852 - #44 x
INFO  22:30:44,852 - #36 [
INFO  22:30:44,852 - #37 ]
INFO  22:30:44,852 - #32 ,
INFO  22:30:44,853 - #44 y
INFO  22:30:44,853 - #36 [
INFO  22:30:44,853 - #37 ]
INFO  22:30:44,853 - #31 ;
INFO  22:30:44,853 - #39 }
INFO  22:30:44,853 - #6 const
INFO  22:30:44,853 - #44 int
INFO  22:30:44,853 - #44 pi
INFO  22:30:44,853 - #28 =
INFO  22:30:44,853 - #43 3
INFO  22:30:44,853 - #32 ,
INFO  22:30:44,854 - #44 e
INFO  22:30:44,854 - #28 =
INFO  22:30:44,854 - #43 2
INFO  22:30:44,854 - #31 ;
INFO  22:30:44,854 - #4 class
INFO  22:30:44,854 - #44 B
INFO  22:30:44,854 - #14 extends
INFO  22:30:44,854 - #44 A
INFO  22:30:44,854 - #38 {
INFO  22:30:44,854 - #44 int
INFO  22:30:44,855 - #44 i
INFO  22:30:44,855 - #31 ;
INFO  22:30:44,855 - #44 int
INFO  22:30:44,855 - #44 x
INFO  22:30:44,855 - #36 [
INFO  22:30:44,855 - #37 ]
INFO  22:30:44,855 - #31 ;
INFO  22:30:44,855 - #38 {
INFO  22:30:44,855 - #44 int
INFO  22:30:44,855 - #44 getValue
INFO  22:30:44,856 - #34 (
INFO  22:30:44,856 - #44 int
INFO  22:30:44,856 - #44 a
INFO  22:30:44,856 - #35 )
INFO  22:30:44,856 - #44 int
INFO  22:30:44,856 - #44 b
INFO  22:30:44,856 - #31 ;
INFO  22:30:44,856 - #44 bool
INFO  22:30:44,856 - #44 c
INFO  22:30:44,856 - #31 ;
INFO  22:30:44,857 - #38 {
INFO  22:30:44,857 - #11 return
INFO  22:30:44,857 - #44 this
INFO  22:30:44,857 - #33 .
INFO  22:30:44,857 - #44 i
INFO  22:30:44,857 - #15 +
INFO  22:30:44,857 - #44 this
INFO  22:30:44,857 - #33 .
INFO  22:30:44,857 - #44 x
INFO  22:30:44,858 - #36 [
INFO  22:30:44,858 - #43 0
INFO  22:30:44,858 - #37 ]
INFO  22:30:44,858 - #15 +
INFO  22:30:44,858 - #44 a
INFO  22:30:44,858 - #31 ;
INFO  22:30:44,858 - #39 }
INFO  22:30:44,858 - #39 }
INFO  22:30:44,858 - #39 }
INFO  22:30:44,859 - #4 class
INFO  22:30:44,859 - #44 C
INFO  22:30:44,859 - #14 extends
INFO  22:30:44,859 - #44 B
INFO  22:30:44,859 - #38 {
INFO  22:30:44,859 - #44 A
INFO  22:30:44,859 - #44 theA
INFO  22:30:44,859 - #31 ;
INFO  22:30:44,859 - #44 string
INFO  22:30:44,859 - #44 a
INFO  22:30:44,859 - #31 ;
INFO  22:30:44,860 - #39 }
INFO  22:30:44,860 - #38 {
INFO  22:30:44,860 - #12 void
INFO  22:30:44,860 - #44 main
INFO  22:30:44,860 - #34 (
INFO  22:30:44,860 - #35 )
INFO  22:30:44,860 - #44 A
INFO  22:30:44,860 - #44 a
INFO  22:30:44,860 - #31 ;
INFO  22:30:44,860 - #44 C
INFO  22:30:44,861 - #44 c
INFO  22:30:44,861 - #31 ;
INFO  22:30:44,861 - #44 int
INFO  22:30:44,861 - #44 i
INFO  22:30:44,861 - #31 ;
INFO  22:30:44,861 - #44 int
INFO  22:30:44,861 - #44 x
INFO  22:30:44,861 - #36 [
INFO  22:30:44,861 - #37 ]
INFO  22:30:44,861 - #31 ;
INFO  22:30:44,862 - #38 {
INFO  22:30:44,862 - #44 a
INFO  22:30:44,862 - #28 =
INFO  22:30:44,862 - #8 new
INFO  22:30:44,862 - #44 A
INFO  22:30:44,862 - #31 ;
INFO  22:30:44,862 - #44 a
INFO  22:30:44,862 - #33 .
INFO  22:30:44,862 - #44 x
INFO  22:30:44,862 - #28 =
INFO  22:30:44,863 - #8 new
INFO  22:30:44,863 - #44 int
INFO  22:30:44,863 - #36 [
INFO  22:30:44,863 - #43 5
INFO  22:30:44,863 - #37 ]
INFO  22:30:44,863 - #31 ;
INFO  22:30:44,863 - #44 a
INFO  22:30:44,863 - #33 .
INFO  22:30:44,863 - #44 y
INFO  22:30:44,863 - #28 =
INFO  22:30:44,864 - #8 new
INFO  22:30:44,864 - #44 int
INFO  22:30:44,864 - #36 [
INFO  22:30:44,864 - #43 5
INFO  22:30:44,864 - #37 ]
INFO  22:30:44,864 - #31 ;
INFO  22:30:44,864 - #44 c
INFO  22:30:44,864 - #28 =
INFO  22:30:44,865 - #8 new
INFO  22:30:44,865 - #44 C
INFO  22:30:44,865 - #31 ;
INFO  22:30:44,865 - #44 c
INFO  22:30:44,865 - #33 .
INFO  22:30:44,865 - #44 theA
INFO  22:30:44,865 - #28 =
INFO  22:30:44,865 - #44 a
INFO  22:30:44,866 - #31 ;
INFO  22:30:44,866 - #44 c
INFO  22:30:44,866 - #33 .
INFO  22:30:44,866 - #44 x
INFO  22:30:44,866 - #28 =
INFO  22:30:44,866 - #8 new
INFO  22:30:44,866 - #44 int
INFO  22:30:44,866 - #36 [
INFO  22:30:44,866 - #43 5
INFO  22:30:44,866 - #37 ]
INFO  22:30:44,867 - #31 ;
INFO  22:30:44,867 - #44 x
INFO  22:30:44,867 - #28 =
INFO  22:30:44,867 - #8 new
INFO  22:30:44,867 - #44 int
INFO  22:30:44,867 - #36 [
INFO  22:30:44,867 - #43 3
INFO  22:30:44,867 - #37 ]
INFO  22:30:44,867 - #31 ;
INFO  22:30:44,868 - #44 i
INFO  22:30:44,868 - #28 =
INFO  22:30:44,868 - #43 0
INFO  22:30:44,868 - #31 ;
INFO  22:30:44,868 - #10 read
INFO  22:30:44,868 - #34 (
INFO  22:30:44,868 - #44 c
INFO  22:30:44,868 - #33 .
INFO  22:30:44,868 - #44 i
INFO  22:30:44,868 - #35 )
INFO  22:30:44,869 - #31 ;
INFO  22:30:44,869 - #13 while
INFO  22:30:44,869 - #34 (
INFO  22:30:44,869 - #44 i
INFO  22:30:44,869 - #24 <
INFO  22:30:44,869 - #43 5
INFO  22:30:44,869 - #35 )
INFO  22:30:44,870 - #38 {
INFO  22:30:44,870 - #10 read
INFO  22:30:44,870 - #34 (
INFO  22:30:44,870 - #44 c
INFO  22:30:44,870 - #33 .
INFO  22:30:44,870 - #44 x
INFO  22:30:44,871 - #36 [
INFO  22:30:44,871 - #44 i
INFO  22:30:44,871 - #37 ]
INFO  22:30:44,871 - #35 )
INFO  22:30:44,871 - #31 ;
INFO  22:30:44,871 - #10 read
INFO  22:30:44,871 - #34 (
INFO  22:30:44,871 - #44 c
INFO  22:30:44,872 - #33 .
INFO  22:30:44,872 - #44 theA
INFO  22:30:44,872 - #33 .
INFO  22:30:44,872 - #44 x
INFO  22:30:44,872 - #36 [
INFO  22:30:44,872 - #44 i
INFO  22:30:44,872 - #37 ]
INFO  22:30:44,872 - #35 )
INFO  22:30:44,872 - #31 ;
INFO  22:30:44,872 - #44 i
INFO  22:30:44,873 - #29 ++
INFO  22:30:44,873 - #31 ;
INFO  22:30:44,873 - #39 }
INFO  22:30:44,873 - #9 print
INFO  22:30:44,873 - #34 (
INFO  22:30:44,873 - #44 c
INFO  22:30:44,873 - #33 .
INFO  22:30:44,873 - #44 getValue
INFO  22:30:44,873 - #34 (
INFO  22:30:44,873 - #44 c
INFO  22:30:44,874 - #33 .
INFO  22:30:44,874 - #44 theA
INFO  22:30:44,874 - #33 .
INFO  22:30:44,874 - #44 x
INFO  22:30:44,874 - #36 [
INFO  22:30:44,874 - #43 0
INFO  22:30:44,874 - #37 ]
INFO  22:30:44,874 - #35 )
INFO  22:30:44,874 - #35 )
INFO  22:30:44,875 - #31 ;
INFO  22:30:44,875 - #39 }
INFO  22:30:44,875 - #12 void
INFO  22:30:44,875 - #44 aaa
INFO  22:30:44,875 - #34 (
INFO  22:30:44,875 - #44 A
INFO  22:30:44,875 - #44 a
INFO  22:30:44,875 - #35 )
INFO  22:30:44,875 - #44 A
INFO  22:30:44,876 - #44 a
INFO  22:30:44,876 - #31 ;
INFO  22:30:44,876 - #44 C
INFO  22:30:44,876 - #44 c
INFO  22:30:44,876 - #31 ;
INFO  22:30:44,876 - #44 int
INFO  22:30:44,876 - #44 i
INFO  22:30:44,876 - #31 ;
INFO  22:30:44,876 - #44 int
INFO  22:30:44,877 - #44 x
INFO  22:30:44,877 - #36 [
INFO  22:30:44,877 - #37 ]
INFO  22:30:44,877 - #31 ;
INFO  22:30:44,877 - #38 {
INFO  22:30:44,877 - #39 }
INFO  22:30:44,877 - #12 void
INFO  22:30:44,877 - #44 bbb
INFO  22:30:44,877 - #34 (
INFO  22:30:44,877 - #35 )
INFO  22:30:44,878 - #44 A
INFO  22:30:44,878 - #44 a
INFO  22:30:44,878 - #31 ;
INFO  22:30:44,878 - #44 C
INFO  22:30:44,878 - #44 c
INFO  22:30:44,878 - #31 ;
INFO  22:30:44,878 - #44 int
INFO  22:30:44,878 - #44 i
INFO  22:30:44,878 - #31 ;
INFO  22:30:44,878 - #44 int
INFO  22:30:44,879 - #44 x
INFO  22:30:44,879 - #36 [
INFO  22:30:44,879 - #37 ]
INFO  22:30:44,879 - #31 ;
INFO  22:30:44,879 - #38 {
INFO  22:30:44,879 - #39 }
INFO  22:30:44,879 - #12 void
INFO  22:30:44,879 - #44 ccc
INFO  22:30:44,880 - #34 (
INFO  22:30:44,880 - #35 )
INFO  22:30:44,880 - #44 A
INFO  22:30:44,880 - #44 a
INFO  22:30:44,880 - #31 ;
INFO  22:30:44,880 - #44 C
INFO  22:30:44,880 - #44 c
INFO  22:30:44,880 - #31 ;
INFO  22:30:44,880 - #44 int
INFO  22:30:44,880 - #44 i
INFO  22:30:44,881 - #31 ;
INFO  22:30:44,881 - #44 int
INFO  22:30:44,881 - #44 x
INFO  22:30:44,881 - #36 [
INFO  22:30:44,881 - #37 ]
INFO  22:30:44,881 - #31 ;
INFO  22:30:44,881 - #38 {
INFO  22:30:44,881 - #39 }
INFO  22:30:44,881 - #39 }
INFO  22:30:44,882 - GlobalVar = 2
INFO  22:30:44,882 - GlobalConst = 2
INFO  22:30:44,882 - LocalMainVar = 4
INFO  22:30:44,882 - GlobalArray = 0
INFO  22:30:44,882 - FuncProg = 4
INFO  22:30:44,882 - Blocks = 5
INFO  22:30:44,882 - FuncCalls = 5
INFO  22:30:44,882 - FormalArg = 2
INFO  22:30:50,659 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:30:50,670 - #2 program
INFO  22:30:50,670 - #44 Program
INFO  22:30:50,670 - #4 class
INFO  22:30:50,670 - #44 A
INFO  22:30:50,670 - #38 {
INFO  22:30:50,670 - #44 int
INFO  22:30:50,671 - #44 x
INFO  22:30:50,671 - #36 [
INFO  22:30:50,671 - #37 ]
INFO  22:30:50,671 - #32 ,
INFO  22:30:50,671 - #44 y
INFO  22:30:50,671 - #36 [
INFO  22:30:50,671 - #37 ]
INFO  22:30:50,671 - #31 ;
INFO  22:30:50,671 - #39 }
INFO  22:30:50,671 - #6 const
INFO  22:30:50,671 - #44 int
INFO  22:30:50,672 - #44 pi
INFO  22:30:50,672 - #28 =
INFO  22:30:50,672 - #43 3
INFO  22:30:50,672 - #32 ,
INFO  22:30:50,672 - #44 e
INFO  22:30:50,672 - #28 =
INFO  22:30:50,672 - #43 2
INFO  22:30:50,672 - #31 ;
INFO  22:30:50,672 - #4 class
INFO  22:30:50,672 - #44 B
INFO  22:30:50,672 - #14 extends
INFO  22:30:50,672 - #44 A
INFO  22:30:50,673 - #38 {
INFO  22:30:50,673 - #44 int
INFO  22:30:50,673 - #44 i
INFO  22:30:50,673 - #31 ;
INFO  22:30:50,673 - #44 int
INFO  22:30:50,673 - #44 x
INFO  22:30:50,673 - #36 [
INFO  22:30:50,673 - #37 ]
INFO  22:30:50,673 - #31 ;
INFO  22:30:50,673 - #38 {
INFO  22:30:50,673 - #44 int
INFO  22:30:50,673 - #44 getValue
INFO  22:30:50,673 - #34 (
INFO  22:30:50,673 - #44 int
INFO  22:30:50,674 - #44 a
INFO  22:30:50,674 - #35 )
INFO  22:30:50,674 - #44 int
INFO  22:30:50,674 - #44 b
INFO  22:30:50,674 - #31 ;
INFO  22:30:50,674 - #44 bool
INFO  22:30:50,674 - #44 c
INFO  22:30:50,674 - #31 ;
INFO  22:30:50,674 - #38 {
INFO  22:30:50,674 - #11 return
INFO  22:30:50,674 - #44 this
INFO  22:30:50,675 - #33 .
INFO  22:30:50,675 - #44 i
INFO  22:30:50,675 - #15 +
INFO  22:30:50,675 - #44 this
INFO  22:30:50,675 - #33 .
INFO  22:30:50,675 - #44 x
INFO  22:30:50,675 - #36 [
INFO  22:30:50,675 - #43 0
INFO  22:30:50,675 - #37 ]
INFO  22:30:50,675 - #15 +
INFO  22:30:50,675 - #44 a
INFO  22:30:50,676 - #31 ;
INFO  22:30:50,676 - #39 }
INFO  22:30:50,676 - #39 }
INFO  22:30:50,676 - #39 }
INFO  22:30:50,676 - #4 class
INFO  22:30:50,676 - #44 C
INFO  22:30:50,676 - #14 extends
INFO  22:30:50,676 - #44 B
INFO  22:30:50,676 - #38 {
INFO  22:30:50,677 - #44 A
INFO  22:30:50,677 - #44 theA
INFO  22:30:50,677 - #31 ;
INFO  22:30:50,677 - #44 string
INFO  22:30:50,677 - #44 a
INFO  22:30:50,677 - #31 ;
INFO  22:30:50,677 - #39 }
INFO  22:30:50,677 - #38 {
INFO  22:30:50,677 - #12 void
INFO  22:30:50,678 - #44 main
INFO  22:30:50,678 - #34 (
INFO  22:30:50,678 - #35 )
INFO  22:30:50,678 - #44 A
INFO  22:30:50,678 - #44 a
INFO  22:30:50,678 - #31 ;
INFO  22:30:50,678 - #44 C
INFO  22:30:50,678 - #44 c
INFO  22:30:50,678 - #31 ;
INFO  22:30:50,679 - #44 int
INFO  22:30:50,679 - #44 i
INFO  22:30:50,679 - #31 ;
INFO  22:30:50,679 - #44 int
INFO  22:30:50,679 - #44 x
INFO  22:30:50,679 - #36 [
INFO  22:30:50,679 - #37 ]
INFO  22:30:50,679 - #31 ;
INFO  22:30:50,679 - #38 {
INFO  22:30:50,680 - #44 a
INFO  22:30:50,680 - #28 =
INFO  22:30:50,680 - #8 new
INFO  22:30:50,680 - #44 A
INFO  22:30:50,680 - #31 ;
INFO  22:30:50,680 - #44 a
INFO  22:30:50,680 - #33 .
INFO  22:30:50,680 - #44 x
INFO  22:30:50,680 - #28 =
INFO  22:30:50,680 - #8 new
INFO  22:30:50,680 - #44 int
INFO  22:30:50,681 - #36 [
INFO  22:30:50,681 - #43 5
INFO  22:30:50,681 - #37 ]
INFO  22:30:50,681 - #31 ;
INFO  22:30:50,681 - #44 a
INFO  22:30:50,681 - #33 .
INFO  22:30:50,681 - #44 y
INFO  22:30:50,681 - #28 =
INFO  22:30:50,681 - #8 new
INFO  22:30:50,681 - #44 int
INFO  22:30:50,681 - #36 [
INFO  22:30:50,682 - #43 5
INFO  22:30:50,682 - #37 ]
INFO  22:30:50,682 - #31 ;
INFO  22:30:50,682 - #44 c
INFO  22:30:50,682 - #28 =
INFO  22:30:50,682 - #8 new
INFO  22:30:50,682 - #44 C
INFO  22:30:50,682 - #31 ;
INFO  22:30:50,682 - #44 c
INFO  22:30:50,683 - #33 .
INFO  22:30:50,683 - #44 theA
INFO  22:30:50,683 - #28 =
INFO  22:30:50,683 - #44 a
INFO  22:30:50,683 - #31 ;
INFO  22:30:50,683 - #44 c
INFO  22:30:50,683 - #33 .
INFO  22:30:50,683 - #44 x
INFO  22:30:50,683 - #28 =
INFO  22:30:50,684 - #8 new
INFO  22:30:50,684 - #44 int
INFO  22:30:50,684 - #36 [
INFO  22:30:50,684 - #43 5
INFO  22:30:50,684 - #37 ]
INFO  22:30:50,684 - #31 ;
INFO  22:30:50,684 - #44 x
INFO  22:30:50,684 - #28 =
INFO  22:30:50,684 - #8 new
INFO  22:30:50,684 - #44 int
INFO  22:30:50,684 - #36 [
INFO  22:30:50,684 - #43 3
INFO  22:30:50,685 - #37 ]
INFO  22:30:50,685 - #31 ;
INFO  22:30:50,685 - #44 i
INFO  22:30:50,685 - #28 =
INFO  22:30:50,685 - #43 0
INFO  22:30:50,685 - #31 ;
INFO  22:30:50,685 - #10 read
INFO  22:30:50,685 - #34 (
INFO  22:30:50,685 - #44 c
INFO  22:30:50,685 - #33 .
INFO  22:30:50,685 - #44 i
INFO  22:30:50,685 - #35 )
INFO  22:30:50,686 - #31 ;
INFO  22:30:50,686 - #13 while
INFO  22:30:50,686 - #34 (
INFO  22:30:50,686 - #44 i
INFO  22:30:50,686 - #24 <
INFO  22:30:50,686 - #43 5
INFO  22:30:50,686 - #35 )
INFO  22:30:50,686 - #38 {
INFO  22:30:50,686 - #10 read
INFO  22:30:50,687 - #34 (
INFO  22:30:50,687 - #44 c
INFO  22:30:50,687 - #33 .
INFO  22:30:50,687 - #44 x
INFO  22:30:50,687 - #36 [
INFO  22:30:50,687 - #44 i
INFO  22:30:50,687 - #37 ]
INFO  22:30:50,687 - #35 )
INFO  22:30:50,687 - #31 ;
INFO  22:30:50,688 - #10 read
INFO  22:30:50,688 - #34 (
INFO  22:30:50,688 - #44 c
INFO  22:30:50,688 - #33 .
INFO  22:30:50,688 - #44 theA
INFO  22:30:50,688 - #33 .
INFO  22:30:50,688 - #44 x
INFO  22:30:50,688 - #36 [
INFO  22:30:50,688 - #44 i
INFO  22:30:50,688 - #37 ]
INFO  22:30:50,688 - #35 )
INFO  22:30:50,689 - #31 ;
INFO  22:30:50,689 - #44 i
INFO  22:30:50,689 - #29 ++
INFO  22:30:50,689 - #31 ;
INFO  22:30:50,689 - #39 }
INFO  22:30:50,689 - #9 print
INFO  22:30:50,689 - #34 (
INFO  22:30:50,689 - #44 c
INFO  22:30:50,689 - #33 .
INFO  22:30:50,689 - #44 getValue
INFO  22:30:50,689 - #34 (
INFO  22:30:50,690 - #44 c
INFO  22:30:50,690 - #33 .
INFO  22:30:50,690 - #44 theA
INFO  22:30:50,690 - #33 .
INFO  22:30:50,690 - #44 x
INFO  22:30:50,690 - #36 [
INFO  22:30:50,690 - #43 0
INFO  22:30:50,690 - #37 ]
INFO  22:30:50,690 - #35 )
INFO  22:30:50,690 - #35 )
INFO  22:30:50,691 - #31 ;
INFO  22:30:50,691 - #39 }
INFO  22:30:50,691 - #12 void
INFO  22:30:50,691 - #44 aaa
INFO  22:30:50,691 - #34 (
INFO  22:30:50,691 - #35 )
INFO  22:30:50,691 - #44 A
INFO  22:30:50,691 - #44 a
INFO  22:30:50,691 - #31 ;
INFO  22:30:50,691 - #44 C
INFO  22:30:50,691 - #44 c
INFO  22:30:50,692 - #31 ;
INFO  22:30:50,692 - #44 int
INFO  22:30:50,692 - #44 i
INFO  22:30:50,692 - #31 ;
INFO  22:30:50,692 - #44 int
INFO  22:30:50,692 - #44 x
INFO  22:30:50,692 - #36 [
INFO  22:30:50,692 - #37 ]
INFO  22:30:50,692 - #31 ;
INFO  22:30:50,692 - #38 {
INFO  22:30:50,693 - #39 }
INFO  22:30:50,693 - #12 void
INFO  22:30:50,693 - #44 bbb
INFO  22:30:50,693 - #34 (
INFO  22:30:50,693 - #35 )
INFO  22:30:50,693 - #44 A
INFO  22:30:50,693 - #44 a
INFO  22:30:50,693 - #31 ;
INFO  22:30:50,694 - #44 C
INFO  22:30:50,694 - #44 c
INFO  22:30:50,694 - #31 ;
INFO  22:30:50,694 - #44 int
INFO  22:30:50,694 - #44 i
INFO  22:30:50,694 - #31 ;
INFO  22:30:50,694 - #44 int
INFO  22:30:50,694 - #44 x
INFO  22:30:50,694 - #36 [
INFO  22:30:50,695 - #37 ]
INFO  22:30:50,695 - #31 ;
INFO  22:30:50,695 - #38 {
INFO  22:30:50,695 - #39 }
INFO  22:30:50,695 - #12 void
INFO  22:30:50,695 - #44 ccc
INFO  22:30:50,695 - #34 (
INFO  22:30:50,695 - #35 )
INFO  22:30:50,695 - #44 A
INFO  22:30:50,695 - #44 a
INFO  22:30:50,695 - #31 ;
INFO  22:30:50,695 - #44 C
INFO  22:30:50,695 - #44 c
INFO  22:30:50,695 - #31 ;
INFO  22:30:50,696 - #44 int
INFO  22:30:50,696 - #44 i
INFO  22:30:50,696 - #31 ;
INFO  22:30:50,696 - #44 int
INFO  22:30:50,696 - #44 x
INFO  22:30:50,696 - #36 [
INFO  22:30:50,696 - #37 ]
INFO  22:30:50,696 - #31 ;
INFO  22:30:50,696 - #38 {
INFO  22:30:50,696 - #39 }
INFO  22:30:50,696 - #39 }
INFO  22:30:50,696 - GlobalVar = 2
INFO  22:30:50,696 - GlobalConst = 2
INFO  22:30:50,697 - LocalMainVar = 4
INFO  22:30:50,697 - GlobalArray = 0
INFO  22:30:50,697 - FuncProg = 4
INFO  22:30:50,697 - Blocks = 5
INFO  22:30:50,697 - FuncCalls = 5
INFO  22:30:50,697 - FormalArg = 1
INFO  22:31:04,137 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:31:04,146 - #2 program
INFO  22:31:04,146 - #44 Program
INFO  22:31:04,146 - #4 class
INFO  22:31:04,146 - #44 A
INFO  22:31:04,146 - #38 {
INFO  22:31:04,146 - #44 int
INFO  22:31:04,146 - #44 x
INFO  22:31:04,146 - #36 [
INFO  22:31:04,146 - #37 ]
INFO  22:31:04,147 - #32 ,
INFO  22:31:04,147 - #44 y
INFO  22:31:04,147 - #36 [
INFO  22:31:04,147 - #37 ]
INFO  22:31:04,147 - #31 ;
INFO  22:31:04,147 - #39 }
INFO  22:31:04,147 - #6 const
INFO  22:31:04,147 - #44 int
INFO  22:31:04,147 - #44 pi
INFO  22:31:04,147 - #28 =
INFO  22:31:04,147 - #43 3
INFO  22:31:04,147 - #32 ,
INFO  22:31:04,148 - #44 e
INFO  22:31:04,148 - #28 =
INFO  22:31:04,148 - #43 2
INFO  22:31:04,148 - #31 ;
INFO  22:31:04,148 - #4 class
INFO  22:31:04,148 - #44 B
INFO  22:31:04,148 - #14 extends
INFO  22:31:04,148 - #44 A
INFO  22:31:04,148 - #38 {
INFO  22:31:04,148 - #44 int
INFO  22:31:04,148 - #44 i
INFO  22:31:04,148 - #31 ;
INFO  22:31:04,149 - #44 int
INFO  22:31:04,149 - #44 x
INFO  22:31:04,149 - #36 [
INFO  22:31:04,149 - #37 ]
INFO  22:31:04,149 - #31 ;
INFO  22:31:04,149 - #38 {
INFO  22:31:04,149 - #44 int
INFO  22:31:04,149 - #44 getValue
INFO  22:31:04,149 - #34 (
INFO  22:31:04,149 - #44 int
INFO  22:31:04,149 - #44 a
INFO  22:31:04,149 - #35 )
INFO  22:31:04,149 - #44 int
INFO  22:31:04,149 - #44 b
INFO  22:31:04,150 - #31 ;
INFO  22:31:04,150 - #44 bool
INFO  22:31:04,150 - #44 c
INFO  22:31:04,150 - #31 ;
INFO  22:31:04,150 - #38 {
INFO  22:31:04,150 - #11 return
INFO  22:31:04,150 - #44 this
INFO  22:31:04,150 - #33 .
INFO  22:31:04,150 - #44 i
INFO  22:31:04,150 - #15 +
INFO  22:31:04,150 - #44 this
INFO  22:31:04,150 - #33 .
INFO  22:31:04,151 - #44 x
INFO  22:31:04,151 - #36 [
INFO  22:31:04,151 - #43 0
INFO  22:31:04,151 - #37 ]
INFO  22:31:04,151 - #15 +
INFO  22:31:04,151 - #44 a
INFO  22:31:04,151 - #31 ;
INFO  22:31:04,151 - #39 }
INFO  22:31:04,151 - #39 }
INFO  22:31:04,151 - #39 }
INFO  22:31:04,151 - #4 class
INFO  22:31:04,151 - #44 C
INFO  22:31:04,152 - #14 extends
INFO  22:31:04,152 - #44 B
INFO  22:31:04,152 - #38 {
INFO  22:31:04,152 - #44 A
INFO  22:31:04,152 - #44 theA
INFO  22:31:04,152 - #31 ;
INFO  22:31:04,152 - #44 string
INFO  22:31:04,152 - #44 a
INFO  22:31:04,153 - #31 ;
INFO  22:31:04,153 - #39 }
INFO  22:31:04,153 - #38 {
INFO  22:31:04,153 - #12 void
INFO  22:31:04,153 - #44 main
INFO  22:31:04,153 - #34 (
INFO  22:31:04,153 - #35 )
INFO  22:31:04,153 - #44 A
INFO  22:31:04,153 - #44 a
INFO  22:31:04,154 - #31 ;
INFO  22:31:04,154 - #44 C
INFO  22:31:04,154 - #44 c
INFO  22:31:04,154 - #31 ;
INFO  22:31:04,154 - #44 int
INFO  22:31:04,154 - #44 i
INFO  22:31:04,154 - #31 ;
INFO  22:31:04,154 - #44 int
INFO  22:31:04,155 - #44 x
INFO  22:31:04,155 - #36 [
INFO  22:31:04,155 - #37 ]
INFO  22:31:04,155 - #31 ;
INFO  22:31:04,155 - #38 {
INFO  22:31:04,155 - #44 a
INFO  22:31:04,155 - #28 =
INFO  22:31:04,155 - #8 new
INFO  22:31:04,155 - #44 A
INFO  22:31:04,155 - #31 ;
INFO  22:31:04,156 - #44 a
INFO  22:31:04,156 - #33 .
INFO  22:31:04,156 - #44 x
INFO  22:31:04,156 - #28 =
INFO  22:31:04,156 - #8 new
INFO  22:31:04,156 - #44 int
INFO  22:31:04,156 - #36 [
INFO  22:31:04,156 - #43 5
INFO  22:31:04,156 - #37 ]
INFO  22:31:04,156 - #31 ;
INFO  22:31:04,156 - #44 a
INFO  22:31:04,156 - #33 .
INFO  22:31:04,156 - #44 y
INFO  22:31:04,157 - #28 =
INFO  22:31:04,157 - #8 new
INFO  22:31:04,157 - #44 int
INFO  22:31:04,157 - #36 [
INFO  22:31:04,157 - #43 5
INFO  22:31:04,157 - #37 ]
INFO  22:31:04,157 - #31 ;
INFO  22:31:04,157 - #44 c
INFO  22:31:04,157 - #28 =
INFO  22:31:04,157 - #8 new
INFO  22:31:04,157 - #44 C
INFO  22:31:04,157 - #31 ;
INFO  22:31:04,158 - #44 c
INFO  22:31:04,158 - #33 .
INFO  22:31:04,158 - #44 theA
INFO  22:31:04,158 - #28 =
INFO  22:31:04,158 - #44 a
INFO  22:31:04,158 - #31 ;
INFO  22:31:04,158 - #44 c
INFO  22:31:04,158 - #33 .
INFO  22:31:04,158 - #44 x
INFO  22:31:04,158 - #28 =
INFO  22:31:04,158 - #8 new
INFO  22:31:04,158 - #44 int
INFO  22:31:04,158 - #36 [
INFO  22:31:04,159 - #43 5
INFO  22:31:04,159 - #37 ]
INFO  22:31:04,159 - #31 ;
INFO  22:31:04,159 - #44 x
INFO  22:31:04,159 - #28 =
INFO  22:31:04,159 - #8 new
INFO  22:31:04,159 - #44 int
INFO  22:31:04,159 - #36 [
INFO  22:31:04,159 - #43 3
INFO  22:31:04,159 - #37 ]
INFO  22:31:04,159 - #31 ;
INFO  22:31:04,159 - #44 i
INFO  22:31:04,160 - #28 =
INFO  22:31:04,160 - #43 0
INFO  22:31:04,160 - #31 ;
INFO  22:31:04,160 - #10 read
INFO  22:31:04,160 - #34 (
INFO  22:31:04,160 - #44 c
INFO  22:31:04,160 - #33 .
INFO  22:31:04,160 - #44 i
INFO  22:31:04,160 - #35 )
INFO  22:31:04,161 - #31 ;
INFO  22:31:04,161 - #13 while
INFO  22:31:04,161 - #34 (
INFO  22:31:04,161 - #44 i
INFO  22:31:04,161 - #24 <
INFO  22:31:04,161 - #43 5
INFO  22:31:04,161 - #35 )
INFO  22:31:04,161 - #38 {
INFO  22:31:04,161 - #10 read
INFO  22:31:04,161 - #34 (
INFO  22:31:04,162 - #44 c
INFO  22:31:04,162 - #33 .
INFO  22:31:04,162 - #44 x
INFO  22:31:04,162 - #36 [
INFO  22:31:04,162 - #44 i
INFO  22:31:04,162 - #37 ]
INFO  22:31:04,162 - #35 )
INFO  22:31:04,162 - #31 ;
INFO  22:31:04,162 - #10 read
INFO  22:31:04,162 - #34 (
INFO  22:31:04,162 - #44 c
INFO  22:31:04,162 - #33 .
INFO  22:31:04,163 - #44 theA
INFO  22:31:04,163 - #33 .
INFO  22:31:04,163 - #44 x
INFO  22:31:04,163 - #36 [
INFO  22:31:04,163 - #44 i
INFO  22:31:04,163 - #37 ]
INFO  22:31:04,163 - #35 )
INFO  22:31:04,163 - #31 ;
INFO  22:31:04,163 - #44 i
INFO  22:31:04,163 - #29 ++
INFO  22:31:04,163 - #31 ;
INFO  22:31:04,164 - #39 }
INFO  22:31:04,164 - #9 print
INFO  22:31:04,164 - #34 (
INFO  22:31:04,164 - #44 c
INFO  22:31:04,164 - #33 .
INFO  22:31:04,164 - #44 getValue
INFO  22:31:04,164 - #34 (
INFO  22:31:04,164 - #44 c
INFO  22:31:04,164 - #33 .
INFO  22:31:04,164 - #44 theA
INFO  22:31:04,164 - #33 .
INFO  22:31:04,164 - #44 x
INFO  22:31:04,164 - #36 [
INFO  22:31:04,164 - #43 0
INFO  22:31:04,165 - #37 ]
INFO  22:31:04,165 - #35 )
INFO  22:31:04,165 - #35 )
INFO  22:31:04,165 - #31 ;
INFO  22:31:04,165 - #39 }
INFO  22:31:04,165 - #12 void
INFO  22:31:04,165 - #44 aaa
INFO  22:31:04,165 - #34 (
INFO  22:31:04,165 - #35 )
INFO  22:31:04,165 - #44 A
INFO  22:31:04,165 - #44 a
INFO  22:31:04,165 - #31 ;
INFO  22:31:04,165 - #44 C
INFO  22:31:04,166 - #44 c
INFO  22:31:04,166 - #31 ;
INFO  22:31:04,166 - #44 int
INFO  22:31:04,166 - #44 i
INFO  22:31:04,166 - #31 ;
INFO  22:31:04,166 - #44 int
INFO  22:31:04,166 - #44 x
INFO  22:31:04,166 - #36 [
INFO  22:31:04,166 - #37 ]
INFO  22:31:04,166 - #31 ;
INFO  22:31:04,166 - #38 {
INFO  22:31:04,166 - #39 }
INFO  22:31:04,166 - #12 void
INFO  22:31:04,167 - #44 bbb
INFO  22:31:04,167 - #34 (
INFO  22:31:04,167 - #35 )
INFO  22:31:04,167 - #44 A
INFO  22:31:04,167 - #44 a
INFO  22:31:04,167 - #31 ;
INFO  22:31:04,167 - #44 C
INFO  22:31:04,167 - #44 c
INFO  22:31:04,167 - #31 ;
INFO  22:31:04,167 - #44 int
INFO  22:31:04,167 - #44 i
INFO  22:31:04,167 - #31 ;
INFO  22:31:04,168 - #44 int
INFO  22:31:04,168 - #44 x
INFO  22:31:04,168 - #36 [
INFO  22:31:04,168 - #37 ]
INFO  22:31:04,168 - #31 ;
INFO  22:31:04,168 - #38 {
INFO  22:31:04,168 - #39 }
INFO  22:31:04,168 - #12 void
INFO  22:31:04,168 - #44 ccc
INFO  22:31:04,169 - #34 (
INFO  22:31:04,169 - #35 )
INFO  22:31:04,169 - #44 A
INFO  22:31:04,169 - #44 a
INFO  22:31:04,169 - #31 ;
INFO  22:31:04,169 - #44 C
INFO  22:31:04,169 - #44 c
INFO  22:31:04,169 - #31 ;
INFO  22:31:04,169 - #44 int
INFO  22:31:04,169 - #44 i
INFO  22:31:04,169 - #31 ;
INFO  22:31:04,170 - #44 int
INFO  22:31:04,170 - #44 x
INFO  22:31:04,170 - #36 [
INFO  22:31:04,170 - #37 ]
INFO  22:31:04,170 - #31 ;
INFO  22:31:04,170 - #38 {
INFO  22:31:04,170 - #39 }
INFO  22:31:04,170 - #39 }
INFO  22:31:04,170 - GlobalVar = 2
INFO  22:31:04,170 - GlobalConst = 2
INFO  22:31:04,170 - LocalMainVar = 4
INFO  22:31:04,171 - GlobalArray = 0
INFO  22:31:04,171 - FuncProg = 4
INFO  22:31:04,171 - Blocks = 5
INFO  22:31:04,171 - FuncCalls = 5
INFO  22:31:04,171 - FormalArg = 1
INFO  22:31:17,851 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:31:17,863 - #2 program
INFO  22:31:17,863 - #44 Program
INFO  22:31:17,864 - #4 class
INFO  22:31:17,864 - #44 A
INFO  22:31:17,864 - #38 {
INFO  22:31:17,864 - #44 int
INFO  22:31:17,864 - #44 x
INFO  22:31:17,864 - #36 [
INFO  22:31:17,864 - #37 ]
INFO  22:31:17,864 - #32 ,
INFO  22:31:17,865 - #44 y
INFO  22:31:17,865 - #36 [
INFO  22:31:17,865 - #37 ]
INFO  22:31:17,865 - #31 ;
INFO  22:31:17,865 - #39 }
INFO  22:31:17,865 - #6 const
INFO  22:31:17,865 - #44 int
INFO  22:31:17,865 - #44 pi
INFO  22:31:17,865 - #28 =
INFO  22:31:17,865 - #43 3
INFO  22:31:17,866 - #32 ,
INFO  22:31:17,866 - #44 e
INFO  22:31:17,866 - #28 =
INFO  22:31:17,866 - #43 2
INFO  22:31:17,866 - #31 ;
INFO  22:31:17,866 - #4 class
INFO  22:31:17,866 - #44 B
INFO  22:31:17,866 - #14 extends
INFO  22:31:17,866 - #44 A
INFO  22:31:17,866 - #38 {
INFO  22:31:17,866 - #44 int
INFO  22:31:17,867 - #44 i
INFO  22:31:17,867 - #31 ;
INFO  22:31:17,867 - #44 int
INFO  22:31:17,867 - #44 x
INFO  22:31:17,867 - #36 [
INFO  22:31:17,867 - #37 ]
INFO  22:31:17,867 - #31 ;
INFO  22:31:17,867 - #38 {
INFO  22:31:17,868 - #44 int
INFO  22:31:17,868 - #44 getValue
INFO  22:31:17,868 - #34 (
INFO  22:31:17,868 - #44 int
INFO  22:31:17,868 - #44 a
INFO  22:31:17,868 - #35 )
INFO  22:31:17,868 - #44 int
INFO  22:31:17,868 - #44 b
INFO  22:31:17,868 - #31 ;
INFO  22:31:17,868 - #44 bool
INFO  22:31:17,869 - #44 c
INFO  22:31:17,869 - #31 ;
INFO  22:31:17,869 - #38 {
INFO  22:31:17,869 - #11 return
INFO  22:31:17,869 - #44 this
INFO  22:31:17,869 - #33 .
INFO  22:31:17,869 - #44 i
INFO  22:31:17,869 - #15 +
INFO  22:31:17,870 - #44 this
INFO  22:31:17,870 - #33 .
INFO  22:31:17,870 - #44 x
INFO  22:31:17,870 - #36 [
INFO  22:31:17,870 - #43 0
INFO  22:31:17,870 - #37 ]
INFO  22:31:17,870 - #15 +
INFO  22:31:17,870 - #44 a
INFO  22:31:17,870 - #31 ;
INFO  22:31:17,871 - #39 }
INFO  22:31:17,871 - #39 }
INFO  22:31:17,871 - #39 }
INFO  22:31:17,871 - #4 class
INFO  22:31:17,871 - #44 C
INFO  22:31:17,871 - #14 extends
INFO  22:31:17,871 - #44 B
INFO  22:31:17,871 - #38 {
INFO  22:31:17,871 - #44 A
INFO  22:31:17,872 - #44 theA
INFO  22:31:17,872 - #31 ;
INFO  22:31:17,872 - #44 string
INFO  22:31:17,872 - #44 a
INFO  22:31:17,872 - #31 ;
INFO  22:31:17,872 - #39 }
INFO  22:31:17,872 - #38 {
INFO  22:31:17,872 - #12 void
INFO  22:31:17,873 - #44 main
INFO  22:31:17,873 - #34 (
INFO  22:31:17,873 - #44 fd
INFO  22:31:17,873 - #44 dfd
INFO  22:31:17,873 - #35 )
INFO  22:31:17,873 - #44 A
INFO  22:31:17,873 - #44 a
INFO  22:31:17,873 - #31 ;
INFO  22:31:17,873 - #44 C
INFO  22:31:17,874 - #44 c
INFO  22:31:17,874 - #31 ;
INFO  22:31:17,874 - #44 int
INFO  22:31:17,874 - #44 i
INFO  22:31:17,874 - #31 ;
INFO  22:31:17,874 - #44 int
INFO  22:31:17,874 - #44 x
INFO  22:31:17,874 - #36 [
INFO  22:31:17,875 - #37 ]
INFO  22:31:17,875 - #31 ;
INFO  22:31:17,875 - #38 {
INFO  22:31:17,875 - #44 a
INFO  22:31:17,875 - #28 =
INFO  22:31:17,875 - #8 new
INFO  22:31:17,875 - #44 A
INFO  22:31:17,875 - #31 ;
INFO  22:31:17,876 - #44 a
INFO  22:31:17,876 - #33 .
INFO  22:31:17,876 - #44 x
INFO  22:31:17,876 - #28 =
INFO  22:31:17,876 - #8 new
INFO  22:31:17,876 - #44 int
INFO  22:31:17,876 - #36 [
INFO  22:31:17,876 - #43 5
INFO  22:31:17,876 - #37 ]
INFO  22:31:17,876 - #31 ;
INFO  22:31:17,877 - #44 a
INFO  22:31:17,877 - #33 .
INFO  22:31:17,877 - #44 y
INFO  22:31:17,877 - #28 =
INFO  22:31:17,877 - #8 new
INFO  22:31:17,877 - #44 int
INFO  22:31:17,877 - #36 [
INFO  22:31:17,878 - #43 5
INFO  22:31:17,878 - #37 ]
INFO  22:31:17,878 - #31 ;
INFO  22:31:17,878 - #44 c
INFO  22:31:17,878 - #28 =
INFO  22:31:17,878 - #8 new
INFO  22:31:17,878 - #44 C
INFO  22:31:17,878 - #31 ;
INFO  22:31:17,878 - #44 c
INFO  22:31:17,879 - #33 .
INFO  22:31:17,879 - #44 theA
INFO  22:31:17,879 - #28 =
INFO  22:31:17,879 - #44 a
INFO  22:31:17,879 - #31 ;
INFO  22:31:17,879 - #44 c
INFO  22:31:17,879 - #33 .
INFO  22:31:17,879 - #44 x
INFO  22:31:17,880 - #28 =
INFO  22:31:17,880 - #8 new
INFO  22:31:17,880 - #44 int
INFO  22:31:17,880 - #36 [
INFO  22:31:17,880 - #43 5
INFO  22:31:17,880 - #37 ]
INFO  22:31:17,880 - #31 ;
INFO  22:31:17,880 - #44 x
INFO  22:31:17,880 - #28 =
INFO  22:31:17,881 - #8 new
INFO  22:31:17,881 - #44 int
INFO  22:31:17,881 - #36 [
INFO  22:31:17,881 - #43 3
INFO  22:31:17,881 - #37 ]
INFO  22:31:17,881 - #31 ;
INFO  22:31:17,881 - #44 i
INFO  22:31:17,881 - #28 =
INFO  22:31:17,881 - #43 0
INFO  22:31:17,882 - #31 ;
INFO  22:31:17,882 - #10 read
INFO  22:31:17,882 - #34 (
INFO  22:31:17,882 - #44 c
INFO  22:31:17,882 - #33 .
INFO  22:31:17,882 - #44 i
INFO  22:31:17,882 - #35 )
INFO  22:31:17,882 - #31 ;
INFO  22:31:17,883 - #13 while
INFO  22:31:17,883 - #34 (
INFO  22:31:17,883 - #44 i
INFO  22:31:17,883 - #24 <
INFO  22:31:17,883 - #43 5
INFO  22:31:17,883 - #35 )
INFO  22:31:17,883 - #38 {
INFO  22:31:17,884 - #10 read
INFO  22:31:17,884 - #34 (
INFO  22:31:17,884 - #44 c
INFO  22:31:17,884 - #33 .
INFO  22:31:17,884 - #44 x
INFO  22:31:17,884 - #36 [
INFO  22:31:17,884 - #44 i
INFO  22:31:17,885 - #37 ]
INFO  22:31:17,885 - #35 )
INFO  22:31:17,885 - #31 ;
INFO  22:31:17,885 - #10 read
INFO  22:31:17,885 - #34 (
INFO  22:31:17,885 - #44 c
INFO  22:31:17,885 - #33 .
INFO  22:31:17,885 - #44 theA
INFO  22:31:17,885 - #33 .
INFO  22:31:17,886 - #44 x
INFO  22:31:17,886 - #36 [
INFO  22:31:17,886 - #44 i
INFO  22:31:17,886 - #37 ]
INFO  22:31:17,886 - #35 )
INFO  22:31:17,886 - #31 ;
INFO  22:31:17,886 - #44 i
INFO  22:31:17,886 - #29 ++
INFO  22:31:17,886 - #31 ;
INFO  22:31:17,887 - #39 }
INFO  22:31:17,887 - #9 print
INFO  22:31:17,887 - #34 (
INFO  22:31:17,887 - #44 c
INFO  22:31:17,887 - #33 .
INFO  22:31:17,887 - #44 getValue
INFO  22:31:17,887 - #34 (
INFO  22:31:17,887 - #44 c
INFO  22:31:17,887 - #33 .
INFO  22:31:17,888 - #44 theA
INFO  22:31:17,888 - #33 .
INFO  22:31:17,888 - #44 x
INFO  22:31:17,888 - #36 [
INFO  22:31:17,888 - #43 0
INFO  22:31:17,888 - #37 ]
INFO  22:31:17,888 - #35 )
INFO  22:31:17,888 - #35 )
INFO  22:31:17,888 - #31 ;
INFO  22:31:17,888 - #39 }
INFO  22:31:17,889 - #12 void
INFO  22:31:17,889 - #44 aaa
INFO  22:31:17,889 - #34 (
INFO  22:31:17,889 - #35 )
INFO  22:31:17,889 - #44 A
INFO  22:31:17,889 - #44 a
INFO  22:31:17,889 - #31 ;
INFO  22:31:17,889 - #44 C
INFO  22:31:17,889 - #44 c
INFO  22:31:17,889 - #31 ;
INFO  22:31:17,889 - #44 int
INFO  22:31:17,890 - #44 i
INFO  22:31:17,890 - #31 ;
INFO  22:31:17,890 - #44 int
INFO  22:31:17,890 - #44 x
INFO  22:31:17,890 - #36 [
INFO  22:31:17,890 - #37 ]
INFO  22:31:17,890 - #31 ;
INFO  22:31:17,890 - #38 {
INFO  22:31:17,890 - #39 }
INFO  22:31:17,890 - #12 void
INFO  22:31:17,890 - #44 bbb
INFO  22:31:17,891 - #34 (
INFO  22:31:17,891 - #35 )
INFO  22:31:17,891 - #44 A
INFO  22:31:17,891 - #44 a
INFO  22:31:17,891 - #31 ;
INFO  22:31:17,891 - #44 C
INFO  22:31:17,891 - #44 c
INFO  22:31:17,891 - #31 ;
INFO  22:31:17,891 - #44 int
INFO  22:31:17,891 - #44 i
INFO  22:31:17,892 - #31 ;
INFO  22:31:17,892 - #44 int
INFO  22:31:17,892 - #44 x
INFO  22:31:17,892 - #36 [
INFO  22:31:17,892 - #37 ]
INFO  22:31:17,892 - #31 ;
INFO  22:31:17,892 - #38 {
INFO  22:31:17,892 - #39 }
INFO  22:31:17,892 - #12 void
INFO  22:31:17,893 - #44 ccc
INFO  22:31:17,893 - #34 (
INFO  22:31:17,893 - #35 )
INFO  22:31:17,893 - #44 A
INFO  22:31:17,893 - #44 a
INFO  22:31:17,893 - #31 ;
INFO  22:31:17,893 - #44 C
INFO  22:31:17,893 - #44 c
INFO  22:31:17,893 - #31 ;
INFO  22:31:17,894 - #44 int
INFO  22:31:17,894 - #44 i
INFO  22:31:17,894 - #31 ;
INFO  22:31:17,894 - #44 int
INFO  22:31:17,894 - #44 x
INFO  22:31:17,894 - #36 [
INFO  22:31:17,894 - #37 ]
INFO  22:31:17,894 - #31 ;
INFO  22:31:17,894 - #38 {
INFO  22:31:17,895 - #39 }
INFO  22:31:17,895 - #39 }
INFO  22:31:17,895 - GlobalVar = 2
INFO  22:31:17,895 - GlobalConst = 2
INFO  22:31:17,895 - LocalMainVar = 4
INFO  22:31:17,895 - GlobalArray = 0
INFO  22:31:17,895 - FuncProg = 4
INFO  22:31:17,895 - Blocks = 5
INFO  22:31:17,895 - FuncCalls = 5
INFO  22:31:17,895 - FormalArg = 2
INFO  22:35:31,493 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:35:31,501 - #2 program
INFO  22:35:31,502 - #44 Program
INFO  22:35:31,502 - #4 class
INFO  22:35:31,502 - #44 A
INFO  22:35:31,502 - #38 {
INFO  22:35:31,502 - #44 int
INFO  22:35:31,502 - #44 x
INFO  22:35:31,502 - #36 [
INFO  22:35:31,502 - #37 ]
INFO  22:35:31,502 - #32 ,
INFO  22:35:31,502 - #44 y
INFO  22:35:31,502 - #36 [
INFO  22:35:31,503 - #37 ]
INFO  22:35:31,503 - #31 ;
INFO  22:35:31,503 - #39 }
INFO  22:35:31,503 - #6 const
INFO  22:35:31,503 - #44 int
INFO  22:35:31,503 - #44 pi
INFO  22:35:31,503 - #28 =
INFO  22:35:31,503 - #43 3
INFO  22:35:31,503 - #32 ,
INFO  22:35:31,503 - #44 e
INFO  22:35:31,503 - #28 =
INFO  22:35:31,503 - #43 2
INFO  22:35:31,503 - #31 ;
INFO  22:35:31,504 - #4 class
INFO  22:35:31,504 - #44 B
INFO  22:35:31,504 - #14 extends
INFO  22:35:31,504 - #44 A
INFO  22:35:31,504 - #38 {
INFO  22:35:31,504 - #44 int
INFO  22:35:31,504 - #44 i
INFO  22:35:31,504 - #31 ;
INFO  22:35:31,504 - #44 int
INFO  22:35:31,504 - #44 x
INFO  22:35:31,504 - #36 [
INFO  22:35:31,504 - #37 ]
INFO  22:35:31,504 - #31 ;
INFO  22:35:31,504 - #38 {
INFO  22:35:31,505 - #44 int
INFO  22:35:31,505 - #44 getValue
INFO  22:35:31,505 - #34 (
INFO  22:35:31,505 - #44 int
INFO  22:35:31,505 - #44 a
INFO  22:35:31,505 - #35 )
INFO  22:35:31,505 - #44 int
INFO  22:35:31,505 - #44 b
INFO  22:35:31,505 - #31 ;
INFO  22:35:31,505 - #44 bool
INFO  22:35:31,505 - #44 c
INFO  22:35:31,505 - #31 ;
INFO  22:35:31,505 - #38 {
INFO  22:35:31,506 - #11 return
INFO  22:35:31,506 - #44 this
INFO  22:35:31,506 - #33 .
INFO  22:35:31,506 - #44 i
INFO  22:35:31,506 - #15 +
INFO  22:35:31,506 - #44 this
INFO  22:35:31,506 - #33 .
INFO  22:35:31,506 - #44 x
INFO  22:35:31,506 - #36 [
INFO  22:35:31,506 - #43 0
INFO  22:35:31,506 - #37 ]
INFO  22:35:31,506 - #15 +
INFO  22:35:31,506 - #44 a
INFO  22:35:31,507 - #31 ;
INFO  22:35:31,507 - #39 }
INFO  22:35:31,507 - #39 }
INFO  22:35:31,507 - #39 }
INFO  22:35:31,507 - #4 class
INFO  22:35:31,507 - #44 C
INFO  22:35:31,507 - #14 extends
INFO  22:35:31,507 - #44 B
INFO  22:35:31,507 - #38 {
INFO  22:35:31,507 - #44 A
INFO  22:35:31,508 - #44 theA
INFO  22:35:31,508 - #31 ;
INFO  22:35:31,508 - #44 string
INFO  22:35:31,508 - #44 a
INFO  22:35:31,508 - #31 ;
INFO  22:35:31,508 - #39 }
INFO  22:35:31,508 - #38 {
INFO  22:35:31,508 - #12 void
INFO  22:35:31,509 - #44 main
INFO  22:35:31,509 - #34 (
INFO  22:35:31,509 - #35 )
INFO  22:35:31,509 - #44 A
INFO  22:35:31,509 - #44 a
INFO  22:35:31,509 - #31 ;
INFO  22:35:31,509 - #44 C
INFO  22:35:31,509 - #44 c
INFO  22:35:31,509 - #31 ;
INFO  22:35:31,509 - #44 int
INFO  22:35:31,509 - #44 i
INFO  22:35:31,509 - #31 ;
INFO  22:35:31,510 - #44 int
INFO  22:35:31,510 - #44 x
INFO  22:35:31,510 - #36 [
INFO  22:35:31,510 - #37 ]
INFO  22:35:31,510 - #31 ;
INFO  22:35:31,510 - #38 {
INFO  22:35:31,510 - #44 a
INFO  22:35:31,510 - #28 =
INFO  22:35:31,510 - #8 new
INFO  22:35:31,510 - #44 A
INFO  22:35:31,510 - #31 ;
INFO  22:35:31,510 - #44 a
INFO  22:35:31,510 - #33 .
INFO  22:35:31,510 - #44 x
INFO  22:35:31,511 - #28 =
INFO  22:35:31,511 - #8 new
INFO  22:35:31,511 - #44 int
INFO  22:35:31,511 - #36 [
INFO  22:35:31,511 - #43 5
INFO  22:35:31,511 - #37 ]
INFO  22:35:31,511 - #31 ;
INFO  22:35:31,511 - #44 a
INFO  22:35:31,511 - #33 .
INFO  22:35:31,511 - #44 y
INFO  22:35:31,511 - #28 =
INFO  22:35:31,512 - #8 new
INFO  22:35:31,512 - #44 int
INFO  22:35:31,512 - #36 [
INFO  22:35:31,512 - #43 5
INFO  22:35:31,512 - #37 ]
INFO  22:35:31,512 - #31 ;
INFO  22:35:31,512 - #44 c
INFO  22:35:31,512 - #28 =
INFO  22:35:31,512 - #8 new
INFO  22:35:31,512 - #44 C
INFO  22:35:31,512 - #31 ;
INFO  22:35:31,512 - #44 c
INFO  22:35:31,512 - #33 .
INFO  22:35:31,513 - #44 theA
INFO  22:35:31,513 - #28 =
INFO  22:35:31,513 - #44 a
INFO  22:35:31,513 - #31 ;
INFO  22:35:31,513 - #44 c
INFO  22:35:31,513 - #33 .
INFO  22:35:31,513 - #44 x
INFO  22:35:31,513 - #28 =
INFO  22:35:31,513 - #8 new
INFO  22:35:31,513 - #44 int
INFO  22:35:31,513 - #36 [
INFO  22:35:31,513 - #43 5
INFO  22:35:31,513 - #37 ]
INFO  22:35:31,514 - #31 ;
INFO  22:35:31,514 - #44 x
INFO  22:35:31,514 - #28 =
INFO  22:35:31,514 - #8 new
INFO  22:35:31,514 - #44 int
INFO  22:35:31,514 - #36 [
INFO  22:35:31,514 - #43 3
INFO  22:35:31,514 - #37 ]
INFO  22:35:31,514 - #31 ;
INFO  22:35:31,514 - #44 i
INFO  22:35:31,514 - #28 =
INFO  22:35:31,514 - #43 0
INFO  22:35:31,515 - #31 ;
INFO  22:35:31,515 - #10 read
INFO  22:35:31,515 - #34 (
INFO  22:35:31,515 - #44 c
INFO  22:35:31,515 - #33 .
INFO  22:35:31,515 - #44 i
INFO  22:35:31,515 - #35 )
INFO  22:35:31,515 - #31 ;
INFO  22:35:31,515 - #13 while
INFO  22:35:31,515 - #34 (
INFO  22:35:31,515 - #44 i
INFO  22:35:31,515 - #24 <
INFO  22:35:31,515 - #43 5
INFO  22:35:31,515 - #35 )
INFO  22:35:31,516 - #38 {
INFO  22:35:31,516 - #10 read
INFO  22:35:31,516 - #34 (
INFO  22:35:31,516 - #44 c
INFO  22:35:31,516 - #33 .
INFO  22:35:31,516 - #44 x
INFO  22:35:31,516 - #36 [
INFO  22:35:31,516 - #44 i
INFO  22:35:31,517 - #37 ]
INFO  22:35:31,517 - #35 )
INFO  22:35:31,517 - #31 ;
INFO  22:35:31,517 - #10 read
INFO  22:35:31,517 - #34 (
INFO  22:35:31,517 - #44 c
INFO  22:35:31,517 - #33 .
INFO  22:35:31,517 - #44 theA
INFO  22:35:31,517 - #33 .
INFO  22:35:31,517 - #44 x
INFO  22:35:31,517 - #36 [
INFO  22:35:31,517 - #44 i
INFO  22:35:31,517 - #37 ]
INFO  22:35:31,518 - #35 )
INFO  22:35:31,518 - #31 ;
INFO  22:35:31,518 - #44 i
INFO  22:35:31,518 - #29 ++
INFO  22:35:31,518 - #31 ;
INFO  22:35:31,518 - #39 }
INFO  22:35:31,518 - #9 print
INFO  22:35:31,518 - #34 (
INFO  22:35:31,518 - #44 c
INFO  22:35:31,518 - #33 .
INFO  22:35:31,519 - #44 getValue
INFO  22:35:31,519 - #34 (
INFO  22:35:31,519 - #44 c
INFO  22:35:31,519 - #33 .
INFO  22:35:31,519 - #44 theA
INFO  22:35:31,519 - #33 .
INFO  22:35:31,519 - #44 x
INFO  22:35:31,519 - #36 [
INFO  22:35:31,519 - #43 0
INFO  22:35:31,519 - #37 ]
INFO  22:35:31,519 - #35 )
INFO  22:35:31,520 - #35 )
INFO  22:35:31,520 - #31 ;
INFO  22:35:31,520 - #39 }
INFO  22:35:31,520 - #12 void
INFO  22:35:31,520 - #44 aaa
INFO  22:35:31,520 - #34 (
INFO  22:35:31,520 - #35 )
INFO  22:35:31,520 - #44 A
INFO  22:35:31,521 - #44 a
INFO  22:35:31,521 - #31 ;
INFO  22:35:31,521 - #44 C
INFO  22:35:31,521 - #44 c
INFO  22:35:31,521 - #31 ;
INFO  22:35:31,521 - #44 int
INFO  22:35:31,521 - #44 i
INFO  22:35:31,521 - #31 ;
INFO  22:35:31,521 - #44 int
INFO  22:35:31,522 - #44 x
INFO  22:35:31,522 - #36 [
INFO  22:35:31,522 - #37 ]
INFO  22:35:31,522 - #31 ;
INFO  22:35:31,522 - #38 {
INFO  22:35:31,522 - #39 }
INFO  22:35:31,522 - #12 void
INFO  22:35:31,522 - #44 bbb
INFO  22:35:31,523 - #34 (
INFO  22:35:31,523 - #35 )
INFO  22:35:31,523 - #44 A
INFO  22:35:31,523 - #44 a
INFO  22:35:31,523 - #31 ;
INFO  22:35:31,523 - #44 C
INFO  22:35:31,523 - #44 c
INFO  22:35:31,523 - #31 ;
INFO  22:35:31,523 - #44 int
INFO  22:35:31,523 - #44 i
INFO  22:35:31,524 - #31 ;
INFO  22:35:31,524 - #44 int
INFO  22:35:31,524 - #44 x
INFO  22:35:31,524 - #36 [
INFO  22:35:31,524 - #37 ]
INFO  22:35:31,524 - #31 ;
INFO  22:35:31,524 - #38 {
INFO  22:35:31,524 - #39 }
INFO  22:35:31,525 - #12 void
INFO  22:35:31,525 - #44 ccc
INFO  22:35:31,525 - #34 (
INFO  22:35:31,525 - #35 )
INFO  22:35:31,525 - #44 A
INFO  22:35:31,525 - #44 a
INFO  22:35:31,525 - #31 ;
INFO  22:35:31,525 - #44 C
INFO  22:35:31,525 - #44 c
INFO  22:35:31,526 - #31 ;
INFO  22:35:31,526 - #44 int
INFO  22:35:31,526 - #44 i
INFO  22:35:31,526 - #31 ;
INFO  22:35:31,526 - #44 int
INFO  22:35:31,526 - #44 x
INFO  22:35:31,526 - #36 [
INFO  22:35:31,526 - #37 ]
INFO  22:35:31,526 - #31 ;
INFO  22:35:31,526 - #38 {
INFO  22:35:31,526 - #39 }
INFO  22:35:31,526 - #39 }
INFO  22:35:31,527 - GlobalVar = 2
INFO  22:35:31,527 - GlobalConst = 2
INFO  22:35:31,527 - LocalMainVar = 4
INFO  22:35:31,527 - GlobalArray = 0
INFO  22:35:31,527 - FuncProg = 4
INFO  22:35:31,527 - Blocks = 5
INFO  22:35:31,527 - FuncCalls = 5
INFO  22:35:31,527 - FormalArg = 1
INFO  22:35:31,527 - DefClass = 0
INFO  22:35:35,850 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:35:35,859 - #2 program
INFO  22:35:35,859 - #44 Program
INFO  22:35:35,859 - #4 class
INFO  22:35:35,859 - #44 A
INFO  22:35:35,859 - #38 {
INFO  22:35:35,859 - #44 int
INFO  22:35:35,859 - #44 x
INFO  22:35:35,860 - #36 [
INFO  22:35:35,860 - #37 ]
INFO  22:35:35,860 - #32 ,
INFO  22:35:35,860 - #44 y
INFO  22:35:35,860 - #36 [
INFO  22:35:35,860 - #37 ]
INFO  22:35:35,860 - #31 ;
INFO  22:35:35,860 - #39 }
INFO  22:35:35,860 - #6 const
INFO  22:35:35,860 - #44 int
INFO  22:35:35,860 - #44 pi
INFO  22:35:35,860 - #28 =
INFO  22:35:35,860 - #43 3
INFO  22:35:35,861 - #32 ,
INFO  22:35:35,861 - #44 e
INFO  22:35:35,861 - #28 =
INFO  22:35:35,861 - #43 2
INFO  22:35:35,861 - #31 ;
INFO  22:35:35,861 - #4 class
INFO  22:35:35,861 - #44 B
INFO  22:35:35,861 - #14 extends
INFO  22:35:35,861 - #44 A
INFO  22:35:35,861 - #38 {
INFO  22:35:35,861 - #44 int
INFO  22:35:35,861 - #44 i
INFO  22:35:35,861 - #31 ;
INFO  22:35:35,861 - #44 int
INFO  22:35:35,862 - #44 x
INFO  22:35:35,862 - #36 [
INFO  22:35:35,862 - #37 ]
INFO  22:35:35,862 - #31 ;
INFO  22:35:35,862 - #38 {
INFO  22:35:35,862 - #44 int
INFO  22:35:35,862 - #44 getValue
INFO  22:35:35,862 - #34 (
INFO  22:35:35,862 - #44 int
INFO  22:35:35,862 - #44 a
INFO  22:35:35,862 - #35 )
INFO  22:35:35,862 - #44 int
INFO  22:35:35,862 - #44 b
INFO  22:35:35,863 - #31 ;
INFO  22:35:35,863 - #44 bool
INFO  22:35:35,863 - #44 c
INFO  22:35:35,863 - #31 ;
INFO  22:35:35,863 - #38 {
INFO  22:35:35,863 - #11 return
INFO  22:35:35,863 - #44 this
INFO  22:35:35,863 - #33 .
INFO  22:35:35,863 - #44 i
INFO  22:35:35,863 - #15 +
INFO  22:35:35,863 - #44 this
INFO  22:35:35,863 - #33 .
INFO  22:35:35,863 - #44 x
INFO  22:35:35,864 - #36 [
INFO  22:35:35,864 - #43 0
INFO  22:35:35,864 - #37 ]
INFO  22:35:35,864 - #15 +
INFO  22:35:35,864 - #44 a
INFO  22:35:35,864 - #31 ;
INFO  22:35:35,864 - #39 }
INFO  22:35:35,864 - #39 }
INFO  22:35:35,864 - #39 }
INFO  22:35:35,864 - #4 class
INFO  22:35:35,864 - #44 C
INFO  22:35:35,864 - #14 extends
INFO  22:35:35,865 - #44 B
INFO  22:35:35,865 - #38 {
INFO  22:35:35,865 - #44 A
INFO  22:35:35,865 - #44 theA
INFO  22:35:35,865 - #31 ;
INFO  22:35:35,865 - #44 string
INFO  22:35:35,865 - #44 a
INFO  22:35:35,865 - #31 ;
INFO  22:35:35,865 - #39 }
INFO  22:35:35,865 - #38 {
INFO  22:35:35,865 - #12 void
INFO  22:35:35,865 - #44 main
INFO  22:35:35,865 - #34 (
INFO  22:35:35,865 - #35 )
INFO  22:35:35,866 - #44 A
INFO  22:35:35,866 - #44 a
INFO  22:35:35,866 - #31 ;
INFO  22:35:35,866 - #44 C
INFO  22:35:35,866 - #44 c
INFO  22:35:35,866 - #31 ;
INFO  22:35:35,866 - #44 int
INFO  22:35:35,866 - #44 i
INFO  22:35:35,866 - #31 ;
INFO  22:35:35,866 - #44 int
INFO  22:35:35,866 - #44 x
INFO  22:35:35,866 - #36 [
INFO  22:35:35,866 - #37 ]
INFO  22:35:35,867 - #31 ;
INFO  22:35:35,867 - #38 {
INFO  22:35:35,867 - #44 a
INFO  22:35:35,867 - #28 =
INFO  22:35:35,867 - #8 new
INFO  22:35:35,867 - #44 A
INFO  22:35:35,867 - #31 ;
INFO  22:35:35,867 - #44 a
INFO  22:35:35,867 - #33 .
INFO  22:35:35,867 - #44 x
INFO  22:35:35,867 - #28 =
INFO  22:35:35,867 - #8 new
INFO  22:35:35,867 - #44 int
INFO  22:35:35,867 - #36 [
INFO  22:35:35,868 - #43 5
INFO  22:35:35,868 - #37 ]
INFO  22:35:35,868 - #31 ;
INFO  22:35:35,868 - #44 a
INFO  22:35:35,868 - #33 .
INFO  22:35:35,868 - #44 y
INFO  22:35:35,868 - #28 =
INFO  22:35:35,868 - #8 new
INFO  22:35:35,868 - #44 int
INFO  22:35:35,868 - #36 [
INFO  22:35:35,868 - #43 5
INFO  22:35:35,869 - #37 ]
INFO  22:35:35,869 - #31 ;
INFO  22:35:35,869 - #44 c
INFO  22:35:35,869 - #28 =
INFO  22:35:35,869 - #8 new
INFO  22:35:35,869 - #44 C
INFO  22:35:35,869 - #31 ;
INFO  22:35:35,869 - #44 c
INFO  22:35:35,869 - #33 .
INFO  22:35:35,869 - #44 theA
INFO  22:35:35,869 - #28 =
INFO  22:35:35,869 - #44 a
INFO  22:35:35,869 - #31 ;
INFO  22:35:35,870 - #44 c
INFO  22:35:35,870 - #33 .
INFO  22:35:35,870 - #44 x
INFO  22:35:35,870 - #28 =
INFO  22:35:35,870 - #8 new
INFO  22:35:35,870 - #44 int
INFO  22:35:35,870 - #36 [
INFO  22:35:35,870 - #43 5
INFO  22:35:35,870 - #37 ]
INFO  22:35:35,871 - #31 ;
INFO  22:35:35,871 - #44 x
INFO  22:35:35,871 - #28 =
INFO  22:35:35,871 - #8 new
INFO  22:35:35,871 - #44 int
INFO  22:35:35,871 - #36 [
INFO  22:35:35,871 - #43 3
INFO  22:35:35,871 - #37 ]
INFO  22:35:35,872 - #31 ;
INFO  22:35:35,872 - #44 i
INFO  22:35:35,872 - #28 =
INFO  22:35:35,872 - #43 0
INFO  22:35:35,872 - #31 ;
INFO  22:35:35,872 - #10 read
INFO  22:35:35,872 - #34 (
INFO  22:35:35,872 - #44 c
INFO  22:35:35,872 - #33 .
INFO  22:35:35,872 - #44 i
INFO  22:35:35,873 - #35 )
INFO  22:35:35,873 - #31 ;
INFO  22:35:35,873 - #13 while
INFO  22:35:35,873 - #34 (
INFO  22:35:35,873 - #44 i
INFO  22:35:35,873 - #24 <
INFO  22:35:35,873 - #43 5
INFO  22:35:35,873 - #35 )
INFO  22:35:35,873 - #38 {
INFO  22:35:35,874 - #10 read
INFO  22:35:35,874 - #34 (
INFO  22:35:35,874 - #44 c
INFO  22:35:35,874 - #33 .
INFO  22:35:35,874 - #44 x
INFO  22:35:35,874 - #36 [
INFO  22:35:35,874 - #44 i
INFO  22:35:35,874 - #37 ]
INFO  22:35:35,874 - #35 )
INFO  22:35:35,875 - #31 ;
INFO  22:35:35,875 - #10 read
INFO  22:35:35,875 - #34 (
INFO  22:35:35,875 - #44 c
INFO  22:35:35,875 - #33 .
INFO  22:35:35,875 - #44 theA
INFO  22:35:35,875 - #33 .
INFO  22:35:35,875 - #44 x
INFO  22:35:35,875 - #36 [
INFO  22:35:35,875 - #44 i
INFO  22:35:35,875 - #37 ]
INFO  22:35:35,876 - #35 )
INFO  22:35:35,876 - #31 ;
INFO  22:35:35,876 - #44 i
INFO  22:35:35,876 - #29 ++
INFO  22:35:35,876 - #31 ;
INFO  22:35:35,876 - #39 }
INFO  22:35:35,876 - #9 print
INFO  22:35:35,876 - #34 (
INFO  22:35:35,876 - #44 c
INFO  22:35:35,876 - #33 .
INFO  22:35:35,877 - #44 getValue
INFO  22:35:35,877 - #34 (
INFO  22:35:35,877 - #44 c
INFO  22:35:35,877 - #33 .
INFO  22:35:35,877 - #44 theA
INFO  22:35:35,877 - #33 .
INFO  22:35:35,877 - #44 x
INFO  22:35:35,877 - #36 [
INFO  22:35:35,877 - #43 0
INFO  22:35:35,877 - #37 ]
INFO  22:35:35,877 - #35 )
INFO  22:35:35,877 - #35 )
INFO  22:35:35,877 - #31 ;
INFO  22:35:35,878 - #39 }
INFO  22:35:35,878 - #12 void
INFO  22:35:35,878 - #44 aaa
INFO  22:35:35,878 - #34 (
INFO  22:35:35,878 - #35 )
INFO  22:35:35,878 - #44 A
INFO  22:35:35,878 - #44 a
INFO  22:35:35,878 - #31 ;
INFO  22:35:35,878 - #44 C
INFO  22:35:35,878 - #44 c
INFO  22:35:35,878 - #31 ;
INFO  22:35:35,878 - #44 int
INFO  22:35:35,878 - #44 i
INFO  22:35:35,878 - #31 ;
INFO  22:35:35,879 - #44 int
INFO  22:35:35,879 - #44 x
INFO  22:35:35,879 - #36 [
INFO  22:35:35,879 - #37 ]
INFO  22:35:35,879 - #31 ;
INFO  22:35:35,879 - #38 {
INFO  22:35:35,879 - #39 }
INFO  22:35:35,879 - #12 void
INFO  22:35:35,879 - #44 bbb
INFO  22:35:35,879 - #34 (
INFO  22:35:35,879 - #35 )
INFO  22:35:35,879 - #44 A
INFO  22:35:35,879 - #44 a
INFO  22:35:35,880 - #31 ;
INFO  22:35:35,880 - #44 C
INFO  22:35:35,880 - #44 c
INFO  22:35:35,880 - #31 ;
INFO  22:35:35,880 - #44 int
INFO  22:35:35,880 - #44 i
INFO  22:35:35,880 - #31 ;
INFO  22:35:35,880 - #44 int
INFO  22:35:35,880 - #44 x
INFO  22:35:35,880 - #36 [
INFO  22:35:35,881 - #37 ]
INFO  22:35:35,881 - #31 ;
INFO  22:35:35,881 - #38 {
INFO  22:35:35,881 - #39 }
INFO  22:35:35,881 - #12 void
INFO  22:35:35,881 - #44 ccc
INFO  22:35:35,881 - #34 (
INFO  22:35:35,881 - #35 )
INFO  22:35:35,882 - #44 A
INFO  22:35:35,882 - #44 a
INFO  22:35:35,882 - #31 ;
INFO  22:35:35,882 - #44 C
INFO  22:35:35,882 - #44 c
INFO  22:35:35,882 - #31 ;
INFO  22:35:35,882 - #44 int
INFO  22:35:35,882 - #44 i
INFO  22:35:35,883 - #31 ;
INFO  22:35:35,883 - #44 int
INFO  22:35:35,883 - #44 x
INFO  22:35:35,883 - #36 [
INFO  22:35:35,883 - #37 ]
INFO  22:35:35,883 - #31 ;
INFO  22:35:35,883 - #38 {
INFO  22:35:35,883 - #39 }
INFO  22:35:35,883 - #39 }
INFO  22:35:35,884 - GlobalVar = 2
INFO  22:35:35,884 - GlobalConst = 2
INFO  22:35:35,884 - LocalMainVar = 4
INFO  22:35:35,884 - GlobalArray = 0
INFO  22:35:35,884 - FuncProg = 4
INFO  22:35:35,884 - Blocks = 5
INFO  22:35:35,884 - FuncCalls = 5
INFO  22:35:35,884 - FormalArg = 1
INFO  22:35:35,884 - DefClass = 0
INFO  22:36:35,491 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:36:35,500 - #2 program
INFO  22:36:35,500 - #44 Program
INFO  22:36:35,500 - #4 class
INFO  22:36:35,500 - #44 A
INFO  22:36:35,500 - #38 {
INFO  22:36:35,501 - #44 int
INFO  22:36:35,501 - #44 x
INFO  22:36:35,501 - #36 [
INFO  22:36:35,501 - #37 ]
INFO  22:36:35,501 - #32 ,
INFO  22:36:35,501 - #44 y
INFO  22:36:35,501 - #36 [
INFO  22:36:35,501 - #37 ]
INFO  22:36:35,501 - #31 ;
INFO  22:36:35,501 - #39 }
INFO  22:36:35,501 - #6 const
INFO  22:36:35,501 - #44 int
INFO  22:36:35,502 - #44 pi
INFO  22:36:35,502 - #28 =
INFO  22:36:35,502 - #43 3
INFO  22:36:35,502 - #32 ,
INFO  22:36:35,502 - #44 e
INFO  22:36:35,502 - #28 =
INFO  22:36:35,502 - #43 2
INFO  22:36:35,502 - #31 ;
INFO  22:36:35,502 - #4 class
INFO  22:36:35,502 - #44 B
INFO  22:36:35,503 - #14 extends
INFO  22:36:35,503 - #44 A
INFO  22:36:35,503 - #38 {
INFO  22:36:35,503 - #44 int
INFO  22:36:35,503 - #44 i
INFO  22:36:35,503 - #31 ;
INFO  22:36:35,503 - #44 int
INFO  22:36:35,503 - #44 x
INFO  22:36:35,503 - #36 [
INFO  22:36:35,503 - #37 ]
INFO  22:36:35,503 - #31 ;
INFO  22:36:35,504 - #38 {
INFO  22:36:35,504 - #44 int
INFO  22:36:35,504 - #44 getValue
INFO  22:36:35,504 - #34 (
INFO  22:36:35,504 - #44 int
INFO  22:36:35,504 - #44 a
INFO  22:36:35,504 - #35 )
INFO  22:36:35,504 - #44 int
INFO  22:36:35,504 - #44 b
INFO  22:36:35,504 - #31 ;
INFO  22:36:35,504 - #44 bool
INFO  22:36:35,505 - #44 c
INFO  22:36:35,505 - #31 ;
INFO  22:36:35,505 - #38 {
INFO  22:36:35,505 - #11 return
INFO  22:36:35,505 - #44 this
INFO  22:36:35,505 - #33 .
INFO  22:36:35,505 - #44 i
INFO  22:36:35,505 - #15 +
INFO  22:36:35,505 - #44 this
INFO  22:36:35,505 - #33 .
INFO  22:36:35,505 - #44 x
INFO  22:36:35,506 - #36 [
INFO  22:36:35,506 - #43 0
INFO  22:36:35,506 - #37 ]
INFO  22:36:35,506 - #15 +
INFO  22:36:35,506 - #44 a
INFO  22:36:35,506 - #31 ;
INFO  22:36:35,506 - #39 }
INFO  22:36:35,506 - #39 }
INFO  22:36:35,506 - #39 }
INFO  22:36:35,506 - #4 class
INFO  22:36:35,506 - #44 C
INFO  22:36:35,506 - #14 extends
INFO  22:36:35,507 - #44 B
INFO  22:36:35,507 - #38 {
INFO  22:36:35,507 - #44 A
INFO  22:36:35,507 - #44 theA
INFO  22:36:35,507 - #31 ;
INFO  22:36:35,507 - #44 string
INFO  22:36:35,507 - #44 a
INFO  22:36:35,507 - #31 ;
INFO  22:36:35,507 - #39 }
INFO  22:36:35,508 - #38 {
INFO  22:36:35,508 - #12 void
INFO  22:36:35,508 - #44 main
INFO  22:36:35,508 - #34 (
INFO  22:36:35,508 - #35 )
INFO  22:36:35,508 - #44 A
INFO  22:36:35,508 - #44 a
INFO  22:36:35,508 - #31 ;
INFO  22:36:35,508 - #44 C
INFO  22:36:35,508 - #44 c
INFO  22:36:35,508 - #31 ;
INFO  22:36:35,509 - #44 int
INFO  22:36:35,509 - #44 i
INFO  22:36:35,509 - #31 ;
INFO  22:36:35,509 - #44 int
INFO  22:36:35,509 - #44 x
INFO  22:36:35,509 - #36 [
INFO  22:36:35,509 - #37 ]
INFO  22:36:35,509 - #31 ;
INFO  22:36:35,509 - #38 {
INFO  22:36:35,510 - #44 a
INFO  22:36:35,510 - #28 =
INFO  22:36:35,510 - #8 new
INFO  22:36:35,510 - #44 A
INFO  22:36:35,510 - #31 ;
INFO  22:36:35,510 - #44 a
INFO  22:36:35,510 - #33 .
INFO  22:36:35,510 - #44 x
INFO  22:36:35,510 - #28 =
INFO  22:36:35,510 - #8 new
INFO  22:36:35,510 - #44 int
INFO  22:36:35,510 - #36 [
INFO  22:36:35,510 - #43 5
INFO  22:36:35,511 - #37 ]
INFO  22:36:35,511 - #31 ;
INFO  22:36:35,511 - #44 a
INFO  22:36:35,511 - #33 .
INFO  22:36:35,511 - #44 y
INFO  22:36:35,511 - #28 =
INFO  22:36:35,511 - #8 new
INFO  22:36:35,511 - #44 int
INFO  22:36:35,511 - #36 [
INFO  22:36:35,511 - #43 5
INFO  22:36:35,511 - #37 ]
INFO  22:36:35,511 - #31 ;
INFO  22:36:35,512 - #44 c
INFO  22:36:35,512 - #28 =
INFO  22:36:35,512 - #8 new
INFO  22:36:35,512 - #44 C
INFO  22:36:35,512 - #31 ;
INFO  22:36:35,512 - #44 c
INFO  22:36:35,512 - #33 .
INFO  22:36:35,512 - #44 theA
INFO  22:36:35,512 - #28 =
INFO  22:36:35,512 - #44 a
INFO  22:36:35,513 - #31 ;
INFO  22:36:35,513 - #44 c
INFO  22:36:35,513 - #33 .
INFO  22:36:35,513 - #44 x
INFO  22:36:35,513 - #28 =
INFO  22:36:35,513 - #8 new
INFO  22:36:35,513 - #44 int
INFO  22:36:35,513 - #36 [
INFO  22:36:35,513 - #43 5
INFO  22:36:35,513 - #37 ]
INFO  22:36:35,514 - #31 ;
INFO  22:36:35,514 - #44 x
INFO  22:36:35,514 - #28 =
INFO  22:36:35,514 - #8 new
INFO  22:36:35,514 - #44 int
INFO  22:36:35,514 - #36 [
INFO  22:36:35,514 - #43 3
INFO  22:36:35,514 - #37 ]
INFO  22:36:35,514 - #31 ;
INFO  22:36:35,514 - #44 i
INFO  22:36:35,514 - #28 =
INFO  22:36:35,514 - #43 0
INFO  22:36:35,514 - #31 ;
INFO  22:36:35,515 - #10 read
INFO  22:36:35,515 - #34 (
INFO  22:36:35,515 - #44 c
INFO  22:36:35,515 - #33 .
INFO  22:36:35,515 - #44 i
INFO  22:36:35,515 - #35 )
INFO  22:36:35,515 - #31 ;
INFO  22:36:35,515 - #13 while
INFO  22:36:35,515 - #34 (
INFO  22:36:35,515 - #44 i
INFO  22:36:35,515 - #24 <
INFO  22:36:35,516 - #43 5
INFO  22:36:35,516 - #35 )
INFO  22:36:35,516 - #38 {
INFO  22:36:35,516 - #10 read
INFO  22:36:35,516 - #34 (
INFO  22:36:35,516 - #44 c
INFO  22:36:35,516 - #33 .
INFO  22:36:35,516 - #44 x
INFO  22:36:35,517 - #36 [
INFO  22:36:35,517 - #44 i
INFO  22:36:35,517 - #37 ]
INFO  22:36:35,517 - #35 )
INFO  22:36:35,517 - #31 ;
INFO  22:36:35,517 - #10 read
INFO  22:36:35,517 - #34 (
INFO  22:36:35,517 - #44 c
INFO  22:36:35,517 - #33 .
INFO  22:36:35,517 - #44 theA
INFO  22:36:35,518 - #33 .
INFO  22:36:35,518 - #44 x
INFO  22:36:35,518 - #36 [
INFO  22:36:35,518 - #44 i
INFO  22:36:35,518 - #37 ]
INFO  22:36:35,518 - #35 )
INFO  22:36:35,518 - #31 ;
INFO  22:36:35,518 - #44 i
INFO  22:36:35,519 - #29 ++
INFO  22:36:35,519 - #31 ;
INFO  22:36:35,519 - #39 }
INFO  22:36:35,519 - #9 print
INFO  22:36:35,519 - #34 (
INFO  22:36:35,519 - #44 c
INFO  22:36:35,519 - #33 .
INFO  22:36:35,519 - #44 getValue
INFO  22:36:35,519 - #34 (
INFO  22:36:35,519 - #44 c
INFO  22:36:35,520 - #33 .
INFO  22:36:35,520 - #44 theA
INFO  22:36:35,520 - #33 .
INFO  22:36:35,520 - #44 x
INFO  22:36:35,520 - #36 [
INFO  22:36:35,520 - #43 0
INFO  22:36:35,520 - #37 ]
INFO  22:36:35,520 - #35 )
INFO  22:36:35,520 - #35 )
INFO  22:36:35,520 - #31 ;
INFO  22:36:35,520 - #39 }
INFO  22:36:35,521 - #12 void
INFO  22:36:35,521 - #44 aaa
INFO  22:36:35,521 - #34 (
INFO  22:36:35,521 - #35 )
INFO  22:36:35,521 - #44 A
INFO  22:36:35,521 - #44 a
INFO  22:36:35,521 - #31 ;
INFO  22:36:35,521 - #44 C
INFO  22:36:35,521 - #44 c
INFO  22:36:35,521 - #31 ;
INFO  22:36:35,522 - #44 int
INFO  22:36:35,522 - #44 i
INFO  22:36:35,522 - #31 ;
INFO  22:36:35,522 - #44 int
INFO  22:36:35,522 - #44 x
INFO  22:36:35,522 - #36 [
INFO  22:36:35,522 - #37 ]
INFO  22:36:35,522 - #31 ;
INFO  22:36:35,522 - #38 {
INFO  22:36:35,523 - #39 }
INFO  22:36:35,523 - #12 void
INFO  22:36:35,523 - #44 bbb
INFO  22:36:35,523 - #34 (
INFO  22:36:35,523 - #35 )
INFO  22:36:35,523 - #44 A
INFO  22:36:35,523 - #44 a
INFO  22:36:35,523 - #31 ;
INFO  22:36:35,524 - #44 C
INFO  22:36:35,524 - #44 c
INFO  22:36:35,524 - #31 ;
INFO  22:36:35,524 - #44 int
INFO  22:36:35,524 - #44 i
INFO  22:36:35,524 - #31 ;
INFO  22:36:35,525 - #44 int
INFO  22:36:35,525 - #44 x
INFO  22:36:35,525 - #36 [
INFO  22:36:35,525 - #37 ]
INFO  22:36:35,525 - #31 ;
INFO  22:36:35,525 - #38 {
INFO  22:36:35,525 - #39 }
INFO  22:36:35,525 - #12 void
INFO  22:36:35,526 - #44 ccc
INFO  22:36:35,526 - #34 (
INFO  22:36:35,526 - #35 )
INFO  22:36:35,526 - #44 A
INFO  22:36:35,526 - #44 a
INFO  22:36:35,526 - #31 ;
INFO  22:36:35,526 - #44 C
INFO  22:36:35,526 - #44 c
INFO  22:36:35,526 - #31 ;
INFO  22:36:35,526 - #44 int
INFO  22:36:35,526 - #44 i
INFO  22:36:35,526 - #31 ;
INFO  22:36:35,527 - #44 int
INFO  22:36:35,527 - #44 x
INFO  22:36:35,527 - #36 [
INFO  22:36:35,527 - #37 ]
INFO  22:36:35,527 - #31 ;
INFO  22:36:35,527 - #38 {
INFO  22:36:35,527 - #39 }
INFO  22:36:35,527 - #39 }
INFO  22:36:35,527 - GlobalVar = 2
INFO  22:36:35,527 - GlobalConst = 2
INFO  22:36:35,527 - LocalMainVar = 4
INFO  22:36:35,527 - GlobalArray = 0
INFO  22:36:35,527 - FuncProg = 4
INFO  22:36:35,528 - Blocks = 5
INFO  22:36:35,528 - FuncCalls = 5
INFO  22:36:35,528 - FormalArg = 1
INFO  22:36:35,528 - DefClass = 3
INFO  22:40:11,936 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:40:11,945 - #2 program
INFO  22:40:11,946 - #44 Program
INFO  22:40:11,946 - #4 class
INFO  22:40:11,946 - #44 A
INFO  22:40:11,946 - #38 {
INFO  22:40:11,946 - #44 int
INFO  22:40:11,946 - #44 x
INFO  22:40:11,946 - #36 [
INFO  22:40:11,946 - #37 ]
INFO  22:40:11,946 - #32 ,
INFO  22:40:11,947 - #44 y
INFO  22:40:11,947 - #36 [
INFO  22:40:11,947 - #37 ]
INFO  22:40:11,947 - #31 ;
INFO  22:40:11,947 - #39 }
INFO  22:40:11,947 - #6 const
INFO  22:40:11,947 - #44 int
INFO  22:40:11,947 - #44 pi
INFO  22:40:11,947 - #28 =
INFO  22:40:11,947 - #43 3
INFO  22:40:11,948 - #32 ,
INFO  22:40:11,948 - #44 e
INFO  22:40:11,948 - #28 =
INFO  22:40:11,948 - #43 2
INFO  22:40:11,948 - #31 ;
INFO  22:40:11,948 - #4 class
INFO  22:40:11,948 - #44 B
INFO  22:40:11,948 - #14 extends
INFO  22:40:11,948 - #44 A
INFO  22:40:11,948 - #38 {
INFO  22:40:11,948 - #44 int
INFO  22:40:11,949 - #44 i
INFO  22:40:11,949 - #31 ;
INFO  22:40:11,949 - #44 int
INFO  22:40:11,949 - #44 x
INFO  22:40:11,949 - #36 [
INFO  22:40:11,949 - #37 ]
INFO  22:40:11,949 - #31 ;
INFO  22:40:11,949 - #38 {
INFO  22:40:11,949 - #44 int
INFO  22:40:11,949 - #44 getValue
INFO  22:40:11,949 - #34 (
INFO  22:40:11,950 - #44 int
INFO  22:40:11,950 - #44 a
INFO  22:40:11,950 - #35 )
INFO  22:40:11,950 - #44 int
INFO  22:40:11,950 - #44 b
INFO  22:40:11,950 - #31 ;
INFO  22:40:11,950 - #44 bool
INFO  22:40:11,950 - #44 c
INFO  22:40:11,950 - #31 ;
INFO  22:40:11,950 - #38 {
INFO  22:40:11,950 - #11 return
INFO  22:40:11,950 - #44 this
INFO  22:40:11,951 - #33 .
INFO  22:40:11,951 - #44 i
INFO  22:40:11,951 - #15 +
INFO  22:40:11,951 - #44 this
INFO  22:40:11,951 - #33 .
INFO  22:40:11,951 - #44 x
INFO  22:40:11,951 - #36 [
INFO  22:40:11,951 - #43 0
INFO  22:40:11,951 - #37 ]
INFO  22:40:11,951 - #15 +
INFO  22:40:11,951 - #44 a
INFO  22:40:11,951 - #31 ;
INFO  22:40:11,952 - #39 }
INFO  22:40:11,952 - #39 }
INFO  22:40:11,952 - #39 }
INFO  22:40:11,952 - #4 class
INFO  22:40:11,952 - #44 C
INFO  22:40:11,952 - #14 extends
INFO  22:40:11,952 - #44 B
INFO  22:40:11,952 - #38 {
INFO  22:40:11,952 - #44 A
INFO  22:40:11,952 - #44 theA
INFO  22:40:11,952 - #31 ;
INFO  22:40:11,953 - #44 string
INFO  22:40:11,953 - #44 a
INFO  22:40:11,953 - #31 ;
INFO  22:40:11,953 - #39 }
INFO  22:40:11,953 - #38 {
INFO  22:40:11,953 - #12 void
INFO  22:40:11,953 - #44 main
INFO  22:40:11,953 - #34 (
INFO  22:40:11,953 - #35 )
INFO  22:40:11,954 - #44 A
INFO  22:40:11,954 - #44 a
INFO  22:40:11,954 - #31 ;
INFO  22:40:11,954 - #44 C
INFO  22:40:11,954 - #44 c
INFO  22:40:11,954 - #31 ;
INFO  22:40:11,954 - #44 int
INFO  22:40:11,954 - #44 i
INFO  22:40:11,954 - #31 ;
INFO  22:40:11,954 - #44 int
INFO  22:40:11,954 - #44 x
INFO  22:40:11,955 - #36 [
INFO  22:40:11,955 - #37 ]
INFO  22:40:11,955 - #31 ;
INFO  22:40:11,955 - #38 {
INFO  22:40:11,955 - #44 a
INFO  22:40:11,955 - #28 =
INFO  22:40:11,955 - #8 new
INFO  22:40:11,955 - #44 A
INFO  22:40:11,955 - #31 ;
INFO  22:40:11,955 - #44 a
INFO  22:40:11,955 - #33 .
INFO  22:40:11,956 - #44 x
INFO  22:40:11,956 - #28 =
INFO  22:40:11,956 - #8 new
INFO  22:40:11,956 - #44 int
INFO  22:40:11,956 - #36 [
INFO  22:40:11,956 - #43 5
INFO  22:40:11,956 - #37 ]
INFO  22:40:11,956 - #31 ;
INFO  22:40:11,956 - #44 a
INFO  22:40:11,956 - #33 .
INFO  22:40:11,956 - #44 y
INFO  22:40:11,956 - #28 =
INFO  22:40:11,956 - #8 new
INFO  22:40:11,957 - #44 int
INFO  22:40:11,957 - #36 [
INFO  22:40:11,957 - #43 5
INFO  22:40:11,957 - #37 ]
INFO  22:40:11,957 - #31 ;
INFO  22:40:11,957 - #44 c
INFO  22:40:11,957 - #28 =
INFO  22:40:11,957 - #8 new
INFO  22:40:11,957 - #44 C
INFO  22:40:11,957 - #31 ;
INFO  22:40:11,958 - #44 c
INFO  22:40:11,958 - #33 .
INFO  22:40:11,958 - #44 theA
INFO  22:40:11,958 - #28 =
INFO  22:40:11,958 - #44 a
INFO  22:40:11,958 - #31 ;
INFO  22:40:11,958 - #44 c
INFO  22:40:11,958 - #33 .
INFO  22:40:11,958 - #44 x
INFO  22:40:11,958 - #28 =
INFO  22:40:11,959 - #8 new
INFO  22:40:11,959 - #44 int
INFO  22:40:11,959 - #36 [
INFO  22:40:11,959 - #43 5
INFO  22:40:11,959 - #37 ]
INFO  22:40:11,959 - #31 ;
INFO  22:40:11,959 - #44 x
INFO  22:40:11,959 - #28 =
INFO  22:40:11,959 - #8 new
INFO  22:40:11,959 - #44 int
INFO  22:40:11,959 - #36 [
INFO  22:40:11,959 - #43 3
INFO  22:40:11,960 - #37 ]
INFO  22:40:11,960 - #31 ;
INFO  22:40:11,960 - #44 i
INFO  22:40:11,960 - #28 =
INFO  22:40:11,960 - #43 0
INFO  22:40:11,960 - #31 ;
INFO  22:40:11,960 - #10 read
INFO  22:40:11,960 - #34 (
INFO  22:40:11,960 - #44 c
INFO  22:40:11,960 - #33 .
INFO  22:40:11,960 - #44 i
INFO  22:40:11,960 - #35 )
INFO  22:40:11,960 - #31 ;
INFO  22:40:11,961 - #13 while
INFO  22:40:11,961 - #34 (
INFO  22:40:11,961 - #44 i
INFO  22:40:11,961 - #24 <
INFO  22:40:11,961 - #43 5
INFO  22:40:11,962 - #35 )
INFO  22:40:11,962 - #38 {
INFO  22:40:11,963 - #10 read
INFO  22:40:11,963 - #34 (
INFO  22:40:11,963 - #44 c
INFO  22:40:11,963 - #33 .
INFO  22:40:11,963 - #44 x
INFO  22:40:11,963 - #36 [
INFO  22:40:11,963 - #44 i
INFO  22:40:11,964 - #37 ]
INFO  22:40:11,964 - #35 )
INFO  22:40:11,964 - #31 ;
INFO  22:40:11,964 - #10 read
INFO  22:40:11,964 - #34 (
INFO  22:40:11,964 - #44 c
INFO  22:40:11,964 - #33 .
INFO  22:40:11,964 - #44 theA
INFO  22:40:11,964 - #33 .
INFO  22:40:11,964 - #44 x
INFO  22:40:11,965 - #36 [
INFO  22:40:11,965 - #44 i
INFO  22:40:11,965 - #37 ]
INFO  22:40:11,965 - #35 )
INFO  22:40:11,965 - #31 ;
INFO  22:40:11,965 - #44 i
INFO  22:40:11,965 - #29 ++
INFO  22:40:11,965 - #31 ;
INFO  22:40:11,965 - #39 }
INFO  22:40:11,965 - #9 print
INFO  22:40:11,966 - #34 (
INFO  22:40:11,966 - #44 c
INFO  22:40:11,966 - #33 .
INFO  22:40:11,966 - #44 getValue
INFO  22:40:11,966 - #34 (
INFO  22:40:11,966 - #44 c
INFO  22:40:11,966 - #33 .
INFO  22:40:11,966 - #44 theA
INFO  22:40:11,966 - #33 .
INFO  22:40:11,966 - #44 x
INFO  22:40:11,966 - #36 [
INFO  22:40:11,967 - #43 0
INFO  22:40:11,967 - #37 ]
INFO  22:40:11,967 - #35 )
INFO  22:40:11,967 - #35 )
INFO  22:40:11,967 - #31 ;
INFO  22:40:11,967 - #39 }
INFO  22:40:11,967 - #12 void
INFO  22:40:11,967 - #44 aaa
INFO  22:40:11,967 - #34 (
INFO  22:40:11,967 - #35 )
INFO  22:40:11,968 - #44 A
INFO  22:40:11,968 - #44 a
INFO  22:40:11,968 - #31 ;
INFO  22:40:11,968 - #44 C
INFO  22:40:11,968 - #44 c
INFO  22:40:11,968 - #31 ;
INFO  22:40:11,968 - #44 int
INFO  22:40:11,968 - #44 i
INFO  22:40:11,968 - #31 ;
INFO  22:40:11,968 - #44 int
INFO  22:40:11,968 - #44 x
INFO  22:40:11,969 - #36 [
INFO  22:40:11,969 - #37 ]
INFO  22:40:11,969 - #31 ;
INFO  22:40:11,969 - #38 {
INFO  22:40:11,969 - #39 }
INFO  22:40:11,969 - #12 void
INFO  22:40:11,969 - #44 bbb
INFO  22:40:11,969 - #34 (
INFO  22:40:11,969 - #35 )
INFO  22:40:11,969 - #44 A
INFO  22:40:11,970 - #44 a
INFO  22:40:11,970 - #31 ;
INFO  22:40:11,970 - #44 C
INFO  22:40:11,970 - #44 c
INFO  22:40:11,970 - #31 ;
INFO  22:40:11,970 - #44 int
INFO  22:40:11,970 - #44 i
INFO  22:40:11,970 - #31 ;
INFO  22:40:11,970 - #44 int
INFO  22:40:11,970 - #44 x
INFO  22:40:11,970 - #36 [
INFO  22:40:11,970 - #37 ]
INFO  22:40:11,970 - #31 ;
INFO  22:40:11,971 - #38 {
INFO  22:40:11,971 - #39 }
INFO  22:40:11,971 - #12 void
INFO  22:40:11,971 - #44 ccc
INFO  22:40:11,971 - #34 (
INFO  22:40:11,971 - #35 )
INFO  22:40:11,971 - #44 A
INFO  22:40:11,971 - #44 a
INFO  22:40:11,971 - #31 ;
INFO  22:40:11,971 - #44 C
INFO  22:40:11,971 - #44 c
INFO  22:40:11,971 - #31 ;
INFO  22:40:11,972 - #44 int
INFO  22:40:11,972 - #44 i
INFO  22:40:11,972 - #31 ;
INFO  22:40:11,972 - #44 int
INFO  22:40:11,972 - #44 x
INFO  22:40:11,972 - #36 [
INFO  22:40:11,972 - #37 ]
INFO  22:40:11,972 - #31 ;
INFO  22:40:11,972 - #38 {
INFO  22:40:11,972 - #39 }
INFO  22:40:11,972 - #39 }
INFO  22:40:11,973 - GlobalVar = 2
INFO  22:40:11,973 - GlobalConst = 2
INFO  22:40:11,973 - LocalMainVar = 4
INFO  22:40:11,973 - GlobalArray = 0
INFO  22:40:11,973 - FuncProg = 4
INFO  22:40:11,973 - Blocks = 5
INFO  22:40:11,973 - FuncCalls = 5
INFO  22:40:11,973 - FormalArg = 1
INFO  22:40:11,973 - DefClass = 3
INFO  22:40:11,973 - DefMethodClass = 1
INFO  22:40:38,456 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:40:38,465 - #2 program
INFO  22:40:38,465 - #44 Program
INFO  22:40:38,465 - #4 class
INFO  22:40:38,465 - #44 A
INFO  22:40:38,465 - #38 {
INFO  22:40:38,465 - #44 int
INFO  22:40:38,465 - #44 x
INFO  22:40:38,465 - #36 [
INFO  22:40:38,465 - #37 ]
INFO  22:40:38,465 - #32 ,
INFO  22:40:38,466 - #44 y
INFO  22:40:38,466 - #36 [
INFO  22:40:38,466 - #37 ]
INFO  22:40:38,466 - #31 ;
INFO  22:40:38,466 - #39 }
INFO  22:40:38,466 - #6 const
INFO  22:40:38,466 - #44 int
INFO  22:40:38,466 - #44 pi
INFO  22:40:38,466 - #28 =
INFO  22:40:38,466 - #43 3
INFO  22:40:38,466 - #32 ,
INFO  22:40:38,466 - #44 e
INFO  22:40:38,466 - #28 =
INFO  22:40:38,467 - #43 2
INFO  22:40:38,467 - #31 ;
INFO  22:40:38,467 - #4 class
INFO  22:40:38,467 - #44 B
INFO  22:40:38,467 - #14 extends
INFO  22:40:38,467 - #44 A
INFO  22:40:38,467 - #38 {
INFO  22:40:38,467 - #44 int
INFO  22:40:38,467 - #44 i
INFO  22:40:38,467 - #31 ;
INFO  22:40:38,467 - #44 int
INFO  22:40:38,467 - #44 x
INFO  22:40:38,467 - #36 [
INFO  22:40:38,467 - #37 ]
INFO  22:40:38,468 - #31 ;
INFO  22:40:38,468 - #38 {
INFO  22:40:38,468 - #44 int
INFO  22:40:38,468 - #44 getValue
INFO  22:40:38,468 - #34 (
INFO  22:40:38,468 - #44 int
INFO  22:40:38,468 - #44 a
INFO  22:40:38,468 - #35 )
INFO  22:40:38,468 - #44 int
INFO  22:40:38,468 - #44 b
INFO  22:40:38,468 - #31 ;
INFO  22:40:38,468 - #44 bool
INFO  22:40:38,468 - #44 c
INFO  22:40:38,468 - #31 ;
INFO  22:40:38,469 - #38 {
INFO  22:40:38,469 - #11 return
INFO  22:40:38,469 - #44 this
INFO  22:40:38,469 - #33 .
INFO  22:40:38,469 - #44 i
INFO  22:40:38,469 - #15 +
INFO  22:40:38,469 - #44 this
INFO  22:40:38,469 - #33 .
INFO  22:40:38,469 - #44 x
INFO  22:40:38,469 - #36 [
INFO  22:40:38,469 - #43 0
INFO  22:40:38,469 - #37 ]
INFO  22:40:38,470 - #15 +
INFO  22:40:38,470 - #44 a
INFO  22:40:38,470 - #31 ;
INFO  22:40:38,470 - #39 }
INFO  22:40:38,470 - #39 }
INFO  22:40:38,470 - #39 }
INFO  22:40:38,470 - #4 class
INFO  22:40:38,470 - #44 C
INFO  22:40:38,470 - #14 extends
INFO  22:40:38,470 - #44 B
INFO  22:40:38,471 - #38 {
INFO  22:40:38,471 - #44 A
INFO  22:40:38,471 - #44 theA
INFO  22:40:38,471 - #31 ;
INFO  22:40:38,471 - #44 string
INFO  22:40:38,471 - #44 a
INFO  22:40:38,471 - #31 ;
INFO  22:40:38,471 - #38 {
INFO  22:40:38,471 - #44 int
INFO  22:40:38,471 - #44 getValue1
INFO  22:40:38,472 - #34 (
INFO  22:40:38,472 - #44 int
INFO  22:40:38,472 - #44 a
INFO  22:40:38,472 - #35 )
INFO  22:40:38,472 - #44 int
INFO  22:40:38,472 - #44 b
INFO  22:40:38,472 - #31 ;
INFO  22:40:38,472 - #44 bool
INFO  22:40:38,472 - #44 c
INFO  22:40:38,472 - #31 ;
INFO  22:40:38,472 - #38 {
INFO  22:40:38,473 - #11 return
INFO  22:40:38,473 - #44 this
INFO  22:40:38,473 - #33 .
INFO  22:40:38,473 - #44 i
INFO  22:40:38,473 - #15 +
INFO  22:40:38,473 - #44 this
INFO  22:40:38,473 - #33 .
INFO  22:40:38,473 - #44 x
INFO  22:40:38,473 - #36 [
INFO  22:40:38,473 - #43 0
INFO  22:40:38,473 - #37 ]
INFO  22:40:38,473 - #15 +
INFO  22:40:38,474 - #44 a
INFO  22:40:38,474 - #31 ;
INFO  22:40:38,474 - #39 }
INFO  22:40:38,474 - #39 }
INFO  22:40:38,474 - #39 }
INFO  22:40:38,474 - #38 {
INFO  22:40:38,474 - #12 void
INFO  22:40:38,474 - #44 main
INFO  22:40:38,474 - #34 (
INFO  22:40:38,474 - #35 )
INFO  22:40:38,474 - #44 A
INFO  22:40:38,475 - #44 a
INFO  22:40:38,475 - #31 ;
INFO  22:40:38,475 - #44 C
INFO  22:40:38,475 - #44 c
INFO  22:40:38,475 - #31 ;
INFO  22:40:38,475 - #44 int
INFO  22:40:38,475 - #44 i
INFO  22:40:38,475 - #31 ;
INFO  22:40:38,475 - #44 int
INFO  22:40:38,475 - #44 x
INFO  22:40:38,476 - #36 [
INFO  22:40:38,476 - #37 ]
INFO  22:40:38,476 - #31 ;
INFO  22:40:38,476 - #38 {
INFO  22:40:38,476 - #44 a
INFO  22:40:38,476 - #28 =
INFO  22:40:38,476 - #8 new
INFO  22:40:38,476 - #44 A
INFO  22:40:38,476 - #31 ;
INFO  22:40:38,476 - #44 a
INFO  22:40:38,477 - #33 .
INFO  22:40:38,477 - #44 x
INFO  22:40:38,477 - #28 =
INFO  22:40:38,477 - #8 new
INFO  22:40:38,477 - #44 int
INFO  22:40:38,477 - #36 [
INFO  22:40:38,477 - #43 5
INFO  22:40:38,477 - #37 ]
INFO  22:40:38,477 - #31 ;
INFO  22:40:38,477 - #44 a
INFO  22:40:38,477 - #33 .
INFO  22:40:38,478 - #44 y
INFO  22:40:38,478 - #28 =
INFO  22:40:38,478 - #8 new
INFO  22:40:38,478 - #44 int
INFO  22:40:38,478 - #36 [
INFO  22:40:38,478 - #43 5
INFO  22:40:38,478 - #37 ]
INFO  22:40:38,478 - #31 ;
INFO  22:40:38,478 - #44 c
INFO  22:40:38,478 - #28 =
INFO  22:40:38,478 - #8 new
INFO  22:40:38,478 - #44 C
INFO  22:40:38,478 - #31 ;
INFO  22:40:38,479 - #44 c
INFO  22:40:38,479 - #33 .
INFO  22:40:38,479 - #44 theA
INFO  22:40:38,479 - #28 =
INFO  22:40:38,479 - #44 a
INFO  22:40:38,479 - #31 ;
INFO  22:40:38,479 - #44 c
INFO  22:40:38,479 - #33 .
INFO  22:40:38,479 - #44 x
INFO  22:40:38,479 - #28 =
INFO  22:40:38,479 - #8 new
INFO  22:40:38,480 - #44 int
INFO  22:40:38,480 - #36 [
INFO  22:40:38,480 - #43 5
INFO  22:40:38,480 - #37 ]
INFO  22:40:38,480 - #31 ;
INFO  22:40:38,480 - #44 x
INFO  22:40:38,480 - #28 =
INFO  22:40:38,480 - #8 new
INFO  22:40:38,481 - #44 int
INFO  22:40:38,481 - #36 [
INFO  22:40:38,481 - #43 3
INFO  22:40:38,481 - #37 ]
INFO  22:40:38,481 - #31 ;
INFO  22:40:38,481 - #44 i
INFO  22:40:38,481 - #28 =
INFO  22:40:38,481 - #43 0
INFO  22:40:38,482 - #31 ;
INFO  22:40:38,482 - #10 read
INFO  22:40:38,482 - #34 (
INFO  22:40:38,482 - #44 c
INFO  22:40:38,482 - #33 .
INFO  22:40:38,482 - #44 i
INFO  22:40:38,482 - #35 )
INFO  22:40:38,482 - #31 ;
INFO  22:40:38,482 - #13 while
INFO  22:40:38,482 - #34 (
INFO  22:40:38,482 - #44 i
INFO  22:40:38,483 - #24 <
INFO  22:40:38,483 - #43 5
INFO  22:40:38,483 - #35 )
INFO  22:40:38,483 - #38 {
INFO  22:40:38,483 - #10 read
INFO  22:40:38,483 - #34 (
INFO  22:40:38,483 - #44 c
INFO  22:40:38,483 - #33 .
INFO  22:40:38,483 - #44 x
INFO  22:40:38,483 - #36 [
INFO  22:40:38,484 - #44 i
INFO  22:40:38,484 - #37 ]
INFO  22:40:38,484 - #35 )
INFO  22:40:38,484 - #31 ;
INFO  22:40:38,484 - #10 read
INFO  22:40:38,484 - #34 (
INFO  22:40:38,484 - #44 c
INFO  22:40:38,484 - #33 .
INFO  22:40:38,484 - #44 theA
INFO  22:40:38,484 - #33 .
INFO  22:40:38,484 - #44 x
INFO  22:40:38,485 - #36 [
INFO  22:40:38,485 - #44 i
INFO  22:40:38,485 - #37 ]
INFO  22:40:38,485 - #35 )
INFO  22:40:38,485 - #31 ;
INFO  22:40:38,485 - #44 i
INFO  22:40:38,485 - #29 ++
INFO  22:40:38,485 - #31 ;
INFO  22:40:38,485 - #39 }
INFO  22:40:38,485 - #9 print
INFO  22:40:38,486 - #34 (
INFO  22:40:38,486 - #44 c
INFO  22:40:38,486 - #33 .
INFO  22:40:38,486 - #44 getValue
INFO  22:40:38,486 - #34 (
INFO  22:40:38,486 - #44 c
INFO  22:40:38,486 - #33 .
INFO  22:40:38,486 - #44 theA
INFO  22:40:38,486 - #33 .
INFO  22:40:38,486 - #44 x
INFO  22:40:38,486 - #36 [
INFO  22:40:38,487 - #43 0
INFO  22:40:38,487 - #37 ]
INFO  22:40:38,487 - #35 )
INFO  22:40:38,487 - #35 )
INFO  22:40:38,487 - #31 ;
INFO  22:40:38,487 - #39 }
INFO  22:40:38,487 - #12 void
INFO  22:40:38,487 - #44 aaa
INFO  22:40:38,487 - #34 (
INFO  22:40:38,487 - #35 )
INFO  22:40:38,487 - #44 A
INFO  22:40:38,488 - #44 a
INFO  22:40:38,488 - #31 ;
INFO  22:40:38,488 - #44 C
INFO  22:40:38,488 - #44 c
INFO  22:40:38,488 - #31 ;
INFO  22:40:38,488 - #44 int
INFO  22:40:38,488 - #44 i
INFO  22:40:38,488 - #31 ;
INFO  22:40:38,488 - #44 int
INFO  22:40:38,488 - #44 x
INFO  22:40:38,488 - #36 [
INFO  22:40:38,488 - #37 ]
INFO  22:40:38,489 - #31 ;
INFO  22:40:38,489 - #38 {
INFO  22:40:38,489 - #39 }
INFO  22:40:38,489 - #12 void
INFO  22:40:38,489 - #44 bbb
INFO  22:40:38,489 - #34 (
INFO  22:40:38,489 - #35 )
INFO  22:40:38,489 - #44 A
INFO  22:40:38,489 - #44 a
INFO  22:40:38,489 - #31 ;
INFO  22:40:38,489 - #44 C
INFO  22:40:38,489 - #44 c
INFO  22:40:38,489 - #31 ;
INFO  22:40:38,489 - #44 int
INFO  22:40:38,490 - #44 i
INFO  22:40:38,490 - #31 ;
INFO  22:40:38,490 - #44 int
INFO  22:40:38,490 - #44 x
INFO  22:40:38,490 - #36 [
INFO  22:40:38,490 - #37 ]
INFO  22:40:38,490 - #31 ;
INFO  22:40:38,490 - #38 {
INFO  22:40:38,490 - #39 }
INFO  22:40:38,490 - #12 void
INFO  22:40:38,490 - #44 ccc
INFO  22:40:38,490 - #34 (
INFO  22:40:38,490 - #35 )
INFO  22:40:38,490 - #44 A
INFO  22:40:38,490 - #44 a
INFO  22:40:38,491 - #31 ;
INFO  22:40:38,491 - #44 C
INFO  22:40:38,491 - #44 c
INFO  22:40:38,491 - #31 ;
INFO  22:40:38,491 - #44 int
INFO  22:40:38,491 - #44 i
INFO  22:40:38,491 - #31 ;
INFO  22:40:38,491 - #44 int
INFO  22:40:38,491 - #44 x
INFO  22:40:38,491 - #36 [
INFO  22:40:38,491 - #37 ]
INFO  22:40:38,491 - #31 ;
INFO  22:40:38,491 - #38 {
INFO  22:40:38,491 - #39 }
INFO  22:40:38,491 - #39 }
INFO  22:40:38,492 - GlobalVar = 4
INFO  22:40:38,492 - GlobalConst = 2
INFO  22:40:38,492 - LocalMainVar = 4
INFO  22:40:38,492 - GlobalArray = 0
INFO  22:40:38,492 - FuncProg = 5
INFO  22:40:38,492 - Blocks = 6
INFO  22:40:38,492 - FuncCalls = 5
INFO  22:40:38,492 - FormalArg = 2
INFO  22:40:38,492 - DefClass = 3
INFO  22:40:38,492 - DefMethodClass = 1
INFO  22:40:44,206 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:40:44,215 - #2 program
INFO  22:40:44,215 - #44 Program
INFO  22:40:44,215 - #4 class
INFO  22:40:44,215 - #44 A
INFO  22:40:44,215 - #38 {
INFO  22:40:44,215 - #44 int
INFO  22:40:44,215 - #44 x
INFO  22:40:44,216 - #36 [
INFO  22:40:44,216 - #37 ]
INFO  22:40:44,216 - #32 ,
INFO  22:40:44,216 - #44 y
INFO  22:40:44,216 - #36 [
INFO  22:40:44,216 - #37 ]
INFO  22:40:44,216 - #31 ;
INFO  22:40:44,216 - #39 }
INFO  22:40:44,216 - #6 const
INFO  22:40:44,216 - #44 int
INFO  22:40:44,217 - #44 pi
INFO  22:40:44,217 - #28 =
INFO  22:40:44,217 - #43 3
INFO  22:40:44,217 - #32 ,
INFO  22:40:44,217 - #44 e
INFO  22:40:44,217 - #28 =
INFO  22:40:44,217 - #43 2
INFO  22:40:44,217 - #31 ;
INFO  22:40:44,217 - #4 class
INFO  22:40:44,217 - #44 B
INFO  22:40:44,217 - #14 extends
INFO  22:40:44,217 - #44 A
INFO  22:40:44,217 - #38 {
INFO  22:40:44,218 - #44 int
INFO  22:40:44,218 - #44 i
INFO  22:40:44,218 - #31 ;
INFO  22:40:44,218 - #44 int
INFO  22:40:44,218 - #44 x
INFO  22:40:44,218 - #36 [
INFO  22:40:44,218 - #37 ]
INFO  22:40:44,218 - #31 ;
INFO  22:40:44,218 - #38 {
INFO  22:40:44,218 - #44 int
INFO  22:40:44,218 - #44 getValue
INFO  22:40:44,218 - #34 (
INFO  22:40:44,218 - #44 int
INFO  22:40:44,218 - #44 a
INFO  22:40:44,219 - #35 )
INFO  22:40:44,219 - #44 int
INFO  22:40:44,219 - #44 b
INFO  22:40:44,219 - #31 ;
INFO  22:40:44,219 - #44 bool
INFO  22:40:44,219 - #44 c
INFO  22:40:44,219 - #31 ;
INFO  22:40:44,219 - #38 {
INFO  22:40:44,219 - #11 return
INFO  22:40:44,219 - #44 this
INFO  22:40:44,219 - #33 .
INFO  22:40:44,219 - #44 i
INFO  22:40:44,220 - #15 +
INFO  22:40:44,220 - #44 this
INFO  22:40:44,220 - #33 .
INFO  22:40:44,220 - #44 x
INFO  22:40:44,220 - #36 [
INFO  22:40:44,220 - #43 0
INFO  22:40:44,220 - #37 ]
INFO  22:40:44,220 - #15 +
INFO  22:40:44,220 - #44 a
INFO  22:40:44,220 - #31 ;
INFO  22:40:44,220 - #39 }
INFO  22:40:44,220 - #39 }
INFO  22:40:44,221 - #39 }
INFO  22:40:44,221 - #4 class
INFO  22:40:44,221 - #44 C
INFO  22:40:44,221 - #14 extends
INFO  22:40:44,221 - #44 B
INFO  22:40:44,221 - #38 {
INFO  22:40:44,221 - #44 A
INFO  22:40:44,221 - #44 theA
INFO  22:40:44,221 - #31 ;
INFO  22:40:44,221 - #44 string
INFO  22:40:44,221 - #44 a
INFO  22:40:44,222 - #31 ;
INFO  22:40:44,222 - #38 {
INFO  22:40:44,222 - #44 int
INFO  22:40:44,222 - #44 getValue1
INFO  22:40:44,222 - #34 (
INFO  22:40:44,222 - #44 int
INFO  22:40:44,222 - #44 a
INFO  22:40:44,222 - #35 )
INFO  22:40:44,222 - #44 int
INFO  22:40:44,222 - #44 b
INFO  22:40:44,223 - #31 ;
INFO  22:40:44,223 - #44 bool
INFO  22:40:44,223 - #44 c
INFO  22:40:44,223 - #31 ;
INFO  22:40:44,223 - #38 {
INFO  22:40:44,223 - #11 return
INFO  22:40:44,223 - #44 this
INFO  22:40:44,223 - #33 .
INFO  22:40:44,224 - #44 i
INFO  22:40:44,224 - #15 +
INFO  22:40:44,224 - #44 this
INFO  22:40:44,224 - #33 .
INFO  22:40:44,224 - #44 x
INFO  22:40:44,224 - #36 [
INFO  22:40:44,224 - #43 0
INFO  22:40:44,224 - #37 ]
INFO  22:40:44,224 - #15 +
INFO  22:40:44,224 - #44 a
INFO  22:40:44,224 - #31 ;
INFO  22:40:44,225 - #39 }
INFO  22:40:44,225 - #39 }
INFO  22:40:44,225 - #39 }
INFO  22:40:44,225 - #38 {
INFO  22:40:44,225 - #12 void
INFO  22:40:44,225 - #44 main
INFO  22:40:44,225 - #34 (
INFO  22:40:44,225 - #35 )
INFO  22:40:44,225 - #44 A
INFO  22:40:44,225 - #44 a
INFO  22:40:44,225 - #31 ;
INFO  22:40:44,225 - #44 C
INFO  22:40:44,225 - #44 c
INFO  22:40:44,226 - #31 ;
INFO  22:40:44,226 - #44 int
INFO  22:40:44,226 - #44 i
INFO  22:40:44,226 - #31 ;
INFO  22:40:44,226 - #44 int
INFO  22:40:44,227 - #44 x
INFO  22:40:44,227 - #36 [
INFO  22:40:44,227 - #37 ]
INFO  22:40:44,227 - #31 ;
INFO  22:40:44,227 - #38 {
INFO  22:40:44,227 - #44 a
INFO  22:40:44,227 - #28 =
INFO  22:40:44,227 - #8 new
INFO  22:40:44,227 - #44 A
INFO  22:40:44,227 - #31 ;
INFO  22:40:44,228 - #44 a
INFO  22:40:44,228 - #33 .
INFO  22:40:44,228 - #44 x
INFO  22:40:44,228 - #28 =
INFO  22:40:44,228 - #8 new
INFO  22:40:44,228 - #44 int
INFO  22:40:44,228 - #36 [
INFO  22:40:44,228 - #43 5
INFO  22:40:44,228 - #37 ]
INFO  22:40:44,228 - #31 ;
INFO  22:40:44,228 - #44 a
INFO  22:40:44,229 - #33 .
INFO  22:40:44,229 - #44 y
INFO  22:40:44,229 - #28 =
INFO  22:40:44,229 - #8 new
INFO  22:40:44,229 - #44 int
INFO  22:40:44,229 - #36 [
INFO  22:40:44,229 - #43 5
INFO  22:40:44,229 - #37 ]
INFO  22:40:44,229 - #31 ;
INFO  22:40:44,229 - #44 c
INFO  22:40:44,229 - #28 =
INFO  22:40:44,229 - #8 new
INFO  22:40:44,229 - #44 C
INFO  22:40:44,230 - #31 ;
INFO  22:40:44,230 - #44 c
INFO  22:40:44,230 - #33 .
INFO  22:40:44,230 - #44 theA
INFO  22:40:44,230 - #28 =
INFO  22:40:44,230 - #44 a
INFO  22:40:44,230 - #31 ;
INFO  22:40:44,230 - #44 c
INFO  22:40:44,230 - #33 .
INFO  22:40:44,230 - #44 x
INFO  22:40:44,230 - #28 =
INFO  22:40:44,231 - #8 new
INFO  22:40:44,231 - #44 int
INFO  22:40:44,231 - #36 [
INFO  22:40:44,231 - #43 5
INFO  22:40:44,231 - #37 ]
INFO  22:40:44,231 - #31 ;
INFO  22:40:44,231 - #44 x
INFO  22:40:44,231 - #28 =
INFO  22:40:44,231 - #8 new
INFO  22:40:44,232 - #44 int
INFO  22:40:44,232 - #36 [
INFO  22:40:44,232 - #43 3
INFO  22:40:44,232 - #37 ]
INFO  22:40:44,232 - #31 ;
INFO  22:40:44,232 - #44 i
INFO  22:40:44,232 - #28 =
INFO  22:40:44,232 - #43 0
INFO  22:40:44,232 - #31 ;
INFO  22:40:44,233 - #10 read
INFO  22:40:44,233 - #34 (
INFO  22:40:44,233 - #44 c
INFO  22:40:44,233 - #33 .
INFO  22:40:44,233 - #44 i
INFO  22:40:44,233 - #35 )
INFO  22:40:44,233 - #31 ;
INFO  22:40:44,233 - #13 while
INFO  22:40:44,233 - #34 (
INFO  22:40:44,233 - #44 i
INFO  22:40:44,233 - #24 <
INFO  22:40:44,234 - #43 5
INFO  22:40:44,234 - #35 )
INFO  22:40:44,234 - #38 {
INFO  22:40:44,234 - #10 read
INFO  22:40:44,234 - #34 (
INFO  22:40:44,234 - #44 c
INFO  22:40:44,234 - #33 .
INFO  22:40:44,234 - #44 x
INFO  22:40:44,234 - #36 [
INFO  22:40:44,234 - #44 i
INFO  22:40:44,234 - #37 ]
INFO  22:40:44,235 - #35 )
INFO  22:40:44,235 - #31 ;
INFO  22:40:44,235 - #10 read
INFO  22:40:44,235 - #34 (
INFO  22:40:44,235 - #44 c
INFO  22:40:44,235 - #33 .
INFO  22:40:44,235 - #44 theA
INFO  22:40:44,235 - #33 .
INFO  22:40:44,235 - #44 x
INFO  22:40:44,235 - #36 [
INFO  22:40:44,236 - #44 i
INFO  22:40:44,236 - #37 ]
INFO  22:40:44,236 - #35 )
INFO  22:40:44,236 - #31 ;
INFO  22:40:44,236 - #44 i
INFO  22:40:44,236 - #29 ++
INFO  22:40:44,236 - #31 ;
INFO  22:40:44,236 - #39 }
INFO  22:40:44,236 - #9 print
INFO  22:40:44,236 - #34 (
INFO  22:40:44,237 - #44 c
INFO  22:40:44,237 - #33 .
INFO  22:40:44,237 - #44 getValue
INFO  22:40:44,237 - #34 (
INFO  22:40:44,237 - #44 c
INFO  22:40:44,237 - #33 .
INFO  22:40:44,237 - #44 theA
INFO  22:40:44,237 - #33 .
INFO  22:40:44,237 - #44 x
INFO  22:40:44,237 - #36 [
INFO  22:40:44,237 - #43 0
INFO  22:40:44,238 - #37 ]
INFO  22:40:44,238 - #35 )
INFO  22:40:44,238 - #35 )
INFO  22:40:44,238 - #31 ;
INFO  22:40:44,238 - #39 }
INFO  22:40:44,238 - #12 void
INFO  22:40:44,238 - #44 aaa
INFO  22:40:44,238 - #34 (
INFO  22:40:44,238 - #35 )
INFO  22:40:44,238 - #44 A
INFO  22:40:44,238 - #44 a
INFO  22:40:44,239 - #31 ;
INFO  22:40:44,239 - #44 C
INFO  22:40:44,239 - #44 c
INFO  22:40:44,239 - #31 ;
INFO  22:40:44,239 - #44 int
INFO  22:40:44,239 - #44 i
INFO  22:40:44,239 - #31 ;
INFO  22:40:44,239 - #44 int
INFO  22:40:44,239 - #44 x
INFO  22:40:44,239 - #36 [
INFO  22:40:44,239 - #37 ]
INFO  22:40:44,239 - #31 ;
INFO  22:40:44,239 - #38 {
INFO  22:40:44,239 - #39 }
INFO  22:40:44,239 - #12 void
INFO  22:40:44,240 - #44 bbb
INFO  22:40:44,240 - #34 (
INFO  22:40:44,240 - #35 )
INFO  22:40:44,240 - #44 A
INFO  22:40:44,240 - #44 a
INFO  22:40:44,240 - #31 ;
INFO  22:40:44,240 - #44 C
INFO  22:40:44,240 - #44 c
INFO  22:40:44,240 - #31 ;
INFO  22:40:44,240 - #44 int
INFO  22:40:44,240 - #44 i
INFO  22:40:44,240 - #31 ;
INFO  22:40:44,240 - #44 int
INFO  22:40:44,240 - #44 x
INFO  22:40:44,240 - #36 [
INFO  22:40:44,241 - #37 ]
INFO  22:40:44,241 - #31 ;
INFO  22:40:44,241 - #38 {
INFO  22:40:44,241 - #39 }
INFO  22:40:44,241 - #12 void
INFO  22:40:44,241 - #44 ccc
INFO  22:40:44,241 - #34 (
INFO  22:40:44,241 - #35 )
INFO  22:40:44,241 - #44 A
INFO  22:40:44,241 - #44 a
INFO  22:40:44,241 - #31 ;
INFO  22:40:44,241 - #44 C
INFO  22:40:44,241 - #44 c
INFO  22:40:44,241 - #31 ;
INFO  22:40:44,242 - #44 int
INFO  22:40:44,242 - #44 i
INFO  22:40:44,242 - #31 ;
INFO  22:40:44,242 - #44 int
INFO  22:40:44,242 - #44 x
INFO  22:40:44,242 - #36 [
INFO  22:40:44,242 - #37 ]
INFO  22:40:44,242 - #31 ;
INFO  22:40:44,242 - #38 {
INFO  22:40:44,242 - #39 }
INFO  22:40:44,242 - #39 }
INFO  22:40:44,242 - GlobalVar = 4
INFO  22:40:44,242 - GlobalConst = 2
INFO  22:40:44,243 - LocalMainVar = 4
INFO  22:40:44,243 - GlobalArray = 0
INFO  22:40:44,243 - FuncProg = 5
INFO  22:40:44,243 - Blocks = 6
INFO  22:40:44,243 - FuncCalls = 5
INFO  22:40:44,243 - FormalArg = 2
INFO  22:40:44,243 - DefClass = 3
INFO  22:40:44,243 - DefMethodClass = 1
INFO  22:40:52,171 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:40:52,180 - #2 program
INFO  22:40:52,180 - #44 Program
INFO  22:40:52,180 - #4 class
INFO  22:40:52,180 - #44 A
INFO  22:40:52,180 - #38 {
INFO  22:40:52,180 - #44 int
INFO  22:40:52,180 - #44 x
INFO  22:40:52,180 - #36 [
INFO  22:40:52,181 - #37 ]
INFO  22:40:52,181 - #32 ,
INFO  22:40:52,181 - #44 y
INFO  22:40:52,181 - #36 [
INFO  22:40:52,181 - #37 ]
INFO  22:40:52,181 - #31 ;
INFO  22:40:52,181 - #39 }
INFO  22:40:52,181 - #6 const
INFO  22:40:52,181 - #44 int
INFO  22:40:52,181 - #44 pi
INFO  22:40:52,181 - #28 =
INFO  22:40:52,181 - #43 3
INFO  22:40:52,182 - #32 ,
INFO  22:40:52,182 - #44 e
INFO  22:40:52,182 - #28 =
INFO  22:40:52,182 - #43 2
INFO  22:40:52,182 - #31 ;
INFO  22:40:52,182 - #4 class
INFO  22:40:52,182 - #44 B
INFO  22:40:52,182 - #14 extends
INFO  22:40:52,182 - #44 A
INFO  22:40:52,182 - #38 {
INFO  22:40:52,182 - #44 int
INFO  22:40:52,182 - #44 i
INFO  22:40:52,182 - #31 ;
INFO  22:40:52,183 - #44 int
INFO  22:40:52,183 - #44 x
INFO  22:40:52,183 - #36 [
INFO  22:40:52,183 - #37 ]
INFO  22:40:52,183 - #31 ;
INFO  22:40:52,183 - #38 {
INFO  22:40:52,183 - #44 int
INFO  22:40:52,183 - #44 getValue
INFO  22:40:52,183 - #34 (
INFO  22:40:52,183 - #44 int
INFO  22:40:52,183 - #44 a
INFO  22:40:52,183 - #35 )
INFO  22:40:52,183 - #44 int
INFO  22:40:52,183 - #44 b
INFO  22:40:52,184 - #31 ;
INFO  22:40:52,184 - #44 bool
INFO  22:40:52,184 - #44 c
INFO  22:40:52,184 - #31 ;
INFO  22:40:52,184 - #38 {
INFO  22:40:52,184 - #11 return
INFO  22:40:52,202 - #44 this
INFO  22:40:52,202 - #33 .
INFO  22:40:52,202 - #44 i
INFO  22:40:52,202 - #15 +
INFO  22:40:52,202 - #44 this
INFO  22:40:52,202 - #33 .
INFO  22:40:52,202 - #44 x
INFO  22:40:52,202 - #36 [
INFO  22:40:52,203 - #43 0
INFO  22:40:52,203 - #37 ]
INFO  22:40:52,203 - #15 +
INFO  22:40:52,203 - #44 a
INFO  22:40:52,203 - #31 ;
INFO  22:40:52,203 - #39 }
INFO  22:40:52,203 - #39 }
INFO  22:40:52,203 - #39 }
INFO  22:40:52,203 - #4 class
INFO  22:40:52,203 - #44 C
INFO  22:40:52,203 - #14 extends
INFO  22:40:52,203 - #44 B
INFO  22:40:52,204 - #38 {
INFO  22:40:52,204 - #44 A
INFO  22:40:52,204 - #44 theA
INFO  22:40:52,204 - #31 ;
INFO  22:40:52,204 - #44 string
INFO  22:40:52,204 - #44 a
INFO  22:40:52,204 - #31 ;
INFO  22:40:52,204 - #38 {
INFO  22:40:52,204 - #44 int
INFO  22:40:52,204 - #44 getValue1
INFO  22:40:52,204 - #34 (
INFO  22:40:52,204 - #44 int
INFO  22:40:52,204 - #44 a
INFO  22:40:52,204 - #35 )
INFO  22:40:52,205 - #44 int
INFO  22:40:52,205 - #44 b
INFO  22:40:52,205 - #31 ;
INFO  22:40:52,205 - #44 bool
INFO  22:40:52,205 - #44 c
INFO  22:40:52,205 - #31 ;
INFO  22:40:52,205 - #38 {
INFO  22:40:52,205 - #11 return
INFO  22:40:52,205 - #44 this
INFO  22:40:52,205 - #33 .
INFO  22:40:52,205 - #44 i
INFO  22:40:52,205 - #15 +
INFO  22:40:52,205 - #44 this
INFO  22:40:52,206 - #33 .
INFO  22:40:52,206 - #44 x
INFO  22:40:52,206 - #36 [
INFO  22:40:52,206 - #43 0
INFO  22:40:52,206 - #37 ]
INFO  22:40:52,206 - #15 +
INFO  22:40:52,206 - #44 a
INFO  22:40:52,206 - #31 ;
INFO  22:40:52,206 - #39 }
INFO  22:40:52,206 - #39 }
INFO  22:40:52,207 - #39 }
INFO  22:40:52,207 - #38 {
INFO  22:40:52,207 - #12 void
INFO  22:40:52,207 - #44 main
INFO  22:40:52,207 - #34 (
INFO  22:40:52,207 - #35 )
INFO  22:40:52,207 - #44 A
INFO  22:40:52,207 - #44 a
INFO  22:40:52,207 - #31 ;
INFO  22:40:52,207 - #44 C
INFO  22:40:52,207 - #44 c
INFO  22:40:52,207 - #31 ;
INFO  22:40:52,208 - #44 int
INFO  22:40:52,208 - #44 i
INFO  22:40:52,208 - #31 ;
INFO  22:40:52,208 - #44 int
INFO  22:40:52,208 - #44 x
INFO  22:40:52,208 - #36 [
INFO  22:40:52,208 - #37 ]
INFO  22:40:52,208 - #31 ;
INFO  22:40:52,208 - #38 {
INFO  22:40:52,209 - #44 a
INFO  22:40:52,209 - #28 =
INFO  22:40:52,209 - #8 new
INFO  22:40:52,209 - #44 A
INFO  22:40:52,209 - #31 ;
INFO  22:40:52,209 - #44 a
INFO  22:40:52,209 - #33 .
INFO  22:40:52,209 - #44 x
INFO  22:40:52,210 - #28 =
INFO  22:40:52,210 - #8 new
INFO  22:40:52,210 - #44 int
INFO  22:40:52,210 - #36 [
INFO  22:40:52,210 - #43 5
INFO  22:40:52,210 - #37 ]
INFO  22:40:52,210 - #31 ;
INFO  22:40:52,210 - #44 a
INFO  22:40:52,210 - #33 .
INFO  22:40:52,211 - #44 y
INFO  22:40:52,211 - #28 =
INFO  22:40:52,211 - #8 new
INFO  22:40:52,211 - #44 int
INFO  22:40:52,211 - #36 [
INFO  22:40:52,211 - #43 5
INFO  22:40:52,211 - #37 ]
INFO  22:40:52,211 - #31 ;
INFO  22:40:52,211 - #44 c
INFO  22:40:52,211 - #28 =
INFO  22:40:52,211 - #8 new
INFO  22:40:52,212 - #44 C
INFO  22:40:52,212 - #31 ;
INFO  22:40:52,212 - #44 c
INFO  22:40:52,212 - #33 .
INFO  22:40:52,212 - #44 theA
INFO  22:40:52,212 - #28 =
INFO  22:40:52,212 - #44 a
INFO  22:40:52,212 - #31 ;
INFO  22:40:52,212 - #44 c
INFO  22:40:52,212 - #33 .
INFO  22:40:52,212 - #44 x
INFO  22:40:52,212 - #28 =
INFO  22:40:52,213 - #8 new
INFO  22:40:52,213 - #44 int
INFO  22:40:52,213 - #36 [
INFO  22:40:52,213 - #43 5
INFO  22:40:52,213 - #37 ]
INFO  22:40:52,213 - #31 ;
INFO  22:40:52,213 - #44 x
INFO  22:40:52,213 - #28 =
INFO  22:40:52,213 - #8 new
INFO  22:40:52,214 - #44 int
INFO  22:40:52,214 - #36 [
INFO  22:40:52,214 - #43 3
INFO  22:40:52,214 - #37 ]
INFO  22:40:52,214 - #31 ;
INFO  22:40:52,214 - #44 i
INFO  22:40:52,214 - #28 =
INFO  22:40:52,214 - #43 0
INFO  22:40:52,214 - #31 ;
INFO  22:40:52,215 - #10 read
INFO  22:40:52,215 - #34 (
INFO  22:40:52,215 - #44 c
INFO  22:40:52,215 - #33 .
INFO  22:40:52,215 - #44 i
INFO  22:40:52,215 - #35 )
INFO  22:40:52,215 - #31 ;
INFO  22:40:52,215 - #13 while
INFO  22:40:52,216 - #34 (
INFO  22:40:52,216 - #44 i
INFO  22:40:52,216 - #24 <
INFO  22:40:52,216 - #43 5
INFO  22:40:52,216 - #35 )
INFO  22:40:52,216 - #38 {
INFO  22:40:52,216 - #10 read
INFO  22:40:52,217 - #34 (
INFO  22:40:52,217 - #44 c
INFO  22:40:52,217 - #33 .
INFO  22:40:52,217 - #44 x
INFO  22:40:52,217 - #36 [
INFO  22:40:52,217 - #44 i
INFO  22:40:52,217 - #37 ]
INFO  22:40:52,217 - #35 )
INFO  22:40:52,217 - #31 ;
INFO  22:40:52,217 - #10 read
INFO  22:40:52,218 - #34 (
INFO  22:40:52,218 - #44 c
INFO  22:40:52,218 - #33 .
INFO  22:40:52,218 - #44 theA
INFO  22:40:52,218 - #33 .
INFO  22:40:52,218 - #44 x
INFO  22:40:52,218 - #36 [
INFO  22:40:52,218 - #44 i
INFO  22:40:52,219 - #37 ]
INFO  22:40:52,219 - #35 )
INFO  22:40:52,219 - #31 ;
INFO  22:40:52,219 - #44 i
INFO  22:40:52,219 - #29 ++
INFO  22:40:52,219 - #31 ;
INFO  22:40:52,219 - #39 }
INFO  22:40:52,219 - #9 print
INFO  22:40:52,219 - #34 (
INFO  22:40:52,219 - #44 c
INFO  22:40:52,219 - #33 .
INFO  22:40:52,219 - #44 getValue
INFO  22:40:52,220 - #34 (
INFO  22:40:52,220 - #44 c
INFO  22:40:52,220 - #33 .
INFO  22:40:52,220 - #44 theA
INFO  22:40:52,220 - #33 .
INFO  22:40:52,220 - #44 x
INFO  22:40:52,220 - #36 [
INFO  22:40:52,220 - #43 0
INFO  22:40:52,220 - #37 ]
INFO  22:40:52,220 - #35 )
INFO  22:40:52,220 - #35 )
INFO  22:40:52,220 - #31 ;
INFO  22:40:52,220 - #39 }
INFO  22:40:52,221 - #12 void
INFO  22:40:52,221 - #44 aaa
INFO  22:40:52,221 - #34 (
INFO  22:40:52,221 - #35 )
INFO  22:40:52,221 - #44 A
INFO  22:40:52,221 - #44 a
INFO  22:40:52,221 - #31 ;
INFO  22:40:52,221 - #44 C
INFO  22:40:52,221 - #44 c
INFO  22:40:52,221 - #31 ;
INFO  22:40:52,221 - #44 int
INFO  22:40:52,221 - #44 i
INFO  22:40:52,222 - #31 ;
INFO  22:40:52,222 - #44 int
INFO  22:40:52,222 - #44 x
INFO  22:40:52,222 - #36 [
INFO  22:40:52,222 - #37 ]
INFO  22:40:52,222 - #31 ;
INFO  22:40:52,223 - #38 {
INFO  22:40:52,223 - #39 }
INFO  22:40:52,223 - #12 void
INFO  22:40:52,223 - #44 bbb
INFO  22:40:52,223 - #34 (
INFO  22:40:52,223 - #35 )
INFO  22:40:52,223 - #44 A
INFO  22:40:52,223 - #44 a
INFO  22:40:52,223 - #31 ;
INFO  22:40:52,223 - #44 C
INFO  22:40:52,223 - #44 c
INFO  22:40:52,223 - #31 ;
INFO  22:40:52,223 - #44 int
INFO  22:40:52,224 - #44 i
INFO  22:40:52,224 - #31 ;
INFO  22:40:52,224 - #44 int
INFO  22:40:52,224 - #44 x
INFO  22:40:52,224 - #36 [
INFO  22:40:52,224 - #37 ]
INFO  22:40:52,224 - #31 ;
INFO  22:40:52,224 - #38 {
INFO  22:40:52,224 - #39 }
INFO  22:40:52,224 - #12 void
INFO  22:40:52,224 - #44 ccc
INFO  22:40:52,224 - #34 (
INFO  22:40:52,224 - #35 )
INFO  22:40:52,224 - #44 A
INFO  22:40:52,224 - #44 a
INFO  22:40:52,225 - #31 ;
INFO  22:40:52,225 - #44 C
INFO  22:40:52,225 - #44 c
INFO  22:40:52,225 - #31 ;
INFO  22:40:52,225 - #44 int
INFO  22:40:52,225 - #44 i
INFO  22:40:52,225 - #31 ;
INFO  22:40:52,225 - #44 int
INFO  22:40:52,225 - #44 x
INFO  22:40:52,226 - #36 [
INFO  22:40:52,226 - #37 ]
INFO  22:40:52,226 - #31 ;
INFO  22:40:52,226 - #38 {
INFO  22:40:52,226 - #39 }
INFO  22:40:52,226 - #39 }
INFO  22:40:52,226 - GlobalVar = 4
INFO  22:40:52,226 - GlobalConst = 2
INFO  22:40:52,226 - LocalMainVar = 4
INFO  22:40:52,226 - GlobalArray = 0
INFO  22:40:52,226 - FuncProg = 5
INFO  22:40:52,226 - Blocks = 6
INFO  22:40:52,226 - FuncCalls = 5
INFO  22:40:52,226 - FormalArg = 2
INFO  22:40:52,226 - DefClass = 3
INFO  22:40:52,227 - DefMethodClass = 1
INFO  22:42:08,580 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:42:08,588 - #2 program
INFO  22:42:08,588 - #44 Program
INFO  22:42:08,588 - #4 class
INFO  22:42:08,588 - #44 A
INFO  22:42:08,588 - #38 {
INFO  22:42:08,589 - #44 int
INFO  22:42:08,589 - #44 x
INFO  22:42:08,589 - #36 [
INFO  22:42:08,589 - #37 ]
INFO  22:42:08,589 - #32 ,
INFO  22:42:08,589 - #44 y
INFO  22:42:08,589 - #36 [
INFO  22:42:08,589 - #37 ]
INFO  22:42:08,589 - #31 ;
INFO  22:42:08,589 - #39 }
INFO  22:42:08,589 - #6 const
INFO  22:42:08,590 - #44 int
INFO  22:42:08,590 - #44 pi
INFO  22:42:08,590 - #28 =
INFO  22:42:08,590 - #43 3
INFO  22:42:08,590 - #32 ,
INFO  22:42:08,590 - #44 e
INFO  22:42:08,590 - #28 =
INFO  22:42:08,590 - #43 2
INFO  22:42:08,590 - #31 ;
INFO  22:42:08,590 - #4 class
INFO  22:42:08,590 - #44 B
INFO  22:42:08,590 - #14 extends
INFO  22:42:08,590 - #44 A
INFO  22:42:08,591 - #38 {
INFO  22:42:08,591 - #44 int
INFO  22:42:08,591 - #44 i
INFO  22:42:08,591 - #31 ;
INFO  22:42:08,591 - #44 int
INFO  22:42:08,591 - #44 x
INFO  22:42:08,591 - #36 [
INFO  22:42:08,591 - #37 ]
INFO  22:42:08,591 - #31 ;
INFO  22:42:08,591 - #38 {
INFO  22:42:08,591 - #44 int
INFO  22:42:08,591 - #44 getValue
INFO  22:42:08,591 - #34 (
INFO  22:42:08,591 - #44 int
INFO  22:42:08,592 - #44 a
INFO  22:42:08,592 - #35 )
INFO  22:42:08,592 - #44 int
INFO  22:42:08,592 - #44 b
INFO  22:42:08,592 - #31 ;
INFO  22:42:08,592 - #44 bool
INFO  22:42:08,592 - #44 c
INFO  22:42:08,592 - #31 ;
INFO  22:42:08,592 - #38 {
INFO  22:42:08,592 - #11 return
INFO  22:42:08,593 - #44 this
INFO  22:42:08,593 - #33 .
INFO  22:42:08,593 - #44 i
INFO  22:42:08,593 - #15 +
INFO  22:42:08,593 - #44 this
INFO  22:42:08,593 - #33 .
INFO  22:42:08,593 - #44 x
INFO  22:42:08,593 - #36 [
INFO  22:42:08,593 - #43 0
INFO  22:42:08,593 - #37 ]
INFO  22:42:08,594 - #15 +
INFO  22:42:08,594 - #44 a
INFO  22:42:08,594 - #31 ;
INFO  22:42:08,594 - #39 }
INFO  22:42:08,594 - #39 }
INFO  22:42:08,594 - #39 }
INFO  22:42:08,594 - #4 class
INFO  22:42:08,594 - #44 C
INFO  22:42:08,594 - #14 extends
INFO  22:42:08,594 - #44 B
INFO  22:42:08,595 - #38 {
INFO  22:42:08,595 - #44 A
INFO  22:42:08,595 - #44 theA
INFO  22:42:08,595 - #31 ;
INFO  22:42:08,595 - #44 string
INFO  22:42:08,595 - #44 a
INFO  22:42:08,595 - #31 ;
INFO  22:42:08,595 - #38 {
INFO  22:42:08,595 - #44 int
INFO  22:42:08,595 - #44 dfdfd
INFO  22:42:08,595 - #34 (
INFO  22:42:08,596 - #44 int
INFO  22:42:08,596 - #44 a
INFO  22:42:08,596 - #35 )
INFO  22:42:08,596 - #38 {
INFO  22:42:08,596 - #39 }
INFO  22:42:08,596 - #39 }
INFO  22:42:08,596 - #39 }
INFO  22:42:08,596 - #38 {
INFO  22:42:08,597 - #12 void
INFO  22:42:08,597 - #44 main
INFO  22:42:08,597 - #34 (
INFO  22:42:08,597 - #35 )
INFO  22:42:08,597 - #44 A
INFO  22:42:08,597 - #44 a
INFO  22:42:08,597 - #31 ;
INFO  22:42:08,597 - #44 C
INFO  22:42:08,597 - #44 c
INFO  22:42:08,598 - #31 ;
INFO  22:42:08,598 - #44 int
INFO  22:42:08,598 - #44 i
INFO  22:42:08,598 - #31 ;
INFO  22:42:08,598 - #44 int
INFO  22:42:08,598 - #44 x
INFO  22:42:08,598 - #36 [
INFO  22:42:08,598 - #37 ]
INFO  22:42:08,598 - #31 ;
INFO  22:42:08,598 - #38 {
INFO  22:42:08,599 - #44 a
INFO  22:42:08,599 - #28 =
INFO  22:42:08,599 - #8 new
INFO  22:42:08,599 - #44 A
INFO  22:42:08,599 - #31 ;
INFO  22:42:08,599 - #44 a
INFO  22:42:08,599 - #33 .
INFO  22:42:08,599 - #44 x
INFO  22:42:08,599 - #28 =
INFO  22:42:08,599 - #8 new
INFO  22:42:08,599 - #44 int
INFO  22:42:08,599 - #36 [
INFO  22:42:08,600 - #43 5
INFO  22:42:08,600 - #37 ]
INFO  22:42:08,600 - #31 ;
INFO  22:42:08,600 - #44 a
INFO  22:42:08,600 - #33 .
INFO  22:42:08,601 - #44 y
INFO  22:42:08,601 - #28 =
INFO  22:42:08,601 - #8 new
INFO  22:42:08,601 - #44 int
INFO  22:42:08,601 - #36 [
INFO  22:42:08,601 - #43 5
INFO  22:42:08,601 - #37 ]
INFO  22:42:08,601 - #31 ;
INFO  22:42:08,601 - #44 c
INFO  22:42:08,601 - #28 =
INFO  22:42:08,601 - #8 new
INFO  22:42:08,601 - #44 C
INFO  22:42:08,601 - #31 ;
INFO  22:42:08,602 - #44 c
INFO  22:42:08,602 - #33 .
INFO  22:42:08,602 - #44 theA
INFO  22:42:08,602 - #28 =
INFO  22:42:08,602 - #44 a
INFO  22:42:08,602 - #31 ;
INFO  22:42:08,602 - #44 c
INFO  22:42:08,602 - #33 .
INFO  22:42:08,602 - #44 x
INFO  22:42:08,602 - #28 =
INFO  22:42:08,602 - #8 new
INFO  22:42:08,602 - #44 int
INFO  22:42:08,602 - #36 [
INFO  22:42:08,602 - #43 5
INFO  22:42:08,603 - #37 ]
INFO  22:42:08,603 - #31 ;
INFO  22:42:08,603 - #44 x
INFO  22:42:08,603 - #28 =
INFO  22:42:08,603 - #8 new
INFO  22:42:08,603 - #44 int
INFO  22:42:08,603 - #36 [
INFO  22:42:08,603 - #43 3
INFO  22:42:08,603 - #37 ]
INFO  22:42:08,603 - #31 ;
INFO  22:42:08,603 - #44 i
INFO  22:42:08,604 - #28 =
INFO  22:42:08,604 - #43 0
INFO  22:42:08,604 - #31 ;
INFO  22:42:08,604 - #10 read
INFO  22:42:08,604 - #34 (
INFO  22:42:08,604 - #44 c
INFO  22:42:08,604 - #33 .
INFO  22:42:08,604 - #44 i
INFO  22:42:08,604 - #35 )
INFO  22:42:08,604 - #31 ;
INFO  22:42:08,604 - #13 while
INFO  22:42:08,605 - #34 (
INFO  22:42:08,605 - #44 i
INFO  22:42:08,605 - #24 <
INFO  22:42:08,605 - #43 5
INFO  22:42:08,605 - #35 )
INFO  22:42:08,605 - #38 {
INFO  22:42:08,605 - #10 read
INFO  22:42:08,605 - #34 (
INFO  22:42:08,605 - #44 c
INFO  22:42:08,605 - #33 .
INFO  22:42:08,606 - #44 x
INFO  22:42:08,606 - #36 [
INFO  22:42:08,606 - #44 i
INFO  22:42:08,606 - #37 ]
INFO  22:42:08,606 - #35 )
INFO  22:42:08,606 - #31 ;
INFO  22:42:08,606 - #10 read
INFO  22:42:08,606 - #34 (
INFO  22:42:08,606 - #44 c
INFO  22:42:08,606 - #33 .
INFO  22:42:08,606 - #44 theA
INFO  22:42:08,606 - #33 .
INFO  22:42:08,606 - #44 x
INFO  22:42:08,606 - #36 [
INFO  22:42:08,607 - #44 i
INFO  22:42:08,607 - #37 ]
INFO  22:42:08,607 - #35 )
INFO  22:42:08,607 - #31 ;
INFO  22:42:08,607 - #44 i
INFO  22:42:08,607 - #29 ++
INFO  22:42:08,607 - #31 ;
INFO  22:42:08,607 - #39 }
INFO  22:42:08,607 - #9 print
INFO  22:42:08,607 - #34 (
INFO  22:42:08,607 - #44 c
INFO  22:42:08,607 - #33 .
INFO  22:42:08,607 - #44 getValue
INFO  22:42:08,608 - #34 (
INFO  22:42:08,608 - #44 c
INFO  22:42:08,608 - #33 .
INFO  22:42:08,608 - #44 theA
INFO  22:42:08,608 - #33 .
INFO  22:42:08,608 - #44 x
INFO  22:42:08,608 - #36 [
INFO  22:42:08,608 - #43 0
INFO  22:42:08,608 - #37 ]
INFO  22:42:08,608 - #35 )
INFO  22:42:08,608 - #35 )
INFO  22:42:08,608 - #31 ;
INFO  22:42:08,608 - #39 }
INFO  22:42:08,609 - #12 void
INFO  22:42:08,609 - #44 aaa
INFO  22:42:08,609 - #34 (
INFO  22:42:08,609 - #35 )
INFO  22:42:08,609 - #44 A
INFO  22:42:08,609 - #44 a
INFO  22:42:08,609 - #31 ;
INFO  22:42:08,609 - #44 C
INFO  22:42:08,609 - #44 c
INFO  22:42:08,609 - #31 ;
INFO  22:42:08,609 - #44 int
INFO  22:42:08,609 - #44 i
INFO  22:42:08,609 - #31 ;
INFO  22:42:08,609 - #44 int
INFO  22:42:08,610 - #44 x
INFO  22:42:08,610 - #36 [
INFO  22:42:08,610 - #37 ]
INFO  22:42:08,610 - #31 ;
INFO  22:42:08,610 - #38 {
INFO  22:42:08,610 - #39 }
INFO  22:42:08,610 - #12 void
INFO  22:42:08,610 - #44 bbb
INFO  22:42:08,610 - #34 (
INFO  22:42:08,610 - #35 )
INFO  22:42:08,610 - #44 A
INFO  22:42:08,610 - #44 a
INFO  22:42:08,611 - #31 ;
INFO  22:42:08,611 - #44 C
INFO  22:42:08,611 - #44 c
INFO  22:42:08,611 - #31 ;
INFO  22:42:08,611 - #44 int
INFO  22:42:08,611 - #44 i
INFO  22:42:08,611 - #31 ;
INFO  22:42:08,611 - #44 int
INFO  22:42:08,612 - #44 x
INFO  22:42:08,612 - #36 [
INFO  22:42:08,612 - #37 ]
INFO  22:42:08,612 - #31 ;
INFO  22:42:08,612 - #38 {
INFO  22:42:08,612 - #39 }
INFO  22:42:08,612 - #12 void
INFO  22:42:08,612 - #44 ccc
INFO  22:42:08,613 - #34 (
INFO  22:42:08,613 - #35 )
INFO  22:42:08,613 - #44 A
INFO  22:42:08,613 - #44 a
INFO  22:42:08,613 - #31 ;
INFO  22:42:08,613 - #44 C
INFO  22:42:08,613 - #44 c
INFO  22:42:08,613 - #31 ;
INFO  22:42:08,613 - #44 int
INFO  22:42:08,613 - #44 i
INFO  22:42:08,614 - #31 ;
INFO  22:42:08,614 - #44 int
INFO  22:42:08,614 - #44 x
INFO  22:42:08,614 - #36 [
INFO  22:42:08,614 - #37 ]
INFO  22:42:08,614 - #31 ;
INFO  22:42:08,614 - #38 {
INFO  22:42:08,614 - #39 }
INFO  22:42:08,614 - #39 }
INFO  22:42:08,614 - GlobalVar = 2
INFO  22:42:08,614 - GlobalConst = 2
INFO  22:42:08,614 - LocalMainVar = 4
INFO  22:42:08,615 - GlobalArray = 0
INFO  22:42:08,615 - FuncProg = 5
INFO  22:42:08,615 - Blocks = 6
INFO  22:42:08,615 - FuncCalls = 5
INFO  22:42:08,615 - FormalArg = 2
INFO  22:42:08,615 - DefClass = 3
INFO  22:42:08,615 - DefMethodClass = 1
INFO  22:42:10,516 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:42:10,524 - #2 program
INFO  22:42:10,524 - #44 Program
INFO  22:42:10,524 - #4 class
INFO  22:42:10,524 - #44 A
INFO  22:42:10,524 - #38 {
INFO  22:42:10,525 - #44 int
INFO  22:42:10,525 - #44 x
INFO  22:42:10,525 - #36 [
INFO  22:42:10,525 - #37 ]
INFO  22:42:10,525 - #32 ,
INFO  22:42:10,525 - #44 y
INFO  22:42:10,525 - #36 [
INFO  22:42:10,525 - #37 ]
INFO  22:42:10,525 - #31 ;
INFO  22:42:10,525 - #39 }
INFO  22:42:10,526 - #6 const
INFO  22:42:10,526 - #44 int
INFO  22:42:10,526 - #44 pi
INFO  22:42:10,526 - #28 =
INFO  22:42:10,526 - #43 3
INFO  22:42:10,526 - #32 ,
INFO  22:42:10,526 - #44 e
INFO  22:42:10,526 - #28 =
INFO  22:42:10,526 - #43 2
INFO  22:42:10,526 - #31 ;
INFO  22:42:10,526 - #4 class
INFO  22:42:10,526 - #44 B
INFO  22:42:10,526 - #14 extends
INFO  22:42:10,527 - #44 A
INFO  22:42:10,527 - #38 {
INFO  22:42:10,527 - #44 int
INFO  22:42:10,527 - #44 i
INFO  22:42:10,527 - #31 ;
INFO  22:42:10,527 - #44 int
INFO  22:42:10,527 - #44 x
INFO  22:42:10,527 - #36 [
INFO  22:42:10,527 - #37 ]
INFO  22:42:10,527 - #31 ;
INFO  22:42:10,527 - #38 {
INFO  22:42:10,527 - #44 int
INFO  22:42:10,527 - #44 getValue
INFO  22:42:10,527 - #34 (
INFO  22:42:10,528 - #44 int
INFO  22:42:10,528 - #44 a
INFO  22:42:10,528 - #35 )
INFO  22:42:10,528 - #44 int
INFO  22:42:10,528 - #44 b
INFO  22:42:10,528 - #31 ;
INFO  22:42:10,528 - #44 bool
INFO  22:42:10,528 - #44 c
INFO  22:42:10,528 - #31 ;
INFO  22:42:10,528 - #38 {
INFO  22:42:10,528 - #11 return
INFO  22:42:10,528 - #44 this
INFO  22:42:10,528 - #33 .
INFO  22:42:10,529 - #44 i
INFO  22:42:10,529 - #15 +
INFO  22:42:10,529 - #44 this
INFO  22:42:10,529 - #33 .
INFO  22:42:10,529 - #44 x
INFO  22:42:10,529 - #36 [
INFO  22:42:10,529 - #43 0
INFO  22:42:10,529 - #37 ]
INFO  22:42:10,529 - #15 +
INFO  22:42:10,529 - #44 a
INFO  22:42:10,529 - #31 ;
INFO  22:42:10,529 - #39 }
INFO  22:42:10,530 - #39 }
INFO  22:42:10,530 - #39 }
INFO  22:42:10,530 - #4 class
INFO  22:42:10,530 - #44 C
INFO  22:42:10,530 - #14 extends
INFO  22:42:10,530 - #44 B
INFO  22:42:10,530 - #38 {
INFO  22:42:10,530 - #44 A
INFO  22:42:10,530 - #44 theA
INFO  22:42:10,531 - #31 ;
INFO  22:42:10,531 - #44 string
INFO  22:42:10,531 - #44 a
INFO  22:42:10,531 - #31 ;
INFO  22:42:10,531 - #38 {
INFO  22:42:10,531 - #44 int
INFO  22:42:10,531 - #44 dfdfd
INFO  22:42:10,531 - #34 (
INFO  22:42:10,531 - #44 int
INFO  22:42:10,531 - #44 a
INFO  22:42:10,531 - #35 )
INFO  22:42:10,532 - #38 {
INFO  22:42:10,532 - #39 }
INFO  22:42:10,532 - #39 }
INFO  22:42:10,532 - #39 }
INFO  22:42:10,532 - #38 {
INFO  22:42:10,532 - #12 void
INFO  22:42:10,532 - #44 main
INFO  22:42:10,532 - #34 (
INFO  22:42:10,532 - #35 )
INFO  22:42:10,532 - #44 A
INFO  22:42:10,533 - #44 a
INFO  22:42:10,533 - #31 ;
INFO  22:42:10,533 - #44 C
INFO  22:42:10,533 - #44 c
INFO  22:42:10,533 - #31 ;
INFO  22:42:10,533 - #44 int
INFO  22:42:10,533 - #44 i
INFO  22:42:10,533 - #31 ;
INFO  22:42:10,533 - #44 int
INFO  22:42:10,533 - #44 x
INFO  22:42:10,533 - #36 [
INFO  22:42:10,534 - #37 ]
INFO  22:42:10,534 - #31 ;
INFO  22:42:10,534 - #38 {
INFO  22:42:10,534 - #44 a
INFO  22:42:10,534 - #28 =
INFO  22:42:10,534 - #8 new
INFO  22:42:10,534 - #44 A
INFO  22:42:10,534 - #31 ;
INFO  22:42:10,534 - #44 a
INFO  22:42:10,534 - #33 .
INFO  22:42:10,534 - #44 x
INFO  22:42:10,534 - #28 =
INFO  22:42:10,534 - #8 new
INFO  22:42:10,536 - #44 int
INFO  22:42:10,536 - #36 [
INFO  22:42:10,536 - #43 5
INFO  22:42:10,536 - #37 ]
INFO  22:42:10,536 - #31 ;
INFO  22:42:10,536 - #44 a
INFO  22:42:10,536 - #33 .
INFO  22:42:10,536 - #44 y
INFO  22:42:10,536 - #28 =
INFO  22:42:10,536 - #8 new
INFO  22:42:10,537 - #44 int
INFO  22:42:10,537 - #36 [
INFO  22:42:10,537 - #43 5
INFO  22:42:10,537 - #37 ]
INFO  22:42:10,537 - #31 ;
INFO  22:42:10,537 - #44 c
INFO  22:42:10,537 - #28 =
INFO  22:42:10,537 - #8 new
INFO  22:42:10,537 - #44 C
INFO  22:42:10,537 - #31 ;
INFO  22:42:10,538 - #44 c
INFO  22:42:10,538 - #33 .
INFO  22:42:10,538 - #44 theA
INFO  22:42:10,538 - #28 =
INFO  22:42:10,538 - #44 a
INFO  22:42:10,538 - #31 ;
INFO  22:42:10,538 - #44 c
INFO  22:42:10,538 - #33 .
INFO  22:42:10,538 - #44 x
INFO  22:42:10,538 - #28 =
INFO  22:42:10,538 - #8 new
INFO  22:42:10,538 - #44 int
INFO  22:42:10,539 - #36 [
INFO  22:42:10,539 - #43 5
INFO  22:42:10,539 - #37 ]
INFO  22:42:10,539 - #31 ;
INFO  22:42:10,539 - #44 x
INFO  22:42:10,539 - #28 =
INFO  22:42:10,539 - #8 new
INFO  22:42:10,539 - #44 int
INFO  22:42:10,539 - #36 [
INFO  22:42:10,540 - #43 3
INFO  22:42:10,540 - #37 ]
INFO  22:42:10,540 - #31 ;
INFO  22:42:10,540 - #44 i
INFO  22:42:10,540 - #28 =
INFO  22:42:10,540 - #43 0
INFO  22:42:10,540 - #31 ;
INFO  22:42:10,540 - #10 read
INFO  22:42:10,540 - #34 (
INFO  22:42:10,540 - #44 c
INFO  22:42:10,541 - #33 .
INFO  22:42:10,541 - #44 i
INFO  22:42:10,541 - #35 )
INFO  22:42:10,541 - #31 ;
INFO  22:42:10,541 - #13 while
INFO  22:42:10,541 - #34 (
INFO  22:42:10,541 - #44 i
INFO  22:42:10,541 - #24 <
INFO  22:42:10,542 - #43 5
INFO  22:42:10,542 - #35 )
INFO  22:42:10,542 - #38 {
INFO  22:42:10,542 - #10 read
INFO  22:42:10,542 - #34 (
INFO  22:42:10,542 - #44 c
INFO  22:42:10,542 - #33 .
INFO  22:42:10,542 - #44 x
INFO  22:42:10,542 - #36 [
INFO  22:42:10,542 - #44 i
INFO  22:42:10,543 - #37 ]
INFO  22:42:10,543 - #35 )
INFO  22:42:10,543 - #31 ;
INFO  22:42:10,543 - #10 read
INFO  22:42:10,543 - #34 (
INFO  22:42:10,543 - #44 c
INFO  22:42:10,543 - #33 .
INFO  22:42:10,543 - #44 theA
INFO  22:42:10,543 - #33 .
INFO  22:42:10,543 - #44 x
INFO  22:42:10,543 - #36 [
INFO  22:42:10,544 - #44 i
INFO  22:42:10,544 - #37 ]
INFO  22:42:10,544 - #35 )
INFO  22:42:10,544 - #31 ;
INFO  22:42:10,544 - #44 i
INFO  22:42:10,544 - #29 ++
INFO  22:42:10,544 - #31 ;
INFO  22:42:10,544 - #39 }
INFO  22:42:10,544 - #9 print
INFO  22:42:10,544 - #34 (
INFO  22:42:10,545 - #44 c
INFO  22:42:10,545 - #33 .
INFO  22:42:10,545 - #44 getValue
INFO  22:42:10,545 - #34 (
INFO  22:42:10,545 - #44 c
INFO  22:42:10,545 - #33 .
INFO  22:42:10,545 - #44 theA
INFO  22:42:10,545 - #33 .
INFO  22:42:10,545 - #44 x
INFO  22:42:10,545 - #36 [
INFO  22:42:10,545 - #43 0
INFO  22:42:10,546 - #37 ]
INFO  22:42:10,546 - #35 )
INFO  22:42:10,546 - #35 )
INFO  22:42:10,546 - #31 ;
INFO  22:42:10,546 - #39 }
INFO  22:42:10,546 - #12 void
INFO  22:42:10,546 - #44 aaa
INFO  22:42:10,546 - #34 (
INFO  22:42:10,546 - #35 )
INFO  22:42:10,546 - #44 A
INFO  22:42:10,547 - #44 a
INFO  22:42:10,547 - #31 ;
INFO  22:42:10,547 - #44 C
INFO  22:42:10,547 - #44 c
INFO  22:42:10,547 - #31 ;
INFO  22:42:10,547 - #44 int
INFO  22:42:10,547 - #44 i
INFO  22:42:10,547 - #31 ;
INFO  22:42:10,547 - #44 int
INFO  22:42:10,547 - #44 x
INFO  22:42:10,547 - #36 [
INFO  22:42:10,548 - #37 ]
INFO  22:42:10,548 - #31 ;
INFO  22:42:10,548 - #38 {
INFO  22:42:10,548 - #39 }
INFO  22:42:10,548 - #12 void
INFO  22:42:10,548 - #44 bbb
INFO  22:42:10,548 - #34 (
INFO  22:42:10,548 - #35 )
INFO  22:42:10,548 - #44 A
INFO  22:42:10,548 - #44 a
INFO  22:42:10,548 - #31 ;
INFO  22:42:10,549 - #44 C
INFO  22:42:10,549 - #44 c
INFO  22:42:10,549 - #31 ;
INFO  22:42:10,549 - #44 int
INFO  22:42:10,549 - #44 i
INFO  22:42:10,549 - #31 ;
INFO  22:42:10,549 - #44 int
INFO  22:42:10,549 - #44 x
INFO  22:42:10,549 - #36 [
INFO  22:42:10,549 - #37 ]
INFO  22:42:10,549 - #31 ;
INFO  22:42:10,549 - #38 {
INFO  22:42:10,549 - #39 }
INFO  22:42:10,550 - #12 void
INFO  22:42:10,550 - #44 ccc
INFO  22:42:10,550 - #34 (
INFO  22:42:10,550 - #35 )
INFO  22:42:10,550 - #44 A
INFO  22:42:10,550 - #44 a
INFO  22:42:10,550 - #31 ;
INFO  22:42:10,550 - #44 C
INFO  22:42:10,550 - #44 c
INFO  22:42:10,550 - #31 ;
INFO  22:42:10,550 - #44 int
INFO  22:42:10,550 - #44 i
INFO  22:42:10,550 - #31 ;
INFO  22:42:10,550 - #44 int
INFO  22:42:10,551 - #44 x
INFO  22:42:10,551 - #36 [
INFO  22:42:10,551 - #37 ]
INFO  22:42:10,551 - #31 ;
INFO  22:42:10,551 - #38 {
INFO  22:42:10,551 - #39 }
INFO  22:42:10,551 - #39 }
INFO  22:42:10,551 - GlobalVar = 2
INFO  22:42:10,551 - GlobalConst = 2
INFO  22:42:10,551 - LocalMainVar = 4
INFO  22:42:10,551 - GlobalArray = 0
INFO  22:42:10,551 - FuncProg = 5
INFO  22:42:10,552 - Blocks = 6
INFO  22:42:10,552 - FuncCalls = 5
INFO  22:42:10,552 - FormalArg = 2
INFO  22:42:10,552 - DefClass = 3
INFO  22:42:10,552 - DefMethodClass = 1
INFO  22:42:27,950 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:42:27,958 - #2 program
INFO  22:42:27,959 - #44 Program
INFO  22:42:27,959 - #4 class
INFO  22:42:27,959 - #44 A
INFO  22:42:27,959 - #38 {
INFO  22:42:27,959 - #44 int
INFO  22:42:27,959 - #44 x
INFO  22:42:27,959 - #36 [
INFO  22:42:27,959 - #37 ]
INFO  22:42:27,959 - #32 ,
INFO  22:42:27,959 - #44 y
INFO  22:42:27,959 - #36 [
INFO  22:42:27,959 - #37 ]
INFO  22:42:27,960 - #31 ;
INFO  22:42:27,960 - #38 {
INFO  22:42:27,960 - #44 int
INFO  22:42:27,960 - #44 dfdfd
INFO  22:42:27,960 - #34 (
INFO  22:42:27,960 - #44 int
INFO  22:42:27,960 - #44 a
INFO  22:42:27,960 - #35 )
INFO  22:42:27,960 - #38 {
INFO  22:42:27,960 - #39 }
INFO  22:42:27,960 - #39 }
INFO  22:42:27,960 - #39 }
INFO  22:42:27,961 - #6 const
INFO  22:42:27,961 - #44 int
INFO  22:42:27,961 - #44 pi
INFO  22:42:27,961 - #28 =
INFO  22:42:27,961 - #43 3
INFO  22:42:27,961 - #32 ,
INFO  22:42:27,961 - #44 e
INFO  22:42:27,961 - #28 =
INFO  22:42:27,961 - #43 2
INFO  22:42:27,961 - #31 ;
INFO  22:42:27,961 - #4 class
INFO  22:42:27,961 - #44 B
INFO  22:42:27,961 - #14 extends
INFO  22:42:27,962 - #44 A
INFO  22:42:27,962 - #38 {
INFO  22:42:27,962 - #44 int
INFO  22:42:27,962 - #44 i
INFO  22:42:27,962 - #31 ;
INFO  22:42:27,962 - #44 int
INFO  22:42:27,962 - #44 x
INFO  22:42:27,962 - #36 [
INFO  22:42:27,962 - #37 ]
INFO  22:42:27,962 - #31 ;
INFO  22:42:27,962 - #38 {
INFO  22:42:27,962 - #44 int
INFO  22:42:27,962 - #44 getValue
INFO  22:42:27,962 - #34 (
INFO  22:42:27,963 - #44 int
INFO  22:42:27,963 - #44 a
INFO  22:42:27,963 - #35 )
INFO  22:42:27,963 - #44 int
INFO  22:42:27,963 - #44 b
INFO  22:42:27,963 - #31 ;
INFO  22:42:27,963 - #44 bool
INFO  22:42:27,963 - #44 c
INFO  22:42:27,963 - #31 ;
INFO  22:42:27,963 - #38 {
INFO  22:42:27,963 - #11 return
INFO  22:42:27,963 - #44 this
INFO  22:42:27,964 - #33 .
INFO  22:42:27,964 - #44 i
INFO  22:42:27,964 - #15 +
INFO  22:42:27,964 - #44 this
INFO  22:42:27,964 - #33 .
INFO  22:42:27,964 - #44 x
INFO  22:42:27,964 - #36 [
INFO  22:42:27,964 - #43 0
INFO  22:42:27,964 - #37 ]
INFO  22:42:27,964 - #15 +
INFO  22:42:27,965 - #44 a
INFO  22:42:27,965 - #31 ;
INFO  22:42:27,965 - #39 }
INFO  22:42:27,965 - #39 }
INFO  22:42:27,965 - #39 }
INFO  22:42:27,965 - #4 class
INFO  22:42:27,965 - #44 C
INFO  22:42:27,965 - #14 extends
INFO  22:42:27,966 - #44 B
INFO  22:42:27,966 - #38 {
INFO  22:42:27,966 - #44 A
INFO  22:42:27,966 - #44 theA
INFO  22:42:27,966 - #31 ;
INFO  22:42:27,966 - #44 string
INFO  22:42:27,966 - #44 a
INFO  22:42:27,966 - #31 ;
INFO  22:42:27,966 - #39 }
INFO  22:42:27,967 - #38 {
INFO  22:42:27,967 - #12 void
INFO  22:42:27,967 - #44 main
INFO  22:42:27,967 - #34 (
INFO  22:42:27,967 - #35 )
INFO  22:42:27,967 - #44 A
INFO  22:42:27,967 - #44 a
INFO  22:42:27,967 - #31 ;
INFO  22:42:27,968 - #44 C
INFO  22:42:27,968 - #44 c
INFO  22:42:27,968 - #31 ;
INFO  22:42:27,968 - #44 int
INFO  22:42:27,968 - #44 i
INFO  22:42:27,968 - #31 ;
INFO  22:42:27,968 - #44 int
INFO  22:42:27,968 - #44 x
INFO  22:42:27,968 - #36 [
INFO  22:42:27,968 - #37 ]
INFO  22:42:27,968 - #31 ;
INFO  22:42:27,969 - #38 {
INFO  22:42:27,969 - #44 a
INFO  22:42:27,969 - #28 =
INFO  22:42:27,969 - #8 new
INFO  22:42:27,969 - #44 A
INFO  22:42:27,969 - #31 ;
INFO  22:42:27,969 - #44 a
INFO  22:42:27,969 - #33 .
INFO  22:42:27,969 - #44 x
INFO  22:42:27,969 - #28 =
INFO  22:42:27,969 - #8 new
INFO  22:42:27,969 - #44 int
INFO  22:42:27,970 - #36 [
INFO  22:42:27,970 - #43 5
INFO  22:42:27,970 - #37 ]
INFO  22:42:27,970 - #31 ;
INFO  22:42:27,970 - #44 a
INFO  22:42:27,970 - #33 .
INFO  22:42:27,970 - #44 y
INFO  22:42:27,970 - #28 =
INFO  22:42:27,970 - #8 new
INFO  22:42:27,970 - #44 int
INFO  22:42:27,971 - #36 [
INFO  22:42:27,971 - #43 5
INFO  22:42:27,971 - #37 ]
INFO  22:42:27,971 - #31 ;
INFO  22:42:27,971 - #44 c
INFO  22:42:27,971 - #28 =
INFO  22:42:27,971 - #8 new
INFO  22:42:27,971 - #44 C
INFO  22:42:27,972 - #31 ;
INFO  22:42:27,972 - #44 c
INFO  22:42:27,972 - #33 .
INFO  22:42:27,972 - #44 theA
INFO  22:42:27,972 - #28 =
INFO  22:42:27,972 - #44 a
INFO  22:42:27,972 - #31 ;
INFO  22:42:27,972 - #44 c
INFO  22:42:27,972 - #33 .
INFO  22:42:27,972 - #44 x
INFO  22:42:27,973 - #28 =
INFO  22:42:27,973 - #8 new
INFO  22:42:27,973 - #44 int
INFO  22:42:27,973 - #36 [
INFO  22:42:27,973 - #43 5
INFO  22:42:27,973 - #37 ]
INFO  22:42:27,973 - #31 ;
INFO  22:42:27,973 - #44 x
INFO  22:42:27,973 - #28 =
INFO  22:42:27,973 - #8 new
INFO  22:42:27,973 - #44 int
INFO  22:42:27,973 - #36 [
INFO  22:42:27,973 - #43 3
INFO  22:42:27,974 - #37 ]
INFO  22:42:27,974 - #31 ;
INFO  22:42:27,974 - #44 i
INFO  22:42:27,974 - #28 =
INFO  22:42:27,974 - #43 0
INFO  22:42:27,974 - #31 ;
INFO  22:42:27,974 - #10 read
INFO  22:42:27,974 - #34 (
INFO  22:42:27,974 - #44 c
INFO  22:42:27,974 - #33 .
INFO  22:42:27,975 - #44 i
INFO  22:42:27,975 - #35 )
INFO  22:42:27,975 - #31 ;
INFO  22:42:27,975 - #13 while
INFO  22:42:27,975 - #34 (
INFO  22:42:27,975 - #44 i
INFO  22:42:27,975 - #24 <
INFO  22:42:27,976 - #43 5
INFO  22:42:27,976 - #35 )
INFO  22:42:27,976 - #38 {
INFO  22:42:27,976 - #10 read
INFO  22:42:27,976 - #34 (
INFO  22:42:27,976 - #44 c
INFO  22:42:27,976 - #33 .
INFO  22:42:27,976 - #44 x
INFO  22:42:27,976 - #36 [
INFO  22:42:27,977 - #44 i
INFO  22:42:27,977 - #37 ]
INFO  22:42:27,977 - #35 )
INFO  22:42:27,977 - #31 ;
INFO  22:42:27,977 - #10 read
INFO  22:42:27,977 - #34 (
INFO  22:42:27,977 - #44 c
INFO  22:42:27,977 - #33 .
INFO  22:42:27,977 - #44 theA
INFO  22:42:27,978 - #33 .
INFO  22:42:27,978 - #44 x
INFO  22:42:27,978 - #36 [
INFO  22:42:27,978 - #44 i
INFO  22:42:27,978 - #37 ]
INFO  22:42:27,978 - #35 )
INFO  22:42:27,978 - #31 ;
INFO  22:42:27,978 - #44 i
INFO  22:42:27,978 - #29 ++
INFO  22:42:27,978 - #31 ;
INFO  22:42:27,978 - #39 }
INFO  22:42:27,979 - #9 print
INFO  22:42:27,979 - #34 (
INFO  22:42:27,979 - #44 c
INFO  22:42:27,979 - #33 .
INFO  22:42:27,979 - #44 getValue
INFO  22:42:27,979 - #34 (
INFO  22:42:27,979 - #44 c
INFO  22:42:27,979 - #33 .
INFO  22:42:27,979 - #44 theA
INFO  22:42:27,979 - #33 .
INFO  22:42:27,979 - #44 x
INFO  22:42:27,980 - #36 [
INFO  22:42:27,980 - #43 0
INFO  22:42:27,980 - #37 ]
INFO  22:42:27,980 - #35 )
INFO  22:42:27,980 - #35 )
INFO  22:42:27,980 - #31 ;
INFO  22:42:27,980 - #39 }
INFO  22:42:27,980 - #12 void
INFO  22:42:27,980 - #44 aaa
INFO  22:42:27,981 - #34 (
INFO  22:42:27,981 - #35 )
INFO  22:42:27,981 - #44 A
INFO  22:42:27,981 - #44 a
INFO  22:42:27,981 - #31 ;
INFO  22:42:27,981 - #44 C
INFO  22:42:27,981 - #44 c
INFO  22:42:27,981 - #31 ;
INFO  22:42:27,981 - #44 int
INFO  22:42:27,982 - #44 i
INFO  22:42:27,982 - #31 ;
INFO  22:42:27,982 - #44 int
INFO  22:42:27,982 - #44 x
INFO  22:42:27,982 - #36 [
INFO  22:42:27,982 - #37 ]
INFO  22:42:27,982 - #31 ;
INFO  22:42:27,982 - #38 {
INFO  22:42:27,982 - #39 }
INFO  22:42:27,982 - #12 void
INFO  22:42:27,983 - #44 bbb
INFO  22:42:27,983 - #34 (
INFO  22:42:27,983 - #35 )
INFO  22:42:27,983 - #44 A
INFO  22:42:27,983 - #44 a
INFO  22:42:27,983 - #31 ;
INFO  22:42:27,983 - #44 C
INFO  22:42:27,983 - #44 c
INFO  22:42:27,983 - #31 ;
INFO  22:42:27,983 - #44 int
INFO  22:42:27,984 - #44 i
INFO  22:42:27,984 - #31 ;
INFO  22:42:27,984 - #44 int
INFO  22:42:27,984 - #44 x
INFO  22:42:27,984 - #36 [
INFO  22:42:27,984 - #37 ]
INFO  22:42:27,984 - #31 ;
INFO  22:42:27,984 - #38 {
INFO  22:42:27,984 - #39 }
INFO  22:42:27,984 - #12 void
INFO  22:42:27,984 - #44 ccc
INFO  22:42:27,984 - #34 (
INFO  22:42:27,985 - #35 )
INFO  22:42:27,985 - #44 A
INFO  22:42:27,985 - #44 a
INFO  22:42:27,985 - #31 ;
INFO  22:42:27,985 - #44 C
INFO  22:42:27,985 - #44 c
INFO  22:42:27,985 - #31 ;
INFO  22:42:27,985 - #44 int
INFO  22:42:27,985 - #44 i
INFO  22:42:27,985 - #31 ;
INFO  22:42:27,985 - #44 int
INFO  22:42:27,986 - #44 x
INFO  22:42:27,986 - #36 [
INFO  22:42:27,986 - #37 ]
INFO  22:42:27,986 - #31 ;
INFO  22:42:27,986 - #38 {
INFO  22:42:27,986 - #39 }
INFO  22:42:27,986 - #39 }
INFO  22:42:27,986 - GlobalVar = 2
INFO  22:42:27,986 - GlobalConst = 2
INFO  22:42:27,986 - LocalMainVar = 4
INFO  22:42:27,986 - GlobalArray = 0
INFO  22:42:27,986 - FuncProg = 4
INFO  22:42:27,986 - Blocks = 6
INFO  22:42:27,987 - FuncCalls = 5
INFO  22:42:27,987 - FormalArg = 2
INFO  22:42:27,987 - DefClass = 3
INFO  22:42:27,987 - DefMethodClass = 2
INFO  22:42:39,647 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:42:39,656 - #2 program
INFO  22:42:39,656 - #44 Program
INFO  22:42:39,656 - #4 class
INFO  22:42:39,656 - #44 A
INFO  22:42:39,656 - #38 {
INFO  22:42:39,656 - #44 int
INFO  22:42:39,656 - #44 x
INFO  22:42:39,657 - #36 [
INFO  22:42:39,657 - #37 ]
INFO  22:42:39,657 - #32 ,
INFO  22:42:39,657 - #44 y
INFO  22:42:39,657 - #36 [
INFO  22:42:39,657 - #37 ]
INFO  22:42:39,657 - #31 ;
INFO  22:42:39,657 - #39 }
INFO  22:42:39,657 - #6 const
INFO  22:42:39,657 - #44 int
INFO  22:42:39,657 - #44 pi
INFO  22:42:39,657 - #28 =
INFO  22:42:39,657 - #43 3
INFO  22:42:39,658 - #32 ,
INFO  22:42:39,658 - #44 e
INFO  22:42:39,658 - #28 =
INFO  22:42:39,658 - #43 2
INFO  22:42:39,658 - #31 ;
INFO  22:42:39,658 - #4 class
INFO  22:42:39,658 - #44 B
INFO  22:42:39,658 - #14 extends
INFO  22:42:39,658 - #44 A
INFO  22:42:39,658 - #38 {
INFO  22:42:39,658 - #44 int
INFO  22:42:39,658 - #44 i
INFO  22:42:39,659 - #31 ;
INFO  22:42:39,659 - #44 int
INFO  22:42:39,659 - #44 x
INFO  22:42:39,659 - #36 [
INFO  22:42:39,659 - #37 ]
INFO  22:42:39,659 - #31 ;
INFO  22:42:39,659 - #38 {
INFO  22:42:39,659 - #44 int
INFO  22:42:39,659 - #44 getValue
INFO  22:42:39,659 - #34 (
INFO  22:42:39,659 - #44 int
INFO  22:42:39,660 - #44 a
INFO  22:42:39,660 - #35 )
INFO  22:42:39,660 - #44 int
INFO  22:42:39,660 - #44 b
INFO  22:42:39,660 - #31 ;
INFO  22:42:39,660 - #44 bool
INFO  22:42:39,660 - #44 c
INFO  22:42:39,660 - #31 ;
INFO  22:42:39,660 - #38 {
INFO  22:42:39,660 - #11 return
INFO  22:42:39,660 - #44 this
INFO  22:42:39,660 - #33 .
INFO  22:42:39,661 - #44 i
INFO  22:42:39,661 - #15 +
INFO  22:42:39,661 - #44 this
INFO  22:42:39,661 - #33 .
INFO  22:42:39,661 - #44 x
INFO  22:42:39,661 - #36 [
INFO  22:42:39,661 - #43 0
INFO  22:42:39,661 - #37 ]
INFO  22:42:39,661 - #15 +
INFO  22:42:39,661 - #44 a
INFO  22:42:39,661 - #31 ;
INFO  22:42:39,661 - #39 }
INFO  22:42:39,662 - #39 }
INFO  22:42:39,662 - #39 }
INFO  22:42:39,662 - #4 class
INFO  22:42:39,662 - #44 C
INFO  22:42:39,662 - #14 extends
INFO  22:42:39,662 - #44 B
INFO  22:42:39,662 - #38 {
INFO  22:42:39,662 - #44 A
INFO  22:42:39,662 - #44 theA
INFO  22:42:39,662 - #31 ;
INFO  22:42:39,662 - #44 string
INFO  22:42:39,662 - #44 a
INFO  22:42:39,662 - #31 ;
INFO  22:42:39,663 - #38 {
INFO  22:42:39,663 - #44 int
INFO  22:42:39,663 - #44 dfdfd
INFO  22:42:39,663 - #34 (
INFO  22:42:39,663 - #44 int
INFO  22:42:39,663 - #44 a
INFO  22:42:39,663 - #35 )
INFO  22:42:39,663 - #38 {
INFO  22:42:39,663 - #39 }
INFO  22:42:39,663 - #39 }
INFO  22:42:39,663 - #39 }
INFO  22:42:39,663 - #38 {
INFO  22:42:39,663 - #12 void
INFO  22:42:39,664 - #44 main
INFO  22:42:39,664 - #34 (
INFO  22:42:39,664 - #35 )
INFO  22:42:39,664 - #44 A
INFO  22:42:39,664 - #44 a
INFO  22:42:39,664 - #31 ;
INFO  22:42:39,664 - #44 C
INFO  22:42:39,664 - #44 c
INFO  22:42:39,664 - #31 ;
INFO  22:42:39,664 - #44 int
INFO  22:42:39,664 - #44 i
INFO  22:42:39,664 - #31 ;
INFO  22:42:39,665 - #44 int
INFO  22:42:39,665 - #44 x
INFO  22:42:39,665 - #36 [
INFO  22:42:39,665 - #37 ]
INFO  22:42:39,665 - #31 ;
INFO  22:42:39,665 - #38 {
INFO  22:42:39,665 - #44 a
INFO  22:42:39,665 - #28 =
INFO  22:42:39,665 - #8 new
INFO  22:42:39,665 - #44 A
INFO  22:42:39,665 - #31 ;
INFO  22:42:39,666 - #44 a
INFO  22:42:39,666 - #33 .
INFO  22:42:39,666 - #44 x
INFO  22:42:39,666 - #28 =
INFO  22:42:39,666 - #8 new
INFO  22:42:39,666 - #44 int
INFO  22:42:39,666 - #36 [
INFO  22:42:39,666 - #43 5
INFO  22:42:39,666 - #37 ]
INFO  22:42:39,666 - #31 ;
INFO  22:42:39,666 - #44 a
INFO  22:42:39,666 - #33 .
INFO  22:42:39,666 - #44 y
INFO  22:42:39,667 - #28 =
INFO  22:42:39,667 - #8 new
INFO  22:42:39,667 - #44 int
INFO  22:42:39,667 - #36 [
INFO  22:42:39,667 - #43 5
INFO  22:42:39,667 - #37 ]
INFO  22:42:39,667 - #31 ;
INFO  22:42:39,667 - #44 c
INFO  22:42:39,667 - #28 =
INFO  22:42:39,667 - #8 new
INFO  22:42:39,667 - #44 C
INFO  22:42:39,667 - #31 ;
INFO  22:42:39,668 - #44 c
INFO  22:42:39,668 - #33 .
INFO  22:42:39,668 - #44 theA
INFO  22:42:39,668 - #28 =
INFO  22:42:39,668 - #44 a
INFO  22:42:39,668 - #31 ;
INFO  22:42:39,668 - #44 c
INFO  22:42:39,668 - #33 .
INFO  22:42:39,668 - #44 x
INFO  22:42:39,668 - #28 =
INFO  22:42:39,668 - #8 new
INFO  22:42:39,668 - #44 int
INFO  22:42:39,668 - #36 [
INFO  22:42:39,669 - #43 5
INFO  22:42:39,669 - #37 ]
INFO  22:42:39,669 - #31 ;
INFO  22:42:39,669 - #44 x
INFO  22:42:39,669 - #28 =
INFO  22:42:39,669 - #8 new
INFO  22:42:39,669 - #44 int
INFO  22:42:39,669 - #36 [
INFO  22:42:39,669 - #43 3
INFO  22:42:39,669 - #37 ]
INFO  22:42:39,669 - #31 ;
INFO  22:42:39,669 - #44 i
INFO  22:42:39,670 - #28 =
INFO  22:42:39,670 - #43 0
INFO  22:42:39,670 - #31 ;
INFO  22:42:39,670 - #10 read
INFO  22:42:39,670 - #34 (
INFO  22:42:39,670 - #44 c
INFO  22:42:39,670 - #33 .
INFO  22:42:39,670 - #44 i
INFO  22:42:39,671 - #35 )
INFO  22:42:39,671 - #31 ;
INFO  22:42:39,671 - #13 while
INFO  22:42:39,671 - #34 (
INFO  22:42:39,671 - #44 i
INFO  22:42:39,671 - #24 <
INFO  22:42:39,671 - #43 5
INFO  22:42:39,671 - #35 )
INFO  22:42:39,672 - #38 {
INFO  22:42:39,672 - #10 read
INFO  22:42:39,672 - #34 (
INFO  22:42:39,672 - #44 c
INFO  22:42:39,672 - #33 .
INFO  22:42:39,672 - #44 x
INFO  22:42:39,672 - #36 [
INFO  22:42:39,672 - #44 i
INFO  22:42:39,673 - #37 ]
INFO  22:42:39,673 - #35 )
INFO  22:42:39,673 - #31 ;
INFO  22:42:39,673 - #10 read
INFO  22:42:39,673 - #34 (
INFO  22:42:39,673 - #44 c
INFO  22:42:39,673 - #33 .
INFO  22:42:39,673 - #44 theA
INFO  22:42:39,673 - #33 .
INFO  22:42:39,674 - #44 x
INFO  22:42:39,674 - #36 [
INFO  22:42:39,674 - #44 i
INFO  22:42:39,674 - #37 ]
INFO  22:42:39,674 - #35 )
INFO  22:42:39,674 - #31 ;
INFO  22:42:39,674 - #44 i
INFO  22:42:39,674 - #29 ++
INFO  22:42:39,675 - #31 ;
INFO  22:42:39,675 - #39 }
INFO  22:42:39,675 - #9 print
INFO  22:42:39,675 - #34 (
INFO  22:42:39,675 - #44 c
INFO  22:42:39,675 - #33 .
INFO  22:42:39,675 - #44 getValue
INFO  22:42:39,675 - #34 (
INFO  22:42:39,675 - #44 c
INFO  22:42:39,676 - #33 .
INFO  22:42:39,676 - #44 theA
INFO  22:42:39,676 - #33 .
INFO  22:42:39,676 - #44 x
INFO  22:42:39,676 - #36 [
INFO  22:42:39,676 - #43 0
INFO  22:42:39,676 - #37 ]
INFO  22:42:39,676 - #35 )
INFO  22:42:39,677 - #35 )
INFO  22:42:39,677 - #31 ;
INFO  22:42:39,677 - #39 }
INFO  22:42:39,677 - #12 void
INFO  22:42:39,677 - #44 aaa
INFO  22:42:39,677 - #34 (
INFO  22:42:39,677 - #35 )
INFO  22:42:39,677 - #44 A
INFO  22:42:39,677 - #44 a
INFO  22:42:39,678 - #31 ;
INFO  22:42:39,678 - #44 C
INFO  22:42:39,678 - #44 c
INFO  22:42:39,678 - #31 ;
INFO  22:42:39,678 - #44 int
INFO  22:42:39,678 - #44 i
INFO  22:42:39,678 - #31 ;
INFO  22:42:39,678 - #44 int
INFO  22:42:39,678 - #44 x
INFO  22:42:39,678 - #36 [
INFO  22:42:39,679 - #37 ]
INFO  22:42:39,679 - #31 ;
INFO  22:42:39,679 - #38 {
INFO  22:42:39,679 - #39 }
INFO  22:42:39,679 - #12 void
INFO  22:42:39,679 - #44 bbb
INFO  22:42:39,679 - #34 (
INFO  22:42:39,679 - #35 )
INFO  22:42:39,679 - #44 A
INFO  22:42:39,679 - #44 a
INFO  22:42:39,679 - #31 ;
INFO  22:42:39,680 - #44 C
INFO  22:42:39,680 - #44 c
INFO  22:42:39,680 - #31 ;
INFO  22:42:39,680 - #44 int
INFO  22:42:39,680 - #44 i
INFO  22:42:39,680 - #31 ;
INFO  22:42:39,680 - #44 int
INFO  22:42:39,680 - #44 x
INFO  22:42:39,680 - #36 [
INFO  22:42:39,681 - #37 ]
INFO  22:42:39,681 - #31 ;
INFO  22:42:39,681 - #38 {
INFO  22:42:39,681 - #39 }
INFO  22:42:39,681 - #12 void
INFO  22:42:39,681 - #44 ccc
INFO  22:42:39,681 - #34 (
INFO  22:42:39,681 - #35 )
INFO  22:42:39,681 - #44 A
INFO  22:42:39,681 - #44 a
INFO  22:42:39,681 - #31 ;
INFO  22:42:39,681 - #44 C
INFO  22:42:39,682 - #44 c
INFO  22:42:39,682 - #31 ;
INFO  22:42:39,682 - #44 int
INFO  22:42:39,682 - #44 i
INFO  22:42:39,682 - #31 ;
INFO  22:42:39,682 - #44 int
INFO  22:42:39,682 - #44 x
INFO  22:42:39,682 - #36 [
INFO  22:42:39,682 - #37 ]
INFO  22:42:39,682 - #31 ;
INFO  22:42:39,682 - #38 {
INFO  22:42:39,682 - #39 }
INFO  22:42:39,682 - #39 }
INFO  22:42:39,683 - GlobalVar = 2
INFO  22:42:39,683 - GlobalConst = 2
INFO  22:42:39,683 - LocalMainVar = 4
INFO  22:42:39,683 - GlobalArray = 0
INFO  22:42:39,683 - FuncProg = 5
INFO  22:42:39,683 - Blocks = 6
INFO  22:42:39,683 - FuncCalls = 5
INFO  22:42:39,683 - FormalArg = 2
INFO  22:42:39,683 - DefClass = 3
INFO  22:42:39,683 - DefMethodClass = 1
INFO  22:42:50,920 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:42:50,928 - #2 program
INFO  22:42:50,928 - #44 Program
INFO  22:42:50,928 - #4 class
INFO  22:42:50,928 - #44 A
INFO  22:42:50,928 - #38 {
INFO  22:42:50,929 - #44 int
INFO  22:42:50,929 - #44 x
INFO  22:42:50,929 - #36 [
INFO  22:42:50,929 - #37 ]
INFO  22:42:50,929 - #32 ,
INFO  22:42:50,929 - #44 y
INFO  22:42:50,929 - #36 [
INFO  22:42:50,929 - #37 ]
INFO  22:42:50,929 - #31 ;
INFO  22:42:50,929 - #39 }
INFO  22:42:50,929 - #6 const
INFO  22:42:50,929 - #44 int
INFO  22:42:50,930 - #44 pi
INFO  22:42:50,930 - #28 =
INFO  22:42:50,930 - #43 3
INFO  22:42:50,930 - #32 ,
INFO  22:42:50,930 - #44 e
INFO  22:42:50,930 - #28 =
INFO  22:42:50,930 - #43 2
INFO  22:42:50,930 - #31 ;
INFO  22:42:50,930 - #4 class
INFO  22:42:50,930 - #44 B
INFO  22:42:50,930 - #14 extends
INFO  22:42:50,930 - #44 A
INFO  22:42:50,931 - #38 {
INFO  22:42:50,931 - #44 int
INFO  22:42:50,931 - #44 i
INFO  22:42:50,931 - #31 ;
INFO  22:42:50,931 - #44 int
INFO  22:42:50,931 - #44 x
INFO  22:42:50,931 - #36 [
INFO  22:42:50,931 - #37 ]
INFO  22:42:50,931 - #31 ;
INFO  22:42:50,931 - #38 {
INFO  22:42:50,931 - #44 int
INFO  22:42:50,932 - #44 getValue
INFO  22:42:50,932 - #34 (
INFO  22:42:50,932 - #44 int
INFO  22:42:50,932 - #44 a
INFO  22:42:50,932 - #35 )
INFO  22:42:50,932 - #44 int
INFO  22:42:50,932 - #44 b
INFO  22:42:50,932 - #31 ;
INFO  22:42:50,932 - #44 bool
INFO  22:42:50,932 - #44 c
INFO  22:42:50,932 - #31 ;
INFO  22:42:50,932 - #38 {
INFO  22:42:50,932 - #11 return
INFO  22:42:50,933 - #44 this
INFO  22:42:50,933 - #33 .
INFO  22:42:50,933 - #44 i
INFO  22:42:50,933 - #15 +
INFO  22:42:50,933 - #44 this
INFO  22:42:50,933 - #33 .
INFO  22:42:50,933 - #44 x
INFO  22:42:50,933 - #36 [
INFO  22:42:50,933 - #43 0
INFO  22:42:50,933 - #37 ]
INFO  22:42:50,933 - #15 +
INFO  22:42:50,934 - #44 a
INFO  22:42:50,934 - #31 ;
INFO  22:42:50,934 - #39 }
INFO  22:42:50,934 - #39 }
INFO  22:42:50,934 - #39 }
INFO  22:42:50,934 - #4 class
INFO  22:42:50,934 - #44 C
INFO  22:42:50,934 - #14 extends
INFO  22:42:50,934 - #44 B
INFO  22:42:50,934 - #38 {
INFO  22:42:50,934 - #44 A
INFO  22:42:50,934 - #44 theA
INFO  22:42:50,935 - #31 ;
INFO  22:42:50,935 - #44 string
INFO  22:42:50,935 - #44 a
INFO  22:42:50,935 - #31 ;
INFO  22:42:50,935 - #38 {
INFO  22:42:50,935 - #44 int
INFO  22:42:50,935 - #44 dfdfd
INFO  22:42:50,936 - #34 (
INFO  22:42:50,936 - #44 int
INFO  22:42:50,936 - #44 a
INFO  22:42:50,936 - #35 )
INFO  22:42:50,936 - #38 {
INFO  22:42:50,936 - #39 }
INFO  22:42:50,936 - #39 }
INFO  22:42:50,936 - #39 }
INFO  22:42:50,937 - #38 {
INFO  22:42:50,937 - #12 void
INFO  22:42:50,937 - #44 main
INFO  22:42:50,937 - #34 (
INFO  22:42:50,937 - #35 )
INFO  22:42:50,937 - #44 A
INFO  22:42:50,937 - #44 a
INFO  22:42:50,937 - #31 ;
INFO  22:42:50,937 - #44 C
INFO  22:42:50,938 - #44 c
INFO  22:42:50,938 - #31 ;
INFO  22:42:50,938 - #44 int
INFO  22:42:50,938 - #44 i
INFO  22:42:50,938 - #31 ;
INFO  22:42:50,938 - #44 int
INFO  22:42:50,938 - #44 x
INFO  22:42:50,938 - #36 [
INFO  22:42:50,938 - #37 ]
INFO  22:42:50,938 - #31 ;
INFO  22:42:50,938 - #38 {
INFO  22:42:50,938 - #44 a
INFO  22:42:50,939 - #28 =
INFO  22:42:50,939 - #8 new
INFO  22:42:50,939 - #44 A
INFO  22:42:50,939 - #31 ;
INFO  22:42:50,939 - #44 a
INFO  22:42:50,939 - #33 .
INFO  22:42:50,939 - #44 x
INFO  22:42:50,939 - #28 =
INFO  22:42:50,939 - #8 new
INFO  22:42:50,939 - #44 int
INFO  22:42:50,940 - #36 [
INFO  22:42:50,940 - #43 5
INFO  22:42:50,940 - #37 ]
INFO  22:42:50,940 - #31 ;
INFO  22:42:50,940 - #44 a
INFO  22:42:50,940 - #33 .
INFO  22:42:50,940 - #44 y
INFO  22:42:50,940 - #28 =
INFO  22:42:50,941 - #8 new
INFO  22:42:50,941 - #44 int
INFO  22:42:50,941 - #36 [
INFO  22:42:50,941 - #43 5
INFO  22:42:50,941 - #37 ]
INFO  22:42:50,941 - #31 ;
INFO  22:42:50,941 - #44 c
INFO  22:42:50,941 - #28 =
INFO  22:42:50,941 - #8 new
INFO  22:42:50,942 - #44 C
INFO  22:42:50,942 - #31 ;
INFO  22:42:50,942 - #44 c
INFO  22:42:50,942 - #33 .
INFO  22:42:50,942 - #44 theA
INFO  22:42:50,942 - #28 =
INFO  22:42:50,942 - #44 a
INFO  22:42:50,942 - #31 ;
INFO  22:42:50,943 - #44 c
INFO  22:42:50,943 - #33 .
INFO  22:42:50,943 - #44 x
INFO  22:42:50,943 - #28 =
INFO  22:42:50,943 - #8 new
INFO  22:42:50,943 - #44 int
INFO  22:42:50,943 - #36 [
INFO  22:42:50,943 - #43 5
INFO  22:42:50,943 - #37 ]
INFO  22:42:50,943 - #31 ;
INFO  22:42:50,943 - #44 x
INFO  22:42:50,943 - #28 =
INFO  22:42:50,944 - #8 new
INFO  22:42:50,944 - #44 int
INFO  22:42:50,944 - #36 [
INFO  22:42:50,944 - #43 3
INFO  22:42:50,944 - #37 ]
INFO  22:42:50,944 - #31 ;
INFO  22:42:50,944 - #44 i
INFO  22:42:50,944 - #28 =
INFO  22:42:50,945 - #43 0
INFO  22:42:50,945 - #31 ;
INFO  22:42:50,945 - #10 read
INFO  22:42:50,945 - #34 (
INFO  22:42:50,945 - #44 c
INFO  22:42:50,945 - #33 .
INFO  22:42:50,945 - #44 i
INFO  22:42:50,945 - #35 )
INFO  22:42:50,946 - #31 ;
INFO  22:42:50,946 - #13 while
INFO  22:42:50,946 - #34 (
INFO  22:42:50,946 - #44 i
INFO  22:42:50,946 - #24 <
INFO  22:42:50,946 - #43 5
INFO  22:42:50,946 - #35 )
INFO  22:42:50,946 - #38 {
INFO  22:42:50,947 - #10 read
INFO  22:42:50,947 - #34 (
INFO  22:42:50,947 - #44 c
INFO  22:42:50,947 - #33 .
INFO  22:42:50,947 - #44 x
INFO  22:42:50,947 - #36 [
INFO  22:42:50,947 - #44 i
INFO  22:42:50,947 - #37 ]
INFO  22:42:50,947 - #35 )
INFO  22:42:50,948 - #31 ;
INFO  22:42:50,948 - #10 read
INFO  22:42:50,948 - #34 (
INFO  22:42:50,948 - #44 c
INFO  22:42:50,948 - #33 .
INFO  22:42:50,948 - #44 theA
INFO  22:42:50,948 - #33 .
INFO  22:42:50,948 - #44 x
INFO  22:42:50,948 - #36 [
INFO  22:42:50,948 - #44 i
INFO  22:42:50,949 - #37 ]
INFO  22:42:50,949 - #35 )
INFO  22:42:50,949 - #31 ;
INFO  22:42:50,949 - #44 i
INFO  22:42:50,949 - #29 ++
INFO  22:42:50,949 - #31 ;
INFO  22:42:50,949 - #39 }
INFO  22:42:50,949 - #9 print
INFO  22:42:50,950 - #34 (
INFO  22:42:50,950 - #44 c
INFO  22:42:50,950 - #33 .
INFO  22:42:50,950 - #44 getValue
INFO  22:42:50,950 - #34 (
INFO  22:42:50,950 - #44 c
INFO  22:42:50,950 - #33 .
INFO  22:42:50,950 - #44 theA
INFO  22:42:50,950 - #33 .
INFO  22:42:50,950 - #44 x
INFO  22:42:50,951 - #36 [
INFO  22:42:50,951 - #43 0
INFO  22:42:50,951 - #37 ]
INFO  22:42:50,951 - #35 )
INFO  22:42:50,951 - #35 )
INFO  22:42:50,951 - #31 ;
INFO  22:42:50,951 - #39 }
INFO  22:42:50,951 - #12 void
INFO  22:42:50,951 - #44 aaa
INFO  22:42:50,952 - #34 (
INFO  22:42:50,952 - #35 )
INFO  22:42:50,952 - #44 A
INFO  22:42:50,952 - #44 a
INFO  22:42:50,952 - #31 ;
INFO  22:42:50,952 - #44 C
INFO  22:42:50,952 - #44 c
INFO  22:42:50,952 - #31 ;
INFO  22:42:50,952 - #44 int
INFO  22:42:50,952 - #44 i
INFO  22:42:50,953 - #31 ;
INFO  22:42:50,953 - #44 int
INFO  22:42:50,953 - #44 x
INFO  22:42:50,953 - #36 [
INFO  22:42:50,953 - #37 ]
INFO  22:42:50,953 - #31 ;
INFO  22:42:50,953 - #38 {
INFO  22:42:50,953 - #39 }
INFO  22:42:50,953 - #12 void
INFO  22:42:50,953 - #44 bbb
INFO  22:42:50,953 - #34 (
INFO  22:42:50,954 - #35 )
INFO  22:42:50,954 - #44 A
INFO  22:42:50,954 - #44 a
INFO  22:42:50,954 - #31 ;
INFO  22:42:50,954 - #44 C
INFO  22:42:50,954 - #44 c
INFO  22:42:50,954 - #31 ;
INFO  22:42:50,954 - #44 int
INFO  22:42:50,954 - #44 i
INFO  22:42:50,954 - #31 ;
INFO  22:42:50,955 - #44 int
INFO  22:42:50,955 - #44 x
INFO  22:42:50,955 - #36 [
INFO  22:42:50,955 - #37 ]
INFO  22:42:50,955 - #31 ;
INFO  22:42:50,955 - #38 {
INFO  22:42:50,955 - #39 }
INFO  22:42:50,955 - #12 void
INFO  22:42:50,955 - #44 ccc
INFO  22:42:50,955 - #34 (
INFO  22:42:50,955 - #35 )
INFO  22:42:50,955 - #44 A
INFO  22:42:50,955 - #44 a
INFO  22:42:50,955 - #31 ;
INFO  22:42:50,955 - #44 C
INFO  22:42:50,956 - #44 c
INFO  22:42:50,956 - #31 ;
INFO  22:42:50,956 - #44 int
INFO  22:42:50,956 - #44 i
INFO  22:42:50,956 - #31 ;
INFO  22:42:50,956 - #44 int
INFO  22:42:50,956 - #44 x
INFO  22:42:50,956 - #36 [
INFO  22:42:50,956 - #37 ]
INFO  22:42:50,956 - #31 ;
INFO  22:42:50,956 - #38 {
INFO  22:42:50,956 - #39 }
INFO  22:42:50,956 - #39 }
INFO  22:42:50,957 - GlobalVar = 2
INFO  22:42:50,957 - GlobalConst = 2
INFO  22:42:50,957 - LocalMainVar = 4
INFO  22:42:50,957 - GlobalArray = 0
INFO  22:42:50,957 - FuncProg = 5
INFO  22:42:50,957 - Blocks = 6
INFO  22:42:50,957 - FuncCalls = 5
INFO  22:42:50,957 - FormalArg = 2
INFO  22:42:50,957 - DefClass = 3
INFO  22:42:50,957 - DefMethodClass = 1
INFO  22:44:33,427 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:44:33,437 - #2 program
INFO  22:44:33,438 - #44 Program
INFO  22:44:33,438 - #4 class
INFO  22:44:33,438 - #44 A
INFO  22:44:33,438 - #38 {
INFO  22:44:33,438 - #44 int
INFO  22:44:33,438 - #44 x
INFO  22:44:33,438 - #36 [
INFO  22:44:33,438 - #37 ]
INFO  22:44:33,438 - #32 ,
INFO  22:44:33,439 - #44 y
INFO  22:44:33,439 - #36 [
INFO  22:44:33,439 - #37 ]
INFO  22:44:33,439 - #31 ;
INFO  22:44:33,439 - #39 }
INFO  22:44:33,439 - #6 const
INFO  22:44:33,439 - #44 int
INFO  22:44:33,439 - #44 pi
INFO  22:44:33,439 - #28 =
INFO  22:44:33,439 - #43 3
INFO  22:44:33,439 - #32 ,
INFO  22:44:33,439 - #44 e
INFO  22:44:33,439 - #28 =
INFO  22:44:33,440 - #43 2
INFO  22:44:33,440 - #31 ;
INFO  22:44:33,440 - #4 class
INFO  22:44:33,440 - #44 B
INFO  22:44:33,440 - #14 extends
INFO  22:44:33,440 - #44 A
INFO  22:44:33,440 - #38 {
INFO  22:44:33,440 - #44 int
INFO  22:44:33,440 - #44 i
INFO  22:44:33,440 - #31 ;
INFO  22:44:33,440 - #44 int
INFO  22:44:33,440 - #44 x
INFO  22:44:33,440 - #36 [
INFO  22:44:33,440 - #37 ]
INFO  22:44:33,441 - #31 ;
INFO  22:44:33,441 - #38 {
INFO  22:44:33,441 - #44 int
INFO  22:44:33,441 - #44 getValue
INFO  22:44:33,441 - #34 (
INFO  22:44:33,441 - #44 int
INFO  22:44:33,441 - #44 a
INFO  22:44:33,441 - #35 )
INFO  22:44:33,441 - #44 int
INFO  22:44:33,441 - #44 b
INFO  22:44:33,441 - #31 ;
INFO  22:44:33,441 - #44 bool
INFO  22:44:33,441 - #44 c
INFO  22:44:33,441 - #31 ;
INFO  22:44:33,442 - #38 {
INFO  22:44:33,442 - #11 return
INFO  22:44:33,442 - #44 this
INFO  22:44:33,442 - #33 .
INFO  22:44:33,442 - #44 i
INFO  22:44:33,442 - #15 +
INFO  22:44:33,442 - #44 this
INFO  22:44:33,442 - #33 .
INFO  22:44:33,442 - #44 x
INFO  22:44:33,442 - #36 [
INFO  22:44:33,442 - #43 0
INFO  22:44:33,442 - #37 ]
INFO  22:44:33,442 - #15 +
INFO  22:44:33,443 - #44 a
INFO  22:44:33,443 - #31 ;
INFO  22:44:33,443 - #39 }
INFO  22:44:33,443 - #39 }
INFO  22:44:33,443 - #39 }
INFO  22:44:33,443 - #4 class
INFO  22:44:33,443 - #44 C
INFO  22:44:33,443 - #14 extends
INFO  22:44:33,443 - #44 B
INFO  22:44:33,444 - #38 {
INFO  22:44:33,444 - #38 {
INFO  22:44:33,444 - #44 int
INFO  22:44:33,444 - #44 dfdfd
INFO  22:44:33,444 - #34 (
INFO  22:44:33,444 - #44 int
INFO  22:44:33,444 - #44 a
INFO  22:44:33,444 - #35 )
INFO  22:44:33,445 - #38 {
INFO  22:44:33,445 - #39 }
INFO  22:44:33,445 - #39 }
INFO  22:44:33,445 - #39 }
INFO  22:44:33,445 - #38 {
INFO  22:44:33,445 - #12 void
INFO  22:44:33,445 - #44 main
INFO  22:44:33,446 - #34 (
INFO  22:44:33,446 - #35 )
INFO  22:44:33,446 - #44 A
INFO  22:44:33,446 - #44 a
INFO  22:44:33,446 - #31 ;
INFO  22:44:33,446 - #44 C
INFO  22:44:33,446 - #44 c
INFO  22:44:33,446 - #31 ;
INFO  22:44:33,446 - #44 int
INFO  22:44:33,446 - #44 i
INFO  22:44:33,447 - #31 ;
INFO  22:44:33,447 - #44 int
INFO  22:44:33,447 - #44 x
INFO  22:44:33,447 - #36 [
INFO  22:44:33,447 - #37 ]
INFO  22:44:33,447 - #31 ;
INFO  22:44:33,447 - #38 {
INFO  22:44:33,447 - #44 a
INFO  22:44:33,447 - #28 =
INFO  22:44:33,447 - #8 new
INFO  22:44:33,447 - #44 A
INFO  22:44:33,447 - #31 ;
INFO  22:44:33,448 - #44 a
INFO  22:44:33,448 - #33 .
INFO  22:44:33,448 - #44 x
INFO  22:44:33,448 - #28 =
INFO  22:44:33,448 - #8 new
INFO  22:44:33,448 - #44 int
INFO  22:44:33,448 - #36 [
INFO  22:44:33,448 - #43 5
INFO  22:44:33,448 - #37 ]
INFO  22:44:33,448 - #31 ;
INFO  22:44:33,449 - #44 a
INFO  22:44:33,449 - #33 .
INFO  22:44:33,449 - #44 y
INFO  22:44:33,449 - #28 =
INFO  22:44:33,449 - #8 new
INFO  22:44:33,449 - #44 int
INFO  22:44:33,449 - #36 [
INFO  22:44:33,449 - #43 5
INFO  22:44:33,450 - #37 ]
INFO  22:44:33,450 - #31 ;
INFO  22:44:33,450 - #44 c
INFO  22:44:33,450 - #28 =
INFO  22:44:33,450 - #8 new
INFO  22:44:33,450 - #44 C
INFO  22:44:33,450 - #31 ;
INFO  22:44:33,450 - #44 c
INFO  22:44:33,450 - #33 .
INFO  22:44:33,450 - #44 theA
INFO  22:44:33,450 - #28 =
INFO  22:44:33,451 - #44 a
INFO  22:44:33,451 - #31 ;
INFO  22:44:33,451 - #44 c
INFO  22:44:33,451 - #33 .
INFO  22:44:33,451 - #44 x
INFO  22:44:33,451 - #28 =
INFO  22:44:33,451 - #8 new
INFO  22:44:33,451 - #44 int
INFO  22:44:33,451 - #36 [
INFO  22:44:33,451 - #43 5
INFO  22:44:33,451 - #37 ]
INFO  22:44:33,452 - #31 ;
INFO  22:44:33,452 - #44 x
INFO  22:44:33,452 - #28 =
INFO  22:44:33,452 - #8 new
INFO  22:44:33,452 - #44 int
INFO  22:44:33,452 - #36 [
INFO  22:44:33,452 - #43 3
INFO  22:44:33,452 - #37 ]
INFO  22:44:33,452 - #31 ;
INFO  22:44:33,452 - #44 i
INFO  22:44:33,452 - #28 =
INFO  22:44:33,452 - #43 0
INFO  22:44:33,452 - #31 ;
INFO  22:44:33,453 - #10 read
INFO  22:44:33,453 - #34 (
INFO  22:44:33,453 - #44 c
INFO  22:44:33,453 - #33 .
INFO  22:44:33,453 - #44 i
INFO  22:44:33,453 - #35 )
INFO  22:44:33,453 - #31 ;
INFO  22:44:33,453 - #13 while
INFO  22:44:33,453 - #34 (
INFO  22:44:33,453 - #44 i
INFO  22:44:33,454 - #24 <
INFO  22:44:33,454 - #43 5
INFO  22:44:33,454 - #35 )
INFO  22:44:33,454 - #38 {
INFO  22:44:33,454 - #10 read
INFO  22:44:33,455 - #34 (
INFO  22:44:33,455 - #44 c
INFO  22:44:33,455 - #33 .
INFO  22:44:33,455 - #44 x
INFO  22:44:33,455 - #36 [
INFO  22:44:33,455 - #44 i
INFO  22:44:33,455 - #37 ]
INFO  22:44:33,455 - #35 )
INFO  22:44:33,455 - #31 ;
INFO  22:44:33,456 - #10 read
INFO  22:44:33,456 - #34 (
INFO  22:44:33,456 - #44 c
INFO  22:44:33,456 - #33 .
INFO  22:44:33,456 - #44 theA
INFO  22:44:33,456 - #33 .
INFO  22:44:33,456 - #44 x
INFO  22:44:33,456 - #36 [
INFO  22:44:33,456 - #44 i
INFO  22:44:33,456 - #37 ]
INFO  22:44:33,457 - #35 )
INFO  22:44:33,457 - #31 ;
INFO  22:44:33,457 - #44 i
INFO  22:44:33,457 - #29 ++
INFO  22:44:33,457 - #31 ;
INFO  22:44:33,457 - #39 }
INFO  22:44:33,457 - #9 print
INFO  22:44:33,457 - #34 (
INFO  22:44:33,458 - #44 c
INFO  22:44:33,458 - #33 .
INFO  22:44:33,458 - #44 getValue
INFO  22:44:33,458 - #34 (
INFO  22:44:33,458 - #44 c
INFO  22:44:33,458 - #33 .
INFO  22:44:33,458 - #44 theA
INFO  22:44:33,458 - #33 .
INFO  22:44:33,458 - #44 x
INFO  22:44:33,459 - #36 [
INFO  22:44:33,459 - #43 0
INFO  22:44:33,459 - #37 ]
INFO  22:44:33,459 - #35 )
INFO  22:44:33,459 - #35 )
INFO  22:44:33,459 - #31 ;
INFO  22:44:33,459 - #39 }
INFO  22:44:33,459 - #12 void
INFO  22:44:33,460 - #44 aaa
INFO  22:44:33,460 - #34 (
INFO  22:44:33,460 - #35 )
INFO  22:44:33,460 - #44 A
INFO  22:44:33,460 - #44 a
INFO  22:44:33,460 - #31 ;
INFO  22:44:33,460 - #44 C
INFO  22:44:33,460 - #44 c
INFO  22:44:33,460 - #31 ;
INFO  22:44:33,460 - #44 int
INFO  22:44:33,461 - #44 i
INFO  22:44:33,461 - #31 ;
INFO  22:44:33,461 - #44 int
INFO  22:44:33,461 - #44 x
INFO  22:44:33,461 - #36 [
INFO  22:44:33,461 - #37 ]
INFO  22:44:33,461 - #31 ;
INFO  22:44:33,461 - #38 {
INFO  22:44:33,462 - #39 }
INFO  22:44:33,462 - #12 void
INFO  22:44:33,462 - #44 bbb
INFO  22:44:33,462 - #34 (
INFO  22:44:33,462 - #35 )
INFO  22:44:33,462 - #44 A
INFO  22:44:33,462 - #44 a
INFO  22:44:33,462 - #31 ;
INFO  22:44:33,462 - #44 C
INFO  22:44:33,463 - #44 c
INFO  22:44:33,463 - #31 ;
INFO  22:44:33,463 - #44 int
INFO  22:44:33,463 - #44 i
INFO  22:44:33,463 - #31 ;
INFO  22:44:33,463 - #44 int
INFO  22:44:33,463 - #44 x
INFO  22:44:33,463 - #36 [
INFO  22:44:33,463 - #37 ]
INFO  22:44:33,463 - #31 ;
INFO  22:44:33,464 - #38 {
INFO  22:44:33,464 - #39 }
INFO  22:44:33,464 - #12 void
INFO  22:44:33,464 - #44 ccc
INFO  22:44:33,464 - #34 (
INFO  22:44:33,464 - #35 )
INFO  22:44:33,464 - #44 A
INFO  22:44:33,465 - #44 a
INFO  22:44:33,465 - #31 ;
INFO  22:44:33,465 - #44 C
INFO  22:44:33,465 - #44 c
INFO  22:44:33,465 - #31 ;
INFO  22:44:33,465 - #44 int
INFO  22:44:33,465 - #44 i
INFO  22:44:33,465 - #31 ;
INFO  22:44:33,466 - #44 int
INFO  22:44:33,466 - #44 x
INFO  22:44:33,466 - #36 [
INFO  22:44:33,466 - #37 ]
INFO  22:44:33,466 - #31 ;
INFO  22:44:33,466 - #38 {
INFO  22:44:33,466 - #39 }
INFO  22:44:33,466 - #39 }
INFO  22:44:33,466 - GlobalVar = 0
INFO  22:44:33,466 - GlobalConst = 2
INFO  22:44:33,466 - LocalMainVar = 4
INFO  22:44:33,467 - GlobalArray = 0
INFO  22:44:33,467 - FuncProg = 5
INFO  22:44:33,467 - Blocks = 6
INFO  22:44:33,467 - FuncCalls = 5
INFO  22:44:33,467 - FormalArg = 2
INFO  22:44:33,467 - DefClass = 3
INFO  22:44:33,467 - DefMethodClass = 1
INFO  22:45:38,491 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:45:38,503 - #2 program
INFO  22:45:38,503 - #44 Program
INFO  22:45:38,503 - #4 class
INFO  22:45:38,503 - #44 A
INFO  22:45:38,503 - #38 {
INFO  22:45:38,503 - #44 int
INFO  22:45:38,504 - #44 x
INFO  22:45:38,504 - #36 [
INFO  22:45:38,504 - #37 ]
INFO  22:45:38,504 - #32 ,
INFO  22:45:38,504 - #44 y
INFO  22:45:38,504 - #36 [
INFO  22:45:38,504 - #37 ]
INFO  22:45:38,504 - #31 ;
INFO  22:45:38,504 - #39 }
INFO  22:45:38,504 - #6 const
INFO  22:45:38,505 - #44 int
INFO  22:45:38,505 - #44 pi
INFO  22:45:38,505 - #28 =
INFO  22:45:38,505 - #43 3
INFO  22:45:38,505 - #32 ,
INFO  22:45:38,505 - #44 e
INFO  22:45:38,505 - #28 =
INFO  22:45:38,505 - #43 2
INFO  22:45:38,505 - #31 ;
INFO  22:45:38,505 - #4 class
INFO  22:45:38,505 - #44 B
INFO  22:45:38,506 - #14 extends
INFO  22:45:38,506 - #44 A
INFO  22:45:38,506 - #38 {
INFO  22:45:38,506 - #44 int
INFO  22:45:38,506 - #44 i
INFO  22:45:38,506 - #31 ;
INFO  22:45:38,506 - #44 int
INFO  22:45:38,506 - #44 x
INFO  22:45:38,506 - #36 [
INFO  22:45:38,506 - #37 ]
INFO  22:45:38,506 - #31 ;
INFO  22:45:38,507 - #38 {
INFO  22:45:38,507 - #44 int
INFO  22:45:38,507 - #44 getValue
INFO  22:45:38,507 - #34 (
INFO  22:45:38,507 - #44 int
INFO  22:45:38,507 - #44 a
INFO  22:45:38,507 - #35 )
INFO  22:45:38,507 - #44 int
INFO  22:45:38,507 - #44 b
INFO  22:45:38,507 - #31 ;
INFO  22:45:38,508 - #44 bool
INFO  22:45:38,508 - #44 c
INFO  22:45:38,508 - #31 ;
INFO  22:45:38,508 - #38 {
INFO  22:45:38,508 - #11 return
INFO  22:45:38,508 - #44 this
INFO  22:45:38,508 - #33 .
INFO  22:45:38,508 - #44 i
INFO  22:45:38,509 - #15 +
INFO  22:45:38,509 - #44 this
INFO  22:45:38,509 - #33 .
INFO  22:45:38,509 - #44 x
INFO  22:45:38,509 - #36 [
INFO  22:45:38,509 - #43 0
INFO  22:45:38,509 - #37 ]
INFO  22:45:38,510 - #15 +
INFO  22:45:38,510 - #44 a
INFO  22:45:38,510 - #31 ;
INFO  22:45:38,510 - #39 }
INFO  22:45:38,510 - #39 }
INFO  22:45:38,511 - #39 }
INFO  22:45:38,511 - #4 class
INFO  22:45:38,511 - #44 C
INFO  22:45:38,511 - #14 extends
INFO  22:45:38,511 - #44 B
INFO  22:45:38,512 - #38 {
INFO  22:45:38,512 - #44 A
INFO  22:45:38,512 - #44 theA
INFO  22:45:38,512 - #31 ;
INFO  22:45:38,512 - #44 string
INFO  22:45:38,512 - #44 a
INFO  22:45:38,512 - #31 ;
INFO  22:45:38,512 - #38 {
INFO  22:45:38,512 - #12 void
INFO  22:45:38,513 - #44 aaa
INFO  22:45:38,513 - #34 (
INFO  22:45:38,513 - #35 )
INFO  22:45:38,513 - #44 A
INFO  22:45:38,513 - #44 a
INFO  22:45:38,513 - #31 ;
INFO  22:45:38,513 - #44 C
INFO  22:45:38,513 - #44 c
INFO  22:45:38,513 - #31 ;
INFO  22:45:38,513 - #44 int
INFO  22:45:38,514 - #44 i
INFO  22:45:38,514 - #31 ;
INFO  22:45:38,514 - #44 int
INFO  22:45:38,514 - #44 x
INFO  22:45:38,514 - #36 [
INFO  22:45:38,514 - #37 ]
INFO  22:45:38,514 - #31 ;
INFO  22:45:38,514 - #38 {
INFO  22:45:38,514 - #39 }
INFO  22:45:38,514 - #12 void
INFO  22:45:38,515 - #44 bbb
INFO  22:45:38,515 - #34 (
INFO  22:45:38,515 - #35 )
INFO  22:45:38,515 - #44 A
INFO  22:45:38,515 - #44 a
INFO  22:45:38,515 - #31 ;
INFO  22:45:38,515 - #44 C
INFO  22:45:38,515 - #44 c
INFO  22:45:38,515 - #31 ;
INFO  22:45:38,515 - #44 int
INFO  22:45:38,516 - #44 i
INFO  22:45:38,516 - #31 ;
INFO  22:45:38,516 - #44 int
INFO  22:45:38,516 - #44 x
INFO  22:45:38,516 - #36 [
INFO  22:45:38,516 - #37 ]
INFO  22:45:38,516 - #31 ;
INFO  22:45:38,516 - #38 {
INFO  22:45:38,517 - #39 }
INFO  22:45:38,517 - #12 void
INFO  22:45:38,517 - #44 ccc
INFO  22:45:38,517 - #34 (
INFO  22:45:38,517 - #35 )
INFO  22:45:38,517 - #44 A
INFO  22:45:38,517 - #44 a
INFO  22:45:38,517 - #31 ;
INFO  22:45:38,517 - #44 C
INFO  22:45:38,518 - #44 c
INFO  22:45:38,518 - #31 ;
INFO  22:45:38,518 - #44 int
INFO  22:45:38,518 - #44 i
INFO  22:45:38,518 - #31 ;
INFO  22:45:38,518 - #44 int
INFO  22:45:38,519 - #44 x
INFO  22:45:38,519 - #36 [
INFO  22:45:38,519 - #37 ]
INFO  22:45:38,519 - #31 ;
INFO  22:45:38,519 - #38 {
INFO  22:45:38,519 - #39 }
INFO  22:45:38,519 - #39 }
INFO  22:45:38,520 - #39 }
INFO  22:45:38,520 - #38 {
INFO  22:45:38,520 - #12 void
INFO  22:45:38,520 - #44 main
INFO  22:45:38,520 - #34 (
INFO  22:45:38,520 - #35 )
INFO  22:45:38,521 - #44 A
INFO  22:45:38,521 - #44 a
INFO  22:45:38,521 - #31 ;
INFO  22:45:38,521 - #44 C
INFO  22:45:38,521 - #44 c
INFO  22:45:38,521 - #31 ;
INFO  22:45:38,521 - #44 int
INFO  22:45:38,521 - #44 i
INFO  22:45:38,521 - #31 ;
INFO  22:45:38,521 - #44 int
INFO  22:45:38,521 - #44 x
INFO  22:45:38,522 - #36 [
INFO  22:45:38,522 - #37 ]
INFO  22:45:38,522 - #31 ;
INFO  22:45:38,522 - #38 {
INFO  22:45:38,522 - #44 a
INFO  22:45:38,522 - #28 =
INFO  22:45:38,522 - #8 new
INFO  22:45:38,522 - #44 A
INFO  22:45:38,522 - #31 ;
INFO  22:45:38,522 - #44 a
INFO  22:45:38,523 - #33 .
INFO  22:45:38,523 - #44 x
INFO  22:45:38,523 - #28 =
INFO  22:45:38,523 - #8 new
INFO  22:45:38,523 - #44 int
INFO  22:45:38,523 - #36 [
INFO  22:45:38,523 - #43 5
INFO  22:45:38,524 - #37 ]
INFO  22:45:38,524 - #31 ;
INFO  22:45:38,524 - #44 a
INFO  22:45:38,524 - #33 .
INFO  22:45:38,524 - #44 y
INFO  22:45:38,524 - #28 =
INFO  22:45:38,524 - #8 new
INFO  22:45:38,524 - #44 int
INFO  22:45:38,524 - #36 [
INFO  22:45:38,525 - #43 5
INFO  22:45:38,525 - #37 ]
INFO  22:45:38,525 - #31 ;
INFO  22:45:38,525 - #44 c
INFO  22:45:38,525 - #28 =
INFO  22:45:38,525 - #8 new
INFO  22:45:38,525 - #44 C
INFO  22:45:38,525 - #31 ;
INFO  22:45:38,525 - #44 c
INFO  22:45:38,526 - #33 .
INFO  22:45:38,526 - #44 theA
INFO  22:45:38,526 - #28 =
INFO  22:45:38,526 - #44 a
INFO  22:45:38,526 - #31 ;
INFO  22:45:38,526 - #44 c
INFO  22:45:38,526 - #33 .
INFO  22:45:38,526 - #44 x
INFO  22:45:38,527 - #28 =
INFO  22:45:38,527 - #8 new
INFO  22:45:38,527 - #44 int
INFO  22:45:38,527 - #36 [
INFO  22:45:38,527 - #43 5
INFO  22:45:38,527 - #37 ]
INFO  22:45:38,527 - #31 ;
INFO  22:45:38,527 - #44 x
INFO  22:45:38,527 - #28 =
INFO  22:45:38,527 - #8 new
INFO  22:45:38,528 - #44 int
INFO  22:45:38,528 - #36 [
INFO  22:45:38,528 - #43 3
INFO  22:45:38,528 - #37 ]
INFO  22:45:38,528 - #31 ;
INFO  22:45:38,528 - #44 i
INFO  22:45:38,528 - #28 =
INFO  22:45:38,528 - #43 0
INFO  22:45:38,528 - #31 ;
INFO  22:45:38,529 - #10 read
INFO  22:45:38,529 - #34 (
INFO  22:45:38,529 - #44 c
INFO  22:45:38,529 - #33 .
INFO  22:45:38,529 - #44 i
INFO  22:45:38,529 - #35 )
INFO  22:45:38,529 - #31 ;
INFO  22:45:38,529 - #13 while
INFO  22:45:38,529 - #34 (
INFO  22:45:38,529 - #44 i
INFO  22:45:38,530 - #24 <
INFO  22:45:38,530 - #43 5
INFO  22:45:38,530 - #35 )
INFO  22:45:38,530 - #38 {
INFO  22:45:38,530 - #10 read
INFO  22:45:38,530 - #34 (
INFO  22:45:38,530 - #44 c
INFO  22:45:38,530 - #33 .
INFO  22:45:38,530 - #44 x
INFO  22:45:38,531 - #36 [
INFO  22:45:38,531 - #44 i
INFO  22:45:38,531 - #37 ]
INFO  22:45:38,531 - #35 )
INFO  22:45:38,531 - #31 ;
INFO  22:45:38,531 - #10 read
INFO  22:45:38,531 - #34 (
INFO  22:45:38,531 - #44 c
INFO  22:45:38,531 - #33 .
INFO  22:45:38,532 - #44 theA
INFO  22:45:38,532 - #33 .
INFO  22:45:38,532 - #44 x
INFO  22:45:38,532 - #36 [
INFO  22:45:38,532 - #44 i
INFO  22:45:38,532 - #37 ]
INFO  22:45:38,532 - #35 )
INFO  22:45:38,532 - #31 ;
INFO  22:45:38,533 - #44 i
INFO  22:45:38,533 - #29 ++
INFO  22:45:38,533 - #31 ;
INFO  22:45:38,533 - #39 }
INFO  22:45:38,533 - #9 print
INFO  22:45:38,533 - #34 (
INFO  22:45:38,533 - #44 c
INFO  22:45:38,533 - #33 .
INFO  22:45:38,533 - #44 getValue
INFO  22:45:38,534 - #34 (
INFO  22:45:38,534 - #44 c
INFO  22:45:38,534 - #33 .
INFO  22:45:38,534 - #44 theA
INFO  22:45:38,534 - #33 .
INFO  22:45:38,534 - #44 x
INFO  22:45:38,534 - #36 [
INFO  22:45:38,534 - #43 0
INFO  22:45:38,534 - #37 ]
INFO  22:45:38,534 - #35 )
INFO  22:45:38,535 - #35 )
INFO  22:45:38,535 - #31 ;
INFO  22:45:38,535 - #39 }
INFO  22:45:38,535 - #39 }
INFO  22:45:38,535 - GlobalVar = 14
INFO  22:45:38,535 - GlobalConst = 2
INFO  22:45:38,535 - LocalMainVar = 4
INFO  22:45:38,536 - GlobalArray = 3
INFO  22:45:38,536 - FuncProg = 4
INFO  22:45:38,536 - Blocks = 5
INFO  22:45:38,536 - FuncCalls = 5
INFO  22:45:38,536 - FormalArg = 1
INFO  22:45:38,536 - DefClass = 3
INFO  22:45:38,536 - DefMethodClass = 1
INFO  22:45:54,468 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:45:54,477 - #2 program
INFO  22:45:54,477 - #44 Program
INFO  22:45:54,477 - #4 class
INFO  22:45:54,477 - #44 A
INFO  22:45:54,477 - #38 {
INFO  22:45:54,477 - #44 int
INFO  22:45:54,477 - #44 x
INFO  22:45:54,477 - #36 [
INFO  22:45:54,477 - #37 ]
INFO  22:45:54,478 - #32 ,
INFO  22:45:54,478 - #44 y
INFO  22:45:54,478 - #36 [
INFO  22:45:54,478 - #37 ]
INFO  22:45:54,478 - #31 ;
INFO  22:45:54,478 - #38 {
INFO  22:45:54,478 - #12 void
INFO  22:45:54,478 - #44 aaa
INFO  22:45:54,478 - #34 (
INFO  22:45:54,478 - #35 )
INFO  22:45:54,478 - #44 A
INFO  22:45:54,478 - #44 a
INFO  22:45:54,479 - #31 ;
INFO  22:45:54,479 - #44 C
INFO  22:45:54,479 - #44 c
INFO  22:45:54,479 - #31 ;
INFO  22:45:54,479 - #44 int
INFO  22:45:54,479 - #44 i
INFO  22:45:54,479 - #31 ;
INFO  22:45:54,479 - #44 int
INFO  22:45:54,479 - #44 x
INFO  22:45:54,479 - #36 [
INFO  22:45:54,479 - #37 ]
INFO  22:45:54,479 - #31 ;
INFO  22:45:54,479 - #38 {
INFO  22:45:54,479 - #39 }
INFO  22:45:54,480 - #12 void
INFO  22:45:54,480 - #44 bbb
INFO  22:45:54,480 - #34 (
INFO  22:45:54,480 - #35 )
INFO  22:45:54,480 - #44 A
INFO  22:45:54,480 - #44 a
INFO  22:45:54,480 - #31 ;
INFO  22:45:54,480 - #44 C
INFO  22:45:54,480 - #44 c
INFO  22:45:54,480 - #31 ;
INFO  22:45:54,480 - #44 int
INFO  22:45:54,480 - #44 i
INFO  22:45:54,480 - #31 ;
INFO  22:45:54,481 - #44 int
INFO  22:45:54,481 - #44 x
INFO  22:45:54,481 - #36 [
INFO  22:45:54,481 - #37 ]
INFO  22:45:54,481 - #31 ;
INFO  22:45:54,481 - #38 {
INFO  22:45:54,481 - #39 }
INFO  22:45:54,481 - #12 void
INFO  22:45:54,481 - #44 ccc
INFO  22:45:54,481 - #34 (
INFO  22:45:54,481 - #35 )
INFO  22:45:54,481 - #44 A
INFO  22:45:54,482 - #44 a
INFO  22:45:54,482 - #31 ;
INFO  22:45:54,482 - #44 C
INFO  22:45:54,482 - #44 c
INFO  22:45:54,482 - #31 ;
INFO  22:45:54,482 - #44 int
INFO  22:45:54,482 - #44 i
INFO  22:45:54,482 - #31 ;
INFO  22:45:54,482 - #44 int
INFO  22:45:54,482 - #44 x
INFO  22:45:54,482 - #36 [
INFO  22:45:54,482 - #37 ]
INFO  22:45:54,483 - #31 ;
INFO  22:45:54,483 - #38 {
INFO  22:45:54,483 - #39 }
INFO  22:45:54,483 - #39 }
INFO  22:45:54,483 - #39 }
INFO  22:45:54,483 - #6 const
INFO  22:45:54,483 - #44 int
INFO  22:45:54,483 - #44 pi
INFO  22:45:54,484 - #28 =
INFO  22:45:54,484 - #43 3
INFO  22:45:54,484 - #32 ,
INFO  22:45:54,484 - #44 e
INFO  22:45:54,484 - #28 =
INFO  22:45:54,484 - #43 2
INFO  22:45:54,484 - #31 ;
INFO  22:45:54,484 - #4 class
INFO  22:45:54,485 - #44 B
INFO  22:45:54,485 - #14 extends
INFO  22:45:54,485 - #44 A
INFO  22:45:54,485 - #38 {
INFO  22:45:54,485 - #44 int
INFO  22:45:54,485 - #44 i
INFO  22:45:54,485 - #31 ;
INFO  22:45:54,485 - #44 int
INFO  22:45:54,485 - #44 x
INFO  22:45:54,486 - #36 [
INFO  22:45:54,486 - #37 ]
INFO  22:45:54,486 - #31 ;
INFO  22:45:54,486 - #38 {
INFO  22:45:54,486 - #44 int
INFO  22:45:54,486 - #44 getValue
INFO  22:45:54,486 - #34 (
INFO  22:45:54,486 - #44 int
INFO  22:45:54,486 - #44 a
INFO  22:45:54,486 - #35 )
INFO  22:45:54,486 - #44 int
INFO  22:45:54,486 - #44 b
INFO  22:45:54,487 - #31 ;
INFO  22:45:54,487 - #44 bool
INFO  22:45:54,487 - #44 c
INFO  22:45:54,487 - #31 ;
INFO  22:45:54,487 - #38 {
INFO  22:45:54,487 - #11 return
INFO  22:45:54,487 - #44 this
INFO  22:45:54,487 - #33 .
INFO  22:45:54,487 - #44 i
INFO  22:45:54,487 - #15 +
INFO  22:45:54,487 - #44 this
INFO  22:45:54,488 - #33 .
INFO  22:45:54,488 - #44 x
INFO  22:45:54,488 - #36 [
INFO  22:45:54,488 - #43 0
INFO  22:45:54,488 - #37 ]
INFO  22:45:54,488 - #15 +
INFO  22:45:54,488 - #44 a
INFO  22:45:54,488 - #31 ;
INFO  22:45:54,488 - #39 }
INFO  22:45:54,488 - #39 }
INFO  22:45:54,489 - #39 }
INFO  22:45:54,489 - #4 class
INFO  22:45:54,489 - #44 C
INFO  22:45:54,489 - #14 extends
INFO  22:45:54,489 - #44 B
INFO  22:45:54,489 - #38 {
INFO  22:45:54,489 - #44 A
INFO  22:45:54,489 - #44 theA
INFO  22:45:54,489 - #31 ;
INFO  22:45:54,489 - #44 string
INFO  22:45:54,490 - #44 a
INFO  22:45:54,490 - #31 ;
INFO  22:45:54,490 - #39 }
INFO  22:45:54,490 - #38 {
INFO  22:45:54,490 - #12 void
INFO  22:45:54,490 - #44 main
INFO  22:45:54,490 - #34 (
INFO  22:45:54,490 - #35 )
INFO  22:45:54,490 - #44 A
INFO  22:45:54,490 - #44 a
INFO  22:45:54,490 - #31 ;
INFO  22:45:54,490 - #44 C
INFO  22:45:54,491 - #44 c
INFO  22:45:54,491 - #31 ;
INFO  22:45:54,491 - #44 int
INFO  22:45:54,491 - #44 i
INFO  22:45:54,491 - #31 ;
INFO  22:45:54,491 - #44 int
INFO  22:45:54,491 - #44 x
INFO  22:45:54,491 - #36 [
INFO  22:45:54,491 - #37 ]
INFO  22:45:54,491 - #31 ;
INFO  22:45:54,491 - #38 {
INFO  22:45:54,491 - #44 a
INFO  22:45:54,491 - #28 =
INFO  22:45:54,491 - #8 new
INFO  22:45:54,492 - #44 A
INFO  22:45:54,492 - #31 ;
INFO  22:45:54,492 - #44 a
INFO  22:45:54,492 - #33 .
INFO  22:45:54,492 - #44 x
INFO  22:45:54,492 - #28 =
INFO  22:45:54,492 - #8 new
INFO  22:45:54,492 - #44 int
INFO  22:45:54,492 - #36 [
INFO  22:45:54,493 - #43 5
INFO  22:45:54,493 - #37 ]
INFO  22:45:54,493 - #31 ;
INFO  22:45:54,493 - #44 a
INFO  22:45:54,493 - #33 .
INFO  22:45:54,493 - #44 y
INFO  22:45:54,493 - #28 =
INFO  22:45:54,493 - #8 new
INFO  22:45:54,494 - #44 int
INFO  22:45:54,494 - #36 [
INFO  22:45:54,494 - #43 5
INFO  22:45:54,494 - #37 ]
INFO  22:45:54,494 - #31 ;
INFO  22:45:54,494 - #44 c
INFO  22:45:54,494 - #28 =
INFO  22:45:54,494 - #8 new
INFO  22:45:54,494 - #44 C
INFO  22:45:54,495 - #31 ;
INFO  22:45:54,495 - #44 c
INFO  22:45:54,495 - #33 .
INFO  22:45:54,495 - #44 theA
INFO  22:45:54,495 - #28 =
INFO  22:45:54,495 - #44 a
INFO  22:45:54,495 - #31 ;
INFO  22:45:54,496 - #44 c
INFO  22:45:54,496 - #33 .
INFO  22:45:54,496 - #44 x
INFO  22:45:54,496 - #28 =
INFO  22:45:54,496 - #8 new
INFO  22:45:54,496 - #44 int
INFO  22:45:54,496 - #36 [
INFO  22:45:54,496 - #43 5
INFO  22:45:54,496 - #37 ]
INFO  22:45:54,496 - #31 ;
INFO  22:45:54,497 - #44 x
INFO  22:45:54,497 - #28 =
INFO  22:45:54,497 - #8 new
INFO  22:45:54,497 - #44 int
INFO  22:45:54,497 - #36 [
INFO  22:45:54,497 - #43 3
INFO  22:45:54,497 - #37 ]
INFO  22:45:54,497 - #31 ;
INFO  22:45:54,497 - #44 i
INFO  22:45:54,498 - #28 =
INFO  22:45:54,498 - #43 0
INFO  22:45:54,498 - #31 ;
INFO  22:45:54,498 - #10 read
INFO  22:45:54,498 - #34 (
INFO  22:45:54,498 - #44 c
INFO  22:45:54,498 - #33 .
INFO  22:45:54,498 - #44 i
INFO  22:45:54,498 - #35 )
INFO  22:45:54,499 - #31 ;
INFO  22:45:54,499 - #13 while
INFO  22:45:54,499 - #34 (
INFO  22:45:54,499 - #44 i
INFO  22:45:54,499 - #24 <
INFO  22:45:54,499 - #43 5
INFO  22:45:54,499 - #35 )
INFO  22:45:54,499 - #38 {
INFO  22:45:54,500 - #10 read
INFO  22:45:54,500 - #34 (
INFO  22:45:54,500 - #44 c
INFO  22:45:54,500 - #33 .
INFO  22:45:54,500 - #44 x
INFO  22:45:54,500 - #36 [
INFO  22:45:54,500 - #44 i
INFO  22:45:54,500 - #37 ]
INFO  22:45:54,500 - #35 )
INFO  22:45:54,500 - #31 ;
INFO  22:45:54,501 - #10 read
INFO  22:45:54,501 - #34 (
INFO  22:45:54,501 - #44 c
INFO  22:45:54,501 - #33 .
INFO  22:45:54,501 - #44 theA
INFO  22:45:54,501 - #33 .
INFO  22:45:54,501 - #44 x
INFO  22:45:54,501 - #36 [
INFO  22:45:54,501 - #44 i
INFO  22:45:54,501 - #37 ]
INFO  22:45:54,502 - #35 )
INFO  22:45:54,502 - #31 ;
INFO  22:45:54,502 - #44 i
INFO  22:45:54,502 - #29 ++
INFO  22:45:54,502 - #31 ;
INFO  22:45:54,502 - #39 }
INFO  22:45:54,502 - #9 print
INFO  22:45:54,502 - #34 (
INFO  22:45:54,502 - #44 c
INFO  22:45:54,502 - #33 .
INFO  22:45:54,503 - #44 getValue
INFO  22:45:54,503 - #34 (
INFO  22:45:54,503 - #44 c
INFO  22:45:54,503 - #33 .
INFO  22:45:54,503 - #44 theA
INFO  22:45:54,503 - #33 .
INFO  22:45:54,503 - #44 x
INFO  22:45:54,503 - #36 [
INFO  22:45:54,503 - #43 0
INFO  22:45:54,503 - #37 ]
INFO  22:45:54,503 - #35 )
INFO  22:45:54,503 - #35 )
INFO  22:45:54,503 - #31 ;
INFO  22:45:54,503 - #39 }
INFO  22:45:54,504 - #39 }
INFO  22:45:54,504 - GlobalVar = 2
INFO  22:45:54,504 - GlobalConst = 2
INFO  22:45:54,504 - LocalMainVar = 4
INFO  22:45:54,504 - GlobalArray = 0
INFO  22:45:54,504 - FuncProg = 1
INFO  22:45:54,504 - Blocks = 5
INFO  22:45:54,504 - FuncCalls = 5
INFO  22:45:54,504 - FormalArg = 1
INFO  22:45:54,504 - DefClass = 3
INFO  22:45:54,504 - DefMethodClass = 4
INFO  22:46:52,937 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:46:52,946 - #2 program
INFO  22:46:52,946 - #44 Program
INFO  22:46:52,946 - #4 class
INFO  22:46:52,946 - #44 A
INFO  22:46:52,947 - #38 {
INFO  22:46:52,947 - #44 int
INFO  22:46:52,947 - #44 x
INFO  22:46:52,947 - #36 [
INFO  22:46:52,947 - #37 ]
INFO  22:46:52,947 - #32 ,
INFO  22:46:52,947 - #44 y
INFO  22:46:52,947 - #36 [
INFO  22:46:52,947 - #37 ]
INFO  22:46:52,948 - #31 ;
INFO  22:46:52,948 - #39 }
INFO  22:46:52,948 - #6 const
INFO  22:46:52,948 - #44 int
INFO  22:46:52,948 - #44 pi
INFO  22:46:52,948 - #28 =
INFO  22:46:52,948 - #43 3
INFO  22:46:52,948 - #32 ,
INFO  22:46:52,948 - #44 e
INFO  22:46:52,948 - #28 =
INFO  22:46:52,948 - #43 2
INFO  22:46:52,948 - #31 ;
INFO  22:46:52,948 - #4 class
INFO  22:46:52,948 - #44 B
INFO  22:46:52,949 - #14 extends
INFO  22:46:52,949 - #44 A
INFO  22:46:52,949 - #38 {
INFO  22:46:52,949 - #44 int
INFO  22:46:52,949 - #44 i
INFO  22:46:52,949 - #31 ;
INFO  22:46:52,949 - #44 int
INFO  22:46:52,949 - #44 x
INFO  22:46:52,949 - #36 [
INFO  22:46:52,949 - #37 ]
INFO  22:46:52,949 - #31 ;
INFO  22:46:52,949 - #38 {
INFO  22:46:52,949 - #44 int
INFO  22:46:52,950 - #44 getValue
INFO  22:46:52,950 - #34 (
INFO  22:46:52,950 - #44 int
INFO  22:46:52,950 - #44 a
INFO  22:46:52,950 - #35 )
INFO  22:46:52,950 - #44 int
INFO  22:46:52,950 - #44 b
INFO  22:46:52,950 - #31 ;
INFO  22:46:52,950 - #44 bool
INFO  22:46:52,950 - #44 c
INFO  22:46:52,950 - #31 ;
INFO  22:46:52,950 - #38 {
INFO  22:46:52,951 - #11 return
INFO  22:46:52,951 - #44 this
INFO  22:46:52,951 - #33 .
INFO  22:46:52,951 - #44 i
INFO  22:46:52,951 - #15 +
INFO  22:46:52,951 - #44 this
INFO  22:46:52,951 - #33 .
INFO  22:46:52,951 - #44 x
INFO  22:46:52,951 - #36 [
INFO  22:46:52,952 - #43 0
INFO  22:46:52,952 - #37 ]
INFO  22:46:52,952 - #15 +
INFO  22:46:52,952 - #44 a
INFO  22:46:52,952 - #31 ;
INFO  22:46:52,952 - #39 }
INFO  22:46:52,952 - #39 }
INFO  22:46:52,952 - #39 }
INFO  22:46:52,952 - #4 class
INFO  22:46:52,952 - #44 D
INFO  22:46:52,952 - #38 {
INFO  22:46:52,953 - #38 {
INFO  22:46:52,953 - #12 void
INFO  22:46:52,953 - #44 aaa
INFO  22:46:52,953 - #34 (
INFO  22:46:52,953 - #35 )
INFO  22:46:52,953 - #44 A
INFO  22:46:52,953 - #44 a
INFO  22:46:52,953 - #31 ;
INFO  22:46:52,953 - #44 C
INFO  22:46:52,953 - #44 c
INFO  22:46:52,953 - #31 ;
INFO  22:46:52,953 - #44 int
INFO  22:46:52,953 - #44 i
INFO  22:46:52,953 - #31 ;
INFO  22:46:52,954 - #44 int
INFO  22:46:52,954 - #44 x
INFO  22:46:52,954 - #36 [
INFO  22:46:52,954 - #37 ]
INFO  22:46:52,954 - #31 ;
INFO  22:46:52,954 - #38 {
INFO  22:46:52,954 - #39 }
INFO  22:46:52,954 - #12 void
INFO  22:46:52,954 - #44 bbb
INFO  22:46:52,954 - #34 (
INFO  22:46:52,954 - #35 )
INFO  22:46:52,954 - #44 A
INFO  22:46:52,954 - #44 a
INFO  22:46:52,955 - #31 ;
INFO  22:46:52,955 - #44 C
INFO  22:46:52,955 - #44 c
INFO  22:46:52,955 - #31 ;
INFO  22:46:52,955 - #44 int
INFO  22:46:52,955 - #44 i
INFO  22:46:52,955 - #31 ;
INFO  22:46:52,955 - #44 int
INFO  22:46:52,955 - #44 x
INFO  22:46:52,955 - #36 [
INFO  22:46:52,955 - #37 ]
INFO  22:46:52,955 - #31 ;
INFO  22:46:52,955 - #38 {
INFO  22:46:52,955 - #39 }
INFO  22:46:52,956 - #12 void
INFO  22:46:52,956 - #44 ccc
INFO  22:46:52,956 - #34 (
INFO  22:46:52,956 - #35 )
INFO  22:46:52,956 - #44 A
INFO  22:46:52,956 - #44 a
INFO  22:46:52,956 - #31 ;
INFO  22:46:52,956 - #44 C
INFO  22:46:52,956 - #44 c
INFO  22:46:52,956 - #31 ;
INFO  22:46:52,956 - #44 int
INFO  22:46:52,956 - #44 i
INFO  22:46:52,957 - #31 ;
INFO  22:46:52,957 - #44 int
INFO  22:46:52,957 - #44 x
INFO  22:46:52,957 - #36 [
INFO  22:46:52,957 - #37 ]
INFO  22:46:52,957 - #31 ;
INFO  22:46:52,957 - #38 {
INFO  22:46:52,957 - #39 }
INFO  22:46:52,957 - #39 }
INFO  22:46:52,957 - #39 }
INFO  22:46:52,957 - #4 class
INFO  22:46:52,957 - #44 C
INFO  22:46:52,957 - #14 extends
INFO  22:46:52,958 - #44 B
INFO  22:46:52,958 - #38 {
INFO  22:46:52,958 - #44 A
INFO  22:46:52,958 - #44 theA
INFO  22:46:52,958 - #31 ;
INFO  22:46:52,958 - #44 string
INFO  22:46:52,958 - #44 a
INFO  22:46:52,958 - #31 ;
INFO  22:46:52,958 - #39 }
INFO  22:46:52,958 - #38 {
INFO  22:46:52,958 - #12 void
INFO  22:46:52,958 - #44 main
INFO  22:46:52,958 - #34 (
INFO  22:46:52,959 - #35 )
INFO  22:46:52,959 - #44 A
INFO  22:46:52,959 - #44 a
INFO  22:46:52,959 - #31 ;
INFO  22:46:52,959 - #44 C
INFO  22:46:52,959 - #44 c
INFO  22:46:52,959 - #31 ;
INFO  22:46:52,959 - #44 int
INFO  22:46:52,959 - #44 i
INFO  22:46:52,959 - #31 ;
INFO  22:46:52,959 - #44 int
INFO  22:46:52,959 - #44 x
INFO  22:46:52,959 - #36 [
INFO  22:46:52,960 - #37 ]
INFO  22:46:52,960 - #31 ;
INFO  22:46:52,960 - #38 {
INFO  22:46:52,960 - #44 a
INFO  22:46:52,960 - #28 =
INFO  22:46:52,960 - #8 new
INFO  22:46:52,960 - #44 A
INFO  22:46:52,960 - #31 ;
INFO  22:46:52,960 - #44 a
INFO  22:46:52,960 - #33 .
INFO  22:46:52,961 - #44 x
INFO  22:46:52,961 - #28 =
INFO  22:46:52,961 - #8 new
INFO  22:46:52,961 - #44 int
INFO  22:46:52,961 - #36 [
INFO  22:46:52,961 - #43 5
INFO  22:46:52,961 - #37 ]
INFO  22:46:52,961 - #31 ;
INFO  22:46:52,961 - #44 a
INFO  22:46:52,962 - #33 .
INFO  22:46:52,962 - #44 y
INFO  22:46:52,962 - #28 =
INFO  22:46:52,962 - #8 new
INFO  22:46:52,962 - #44 int
INFO  22:46:52,962 - #36 [
INFO  22:46:52,962 - #43 5
INFO  22:46:52,962 - #37 ]
INFO  22:46:52,962 - #31 ;
INFO  22:46:52,962 - #44 c
INFO  22:46:52,962 - #28 =
INFO  22:46:52,962 - #8 new
INFO  22:46:52,962 - #44 C
INFO  22:46:52,963 - #31 ;
INFO  22:46:52,963 - #44 c
INFO  22:46:52,963 - #33 .
INFO  22:46:52,963 - #44 theA
INFO  22:46:52,963 - #28 =
INFO  22:46:52,963 - #44 a
INFO  22:46:52,963 - #31 ;
INFO  22:46:52,963 - #44 c
INFO  22:46:52,963 - #33 .
INFO  22:46:52,963 - #44 x
INFO  22:46:52,963 - #28 =
INFO  22:46:52,963 - #8 new
INFO  22:46:52,963 - #44 int
INFO  22:46:52,963 - #36 [
INFO  22:46:52,964 - #43 5
INFO  22:46:52,964 - #37 ]
INFO  22:46:52,964 - #31 ;
INFO  22:46:52,964 - #44 x
INFO  22:46:52,964 - #28 =
INFO  22:46:52,964 - #8 new
INFO  22:46:52,964 - #44 int
INFO  22:46:52,964 - #36 [
INFO  22:46:52,964 - #43 3
INFO  22:46:52,964 - #37 ]
INFO  22:46:52,965 - #31 ;
INFO  22:46:52,965 - #44 i
INFO  22:46:52,965 - #28 =
INFO  22:46:52,965 - #43 0
INFO  22:46:52,965 - #31 ;
INFO  22:46:52,965 - #10 read
INFO  22:46:52,965 - #34 (
INFO  22:46:52,965 - #44 c
INFO  22:46:52,965 - #33 .
INFO  22:46:52,965 - #44 i
INFO  22:46:52,965 - #35 )
INFO  22:46:52,966 - #31 ;
INFO  22:46:52,966 - #13 while
INFO  22:46:52,966 - #34 (
INFO  22:46:52,966 - #44 i
INFO  22:46:52,966 - #24 <
INFO  22:46:52,966 - #43 5
INFO  22:46:52,966 - #35 )
INFO  22:46:52,966 - #38 {
INFO  22:46:52,966 - #10 read
INFO  22:46:52,966 - #34 (
INFO  22:46:52,966 - #44 c
INFO  22:46:52,966 - #33 .
INFO  22:46:52,966 - #44 x
INFO  22:46:52,967 - #36 [
INFO  22:46:52,967 - #44 i
INFO  22:46:52,967 - #37 ]
INFO  22:46:52,967 - #35 )
INFO  22:46:52,967 - #31 ;
INFO  22:46:52,967 - #10 read
INFO  22:46:52,967 - #34 (
INFO  22:46:52,967 - #44 c
INFO  22:46:52,967 - #33 .
INFO  22:46:52,967 - #44 theA
INFO  22:46:52,967 - #33 .
INFO  22:46:52,968 - #44 x
INFO  22:46:52,968 - #36 [
INFO  22:46:52,968 - #44 i
INFO  22:46:52,968 - #37 ]
INFO  22:46:52,968 - #35 )
INFO  22:46:52,968 - #31 ;
INFO  22:46:52,968 - #44 i
INFO  22:46:52,968 - #29 ++
INFO  22:46:52,968 - #31 ;
INFO  22:46:52,968 - #39 }
INFO  22:46:52,968 - #9 print
INFO  22:46:52,969 - #34 (
INFO  22:46:52,969 - #44 c
INFO  22:46:52,969 - #33 .
INFO  22:46:52,969 - #44 getValue
INFO  22:46:52,969 - #34 (
INFO  22:46:52,969 - #44 c
INFO  22:46:52,969 - #33 .
INFO  22:46:52,969 - #44 theA
INFO  22:46:52,969 - #33 .
INFO  22:46:52,969 - #44 x
INFO  22:46:52,969 - #36 [
INFO  22:46:52,969 - #43 0
INFO  22:46:52,970 - #37 ]
INFO  22:46:52,970 - #35 )
INFO  22:46:52,970 - #35 )
INFO  22:46:52,970 - #31 ;
INFO  22:46:52,970 - #39 }
INFO  22:46:52,970 - #39 }
INFO  22:46:52,970 - GlobalVar = 14
INFO  22:46:52,970 - GlobalConst = 2
INFO  22:46:52,970 - LocalMainVar = 4
INFO  22:46:52,970 - GlobalArray = 3
INFO  22:46:52,970 - FuncProg = 4
INFO  22:46:52,970 - Blocks = 5
INFO  22:46:52,970 - FuncCalls = 5
INFO  22:46:52,971 - FormalArg = 1
INFO  22:46:52,971 - DefClass = 4
INFO  22:46:52,971 - DefMethodClass = 1
INFO  22:48:17,064 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:48:17,073 - #2 program
INFO  22:48:17,073 - #44 Program
INFO  22:48:17,073 - #4 class
INFO  22:48:17,073 - #44 A
INFO  22:48:17,073 - #38 {
INFO  22:48:17,073 - #44 int
INFO  22:48:17,073 - #44 x
INFO  22:48:17,073 - #36 [
INFO  22:48:17,074 - #37 ]
INFO  22:48:17,074 - #32 ,
INFO  22:48:17,074 - #44 y
INFO  22:48:17,074 - #36 [
INFO  22:48:17,074 - #37 ]
INFO  22:48:17,074 - #31 ;
INFO  22:48:17,074 - #39 }
INFO  22:48:17,074 - #6 const
INFO  22:48:17,074 - #44 int
INFO  22:48:17,074 - #44 pi
INFO  22:48:17,074 - #28 =
INFO  22:48:17,074 - #43 3
INFO  22:48:17,075 - #32 ,
INFO  22:48:17,075 - #44 e
INFO  22:48:17,075 - #28 =
INFO  22:48:17,075 - #43 2
INFO  22:48:17,075 - #31 ;
INFO  22:48:17,075 - #4 class
INFO  22:48:17,075 - #44 D
INFO  22:48:17,075 - #38 {
INFO  22:48:17,075 - #38 {
INFO  22:48:17,075 - #12 void
INFO  22:48:17,075 - #44 aaa
INFO  22:48:17,075 - #34 (
INFO  22:48:17,075 - #35 )
INFO  22:48:17,076 - #44 A
INFO  22:48:17,076 - #44 a
INFO  22:48:17,076 - #31 ;
INFO  22:48:17,076 - #44 C
INFO  22:48:17,076 - #44 c
INFO  22:48:17,076 - #31 ;
INFO  22:48:17,076 - #44 int
INFO  22:48:17,076 - #44 i
INFO  22:48:17,076 - #31 ;
INFO  22:48:17,076 - #44 int
INFO  22:48:17,076 - #44 x
INFO  22:48:17,076 - #36 [
INFO  22:48:17,076 - #37 ]
INFO  22:48:17,077 - #31 ;
INFO  22:48:17,077 - #38 {
INFO  22:48:17,077 - #39 }
INFO  22:48:17,077 - #12 void
INFO  22:48:17,077 - #44 bbb
INFO  22:48:17,077 - #34 (
INFO  22:48:17,077 - #35 )
INFO  22:48:17,077 - #44 A
INFO  22:48:17,077 - #44 a
INFO  22:48:17,077 - #31 ;
INFO  22:48:17,077 - #44 C
INFO  22:48:17,077 - #44 c
INFO  22:48:17,078 - #31 ;
INFO  22:48:17,078 - #44 int
INFO  22:48:17,078 - #44 i
INFO  22:48:17,078 - #31 ;
INFO  22:48:17,078 - #44 int
INFO  22:48:17,078 - #44 x
INFO  22:48:17,078 - #36 [
INFO  22:48:17,078 - #37 ]
INFO  22:48:17,078 - #31 ;
INFO  22:48:17,078 - #38 {
INFO  22:48:17,078 - #39 }
INFO  22:48:17,078 - #12 void
INFO  22:48:17,078 - #44 ccc
INFO  22:48:17,079 - #34 (
INFO  22:48:17,079 - #35 )
INFO  22:48:17,079 - #44 A
INFO  22:48:17,079 - #44 a
INFO  22:48:17,079 - #31 ;
INFO  22:48:17,079 - #44 C
INFO  22:48:17,079 - #44 c
INFO  22:48:17,079 - #31 ;
INFO  22:48:17,079 - #44 int
INFO  22:48:17,079 - #44 i
INFO  22:48:17,080 - #31 ;
INFO  22:48:17,080 - #44 int
INFO  22:48:17,080 - #44 x
INFO  22:48:17,080 - #36 [
INFO  22:48:17,080 - #37 ]
INFO  22:48:17,080 - #31 ;
INFO  22:48:17,080 - #38 {
INFO  22:48:17,080 - #39 }
INFO  22:48:17,080 - #39 }
INFO  22:48:17,080 - #39 }
INFO  22:48:17,081 - #4 class
INFO  22:48:17,081 - #44 B
INFO  22:48:17,081 - #14 extends
INFO  22:48:17,081 - #44 A
INFO  22:48:17,081 - #38 {
INFO  22:48:17,081 - #44 int
INFO  22:48:17,081 - #44 i
INFO  22:48:17,081 - #31 ;
INFO  22:48:17,081 - #44 int
INFO  22:48:17,082 - #44 x
INFO  22:48:17,082 - #36 [
INFO  22:48:17,082 - #37 ]
INFO  22:48:17,082 - #31 ;
INFO  22:48:17,082 - #38 {
INFO  22:48:17,082 - #44 int
INFO  22:48:17,082 - #44 getValue
INFO  22:48:17,082 - #34 (
INFO  22:48:17,082 - #44 int
INFO  22:48:17,082 - #44 a
INFO  22:48:17,082 - #35 )
INFO  22:48:17,083 - #44 int
INFO  22:48:17,083 - #44 b
INFO  22:48:17,083 - #31 ;
INFO  22:48:17,083 - #44 bool
INFO  22:48:17,083 - #44 c
INFO  22:48:17,083 - #31 ;
INFO  22:48:17,083 - #38 {
INFO  22:48:17,083 - #11 return
INFO  22:48:17,083 - #44 this
INFO  22:48:17,083 - #33 .
INFO  22:48:17,083 - #44 i
INFO  22:48:17,084 - #15 +
INFO  22:48:17,084 - #44 this
INFO  22:48:17,084 - #33 .
INFO  22:48:17,084 - #44 x
INFO  22:48:17,084 - #36 [
INFO  22:48:17,084 - #43 0
INFO  22:48:17,084 - #37 ]
INFO  22:48:17,084 - #15 +
INFO  22:48:17,084 - #44 a
INFO  22:48:17,085 - #31 ;
INFO  22:48:17,085 - #39 }
INFO  22:48:17,085 - #39 }
INFO  22:48:17,085 - #39 }
INFO  22:48:17,085 - #4 class
INFO  22:48:17,085 - #44 C
INFO  22:48:17,085 - #14 extends
INFO  22:48:17,085 - #44 B
INFO  22:48:17,085 - #38 {
INFO  22:48:17,085 - #44 A
INFO  22:48:17,085 - #44 theA
INFO  22:48:17,085 - #31 ;
INFO  22:48:17,086 - #44 string
INFO  22:48:17,086 - #44 a
INFO  22:48:17,086 - #31 ;
INFO  22:48:17,086 - #39 }
INFO  22:48:17,086 - #38 {
INFO  22:48:17,086 - #12 void
INFO  22:48:17,086 - #44 main
INFO  22:48:17,086 - #34 (
INFO  22:48:17,086 - #35 )
INFO  22:48:17,086 - #44 A
INFO  22:48:17,086 - #44 a
INFO  22:48:17,086 - #31 ;
INFO  22:48:17,086 - #44 C
INFO  22:48:17,087 - #44 c
INFO  22:48:17,087 - #31 ;
INFO  22:48:17,087 - #44 int
INFO  22:48:17,087 - #44 i
INFO  22:48:17,087 - #31 ;
INFO  22:48:17,087 - #44 int
INFO  22:48:17,087 - #44 x
INFO  22:48:17,087 - #36 [
INFO  22:48:17,087 - #37 ]
INFO  22:48:17,088 - #31 ;
INFO  22:48:17,088 - #38 {
INFO  22:48:17,088 - #44 a
INFO  22:48:17,088 - #28 =
INFO  22:48:17,088 - #8 new
INFO  22:48:17,088 - #44 A
INFO  22:48:17,088 - #31 ;
INFO  22:48:17,089 - #44 a
INFO  22:48:17,089 - #33 .
INFO  22:48:17,089 - #44 x
INFO  22:48:17,089 - #28 =
INFO  22:48:17,089 - #8 new
INFO  22:48:17,089 - #44 int
INFO  22:48:17,089 - #36 [
INFO  22:48:17,090 - #43 5
INFO  22:48:17,090 - #37 ]
INFO  22:48:17,090 - #31 ;
INFO  22:48:17,090 - #44 a
INFO  22:48:17,090 - #33 .
INFO  22:48:17,090 - #44 y
INFO  22:48:17,090 - #28 =
INFO  22:48:17,090 - #8 new
INFO  22:48:17,090 - #44 int
INFO  22:48:17,091 - #36 [
INFO  22:48:17,091 - #43 5
INFO  22:48:17,091 - #37 ]
INFO  22:48:17,091 - #31 ;
INFO  22:48:17,091 - #44 c
INFO  22:48:17,091 - #28 =
INFO  22:48:17,091 - #8 new
INFO  22:48:17,091 - #44 C
INFO  22:48:17,091 - #31 ;
INFO  22:48:17,092 - #44 c
INFO  22:48:17,092 - #33 .
INFO  22:48:17,092 - #44 theA
INFO  22:48:17,092 - #28 =
INFO  22:48:17,092 - #44 a
INFO  22:48:17,092 - #31 ;
INFO  22:48:17,092 - #44 c
INFO  22:48:17,092 - #33 .
INFO  22:48:17,093 - #44 x
INFO  22:48:17,093 - #28 =
INFO  22:48:17,093 - #8 new
INFO  22:48:17,093 - #44 int
INFO  22:48:17,093 - #36 [
INFO  22:48:17,093 - #43 5
INFO  22:48:17,093 - #37 ]
INFO  22:48:17,093 - #31 ;
INFO  22:48:17,093 - #44 x
INFO  22:48:17,094 - #28 =
INFO  22:48:17,094 - #8 new
INFO  22:48:17,094 - #44 int
INFO  22:48:17,094 - #36 [
INFO  22:48:17,094 - #43 3
INFO  22:48:17,094 - #37 ]
INFO  22:48:17,094 - #31 ;
INFO  22:48:17,094 - #44 i
INFO  22:48:17,095 - #28 =
INFO  22:48:17,095 - #43 0
INFO  22:48:17,095 - #31 ;
INFO  22:48:17,095 - #10 read
INFO  22:48:17,095 - #34 (
INFO  22:48:17,095 - #44 c
INFO  22:48:17,095 - #33 .
INFO  22:48:17,095 - #44 i
INFO  22:48:17,095 - #35 )
INFO  22:48:17,096 - #31 ;
INFO  22:48:17,096 - #13 while
INFO  22:48:17,096 - #34 (
INFO  22:48:17,096 - #44 i
INFO  22:48:17,096 - #24 <
INFO  22:48:17,096 - #43 5
INFO  22:48:17,096 - #35 )
INFO  22:48:17,096 - #38 {
INFO  22:48:17,097 - #10 read
INFO  22:48:17,097 - #34 (
INFO  22:48:17,097 - #44 c
INFO  22:48:17,097 - #33 .
INFO  22:48:17,097 - #44 x
INFO  22:48:17,097 - #36 [
INFO  22:48:17,097 - #44 i
INFO  22:48:17,097 - #37 ]
INFO  22:48:17,097 - #35 )
INFO  22:48:17,097 - #31 ;
INFO  22:48:17,098 - #10 read
INFO  22:48:17,098 - #34 (
INFO  22:48:17,098 - #44 c
INFO  22:48:17,098 - #33 .
INFO  22:48:17,098 - #44 theA
INFO  22:48:17,098 - #33 .
INFO  22:48:17,098 - #44 x
INFO  22:48:17,098 - #36 [
INFO  22:48:17,098 - #44 i
INFO  22:48:17,099 - #37 ]
INFO  22:48:17,099 - #35 )
INFO  22:48:17,099 - #31 ;
INFO  22:48:17,099 - #44 i
INFO  22:48:17,099 - #29 ++
INFO  22:48:17,099 - #31 ;
INFO  22:48:17,099 - #39 }
INFO  22:48:17,099 - #9 print
INFO  22:48:17,100 - #34 (
INFO  22:48:17,100 - #44 c
INFO  22:48:17,100 - #33 .
INFO  22:48:17,100 - #44 getValue
INFO  22:48:17,100 - #34 (
INFO  22:48:17,100 - #44 c
INFO  22:48:17,100 - #33 .
INFO  22:48:17,100 - #44 theA
INFO  22:48:17,100 - #33 .
INFO  22:48:17,100 - #44 x
INFO  22:48:17,100 - #36 [
INFO  22:48:17,100 - #43 0
INFO  22:48:17,100 - #37 ]
INFO  22:48:17,101 - #35 )
INFO  22:48:17,101 - #35 )
INFO  22:48:17,101 - #31 ;
INFO  22:48:17,101 - #39 }
INFO  22:48:17,101 - #39 }
INFO  22:48:17,101 - GlobalVar = 6
INFO  22:48:17,101 - GlobalConst = 2
INFO  22:48:17,101 - LocalMainVar = 4
INFO  22:48:17,101 - GlobalArray = 1
INFO  22:48:17,101 - FuncProg = 2
INFO  22:48:17,101 - Blocks = 5
INFO  22:48:17,101 - FuncCalls = 5
INFO  22:48:17,101 - FormalArg = 1
INFO  22:48:17,102 - DefClass = 4
INFO  22:48:17,102 - DefMethodClass = 3
INFO  22:48:27,532 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:48:27,541 - #2 program
INFO  22:48:27,541 - #44 Program
INFO  22:48:27,541 - #4 class
INFO  22:48:27,541 - #44 A
INFO  22:48:27,541 - #38 {
INFO  22:48:27,541 - #44 int
INFO  22:48:27,542 - #44 x
INFO  22:48:27,542 - #36 [
INFO  22:48:27,542 - #37 ]
INFO  22:48:27,542 - #32 ,
INFO  22:48:27,542 - #44 y
INFO  22:48:27,542 - #36 [
INFO  22:48:27,542 - #37 ]
INFO  22:48:27,542 - #31 ;
INFO  22:48:27,542 - #39 }
INFO  22:48:27,542 - #6 const
INFO  22:48:27,543 - #44 int
INFO  22:48:27,543 - #44 pi
INFO  22:48:27,543 - #28 =
INFO  22:48:27,543 - #43 3
INFO  22:48:27,543 - #32 ,
INFO  22:48:27,543 - #44 e
INFO  22:48:27,543 - #28 =
INFO  22:48:27,543 - #43 2
INFO  22:48:27,543 - #31 ;
INFO  22:48:27,543 - #4 class
INFO  22:48:27,543 - #44 D
INFO  22:48:27,543 - #38 {
INFO  22:48:27,543 - #38 {
INFO  22:48:27,544 - #12 void
INFO  22:48:27,544 - #44 aaa
INFO  22:48:27,544 - #34 (
INFO  22:48:27,544 - #35 )
INFO  22:48:27,544 - #44 A
INFO  22:48:27,544 - #44 a
INFO  22:48:27,544 - #31 ;
INFO  22:48:27,544 - #44 C
INFO  22:48:27,544 - #44 c
INFO  22:48:27,544 - #31 ;
INFO  22:48:27,544 - #44 int
INFO  22:48:27,544 - #44 i
INFO  22:48:27,544 - #31 ;
INFO  22:48:27,545 - #44 int
INFO  22:48:27,545 - #44 x
INFO  22:48:27,545 - #36 [
INFO  22:48:27,545 - #37 ]
INFO  22:48:27,545 - #31 ;
INFO  22:48:27,545 - #38 {
INFO  22:48:27,545 - #39 }
INFO  22:48:27,545 - #12 void
INFO  22:48:27,545 - #44 bbb
INFO  22:48:27,545 - #34 (
INFO  22:48:27,545 - #35 )
INFO  22:48:27,545 - #44 A
INFO  22:48:27,546 - #44 a
INFO  22:48:27,546 - #31 ;
INFO  22:48:27,546 - #44 C
INFO  22:48:27,546 - #44 c
INFO  22:48:27,546 - #31 ;
INFO  22:48:27,546 - #44 int
INFO  22:48:27,546 - #44 i
INFO  22:48:27,546 - #31 ;
INFO  22:48:27,546 - #44 int
INFO  22:48:27,546 - #44 x
INFO  22:48:27,546 - #36 [
INFO  22:48:27,546 - #37 ]
INFO  22:48:27,547 - #31 ;
INFO  22:48:27,547 - #38 {
INFO  22:48:27,547 - #39 }
INFO  22:48:27,547 - #12 void
INFO  22:48:27,547 - #44 ccc
INFO  22:48:27,547 - #34 (
INFO  22:48:27,547 - #35 )
INFO  22:48:27,547 - #44 A
INFO  22:48:27,547 - #44 a
INFO  22:48:27,547 - #31 ;
INFO  22:48:27,548 - #44 C
INFO  22:48:27,548 - #44 c
INFO  22:48:27,548 - #31 ;
INFO  22:48:27,548 - #44 int
INFO  22:48:27,548 - #44 i
INFO  22:48:27,548 - #31 ;
INFO  22:48:27,548 - #44 int
INFO  22:48:27,548 - #44 x
INFO  22:48:27,549 - #36 [
INFO  22:48:27,549 - #37 ]
INFO  22:48:27,549 - #31 ;
INFO  22:48:27,549 - #38 {
INFO  22:48:27,549 - #39 }
INFO  22:48:27,549 - #39 }
INFO  22:48:27,549 - #39 }
INFO  22:48:27,549 - #4 class
INFO  22:48:27,549 - #44 B
INFO  22:48:27,549 - #14 extends
INFO  22:48:27,549 - #44 A
INFO  22:48:27,550 - #38 {
INFO  22:48:27,550 - #44 int
INFO  22:48:27,550 - #44 i
INFO  22:48:27,550 - #31 ;
INFO  22:48:27,550 - #44 int
INFO  22:48:27,550 - #44 x
INFO  22:48:27,550 - #36 [
INFO  22:48:27,550 - #37 ]
INFO  22:48:27,550 - #31 ;
INFO  22:48:27,550 - #38 {
INFO  22:48:27,550 - #44 int
INFO  22:48:27,551 - #44 getValue
INFO  22:48:27,551 - #34 (
INFO  22:48:27,551 - #44 int
INFO  22:48:27,551 - #44 a
INFO  22:48:27,551 - #35 )
INFO  22:48:27,551 - #44 int
INFO  22:48:27,551 - #44 b
INFO  22:48:27,551 - #31 ;
INFO  22:48:27,551 - #44 bool
INFO  22:48:27,551 - #44 c
INFO  22:48:27,551 - #31 ;
INFO  22:48:27,551 - #38 {
INFO  22:48:27,552 - #11 return
INFO  22:48:27,552 - #44 this
INFO  22:48:27,552 - #33 .
INFO  22:48:27,552 - #44 i
INFO  22:48:27,552 - #15 +
INFO  22:48:27,552 - #44 this
INFO  22:48:27,552 - #33 .
INFO  22:48:27,552 - #44 x
INFO  22:48:27,552 - #36 [
INFO  22:48:27,552 - #43 0
INFO  22:48:27,553 - #37 ]
INFO  22:48:27,553 - #15 +
INFO  22:48:27,553 - #44 a
INFO  22:48:27,553 - #31 ;
INFO  22:48:27,553 - #39 }
INFO  22:48:27,553 - #39 }
INFO  22:48:27,553 - #39 }
INFO  22:48:27,553 - #4 class
INFO  22:48:27,553 - #44 C
INFO  22:48:27,554 - #14 extends
INFO  22:48:27,554 - #44 B
INFO  22:48:27,554 - #38 {
INFO  22:48:27,554 - #44 A
INFO  22:48:27,554 - #44 theA
INFO  22:48:27,554 - #31 ;
INFO  22:48:27,554 - #44 string
INFO  22:48:27,554 - #44 a
INFO  22:48:27,554 - #31 ;
INFO  22:48:27,554 - #39 }
INFO  22:48:27,554 - #38 {
INFO  22:48:27,555 - #12 void
INFO  22:48:27,555 - #44 main
INFO  22:48:27,555 - #34 (
INFO  22:48:27,555 - #35 )
INFO  22:48:27,555 - #44 A
INFO  22:48:27,555 - #44 a
INFO  22:48:27,555 - #31 ;
INFO  22:48:27,555 - #44 C
INFO  22:48:27,555 - #44 c
INFO  22:48:27,555 - #31 ;
INFO  22:48:27,555 - #44 int
INFO  22:48:27,555 - #44 i
INFO  22:48:27,556 - #31 ;
INFO  22:48:27,556 - #44 int
INFO  22:48:27,556 - #44 x
INFO  22:48:27,556 - #36 [
INFO  22:48:27,556 - #37 ]
INFO  22:48:27,556 - #31 ;
INFO  22:48:27,556 - #38 {
INFO  22:48:27,556 - #44 a
INFO  22:48:27,556 - #28 =
INFO  22:48:27,556 - #8 new
INFO  22:48:27,556 - #44 A
INFO  22:48:27,556 - #31 ;
INFO  22:48:27,557 - #44 a
INFO  22:48:27,557 - #33 .
INFO  22:48:27,557 - #44 x
INFO  22:48:27,557 - #28 =
INFO  22:48:27,557 - #8 new
INFO  22:48:27,557 - #44 int
INFO  22:48:27,557 - #36 [
INFO  22:48:27,557 - #43 5
INFO  22:48:27,558 - #37 ]
INFO  22:48:27,558 - #31 ;
INFO  22:48:27,558 - #44 a
INFO  22:48:27,558 - #33 .
INFO  22:48:27,558 - #44 y
INFO  22:48:27,558 - #28 =
INFO  22:48:27,558 - #8 new
INFO  22:48:27,558 - #44 int
INFO  22:48:27,558 - #36 [
INFO  22:48:27,558 - #43 5
INFO  22:48:27,559 - #37 ]
INFO  22:48:27,559 - #31 ;
INFO  22:48:27,559 - #44 c
INFO  22:48:27,559 - #28 =
INFO  22:48:27,559 - #8 new
INFO  22:48:27,559 - #44 C
INFO  22:48:27,559 - #31 ;
INFO  22:48:27,559 - #44 c
INFO  22:48:27,560 - #33 .
INFO  22:48:27,560 - #44 theA
INFO  22:48:27,560 - #28 =
INFO  22:48:27,560 - #44 a
INFO  22:48:27,560 - #31 ;
INFO  22:48:27,560 - #44 c
INFO  22:48:27,560 - #33 .
INFO  22:48:27,560 - #44 x
INFO  22:48:27,560 - #28 =
INFO  22:48:27,560 - #8 new
INFO  22:48:27,560 - #44 int
INFO  22:48:27,561 - #36 [
INFO  22:48:27,561 - #43 5
INFO  22:48:27,561 - #37 ]
INFO  22:48:27,561 - #31 ;
INFO  22:48:27,561 - #44 x
INFO  22:48:27,561 - #28 =
INFO  22:48:27,561 - #8 new
INFO  22:48:27,561 - #44 int
INFO  22:48:27,561 - #36 [
INFO  22:48:27,561 - #43 3
INFO  22:48:27,561 - #37 ]
INFO  22:48:27,562 - #31 ;
INFO  22:48:27,562 - #44 i
INFO  22:48:27,562 - #28 =
INFO  22:48:27,562 - #43 0
INFO  22:48:27,562 - #31 ;
INFO  22:48:27,562 - #10 read
INFO  22:48:27,562 - #34 (
INFO  22:48:27,562 - #44 c
INFO  22:48:27,562 - #33 .
INFO  22:48:27,562 - #44 i
INFO  22:48:27,563 - #35 )
INFO  22:48:27,563 - #31 ;
INFO  22:48:27,563 - #13 while
INFO  22:48:27,563 - #34 (
INFO  22:48:27,563 - #44 i
INFO  22:48:27,563 - #24 <
INFO  22:48:27,563 - #43 5
INFO  22:48:27,563 - #35 )
INFO  22:48:27,563 - #38 {
INFO  22:48:27,563 - #10 read
INFO  22:48:27,564 - #34 (
INFO  22:48:27,564 - #44 c
INFO  22:48:27,564 - #33 .
INFO  22:48:27,564 - #44 x
INFO  22:48:27,564 - #36 [
INFO  22:48:27,564 - #44 i
INFO  22:48:27,564 - #37 ]
INFO  22:48:27,564 - #35 )
INFO  22:48:27,564 - #31 ;
INFO  22:48:27,565 - #10 read
INFO  22:48:27,565 - #34 (
INFO  22:48:27,565 - #44 c
INFO  22:48:27,565 - #33 .
INFO  22:48:27,565 - #44 theA
INFO  22:48:27,565 - #33 .
INFO  22:48:27,565 - #44 x
INFO  22:48:27,565 - #36 [
INFO  22:48:27,565 - #44 i
INFO  22:48:27,565 - #37 ]
INFO  22:48:27,565 - #35 )
INFO  22:48:27,566 - #31 ;
INFO  22:48:27,566 - #44 i
INFO  22:48:27,566 - #29 ++
INFO  22:48:27,566 - #31 ;
INFO  22:48:27,566 - #39 }
INFO  22:48:27,566 - #9 print
INFO  22:48:27,566 - #34 (
INFO  22:48:27,566 - #44 c
INFO  22:48:27,566 - #33 .
INFO  22:48:27,566 - #44 getValue
INFO  22:48:27,566 - #34 (
INFO  22:48:27,566 - #44 c
INFO  22:48:27,566 - #33 .
INFO  22:48:27,567 - #44 theA
INFO  22:48:27,567 - #33 .
INFO  22:48:27,567 - #44 x
INFO  22:48:27,567 - #36 [
INFO  22:48:27,567 - #43 0
INFO  22:48:27,567 - #37 ]
INFO  22:48:27,567 - #35 )
INFO  22:48:27,567 - #35 )
INFO  22:48:27,567 - #31 ;
INFO  22:48:27,567 - #39 }
INFO  22:48:27,567 - #39 }
INFO  22:48:27,567 - GlobalVar = 6
INFO  22:48:27,568 - GlobalConst = 2
INFO  22:48:27,568 - LocalMainVar = 4
INFO  22:48:27,568 - GlobalArray = 1
INFO  22:48:27,568 - FuncProg = 2
INFO  22:48:27,568 - Blocks = 5
INFO  22:48:27,568 - FuncCalls = 5
INFO  22:48:27,568 - FormalArg = 1
INFO  22:48:27,568 - DefClass = 4
INFO  22:48:27,568 - DefMethodClass = 3
INFO  22:48:47,923 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:48:47,931 - #2 program
INFO  22:48:47,932 - #44 Program
INFO  22:48:47,932 - #4 class
INFO  22:48:47,932 - #44 A
INFO  22:48:47,932 - #38 {
INFO  22:48:47,932 - #44 int
INFO  22:48:47,932 - #44 x
INFO  22:48:47,932 - #36 [
INFO  22:48:47,932 - #37 ]
INFO  22:48:47,933 - #32 ,
INFO  22:48:47,933 - #44 y
INFO  22:48:47,933 - #36 [
INFO  22:48:47,933 - #37 ]
INFO  22:48:47,933 - #31 ;
INFO  22:48:47,933 - #39 }
INFO  22:48:47,933 - #6 const
INFO  22:48:47,933 - #44 int
INFO  22:48:47,933 - #44 pi
INFO  22:48:47,933 - #28 =
INFO  22:48:47,933 - #43 3
INFO  22:48:47,933 - #32 ,
INFO  22:48:47,934 - #44 e
INFO  22:48:47,934 - #28 =
INFO  22:48:47,934 - #43 2
INFO  22:48:47,934 - #31 ;
INFO  22:48:47,934 - #4 class
INFO  22:48:47,934 - #44 D
INFO  22:48:47,934 - #38 {
INFO  22:48:47,934 - #38 {
INFO  22:48:47,934 - #12 void
INFO  22:48:47,934 - #44 aaa
INFO  22:48:47,934 - #34 (
INFO  22:48:47,934 - #35 )
INFO  22:48:47,934 - #44 A
INFO  22:48:47,935 - #44 a
INFO  22:48:47,935 - #31 ;
INFO  22:48:47,935 - #44 C
INFO  22:48:47,935 - #44 c
INFO  22:48:47,935 - #31 ;
INFO  22:48:47,935 - #44 int
INFO  22:48:47,935 - #44 i
INFO  22:48:47,935 - #31 ;
INFO  22:48:47,935 - #44 int
INFO  22:48:47,935 - #44 x
INFO  22:48:47,935 - #36 [
INFO  22:48:47,935 - #37 ]
INFO  22:48:47,935 - #31 ;
INFO  22:48:47,935 - #38 {
INFO  22:48:47,936 - #39 }
INFO  22:48:47,936 - #12 void
INFO  22:48:47,936 - #44 bbb
INFO  22:48:47,936 - #34 (
INFO  22:48:47,936 - #35 )
INFO  22:48:47,936 - #44 A
INFO  22:48:47,936 - #44 a
INFO  22:48:47,936 - #31 ;
INFO  22:48:47,937 - #44 C
INFO  22:48:47,937 - #44 c
INFO  22:48:47,937 - #31 ;
INFO  22:48:47,937 - #44 int
INFO  22:48:47,937 - #44 i
INFO  22:48:47,937 - #31 ;
INFO  22:48:47,937 - #44 int
INFO  22:48:47,937 - #44 x
INFO  22:48:47,937 - #36 [
INFO  22:48:47,937 - #37 ]
INFO  22:48:47,937 - #31 ;
INFO  22:48:47,937 - #38 {
INFO  22:48:47,938 - #39 }
INFO  22:48:47,938 - #12 void
INFO  22:48:47,938 - #44 ccc
INFO  22:48:47,938 - #34 (
INFO  22:48:47,938 - #35 )
INFO  22:48:47,938 - #44 A
INFO  22:48:47,938 - #44 a
INFO  22:48:47,938 - #31 ;
INFO  22:48:47,938 - #44 C
INFO  22:48:47,938 - #44 c
INFO  22:48:47,938 - #31 ;
INFO  22:48:47,939 - #44 int
INFO  22:48:47,939 - #44 i
INFO  22:48:47,939 - #31 ;
INFO  22:48:47,939 - #44 int
INFO  22:48:47,939 - #44 x
INFO  22:48:47,939 - #36 [
INFO  22:48:47,939 - #37 ]
INFO  22:48:47,939 - #31 ;
INFO  22:48:47,939 - #38 {
INFO  22:48:47,939 - #39 }
INFO  22:48:47,940 - #39 }
INFO  22:48:47,940 - #39 }
INFO  22:48:47,940 - #4 class
INFO  22:48:47,940 - #44 C
INFO  22:48:47,940 - #14 extends
INFO  22:48:47,940 - #44 B
INFO  22:48:47,940 - #38 {
INFO  22:48:47,940 - #44 A
INFO  22:48:47,940 - #44 theA
INFO  22:48:47,940 - #31 ;
INFO  22:48:47,940 - #44 string
INFO  22:48:47,941 - #44 a
INFO  22:48:47,941 - #31 ;
INFO  22:48:47,941 - #39 }
INFO  22:48:47,941 - #38 {
INFO  22:48:47,941 - #12 void
INFO  22:48:47,941 - #44 main
INFO  22:48:47,941 - #34 (
INFO  22:48:47,941 - #35 )
INFO  22:48:47,941 - #44 A
INFO  22:48:47,941 - #44 a
INFO  22:48:47,941 - #31 ;
INFO  22:48:47,941 - #44 C
INFO  22:48:47,942 - #44 c
INFO  22:48:47,942 - #31 ;
INFO  22:48:47,942 - #44 int
INFO  22:48:47,942 - #44 i
INFO  22:48:47,942 - #31 ;
INFO  22:48:47,942 - #44 int
INFO  22:48:47,942 - #44 x
INFO  22:48:47,942 - #36 [
INFO  22:48:47,942 - #37 ]
INFO  22:48:47,942 - #31 ;
INFO  22:48:47,942 - #38 {
INFO  22:48:47,942 - #44 a
INFO  22:48:47,943 - #28 =
INFO  22:48:47,943 - #8 new
INFO  22:48:47,943 - #44 A
INFO  22:48:47,943 - #31 ;
INFO  22:48:47,943 - #44 a
INFO  22:48:47,943 - #33 .
INFO  22:48:47,943 - #44 x
INFO  22:48:47,943 - #28 =
INFO  22:48:47,943 - #8 new
INFO  22:48:47,943 - #44 int
INFO  22:48:47,943 - #36 [
INFO  22:48:47,945 - #43 5
INFO  22:48:47,945 - #37 ]
INFO  22:48:47,945 - #31 ;
INFO  22:48:47,945 - #44 a
INFO  22:48:47,945 - #33 .
INFO  22:48:47,945 - #44 y
INFO  22:48:47,945 - #28 =
INFO  22:48:47,945 - #8 new
INFO  22:48:47,945 - #44 int
INFO  22:48:47,945 - #36 [
INFO  22:48:47,946 - #43 5
INFO  22:48:47,946 - #37 ]
INFO  22:48:47,946 - #31 ;
INFO  22:48:47,946 - #44 c
INFO  22:48:47,946 - #28 =
INFO  22:48:47,946 - #8 new
INFO  22:48:47,946 - #44 C
INFO  22:48:47,946 - #31 ;
INFO  22:48:47,946 - #44 c
INFO  22:48:47,947 - #33 .
INFO  22:48:47,947 - #44 theA
INFO  22:48:47,947 - #28 =
INFO  22:48:47,947 - #44 a
INFO  22:48:47,947 - #31 ;
INFO  22:48:47,947 - #44 c
INFO  22:48:47,947 - #33 .
INFO  22:48:47,947 - #44 x
INFO  22:48:47,947 - #28 =
INFO  22:48:47,947 - #8 new
INFO  22:48:47,948 - #44 int
INFO  22:48:47,948 - #36 [
INFO  22:48:47,948 - #43 5
INFO  22:48:47,948 - #37 ]
INFO  22:48:47,948 - #31 ;
INFO  22:48:47,948 - #44 x
INFO  22:48:47,948 - #28 =
INFO  22:48:47,948 - #8 new
INFO  22:48:47,949 - #44 int
INFO  22:48:47,949 - #36 [
INFO  22:48:47,949 - #43 3
INFO  22:48:47,949 - #37 ]
INFO  22:48:47,949 - #31 ;
INFO  22:48:47,949 - #44 i
INFO  22:48:47,950 - #28 =
INFO  22:48:47,950 - #43 0
INFO  22:48:47,950 - #31 ;
INFO  22:48:47,950 - #10 read
INFO  22:48:47,950 - #34 (
INFO  22:48:47,950 - #44 c
INFO  22:48:47,950 - #33 .
INFO  22:48:47,950 - #44 i
INFO  22:48:47,950 - #35 )
INFO  22:48:47,950 - #31 ;
INFO  22:48:47,951 - #13 while
INFO  22:48:47,951 - #34 (
INFO  22:48:47,951 - #44 i
INFO  22:48:47,951 - #24 <
INFO  22:48:47,951 - #43 5
INFO  22:48:47,951 - #35 )
INFO  22:48:47,951 - #38 {
INFO  22:48:47,952 - #10 read
INFO  22:48:47,952 - #34 (
INFO  22:48:47,952 - #44 c
INFO  22:48:47,952 - #33 .
INFO  22:48:47,952 - #44 x
INFO  22:48:47,952 - #36 [
INFO  22:48:47,952 - #44 i
INFO  22:48:47,952 - #37 ]
INFO  22:48:47,952 - #35 )
INFO  22:48:47,953 - #31 ;
INFO  22:48:47,953 - #10 read
INFO  22:48:47,953 - #34 (
INFO  22:48:47,953 - #44 c
INFO  22:48:47,953 - #33 .
INFO  22:48:47,953 - #44 theA
INFO  22:48:47,953 - #33 .
INFO  22:48:47,953 - #44 x
INFO  22:48:47,953 - #36 [
INFO  22:48:47,953 - #44 i
INFO  22:48:47,954 - #37 ]
INFO  22:48:47,954 - #35 )
INFO  22:48:47,954 - #31 ;
INFO  22:48:47,954 - #44 i
INFO  22:48:47,954 - #29 ++
INFO  22:48:47,954 - #31 ;
INFO  22:48:47,954 - #39 }
INFO  22:48:47,954 - #9 print
INFO  22:48:47,954 - #34 (
INFO  22:48:47,954 - #44 c
INFO  22:48:47,955 - #33 .
INFO  22:48:47,955 - #44 getValue
INFO  22:48:47,955 - #34 (
INFO  22:48:47,955 - #44 c
INFO  22:48:47,955 - #33 .
INFO  22:48:47,955 - #44 theA
INFO  22:48:47,955 - #33 .
INFO  22:48:47,955 - #44 x
INFO  22:48:47,955 - #36 [
INFO  22:48:47,955 - #43 0
INFO  22:48:47,955 - #37 ]
INFO  22:48:47,956 - #35 )
INFO  22:48:47,956 - #35 )
INFO  22:48:47,956 - #31 ;
INFO  22:48:47,956 - #39 }
INFO  22:48:47,956 - #39 }
INFO  22:48:47,956 - GlobalVar = 2
INFO  22:48:47,956 - GlobalConst = 2
INFO  22:48:47,956 - LocalMainVar = 4
INFO  22:48:47,956 - GlobalArray = 0
INFO  22:48:47,957 - FuncProg = 1
INFO  22:48:47,957 - Blocks = 4
INFO  22:48:47,957 - FuncCalls = 5
INFO  22:48:47,957 - FormalArg = 0
INFO  22:48:47,957 - DefClass = 3
INFO  22:48:47,957 - DefMethodClass = 3
INFO  22:49:04,084 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:49:04,093 - #2 program
INFO  22:49:04,093 - #44 Program
INFO  22:49:04,093 - #4 class
INFO  22:49:04,093 - #44 A
INFO  22:49:04,093 - #38 {
INFO  22:49:04,094 - #44 int
INFO  22:49:04,094 - #44 x
INFO  22:49:04,094 - #36 [
INFO  22:49:04,094 - #37 ]
INFO  22:49:04,094 - #32 ,
INFO  22:49:04,094 - #44 y
INFO  22:49:04,094 - #36 [
INFO  22:49:04,094 - #37 ]
INFO  22:49:04,094 - #31 ;
INFO  22:49:04,094 - #39 }
INFO  22:49:04,094 - #6 const
INFO  22:49:04,094 - #44 int
INFO  22:49:04,095 - #44 pi
INFO  22:49:04,095 - #28 =
INFO  22:49:04,095 - #43 3
INFO  22:49:04,095 - #32 ,
INFO  22:49:04,095 - #44 e
INFO  22:49:04,095 - #28 =
INFO  22:49:04,095 - #43 2
INFO  22:49:04,095 - #31 ;
INFO  22:49:04,095 - #4 class
INFO  22:49:04,095 - #44 C
INFO  22:49:04,095 - #14 extends
INFO  22:49:04,095 - #44 B
INFO  22:49:04,096 - #38 {
INFO  22:49:04,096 - #44 A
INFO  22:49:04,096 - #44 theA
INFO  22:49:04,096 - #31 ;
INFO  22:49:04,096 - #44 string
INFO  22:49:04,096 - #44 a
INFO  22:49:04,096 - #31 ;
INFO  22:49:04,096 - #38 {
INFO  22:49:04,096 - #12 void
INFO  22:49:04,096 - #44 aaa
INFO  22:49:04,096 - #34 (
INFO  22:49:04,096 - #35 )
INFO  22:49:04,096 - #44 A
INFO  22:49:04,097 - #44 a
INFO  22:49:04,097 - #31 ;
INFO  22:49:04,097 - #44 C
INFO  22:49:04,097 - #44 c
INFO  22:49:04,097 - #31 ;
INFO  22:49:04,097 - #44 int
INFO  22:49:04,097 - #44 i
INFO  22:49:04,097 - #31 ;
INFO  22:49:04,097 - #44 int
INFO  22:49:04,097 - #44 x
INFO  22:49:04,097 - #36 [
INFO  22:49:04,097 - #37 ]
INFO  22:49:04,098 - #31 ;
INFO  22:49:04,098 - #38 {
INFO  22:49:04,098 - #39 }
INFO  22:49:04,098 - #12 void
INFO  22:49:04,098 - #44 bbb
INFO  22:49:04,098 - #34 (
INFO  22:49:04,098 - #35 )
INFO  22:49:04,098 - #44 A
INFO  22:49:04,098 - #44 a
INFO  22:49:04,098 - #31 ;
INFO  22:49:04,098 - #44 C
INFO  22:49:04,098 - #44 c
INFO  22:49:04,098 - #31 ;
INFO  22:49:04,099 - #44 int
INFO  22:49:04,099 - #44 i
INFO  22:49:04,099 - #31 ;
INFO  22:49:04,099 - #44 int
INFO  22:49:04,099 - #44 x
INFO  22:49:04,099 - #36 [
INFO  22:49:04,099 - #37 ]
INFO  22:49:04,099 - #31 ;
INFO  22:49:04,100 - #38 {
INFO  22:49:04,100 - #39 }
INFO  22:49:04,100 - #12 void
INFO  22:49:04,100 - #44 ccc
INFO  22:49:04,100 - #34 (
INFO  22:49:04,100 - #35 )
INFO  22:49:04,100 - #44 A
INFO  22:49:04,100 - #44 a
INFO  22:49:04,100 - #31 ;
INFO  22:49:04,101 - #44 C
INFO  22:49:04,101 - #44 c
INFO  22:49:04,101 - #31 ;
INFO  22:49:04,101 - #44 int
INFO  22:49:04,101 - #44 i
INFO  22:49:04,101 - #31 ;
INFO  22:49:04,101 - #44 int
INFO  22:49:04,101 - #44 x
INFO  22:49:04,102 - #36 [
INFO  22:49:04,102 - #37 ]
INFO  22:49:04,102 - #31 ;
INFO  22:49:04,102 - #38 {
INFO  22:49:04,102 - #39 }
INFO  22:49:04,102 - #39 }
INFO  22:49:04,102 - #39 }
INFO  22:49:04,102 - #38 {
INFO  22:49:04,102 - #12 void
INFO  22:49:04,103 - #44 main
INFO  22:49:04,103 - #34 (
INFO  22:49:04,103 - #35 )
INFO  22:49:04,103 - #44 A
INFO  22:49:04,103 - #44 a
INFO  22:49:04,103 - #31 ;
INFO  22:49:04,103 - #44 C
INFO  22:49:04,103 - #44 c
INFO  22:49:04,103 - #31 ;
INFO  22:49:04,103 - #44 int
INFO  22:49:04,103 - #44 i
INFO  22:49:04,104 - #31 ;
INFO  22:49:04,104 - #44 int
INFO  22:49:04,104 - #44 x
INFO  22:49:04,104 - #36 [
INFO  22:49:04,104 - #37 ]
INFO  22:49:04,104 - #31 ;
INFO  22:49:04,104 - #38 {
INFO  22:49:04,104 - #44 a
INFO  22:49:04,104 - #28 =
INFO  22:49:04,104 - #8 new
INFO  22:49:04,104 - #44 A
INFO  22:49:04,105 - #31 ;
INFO  22:49:04,105 - #44 a
INFO  22:49:04,105 - #33 .
INFO  22:49:04,105 - #44 x
INFO  22:49:04,105 - #28 =
INFO  22:49:04,105 - #8 new
INFO  22:49:04,105 - #44 int
INFO  22:49:04,105 - #36 [
INFO  22:49:04,105 - #43 5
INFO  22:49:04,105 - #37 ]
INFO  22:49:04,106 - #31 ;
INFO  22:49:04,106 - #44 a
INFO  22:49:04,106 - #33 .
INFO  22:49:04,106 - #44 y
INFO  22:49:04,106 - #28 =
INFO  22:49:04,106 - #8 new
INFO  22:49:04,106 - #44 int
INFO  22:49:04,106 - #36 [
INFO  22:49:04,106 - #43 5
INFO  22:49:04,106 - #37 ]
INFO  22:49:04,106 - #31 ;
INFO  22:49:04,107 - #44 c
INFO  22:49:04,107 - #28 =
INFO  22:49:04,107 - #8 new
INFO  22:49:04,107 - #44 C
INFO  22:49:04,107 - #31 ;
INFO  22:49:04,107 - #44 c
INFO  22:49:04,107 - #33 .
INFO  22:49:04,107 - #44 theA
INFO  22:49:04,107 - #28 =
INFO  22:49:04,107 - #44 a
INFO  22:49:04,107 - #31 ;
INFO  22:49:04,107 - #44 c
INFO  22:49:04,107 - #33 .
INFO  22:49:04,108 - #44 x
INFO  22:49:04,108 - #28 =
INFO  22:49:04,108 - #8 new
INFO  22:49:04,108 - #44 int
INFO  22:49:04,108 - #36 [
INFO  22:49:04,108 - #43 5
INFO  22:49:04,108 - #37 ]
INFO  22:49:04,108 - #31 ;
INFO  22:49:04,108 - #44 x
INFO  22:49:04,108 - #28 =
INFO  22:49:04,108 - #8 new
INFO  22:49:04,108 - #44 int
INFO  22:49:04,108 - #36 [
INFO  22:49:04,109 - #43 3
INFO  22:49:04,109 - #37 ]
INFO  22:49:04,109 - #31 ;
INFO  22:49:04,109 - #44 i
INFO  22:49:04,109 - #28 =
INFO  22:49:04,109 - #43 0
INFO  22:49:04,109 - #31 ;
INFO  22:49:04,109 - #10 read
INFO  22:49:04,109 - #34 (
INFO  22:49:04,110 - #44 c
INFO  22:49:04,110 - #33 .
INFO  22:49:04,110 - #44 i
INFO  22:49:04,110 - #35 )
INFO  22:49:04,110 - #31 ;
INFO  22:49:04,110 - #13 while
INFO  22:49:04,110 - #34 (
INFO  22:49:04,110 - #44 i
INFO  22:49:04,110 - #24 <
INFO  22:49:04,110 - #43 5
INFO  22:49:04,110 - #35 )
INFO  22:49:04,111 - #38 {
INFO  22:49:04,111 - #10 read
INFO  22:49:04,111 - #34 (
INFO  22:49:04,111 - #44 c
INFO  22:49:04,111 - #33 .
INFO  22:49:04,111 - #44 x
INFO  22:49:04,111 - #36 [
INFO  22:49:04,111 - #44 i
INFO  22:49:04,111 - #37 ]
INFO  22:49:04,111 - #35 )
INFO  22:49:04,112 - #31 ;
INFO  22:49:04,112 - #10 read
INFO  22:49:04,112 - #34 (
INFO  22:49:04,112 - #44 c
INFO  22:49:04,112 - #33 .
INFO  22:49:04,112 - #44 theA
INFO  22:49:04,112 - #33 .
INFO  22:49:04,112 - #44 x
INFO  22:49:04,112 - #36 [
INFO  22:49:04,112 - #44 i
INFO  22:49:04,112 - #37 ]
INFO  22:49:04,112 - #35 )
INFO  22:49:04,113 - #31 ;
INFO  22:49:04,113 - #44 i
INFO  22:49:04,113 - #29 ++
INFO  22:49:04,113 - #31 ;
INFO  22:49:04,113 - #39 }
INFO  22:49:04,113 - #9 print
INFO  22:49:04,113 - #34 (
INFO  22:49:04,113 - #44 c
INFO  22:49:04,113 - #33 .
INFO  22:49:04,113 - #44 getValue
INFO  22:49:04,113 - #34 (
INFO  22:49:04,114 - #44 c
INFO  22:49:04,114 - #33 .
INFO  22:49:04,114 - #44 theA
INFO  22:49:04,114 - #33 .
INFO  22:49:04,114 - #44 x
INFO  22:49:04,114 - #36 [
INFO  22:49:04,114 - #43 0
INFO  22:49:04,114 - #37 ]
INFO  22:49:04,114 - #35 )
INFO  22:49:04,114 - #35 )
INFO  22:49:04,115 - #31 ;
INFO  22:49:04,115 - #39 }
INFO  22:49:04,115 - #39 }
INFO  22:49:04,115 - GlobalVar = 0
INFO  22:49:04,115 - GlobalConst = 2
INFO  22:49:04,115 - LocalMainVar = 4
INFO  22:49:04,115 - GlobalArray = 0
INFO  22:49:04,115 - FuncProg = 1
INFO  22:49:04,115 - Blocks = 4
INFO  22:49:04,116 - FuncCalls = 5
INFO  22:49:04,116 - FormalArg = 0
INFO  22:49:04,116 - DefClass = 2
INFO  22:49:04,116 - DefMethodClass = 3
INFO  22:49:19,117 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:49:19,127 - #2 program
INFO  22:49:19,127 - #44 Program
INFO  22:49:19,127 - #4 class
INFO  22:49:19,127 - #44 A
INFO  22:49:19,127 - #38 {
INFO  22:49:19,128 - #44 int
INFO  22:49:19,128 - #44 x
INFO  22:49:19,128 - #36 [
INFO  22:49:19,128 - #37 ]
INFO  22:49:19,128 - #32 ,
INFO  22:49:19,128 - #44 y
INFO  22:49:19,128 - #36 [
INFO  22:49:19,128 - #37 ]
INFO  22:49:19,128 - #31 ;
INFO  22:49:19,128 - #39 }
INFO  22:49:19,129 - #6 const
INFO  22:49:19,129 - #44 int
INFO  22:49:19,129 - #44 pi
INFO  22:49:19,129 - #28 =
INFO  22:49:19,129 - #43 3
INFO  22:49:19,129 - #32 ,
INFO  22:49:19,129 - #44 e
INFO  22:49:19,129 - #28 =
INFO  22:49:19,129 - #43 2
INFO  22:49:19,129 - #31 ;
INFO  22:49:19,129 - #4 class
INFO  22:49:19,129 - #44 B
INFO  22:49:19,130 - #14 extends
INFO  22:49:19,130 - #44 A
INFO  22:49:19,130 - #38 {
INFO  22:49:19,130 - #44 int
INFO  22:49:19,130 - #44 i
INFO  22:49:19,130 - #31 ;
INFO  22:49:19,130 - #44 int
INFO  22:49:19,130 - #44 x
INFO  22:49:19,130 - #36 [
INFO  22:49:19,130 - #37 ]
INFO  22:49:19,130 - #31 ;
INFO  22:49:19,130 - #38 {
INFO  22:49:19,130 - #44 int
INFO  22:49:19,130 - #44 getValue
INFO  22:49:19,131 - #34 (
INFO  22:49:19,131 - #44 int
INFO  22:49:19,131 - #44 a
INFO  22:49:19,131 - #35 )
INFO  22:49:19,131 - #44 int
INFO  22:49:19,131 - #44 b
INFO  22:49:19,131 - #31 ;
INFO  22:49:19,131 - #44 bool
INFO  22:49:19,131 - #44 c
INFO  22:49:19,131 - #31 ;
INFO  22:49:19,131 - #38 {
INFO  22:49:19,131 - #11 return
INFO  22:49:19,132 - #44 this
INFO  22:49:19,132 - #33 .
INFO  22:49:19,132 - #44 i
INFO  22:49:19,132 - #15 +
INFO  22:49:19,132 - #44 this
INFO  22:49:19,132 - #33 .
INFO  22:49:19,132 - #44 x
INFO  22:49:19,132 - #36 [
INFO  22:49:19,132 - #43 0
INFO  22:49:19,132 - #37 ]
INFO  22:49:19,133 - #15 +
INFO  22:49:19,133 - #44 a
INFO  22:49:19,133 - #31 ;
INFO  22:49:19,133 - #39 }
INFO  22:49:19,133 - #39 }
INFO  22:49:19,133 - #39 }
INFO  22:49:19,133 - #4 class
INFO  22:49:19,133 - #44 C
INFO  22:49:19,133 - #14 extends
INFO  22:49:19,133 - #44 B
INFO  22:49:19,134 - #38 {
INFO  22:49:19,134 - #44 A
INFO  22:49:19,134 - #44 theA
INFO  22:49:19,134 - #31 ;
INFO  22:49:19,134 - #44 string
INFO  22:49:19,134 - #44 a
INFO  22:49:19,134 - #31 ;
INFO  22:49:19,134 - #38 {
INFO  22:49:19,134 - #12 void
INFO  22:49:19,134 - #44 aaa
INFO  22:49:19,134 - #34 (
INFO  22:49:19,135 - #35 )
INFO  22:49:19,135 - #44 A
INFO  22:49:19,135 - #44 a
INFO  22:49:19,135 - #31 ;
INFO  22:49:19,135 - #44 C
INFO  22:49:19,135 - #44 c
INFO  22:49:19,135 - #31 ;
INFO  22:49:19,135 - #44 int
INFO  22:49:19,135 - #44 i
INFO  22:49:19,135 - #31 ;
INFO  22:49:19,136 - #44 int
INFO  22:49:19,136 - #44 x
INFO  22:49:19,136 - #36 [
INFO  22:49:19,136 - #37 ]
INFO  22:49:19,136 - #31 ;
INFO  22:49:19,136 - #38 {
INFO  22:49:19,136 - #39 }
INFO  22:49:19,136 - #12 void
INFO  22:49:19,136 - #44 bbb
INFO  22:49:19,136 - #34 (
INFO  22:49:19,136 - #35 )
INFO  22:49:19,136 - #44 A
INFO  22:49:19,136 - #44 a
INFO  22:49:19,137 - #31 ;
INFO  22:49:19,137 - #44 C
INFO  22:49:19,137 - #44 c
INFO  22:49:19,137 - #31 ;
INFO  22:49:19,137 - #44 int
INFO  22:49:19,137 - #44 i
INFO  22:49:19,137 - #31 ;
INFO  22:49:19,137 - #44 int
INFO  22:49:19,137 - #44 x
INFO  22:49:19,137 - #36 [
INFO  22:49:19,137 - #37 ]
INFO  22:49:19,137 - #31 ;
INFO  22:49:19,137 - #38 {
INFO  22:49:19,138 - #39 }
INFO  22:49:19,138 - #12 void
INFO  22:49:19,138 - #44 ccc
INFO  22:49:19,138 - #34 (
INFO  22:49:19,138 - #35 )
INFO  22:49:19,138 - #44 A
INFO  22:49:19,138 - #44 a
INFO  22:49:19,138 - #31 ;
INFO  22:49:19,138 - #44 C
INFO  22:49:19,138 - #44 c
INFO  22:49:19,138 - #31 ;
INFO  22:49:19,139 - #44 int
INFO  22:49:19,139 - #44 i
INFO  22:49:19,139 - #31 ;
INFO  22:49:19,139 - #44 int
INFO  22:49:19,139 - #44 x
INFO  22:49:19,139 - #36 [
INFO  22:49:19,139 - #37 ]
INFO  22:49:19,139 - #31 ;
INFO  22:49:19,139 - #38 {
INFO  22:49:19,140 - #39 }
INFO  22:49:19,140 - #39 }
INFO  22:49:19,140 - #39 }
INFO  22:49:19,140 - #38 {
INFO  22:49:19,140 - #12 void
INFO  22:49:19,140 - #44 main
INFO  22:49:19,140 - #34 (
INFO  22:49:19,140 - #35 )
INFO  22:49:19,140 - #44 A
INFO  22:49:19,141 - #44 a
INFO  22:49:19,141 - #31 ;
INFO  22:49:19,141 - #44 C
INFO  22:49:19,141 - #44 c
INFO  22:49:19,141 - #31 ;
INFO  22:49:19,141 - #44 int
INFO  22:49:19,141 - #44 i
INFO  22:49:19,141 - #31 ;
INFO  22:49:19,141 - #44 int
INFO  22:49:19,142 - #44 x
INFO  22:49:19,142 - #36 [
INFO  22:49:19,142 - #37 ]
INFO  22:49:19,142 - #31 ;
INFO  22:49:19,142 - #38 {
INFO  22:49:19,142 - #44 a
INFO  22:49:19,142 - #28 =
INFO  22:49:19,142 - #8 new
INFO  22:49:19,142 - #44 A
INFO  22:49:19,143 - #31 ;
INFO  22:49:19,143 - #44 a
INFO  22:49:19,143 - #33 .
INFO  22:49:19,143 - #44 x
INFO  22:49:19,143 - #28 =
INFO  22:49:19,143 - #8 new
INFO  22:49:19,143 - #44 int
INFO  22:49:19,143 - #36 [
INFO  22:49:19,144 - #43 5
INFO  22:49:19,144 - #37 ]
INFO  22:49:19,144 - #31 ;
INFO  22:49:19,144 - #44 a
INFO  22:49:19,144 - #33 .
INFO  22:49:19,144 - #44 y
INFO  22:49:19,144 - #28 =
INFO  22:49:19,145 - #8 new
INFO  22:49:19,145 - #44 int
INFO  22:49:19,145 - #36 [
INFO  22:49:19,145 - #43 5
INFO  22:49:19,145 - #37 ]
INFO  22:49:19,145 - #31 ;
INFO  22:49:19,145 - #44 c
INFO  22:49:19,145 - #28 =
INFO  22:49:19,145 - #8 new
INFO  22:49:19,146 - #44 C
INFO  22:49:19,146 - #31 ;
INFO  22:49:19,146 - #44 c
INFO  22:49:19,146 - #33 .
INFO  22:49:19,146 - #44 theA
INFO  22:49:19,146 - #28 =
INFO  22:49:19,147 - #44 a
INFO  22:49:19,147 - #31 ;
INFO  22:49:19,147 - #44 c
INFO  22:49:19,147 - #33 .
INFO  22:49:19,147 - #44 x
INFO  22:49:19,147 - #28 =
INFO  22:49:19,147 - #8 new
INFO  22:49:19,147 - #44 int
INFO  22:49:19,147 - #36 [
INFO  22:49:19,147 - #43 5
INFO  22:49:19,148 - #37 ]
INFO  22:49:19,148 - #31 ;
INFO  22:49:19,148 - #44 x
INFO  22:49:19,148 - #28 =
INFO  22:49:19,148 - #8 new
INFO  22:49:19,148 - #44 int
INFO  22:49:19,148 - #36 [
INFO  22:49:19,148 - #43 3
INFO  22:49:19,148 - #37 ]
INFO  22:49:19,148 - #31 ;
INFO  22:49:19,149 - #44 i
INFO  22:49:19,149 - #28 =
INFO  22:49:19,149 - #43 0
INFO  22:49:19,149 - #31 ;
INFO  22:49:19,149 - #10 read
INFO  22:49:19,149 - #34 (
INFO  22:49:19,149 - #44 c
INFO  22:49:19,149 - #33 .
INFO  22:49:19,149 - #44 i
INFO  22:49:19,149 - #35 )
INFO  22:49:19,149 - #31 ;
INFO  22:49:19,150 - #13 while
INFO  22:49:19,150 - #34 (
INFO  22:49:19,150 - #44 i
INFO  22:49:19,150 - #24 <
INFO  22:49:19,150 - #43 5
INFO  22:49:19,150 - #35 )
INFO  22:49:19,150 - #38 {
INFO  22:49:19,150 - #10 read
INFO  22:49:19,150 - #34 (
INFO  22:49:19,150 - #44 c
INFO  22:49:19,151 - #33 .
INFO  22:49:19,151 - #44 x
INFO  22:49:19,151 - #36 [
INFO  22:49:19,151 - #44 i
INFO  22:49:19,151 - #37 ]
INFO  22:49:19,151 - #35 )
INFO  22:49:19,151 - #31 ;
INFO  22:49:19,151 - #10 read
INFO  22:49:19,151 - #34 (
INFO  22:49:19,151 - #44 c
INFO  22:49:19,151 - #33 .
INFO  22:49:19,152 - #44 theA
INFO  22:49:19,152 - #33 .
INFO  22:49:19,152 - #44 x
INFO  22:49:19,152 - #36 [
INFO  22:49:19,152 - #44 i
INFO  22:49:19,152 - #37 ]
INFO  22:49:19,152 - #35 )
INFO  22:49:19,152 - #31 ;
INFO  22:49:19,152 - #44 i
INFO  22:49:19,152 - #29 ++
INFO  22:49:19,152 - #31 ;
INFO  22:49:19,152 - #39 }
INFO  22:49:19,152 - #9 print
INFO  22:49:19,152 - #34 (
INFO  22:49:19,153 - #44 c
INFO  22:49:19,153 - #33 .
INFO  22:49:19,153 - #44 getValue
INFO  22:49:19,153 - #34 (
INFO  22:49:19,153 - #44 c
INFO  22:49:19,153 - #33 .
INFO  22:49:19,153 - #44 theA
INFO  22:49:19,153 - #33 .
INFO  22:49:19,153 - #44 x
INFO  22:49:19,153 - #36 [
INFO  22:49:19,153 - #43 0
INFO  22:49:19,153 - #37 ]
INFO  22:49:19,153 - #35 )
INFO  22:49:19,153 - #35 )
INFO  22:49:19,154 - #31 ;
INFO  22:49:19,154 - #39 }
INFO  22:49:19,154 - #39 }
INFO  22:49:19,154 - GlobalVar = 14
INFO  22:49:19,154 - GlobalConst = 2
INFO  22:49:19,154 - LocalMainVar = 4
INFO  22:49:19,154 - GlobalArray = 3
INFO  22:49:19,154 - FuncProg = 4
INFO  22:49:19,154 - Blocks = 5
INFO  22:49:19,154 - FuncCalls = 5
INFO  22:49:19,154 - FormalArg = 1
INFO  22:49:19,154 - DefClass = 3
INFO  22:49:19,154 - DefMethodClass = 1
INFO  22:49:44,155 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:49:44,164 - #2 program
INFO  22:49:44,164 - #44 Program
INFO  22:49:44,164 - #4 class
INFO  22:49:44,164 - #44 A
INFO  22:49:44,164 - #38 {
INFO  22:49:44,164 - #44 int
INFO  22:49:44,164 - #44 x
INFO  22:49:44,165 - #36 [
INFO  22:49:44,165 - #37 ]
INFO  22:49:44,165 - #32 ,
INFO  22:49:44,165 - #44 y
INFO  22:49:44,165 - #36 [
INFO  22:49:44,165 - #37 ]
INFO  22:49:44,165 - #31 ;
INFO  22:49:44,165 - #38 {
INFO  22:49:44,165 - #12 void
INFO  22:49:44,165 - #44 aaa
INFO  22:49:44,165 - #34 (
INFO  22:49:44,165 - #35 )
INFO  22:49:44,166 - #44 A
INFO  22:49:44,166 - #44 a
INFO  22:49:44,166 - #31 ;
INFO  22:49:44,166 - #44 C
INFO  22:49:44,166 - #44 c
INFO  22:49:44,166 - #31 ;
INFO  22:49:44,166 - #44 int
INFO  22:49:44,166 - #44 i
INFO  22:49:44,166 - #31 ;
INFO  22:49:44,166 - #44 int
INFO  22:49:44,166 - #44 x
INFO  22:49:44,166 - #36 [
INFO  22:49:44,166 - #37 ]
INFO  22:49:44,167 - #31 ;
INFO  22:49:44,167 - #38 {
INFO  22:49:44,167 - #39 }
INFO  22:49:44,167 - #12 void
INFO  22:49:44,167 - #44 bbb
INFO  22:49:44,167 - #34 (
INFO  22:49:44,167 - #35 )
INFO  22:49:44,167 - #44 A
INFO  22:49:44,167 - #44 a
INFO  22:49:44,167 - #31 ;
INFO  22:49:44,167 - #44 C
INFO  22:49:44,167 - #44 c
INFO  22:49:44,167 - #31 ;
INFO  22:49:44,167 - #44 int
INFO  22:49:44,168 - #44 i
INFO  22:49:44,168 - #31 ;
INFO  22:49:44,168 - #44 int
INFO  22:49:44,168 - #44 x
INFO  22:49:44,168 - #36 [
INFO  22:49:44,168 - #37 ]
INFO  22:49:44,168 - #31 ;
INFO  22:49:44,168 - #38 {
INFO  22:49:44,168 - #39 }
INFO  22:49:44,168 - #12 void
INFO  22:49:44,168 - #44 ccc
INFO  22:49:44,169 - #34 (
INFO  22:49:44,169 - #35 )
INFO  22:49:44,169 - #44 A
INFO  22:49:44,169 - #44 a
INFO  22:49:44,169 - #31 ;
INFO  22:49:44,169 - #44 C
INFO  22:49:44,169 - #44 c
INFO  22:49:44,169 - #31 ;
INFO  22:49:44,169 - #44 int
INFO  22:49:44,169 - #44 i
INFO  22:49:44,169 - #31 ;
INFO  22:49:44,169 - #44 int
INFO  22:49:44,169 - #44 x
INFO  22:49:44,169 - #36 [
INFO  22:49:44,170 - #37 ]
INFO  22:49:44,170 - #31 ;
INFO  22:49:44,170 - #38 {
INFO  22:49:44,170 - #39 }
INFO  22:49:44,170 - #39 }
INFO  22:49:44,170 - #39 }
INFO  22:49:44,170 - #6 const
INFO  22:49:44,170 - #44 int
INFO  22:49:44,170 - #44 pi
INFO  22:49:44,171 - #28 =
INFO  22:49:44,171 - #43 3
INFO  22:49:44,171 - #32 ,
INFO  22:49:44,171 - #44 e
INFO  22:49:44,171 - #28 =
INFO  22:49:44,171 - #43 2
INFO  22:49:44,171 - #31 ;
INFO  22:49:44,171 - #4 class
INFO  22:49:44,172 - #44 B
INFO  22:49:44,172 - #14 extends
INFO  22:49:44,172 - #44 A
INFO  22:49:44,172 - #38 {
INFO  22:49:44,172 - #44 int
INFO  22:49:44,172 - #44 i
INFO  22:49:44,172 - #31 ;
INFO  22:49:44,172 - #44 int
INFO  22:49:44,172 - #44 x
INFO  22:49:44,173 - #36 [
INFO  22:49:44,173 - #37 ]
INFO  22:49:44,173 - #31 ;
INFO  22:49:44,173 - #38 {
INFO  22:49:44,173 - #44 int
INFO  22:49:44,173 - #44 getValue
INFO  22:49:44,173 - #34 (
INFO  22:49:44,173 - #44 int
INFO  22:49:44,173 - #44 a
INFO  22:49:44,174 - #35 )
INFO  22:49:44,174 - #44 int
INFO  22:49:44,174 - #44 b
INFO  22:49:44,174 - #31 ;
INFO  22:49:44,174 - #44 bool
INFO  22:49:44,174 - #44 c
INFO  22:49:44,174 - #31 ;
INFO  22:49:44,174 - #38 {
INFO  22:49:44,174 - #11 return
INFO  22:49:44,174 - #44 this
INFO  22:49:44,175 - #33 .
INFO  22:49:44,175 - #44 i
INFO  22:49:44,175 - #15 +
INFO  22:49:44,175 - #44 this
INFO  22:49:44,175 - #33 .
INFO  22:49:44,175 - #44 x
INFO  22:49:44,175 - #36 [
INFO  22:49:44,175 - #43 0
INFO  22:49:44,175 - #37 ]
INFO  22:49:44,175 - #15 +
INFO  22:49:44,176 - #44 a
INFO  22:49:44,176 - #31 ;
INFO  22:49:44,176 - #39 }
INFO  22:49:44,176 - #39 }
INFO  22:49:44,176 - #39 }
INFO  22:49:44,176 - #4 class
INFO  22:49:44,176 - #44 C
INFO  22:49:44,176 - #14 extends
INFO  22:49:44,176 - #44 B
INFO  22:49:44,176 - #38 {
INFO  22:49:44,177 - #44 A
INFO  22:49:44,177 - #44 theA
INFO  22:49:44,177 - #31 ;
INFO  22:49:44,177 - #44 string
INFO  22:49:44,177 - #44 a
INFO  22:49:44,177 - #31 ;
INFO  22:49:44,177 - #38 {
INFO  22:49:44,177 - #12 void
INFO  22:49:44,177 - #44 aaa
INFO  22:49:44,177 - #34 (
INFO  22:49:44,177 - #35 )
INFO  22:49:44,178 - #44 A
INFO  22:49:44,178 - #44 a
INFO  22:49:44,178 - #31 ;
INFO  22:49:44,178 - #44 C
INFO  22:49:44,178 - #44 c
INFO  22:49:44,178 - #31 ;
INFO  22:49:44,178 - #44 int
INFO  22:49:44,178 - #44 i
INFO  22:49:44,178 - #31 ;
INFO  22:49:44,178 - #44 int
INFO  22:49:44,178 - #44 x
INFO  22:49:44,178 - #36 [
INFO  22:49:44,178 - #37 ]
INFO  22:49:44,178 - #31 ;
INFO  22:49:44,179 - #38 {
INFO  22:49:44,179 - #39 }
INFO  22:49:44,179 - #12 void
INFO  22:49:44,179 - #44 bbb
INFO  22:49:44,179 - #34 (
INFO  22:49:44,179 - #35 )
INFO  22:49:44,179 - #44 A
INFO  22:49:44,179 - #44 a
INFO  22:49:44,179 - #31 ;
INFO  22:49:44,179 - #44 C
INFO  22:49:44,180 - #44 c
INFO  22:49:44,180 - #31 ;
INFO  22:49:44,180 - #44 int
INFO  22:49:44,180 - #44 i
INFO  22:49:44,180 - #31 ;
INFO  22:49:44,180 - #44 int
INFO  22:49:44,181 - #44 x
INFO  22:49:44,181 - #36 [
INFO  22:49:44,181 - #37 ]
INFO  22:49:44,181 - #31 ;
INFO  22:49:44,181 - #38 {
INFO  22:49:44,181 - #39 }
INFO  22:49:44,182 - #12 void
INFO  22:49:44,182 - #44 ccc
INFO  22:49:44,182 - #34 (
INFO  22:49:44,182 - #35 )
INFO  22:49:44,182 - #44 A
INFO  22:49:44,182 - #44 a
INFO  22:49:44,182 - #31 ;
INFO  22:49:44,182 - #44 C
INFO  22:49:44,182 - #44 c
INFO  22:49:44,183 - #31 ;
INFO  22:49:44,183 - #44 int
INFO  22:49:44,183 - #44 i
INFO  22:49:44,183 - #31 ;
INFO  22:49:44,183 - #44 int
INFO  22:49:44,183 - #44 x
INFO  22:49:44,183 - #36 [
INFO  22:49:44,183 - #37 ]
INFO  22:49:44,183 - #31 ;
INFO  22:49:44,184 - #38 {
INFO  22:49:44,184 - #39 }
INFO  22:49:44,184 - #39 }
INFO  22:49:44,184 - #39 }
INFO  22:49:44,184 - #38 {
INFO  22:49:44,184 - #12 void
INFO  22:49:44,184 - #44 main
INFO  22:49:44,184 - #34 (
INFO  22:49:44,185 - #35 )
INFO  22:49:44,185 - #44 A
INFO  22:49:44,185 - #44 a
INFO  22:49:44,185 - #31 ;
INFO  22:49:44,185 - #44 C
INFO  22:49:44,185 - #44 c
INFO  22:49:44,185 - #31 ;
INFO  22:49:44,185 - #44 int
INFO  22:49:44,185 - #44 i
INFO  22:49:44,186 - #31 ;
INFO  22:49:44,186 - #44 int
INFO  22:49:44,186 - #44 x
INFO  22:49:44,186 - #36 [
INFO  22:49:44,186 - #37 ]
INFO  22:49:44,186 - #31 ;
INFO  22:49:44,186 - #38 {
INFO  22:49:44,186 - #44 a
INFO  22:49:44,186 - #28 =
INFO  22:49:44,186 - #8 new
INFO  22:49:44,187 - #44 A
INFO  22:49:44,187 - #31 ;
INFO  22:49:44,187 - #44 a
INFO  22:49:44,187 - #33 .
INFO  22:49:44,187 - #44 x
INFO  22:49:44,187 - #28 =
INFO  22:49:44,187 - #8 new
INFO  22:49:44,187 - #44 int
INFO  22:49:44,187 - #36 [
INFO  22:49:44,188 - #43 5
INFO  22:49:44,188 - #37 ]
INFO  22:49:44,188 - #31 ;
INFO  22:49:44,188 - #44 a
INFO  22:49:44,188 - #33 .
INFO  22:49:44,188 - #44 y
INFO  22:49:44,188 - #28 =
INFO  22:49:44,188 - #8 new
INFO  22:49:44,188 - #44 int
INFO  22:49:44,189 - #36 [
INFO  22:49:44,189 - #43 5
INFO  22:49:44,189 - #37 ]
INFO  22:49:44,189 - #31 ;
INFO  22:49:44,189 - #44 c
INFO  22:49:44,189 - #28 =
INFO  22:49:44,189 - #8 new
INFO  22:49:44,189 - #44 C
INFO  22:49:44,190 - #31 ;
INFO  22:49:44,190 - #44 c
INFO  22:49:44,190 - #33 .
INFO  22:49:44,190 - #44 theA
INFO  22:49:44,190 - #28 =
INFO  22:49:44,190 - #44 a
INFO  22:49:44,190 - #31 ;
INFO  22:49:44,190 - #44 c
INFO  22:49:44,191 - #33 .
INFO  22:49:44,191 - #44 x
INFO  22:49:44,191 - #28 =
INFO  22:49:44,191 - #8 new
INFO  22:49:44,191 - #44 int
INFO  22:49:44,191 - #36 [
INFO  22:49:44,191 - #43 5
INFO  22:49:44,191 - #37 ]
INFO  22:49:44,191 - #31 ;
INFO  22:49:44,191 - #44 x
INFO  22:49:44,191 - #28 =
INFO  22:49:44,192 - #8 new
INFO  22:49:44,192 - #44 int
INFO  22:49:44,192 - #36 [
INFO  22:49:44,192 - #43 3
INFO  22:49:44,192 - #37 ]
INFO  22:49:44,192 - #31 ;
INFO  22:49:44,192 - #44 i
INFO  22:49:44,192 - #28 =
INFO  22:49:44,192 - #43 0
INFO  22:49:44,192 - #31 ;
INFO  22:49:44,192 - #10 read
INFO  22:49:44,192 - #34 (
INFO  22:49:44,192 - #44 c
INFO  22:49:44,193 - #33 .
INFO  22:49:44,193 - #44 i
INFO  22:49:44,193 - #35 )
INFO  22:49:44,193 - #31 ;
INFO  22:49:44,193 - #13 while
INFO  22:49:44,193 - #34 (
INFO  22:49:44,193 - #44 i
INFO  22:49:44,193 - #24 <
INFO  22:49:44,193 - #43 5
INFO  22:49:44,193 - #35 )
INFO  22:49:44,193 - #38 {
INFO  22:49:44,193 - #10 read
INFO  22:49:44,193 - #34 (
INFO  22:49:44,193 - #44 c
INFO  22:49:44,193 - #33 .
INFO  22:49:44,194 - #44 x
INFO  22:49:44,194 - #36 [
INFO  22:49:44,194 - #44 i
INFO  22:49:44,194 - #37 ]
INFO  22:49:44,194 - #35 )
INFO  22:49:44,194 - #31 ;
INFO  22:49:44,194 - #10 read
INFO  22:49:44,194 - #34 (
INFO  22:49:44,194 - #44 c
INFO  22:49:44,194 - #33 .
INFO  22:49:44,194 - #44 theA
INFO  22:49:44,194 - #33 .
INFO  22:49:44,194 - #44 x
INFO  22:49:44,194 - #36 [
INFO  22:49:44,195 - #44 i
INFO  22:49:44,195 - #37 ]
INFO  22:49:44,195 - #35 )
INFO  22:49:44,195 - #31 ;
INFO  22:49:44,195 - #44 i
INFO  22:49:44,195 - #29 ++
INFO  22:49:44,195 - #31 ;
INFO  22:49:44,195 - #39 }
INFO  22:49:44,195 - #9 print
INFO  22:49:44,195 - #34 (
INFO  22:49:44,195 - #44 c
INFO  22:49:44,195 - #33 .
INFO  22:49:44,195 - #44 getValue
INFO  22:49:44,195 - #34 (
INFO  22:49:44,196 - #44 c
INFO  22:49:44,196 - #33 .
INFO  22:49:44,196 - #44 theA
INFO  22:49:44,196 - #33 .
INFO  22:49:44,196 - #44 x
INFO  22:49:44,196 - #36 [
INFO  22:49:44,196 - #43 0
INFO  22:49:44,196 - #37 ]
INFO  22:49:44,196 - #35 )
INFO  22:49:44,196 - #35 )
INFO  22:49:44,196 - #31 ;
INFO  22:49:44,196 - #39 }
INFO  22:49:44,196 - #39 }
INFO  22:49:44,197 - GlobalVar = 14
INFO  22:49:44,197 - GlobalConst = 2
INFO  22:49:44,197 - LocalMainVar = 4
INFO  22:49:44,197 - GlobalArray = 3
INFO  22:49:44,197 - FuncProg = 4
INFO  22:49:44,197 - Blocks = 8
INFO  22:49:44,197 - FuncCalls = 5
INFO  22:49:44,197 - FormalArg = 1
INFO  22:49:44,197 - DefClass = 3
INFO  22:49:44,197 - DefMethodClass = 4
INFO  22:50:06,037 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:50:06,047 - #2 program
INFO  22:50:06,047 - #44 Program
INFO  22:50:06,047 - #4 class
INFO  22:50:06,047 - #44 A
INFO  22:50:06,047 - #38 {
INFO  22:50:06,047 - #44 int
INFO  22:50:06,047 - #44 x
INFO  22:50:06,047 - #36 [
INFO  22:50:06,047 - #37 ]
INFO  22:50:06,047 - #32 ,
INFO  22:50:06,048 - #44 y
INFO  22:50:06,048 - #36 [
INFO  22:50:06,048 - #37 ]
INFO  22:50:06,048 - #31 ;
INFO  22:50:06,048 - #39 }
INFO  22:50:06,048 - #6 const
INFO  22:50:06,048 - #44 int
INFO  22:50:06,048 - #44 pi
INFO  22:50:06,048 - #28 =
INFO  22:50:06,048 - #43 3
INFO  22:50:06,048 - #32 ,
INFO  22:50:06,049 - #44 e
INFO  22:50:06,049 - #28 =
INFO  22:50:06,049 - #43 2
INFO  22:50:06,049 - #31 ;
INFO  22:50:06,049 - #4 class
INFO  22:50:06,049 - #44 B
INFO  22:50:06,049 - #14 extends
INFO  22:50:06,049 - #44 A
INFO  22:50:06,049 - #38 {
INFO  22:50:06,049 - #44 int
INFO  22:50:06,049 - #44 i
INFO  22:50:06,049 - #31 ;
INFO  22:50:06,049 - #44 int
INFO  22:50:06,050 - #44 x
INFO  22:50:06,050 - #36 [
INFO  22:50:06,050 - #37 ]
INFO  22:50:06,050 - #31 ;
INFO  22:50:06,050 - #38 {
INFO  22:50:06,050 - #44 int
INFO  22:50:06,050 - #44 getValue
INFO  22:50:06,050 - #34 (
INFO  22:50:06,050 - #44 int
INFO  22:50:06,050 - #44 a
INFO  22:50:06,050 - #35 )
INFO  22:50:06,050 - #44 int
INFO  22:50:06,050 - #44 b
INFO  22:50:06,050 - #31 ;
INFO  22:50:06,051 - #44 bool
INFO  22:50:06,051 - #44 c
INFO  22:50:06,051 - #31 ;
INFO  22:50:06,051 - #38 {
INFO  22:50:06,051 - #39 }
INFO  22:50:06,051 - #39 }
INFO  22:50:06,051 - #39 }
INFO  22:50:06,051 - #4 class
INFO  22:50:06,051 - #44 C
INFO  22:50:06,051 - #14 extends
INFO  22:50:06,051 - #44 B
INFO  22:50:06,051 - #38 {
INFO  22:50:06,052 - #44 A
INFO  22:50:06,052 - #44 theA
INFO  22:50:06,052 - #31 ;
INFO  22:50:06,052 - #44 string
INFO  22:50:06,052 - #44 a
INFO  22:50:06,052 - #31 ;
INFO  22:50:06,052 - #38 {
INFO  22:50:06,052 - #12 void
INFO  22:50:06,052 - #44 aaa
INFO  22:50:06,052 - #34 (
INFO  22:50:06,052 - #35 )
INFO  22:50:06,052 - #44 A
INFO  22:50:06,053 - #44 a
INFO  22:50:06,053 - #31 ;
INFO  22:50:06,053 - #44 C
INFO  22:50:06,053 - #44 c
INFO  22:50:06,053 - #31 ;
INFO  22:50:06,053 - #44 int
INFO  22:50:06,053 - #44 i
INFO  22:50:06,053 - #31 ;
INFO  22:50:06,053 - #44 int
INFO  22:50:06,053 - #44 x
INFO  22:50:06,054 - #36 [
INFO  22:50:06,054 - #37 ]
INFO  22:50:06,054 - #31 ;
INFO  22:50:06,054 - #38 {
INFO  22:50:06,054 - #39 }
INFO  22:50:06,054 - #12 void
INFO  22:50:06,054 - #44 bbb
INFO  22:50:06,054 - #34 (
INFO  22:50:06,054 - #35 )
INFO  22:50:06,054 - #44 A
INFO  22:50:06,054 - #44 a
INFO  22:50:06,055 - #31 ;
INFO  22:50:06,055 - #44 C
INFO  22:50:06,055 - #44 c
INFO  22:50:06,055 - #31 ;
INFO  22:50:06,055 - #44 int
INFO  22:50:06,055 - #44 i
INFO  22:50:06,055 - #31 ;
INFO  22:50:06,055 - #44 int
INFO  22:50:06,055 - #44 x
INFO  22:50:06,055 - #36 [
INFO  22:50:06,055 - #37 ]
INFO  22:50:06,056 - #31 ;
INFO  22:50:06,056 - #38 {
INFO  22:50:06,056 - #39 }
INFO  22:50:06,056 - #12 void
INFO  22:50:06,056 - #44 ccc
INFO  22:50:06,056 - #34 (
INFO  22:50:06,056 - #35 )
INFO  22:50:06,056 - #44 A
INFO  22:50:06,056 - #44 a
INFO  22:50:06,056 - #31 ;
INFO  22:50:06,056 - #44 C
INFO  22:50:06,057 - #44 c
INFO  22:50:06,057 - #31 ;
INFO  22:50:06,057 - #44 int
INFO  22:50:06,057 - #44 i
INFO  22:50:06,057 - #31 ;
INFO  22:50:06,057 - #44 int
INFO  22:50:06,057 - #44 x
INFO  22:50:06,057 - #36 [
INFO  22:50:06,058 - #37 ]
INFO  22:50:06,058 - #31 ;
INFO  22:50:06,058 - #38 {
INFO  22:50:06,058 - #39 }
INFO  22:50:06,058 - #39 }
INFO  22:50:06,058 - #39 }
INFO  22:50:06,058 - #38 {
INFO  22:50:06,058 - #12 void
INFO  22:50:06,059 - #44 main
INFO  22:50:06,059 - #34 (
INFO  22:50:06,059 - #35 )
INFO  22:50:06,059 - #44 A
INFO  22:50:06,059 - #44 a
INFO  22:50:06,059 - #31 ;
INFO  22:50:06,059 - #44 C
INFO  22:50:06,059 - #44 c
INFO  22:50:06,059 - #31 ;
INFO  22:50:06,059 - #44 int
INFO  22:50:06,060 - #44 i
INFO  22:50:06,060 - #31 ;
INFO  22:50:06,060 - #44 int
INFO  22:50:06,060 - #44 x
INFO  22:50:06,060 - #36 [
INFO  22:50:06,060 - #37 ]
INFO  22:50:06,060 - #31 ;
INFO  22:50:06,060 - #38 {
INFO  22:50:06,060 - #44 a
INFO  22:50:06,060 - #28 =
INFO  22:50:06,060 - #8 new
INFO  22:50:06,060 - #44 A
INFO  22:50:06,060 - #31 ;
INFO  22:50:06,061 - #44 a
INFO  22:50:06,061 - #33 .
INFO  22:50:06,061 - #44 x
INFO  22:50:06,061 - #28 =
INFO  22:50:06,061 - #8 new
INFO  22:50:06,061 - #44 int
INFO  22:50:06,061 - #36 [
INFO  22:50:06,061 - #43 5
INFO  22:50:06,061 - #37 ]
INFO  22:50:06,061 - #31 ;
INFO  22:50:06,061 - #44 a
INFO  22:50:06,061 - #33 .
INFO  22:50:06,062 - #44 y
INFO  22:50:06,062 - #28 =
INFO  22:50:06,062 - #8 new
INFO  22:50:06,062 - #44 int
INFO  22:50:06,062 - #36 [
INFO  22:50:06,062 - #43 5
INFO  22:50:06,062 - #37 ]
INFO  22:50:06,062 - #31 ;
INFO  22:50:06,062 - #44 c
INFO  22:50:06,062 - #28 =
INFO  22:50:06,063 - #8 new
INFO  22:50:06,063 - #44 C
INFO  22:50:06,063 - #31 ;
INFO  22:50:06,063 - #44 c
INFO  22:50:06,063 - #33 .
INFO  22:50:06,063 - #44 theA
INFO  22:50:06,063 - #28 =
INFO  22:50:06,064 - #44 a
INFO  22:50:06,064 - #31 ;
INFO  22:50:06,064 - #44 c
INFO  22:50:06,064 - #33 .
INFO  22:50:06,064 - #44 x
INFO  22:50:06,064 - #28 =
INFO  22:50:06,064 - #8 new
INFO  22:50:06,064 - #44 int
INFO  22:50:06,064 - #36 [
INFO  22:50:06,064 - #43 5
INFO  22:50:06,064 - #37 ]
INFO  22:50:06,065 - #31 ;
INFO  22:50:06,065 - #44 x
INFO  22:50:06,065 - #28 =
INFO  22:50:06,065 - #8 new
INFO  22:50:06,065 - #44 int
INFO  22:50:06,065 - #36 [
INFO  22:50:06,065 - #43 3
INFO  22:50:06,065 - #37 ]
INFO  22:50:06,065 - #31 ;
INFO  22:50:06,065 - #44 i
INFO  22:50:06,066 - #28 =
INFO  22:50:06,066 - #43 0
INFO  22:50:06,066 - #31 ;
INFO  22:50:06,066 - #10 read
INFO  22:50:06,066 - #34 (
INFO  22:50:06,066 - #44 c
INFO  22:50:06,066 - #33 .
INFO  22:50:06,066 - #44 i
INFO  22:50:06,066 - #35 )
INFO  22:50:06,066 - #31 ;
INFO  22:50:06,066 - #13 while
INFO  22:50:06,067 - #34 (
INFO  22:50:06,067 - #44 i
INFO  22:50:06,067 - #24 <
INFO  22:50:06,067 - #43 5
INFO  22:50:06,067 - #35 )
INFO  22:50:06,067 - #38 {
INFO  22:50:06,067 - #10 read
INFO  22:50:06,067 - #34 (
INFO  22:50:06,067 - #44 c
INFO  22:50:06,067 - #33 .
INFO  22:50:06,067 - #44 x
INFO  22:50:06,068 - #36 [
INFO  22:50:06,068 - #44 i
INFO  22:50:06,068 - #37 ]
INFO  22:50:06,068 - #35 )
INFO  22:50:06,068 - #31 ;
INFO  22:50:06,068 - #10 read
INFO  22:50:06,068 - #34 (
INFO  22:50:06,068 - #44 c
INFO  22:50:06,068 - #33 .
INFO  22:50:06,068 - #44 theA
INFO  22:50:06,068 - #33 .
INFO  22:50:06,069 - #44 x
INFO  22:50:06,069 - #36 [
INFO  22:50:06,069 - #44 i
INFO  22:50:06,069 - #37 ]
INFO  22:50:06,069 - #35 )
INFO  22:50:06,069 - #31 ;
INFO  22:50:06,069 - #44 i
INFO  22:50:06,069 - #29 ++
INFO  22:50:06,069 - #31 ;
INFO  22:50:06,069 - #39 }
INFO  22:50:06,070 - #9 print
INFO  22:50:06,070 - #34 (
INFO  22:50:06,070 - #44 c
INFO  22:50:06,070 - #33 .
INFO  22:50:06,070 - #44 getValue
INFO  22:50:06,070 - #34 (
INFO  22:50:06,070 - #44 c
INFO  22:50:06,070 - #33 .
INFO  22:50:06,070 - #44 theA
INFO  22:50:06,070 - #33 .
INFO  22:50:06,070 - #44 x
INFO  22:50:06,070 - #36 [
INFO  22:50:06,070 - #43 0
INFO  22:50:06,070 - #37 ]
INFO  22:50:06,071 - #35 )
INFO  22:50:06,071 - #35 )
INFO  22:50:06,071 - #31 ;
INFO  22:50:06,071 - #39 }
INFO  22:50:06,071 - #39 }
INFO  22:50:06,071 - GlobalVar = 14
INFO  22:50:06,071 - GlobalConst = 2
INFO  22:50:06,071 - LocalMainVar = 4
INFO  22:50:06,071 - GlobalArray = 3
INFO  22:50:06,071 - FuncProg = 4
INFO  22:50:06,071 - Blocks = 5
INFO  22:50:06,071 - FuncCalls = 5
INFO  22:50:06,072 - FormalArg = 1
INFO  22:50:06,072 - DefClass = 3
INFO  22:50:06,072 - DefMethodClass = 1
INFO  22:51:05,674 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:51:05,685 - #2 program
INFO  22:51:05,685 - #44 Program
INFO  22:51:05,685 - #4 class
INFO  22:51:05,685 - #44 A
INFO  22:51:05,685 - #38 {
INFO  22:51:05,685 - #44 int
INFO  22:51:05,685 - #44 x
INFO  22:51:05,685 - #36 [
INFO  22:51:05,686 - #37 ]
INFO  22:51:05,686 - #32 ,
INFO  22:51:05,686 - #44 y
INFO  22:51:05,686 - #36 [
INFO  22:51:05,686 - #37 ]
INFO  22:51:05,686 - #31 ;
INFO  22:51:05,686 - #39 }
INFO  22:51:05,686 - #6 const
INFO  22:51:05,686 - #44 int
INFO  22:51:05,686 - #44 pi
INFO  22:51:05,686 - #28 =
INFO  22:51:05,687 - #43 3
INFO  22:51:05,687 - #32 ,
INFO  22:51:05,687 - #44 e
INFO  22:51:05,687 - #28 =
INFO  22:51:05,687 - #43 2
INFO  22:51:05,687 - #31 ;
INFO  22:51:05,687 - #4 class
INFO  22:51:05,687 - #44 B
INFO  22:51:05,687 - #14 extends
INFO  22:51:05,687 - #44 A
INFO  22:51:05,687 - #38 {
INFO  22:51:05,687 - #44 int
INFO  22:51:05,687 - #44 i
INFO  22:51:05,688 - #31 ;
INFO  22:51:05,688 - #44 int
INFO  22:51:05,688 - #44 x
INFO  22:51:05,688 - #36 [
INFO  22:51:05,688 - #37 ]
INFO  22:51:05,688 - #31 ;
INFO  22:51:05,688 - #39 }
INFO  22:51:05,688 - #4 class
INFO  22:51:05,688 - #44 C
INFO  22:51:05,688 - #14 extends
INFO  22:51:05,688 - #44 B
INFO  22:51:05,688 - #38 {
INFO  22:51:05,688 - #44 A
INFO  22:51:05,688 - #44 theA
INFO  22:51:05,689 - #31 ;
INFO  22:51:05,689 - #44 string
INFO  22:51:05,689 - #44 a
INFO  22:51:05,689 - #31 ;
INFO  22:51:05,689 - #38 {
INFO  22:51:05,689 - #12 void
INFO  22:51:05,689 - #44 aaa
INFO  22:51:05,689 - #34 (
INFO  22:51:05,689 - #35 )
INFO  22:51:05,689 - #44 A
INFO  22:51:05,690 - #44 a
INFO  22:51:05,690 - #31 ;
INFO  22:51:05,690 - #44 C
INFO  22:51:05,690 - #44 c
INFO  22:51:05,690 - #31 ;
INFO  22:51:05,690 - #44 int
INFO  22:51:05,690 - #44 i
INFO  22:51:05,690 - #31 ;
INFO  22:51:05,690 - #44 int
INFO  22:51:05,690 - #44 x
INFO  22:51:05,690 - #36 [
INFO  22:51:05,691 - #37 ]
INFO  22:51:05,691 - #31 ;
INFO  22:51:05,691 - #38 {
INFO  22:51:05,691 - #39 }
INFO  22:51:05,691 - #12 void
INFO  22:51:05,691 - #44 bbb
INFO  22:51:05,691 - #34 (
INFO  22:51:05,692 - #35 )
INFO  22:51:05,692 - #44 A
INFO  22:51:05,692 - #44 a
INFO  22:51:05,693 - #31 ;
INFO  22:51:05,693 - #44 C
INFO  22:51:05,693 - #44 c
INFO  22:51:05,693 - #31 ;
INFO  22:51:05,693 - #44 int
INFO  22:51:05,693 - #44 i
INFO  22:51:05,693 - #31 ;
INFO  22:51:05,694 - #44 int
INFO  22:51:05,694 - #44 x
INFO  22:51:05,694 - #36 [
INFO  22:51:05,694 - #37 ]
INFO  22:51:05,694 - #31 ;
INFO  22:51:05,694 - #38 {
INFO  22:51:05,694 - #39 }
INFO  22:51:05,694 - #12 void
INFO  22:51:05,694 - #44 ccc
INFO  22:51:05,694 - #34 (
INFO  22:51:05,694 - #35 )
INFO  22:51:05,695 - #44 A
INFO  22:51:05,695 - #44 a
INFO  22:51:05,695 - #31 ;
INFO  22:51:05,695 - #44 C
INFO  22:51:05,695 - #44 c
INFO  22:51:05,695 - #31 ;
INFO  22:51:05,695 - #44 int
INFO  22:51:05,695 - #44 i
INFO  22:51:05,695 - #31 ;
INFO  22:51:05,695 - #44 int
INFO  22:51:05,696 - #44 x
INFO  22:51:05,696 - #36 [
INFO  22:51:05,696 - #37 ]
INFO  22:51:05,696 - #31 ;
INFO  22:51:05,696 - #38 {
INFO  22:51:05,696 - #39 }
INFO  22:51:05,696 - #39 }
INFO  22:51:05,696 - #39 }
INFO  22:51:05,696 - #38 {
INFO  22:51:05,696 - #12 void
INFO  22:51:05,696 - #44 main
INFO  22:51:05,696 - #34 (
INFO  22:51:05,697 - #35 )
INFO  22:51:05,697 - #44 A
INFO  22:51:05,697 - #44 a
INFO  22:51:05,697 - #31 ;
INFO  22:51:05,697 - #44 C
INFO  22:51:05,697 - #44 c
INFO  22:51:05,697 - #31 ;
INFO  22:51:05,697 - #44 int
INFO  22:51:05,697 - #44 i
INFO  22:51:05,698 - #31 ;
INFO  22:51:05,698 - #44 int
INFO  22:51:05,698 - #44 x
INFO  22:51:05,698 - #36 [
INFO  22:51:05,698 - #37 ]
INFO  22:51:05,698 - #31 ;
INFO  22:51:05,699 - #38 {
INFO  22:51:05,699 - #44 a
INFO  22:51:05,699 - #28 =
INFO  22:51:05,699 - #8 new
INFO  22:51:05,699 - #44 A
INFO  22:51:05,699 - #31 ;
INFO  22:51:05,699 - #44 a
INFO  22:51:05,699 - #33 .
INFO  22:51:05,699 - #44 x
INFO  22:51:05,700 - #28 =
INFO  22:51:05,700 - #8 new
INFO  22:51:05,700 - #44 int
INFO  22:51:05,700 - #36 [
INFO  22:51:05,700 - #43 5
INFO  22:51:05,700 - #37 ]
INFO  22:51:05,700 - #31 ;
INFO  22:51:05,700 - #44 a
INFO  22:51:05,700 - #33 .
INFO  22:51:05,701 - #44 y
INFO  22:51:05,701 - #28 =
INFO  22:51:05,701 - #8 new
INFO  22:51:05,701 - #44 int
INFO  22:51:05,701 - #36 [
INFO  22:51:05,701 - #43 5
INFO  22:51:05,701 - #37 ]
INFO  22:51:05,701 - #31 ;
INFO  22:51:05,701 - #44 c
INFO  22:51:05,701 - #28 =
INFO  22:51:05,701 - #8 new
INFO  22:51:05,701 - #44 C
INFO  22:51:05,701 - #31 ;
INFO  22:51:05,702 - #44 c
INFO  22:51:05,702 - #33 .
INFO  22:51:05,702 - #44 theA
INFO  22:51:05,702 - #28 =
INFO  22:51:05,702 - #44 a
INFO  22:51:05,702 - #31 ;
INFO  22:51:05,702 - #44 c
INFO  22:51:05,702 - #33 .
INFO  22:51:05,702 - #44 x
INFO  22:51:05,702 - #28 =
INFO  22:51:05,702 - #8 new
INFO  22:51:05,703 - #44 int
INFO  22:51:05,703 - #36 [
INFO  22:51:05,703 - #43 5
INFO  22:51:05,703 - #37 ]
INFO  22:51:05,703 - #31 ;
INFO  22:51:05,703 - #44 x
INFO  22:51:05,703 - #28 =
INFO  22:51:05,704 - #8 new
INFO  22:51:05,704 - #44 int
INFO  22:51:05,704 - #36 [
INFO  22:51:05,704 - #43 3
INFO  22:51:05,704 - #37 ]
INFO  22:51:05,704 - #31 ;
INFO  22:51:05,704 - #44 i
INFO  22:51:05,704 - #28 =
INFO  22:51:05,704 - #43 0
INFO  22:51:05,704 - #31 ;
INFO  22:51:05,705 - #10 read
INFO  22:51:05,705 - #34 (
INFO  22:51:05,705 - #44 c
INFO  22:51:05,705 - #33 .
INFO  22:51:05,705 - #44 i
INFO  22:51:05,705 - #35 )
INFO  22:51:05,705 - #31 ;
INFO  22:51:05,705 - #13 while
INFO  22:51:05,705 - #34 (
INFO  22:51:05,705 - #44 i
INFO  22:51:05,705 - #24 <
INFO  22:51:05,706 - #43 5
INFO  22:51:05,706 - #35 )
INFO  22:51:05,706 - #38 {
INFO  22:51:05,706 - #10 read
INFO  22:51:05,706 - #34 (
INFO  22:51:05,706 - #44 c
INFO  22:51:05,706 - #33 .
INFO  22:51:05,706 - #44 x
INFO  22:51:05,706 - #36 [
INFO  22:51:05,706 - #44 i
INFO  22:51:05,706 - #37 ]
INFO  22:51:05,707 - #35 )
INFO  22:51:05,707 - #31 ;
INFO  22:51:05,707 - #10 read
INFO  22:51:05,707 - #34 (
INFO  22:51:05,707 - #44 c
INFO  22:51:05,707 - #33 .
INFO  22:51:05,707 - #44 theA
INFO  22:51:05,707 - #33 .
INFO  22:51:05,707 - #44 x
INFO  22:51:05,707 - #36 [
INFO  22:51:05,707 - #44 i
INFO  22:51:05,708 - #37 ]
INFO  22:51:05,708 - #35 )
INFO  22:51:05,708 - #31 ;
INFO  22:51:05,708 - #44 i
INFO  22:51:05,708 - #29 ++
INFO  22:51:05,708 - #31 ;
INFO  22:51:05,708 - #39 }
INFO  22:51:05,708 - #9 print
INFO  22:51:05,708 - #34 (
INFO  22:51:05,708 - #44 c
INFO  22:51:05,708 - #33 .
INFO  22:51:05,709 - #44 getValue
INFO  22:51:05,709 - #34 (
INFO  22:51:05,709 - #44 c
INFO  22:51:05,709 - #33 .
INFO  22:51:05,709 - #44 theA
INFO  22:51:05,709 - #33 .
INFO  22:51:05,709 - #44 x
INFO  22:51:05,709 - #36 [
INFO  22:51:05,710 - #43 0
INFO  22:51:05,710 - #37 ]
INFO  22:51:05,710 - #35 )
INFO  22:51:05,710 - #35 )
INFO  22:51:05,710 - #31 ;
INFO  22:51:05,710 - #39 }
INFO  22:51:05,710 - #39 }
INFO  22:51:05,711 - GlobalVar = 14
INFO  22:51:05,711 - GlobalConst = 2
INFO  22:51:05,711 - LocalMainVar = 4
INFO  22:51:05,711 - GlobalArray = 3
INFO  22:51:05,711 - FuncProg = 4
INFO  22:51:05,711 - Blocks = 4
INFO  22:51:05,711 - FuncCalls = 5
INFO  22:51:05,711 - FormalArg = 0
INFO  22:51:05,711 - DefClass = 3
INFO  22:51:05,711 - DefMethodClass = 0
INFO  22:51:08,940 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:51:08,950 - #2 program
INFO  22:51:08,950 - #44 Program
INFO  22:51:08,950 - #4 class
INFO  22:51:08,950 - #44 A
INFO  22:51:08,950 - #38 {
INFO  22:51:08,951 - #44 int
INFO  22:51:08,951 - #44 x
INFO  22:51:08,951 - #36 [
INFO  22:51:08,951 - #37 ]
INFO  22:51:08,951 - #32 ,
INFO  22:51:08,951 - #44 y
INFO  22:51:08,951 - #36 [
INFO  22:51:08,951 - #37 ]
INFO  22:51:08,951 - #31 ;
INFO  22:51:08,951 - #39 }
INFO  22:51:08,951 - #6 const
INFO  22:51:08,952 - #44 int
INFO  22:51:08,952 - #44 pi
INFO  22:51:08,952 - #28 =
INFO  22:51:08,952 - #43 3
INFO  22:51:08,952 - #32 ,
INFO  22:51:08,952 - #44 e
INFO  22:51:08,952 - #28 =
INFO  22:51:08,952 - #43 2
INFO  22:51:08,952 - #31 ;
INFO  22:51:08,952 - #4 class
INFO  22:51:08,952 - #44 B
INFO  22:51:08,952 - #14 extends
INFO  22:51:08,952 - #44 A
INFO  22:51:08,952 - #38 {
INFO  22:51:08,953 - #44 int
INFO  22:51:08,953 - #44 i
INFO  22:51:08,953 - #31 ;
INFO  22:51:08,953 - #44 int
INFO  22:51:08,953 - #44 x
INFO  22:51:08,953 - #36 [
INFO  22:51:08,953 - #37 ]
INFO  22:51:08,953 - #31 ;
INFO  22:51:08,953 - #39 }
INFO  22:51:08,953 - #4 class
INFO  22:51:08,953 - #44 C
INFO  22:51:08,953 - #14 extends
INFO  22:51:08,953 - #44 B
INFO  22:51:08,953 - #38 {
INFO  22:51:08,954 - #44 A
INFO  22:51:08,954 - #44 theA
INFO  22:51:08,954 - #31 ;
INFO  22:51:08,954 - #44 string
INFO  22:51:08,954 - #44 a
INFO  22:51:08,954 - #31 ;
INFO  22:51:08,954 - #38 {
INFO  22:51:08,954 - #12 void
INFO  22:51:08,954 - #44 aaa
INFO  22:51:08,954 - #34 (
INFO  22:51:08,954 - #35 )
INFO  22:51:08,954 - #44 A
INFO  22:51:08,954 - #44 a
INFO  22:51:08,955 - #31 ;
INFO  22:51:08,955 - #44 C
INFO  22:51:08,955 - #44 c
INFO  22:51:08,955 - #31 ;
INFO  22:51:08,955 - #44 int
INFO  22:51:08,955 - #44 i
INFO  22:51:08,955 - #31 ;
INFO  22:51:08,955 - #44 int
INFO  22:51:08,955 - #44 x
INFO  22:51:08,955 - #36 [
INFO  22:51:08,955 - #37 ]
INFO  22:51:08,955 - #31 ;
INFO  22:51:08,956 - #38 {
INFO  22:51:08,956 - #39 }
INFO  22:51:08,956 - #12 void
INFO  22:51:08,956 - #44 bbb
INFO  22:51:08,956 - #34 (
INFO  22:51:08,956 - #35 )
INFO  22:51:08,956 - #44 A
INFO  22:51:08,956 - #44 a
INFO  22:51:08,956 - #31 ;
INFO  22:51:08,956 - #44 C
INFO  22:51:08,956 - #44 c
INFO  22:51:08,957 - #31 ;
INFO  22:51:08,957 - #44 int
INFO  22:51:08,957 - #44 i
INFO  22:51:08,957 - #31 ;
INFO  22:51:08,957 - #44 int
INFO  22:51:08,957 - #44 x
INFO  22:51:08,957 - #36 [
INFO  22:51:08,957 - #37 ]
INFO  22:51:08,958 - #31 ;
INFO  22:51:08,958 - #38 {
INFO  22:51:08,958 - #39 }
INFO  22:51:08,958 - #12 void
INFO  22:51:08,958 - #44 ccc
INFO  22:51:08,958 - #34 (
INFO  22:51:08,958 - #35 )
INFO  22:51:08,958 - #44 A
INFO  22:51:08,958 - #44 a
INFO  22:51:08,958 - #31 ;
INFO  22:51:08,959 - #44 C
INFO  22:51:08,959 - #44 c
INFO  22:51:08,959 - #31 ;
INFO  22:51:08,959 - #44 int
INFO  22:51:08,959 - #44 i
INFO  22:51:08,959 - #31 ;
INFO  22:51:08,959 - #44 int
INFO  22:51:08,959 - #44 x
INFO  22:51:08,959 - #36 [
INFO  22:51:08,959 - #37 ]
INFO  22:51:08,960 - #31 ;
INFO  22:51:08,960 - #38 {
INFO  22:51:08,960 - #39 }
INFO  22:51:08,960 - #39 }
INFO  22:51:08,960 - #39 }
INFO  22:51:08,960 - #38 {
INFO  22:51:08,960 - #12 void
INFO  22:51:08,960 - #44 main
INFO  22:51:08,960 - #34 (
INFO  22:51:08,960 - #35 )
INFO  22:51:08,961 - #44 A
INFO  22:51:08,961 - #44 a
INFO  22:51:08,961 - #31 ;
INFO  22:51:08,961 - #44 C
INFO  22:51:08,961 - #44 c
INFO  22:51:08,961 - #31 ;
INFO  22:51:08,961 - #44 int
INFO  22:51:08,961 - #44 i
INFO  22:51:08,961 - #31 ;
INFO  22:51:08,961 - #44 int
INFO  22:51:08,961 - #44 x
INFO  22:51:08,962 - #36 [
INFO  22:51:08,962 - #37 ]
INFO  22:51:08,962 - #31 ;
INFO  22:51:08,962 - #38 {
INFO  22:51:08,962 - #44 a
INFO  22:51:08,962 - #28 =
INFO  22:51:08,962 - #8 new
INFO  22:51:08,962 - #44 A
INFO  22:51:08,962 - #31 ;
INFO  22:51:08,962 - #44 a
INFO  22:51:08,963 - #33 .
INFO  22:51:08,963 - #44 x
INFO  22:51:08,963 - #28 =
INFO  22:51:08,963 - #8 new
INFO  22:51:08,963 - #44 int
INFO  22:51:08,963 - #36 [
INFO  22:51:08,963 - #43 5
INFO  22:51:08,963 - #37 ]
INFO  22:51:08,963 - #31 ;
INFO  22:51:08,963 - #44 a
INFO  22:51:08,963 - #33 .
INFO  22:51:08,963 - #44 y
INFO  22:51:08,964 - #28 =
INFO  22:51:08,964 - #8 new
INFO  22:51:08,964 - #44 int
INFO  22:51:08,964 - #36 [
INFO  22:51:08,964 - #43 5
INFO  22:51:08,964 - #37 ]
INFO  22:51:08,964 - #31 ;
INFO  22:51:08,964 - #44 c
INFO  22:51:08,964 - #28 =
INFO  22:51:08,964 - #8 new
INFO  22:51:08,964 - #44 C
INFO  22:51:08,964 - #31 ;
INFO  22:51:08,965 - #44 c
INFO  22:51:08,965 - #33 .
INFO  22:51:08,965 - #44 theA
INFO  22:51:08,965 - #28 =
INFO  22:51:08,965 - #44 a
INFO  22:51:08,965 - #31 ;
INFO  22:51:08,965 - #44 c
INFO  22:51:08,965 - #33 .
INFO  22:51:08,965 - #44 x
INFO  22:51:08,965 - #28 =
INFO  22:51:08,965 - #8 new
INFO  22:51:08,966 - #44 int
INFO  22:51:08,966 - #36 [
INFO  22:51:08,966 - #43 5
INFO  22:51:08,966 - #37 ]
INFO  22:51:08,966 - #31 ;
INFO  22:51:08,966 - #44 x
INFO  22:51:08,966 - #28 =
INFO  22:51:08,967 - #8 new
INFO  22:51:08,967 - #44 int
INFO  22:51:08,967 - #36 [
INFO  22:51:08,967 - #43 3
INFO  22:51:08,967 - #37 ]
INFO  22:51:08,967 - #31 ;
INFO  22:51:08,967 - #44 i
INFO  22:51:08,967 - #28 =
INFO  22:51:08,967 - #43 0
INFO  22:51:08,968 - #31 ;
INFO  22:51:08,968 - #10 read
INFO  22:51:08,968 - #34 (
INFO  22:51:08,968 - #44 c
INFO  22:51:08,968 - #33 .
INFO  22:51:08,968 - #44 i
INFO  22:51:08,968 - #35 )
INFO  22:51:08,968 - #31 ;
INFO  22:51:08,968 - #13 while
INFO  22:51:08,969 - #34 (
INFO  22:51:08,969 - #44 i
INFO  22:51:08,969 - #24 <
INFO  22:51:08,969 - #43 5
INFO  22:51:08,969 - #35 )
INFO  22:51:08,969 - #38 {
INFO  22:51:08,969 - #10 read
INFO  22:51:08,969 - #34 (
INFO  22:51:08,969 - #44 c
INFO  22:51:08,970 - #33 .
INFO  22:51:08,970 - #44 x
INFO  22:51:08,970 - #36 [
INFO  22:51:08,970 - #44 i
INFO  22:51:08,970 - #37 ]
INFO  22:51:08,970 - #35 )
INFO  22:51:08,970 - #31 ;
INFO  22:51:08,970 - #10 read
INFO  22:51:08,970 - #34 (
INFO  22:51:08,970 - #44 c
INFO  22:51:08,971 - #33 .
INFO  22:51:08,971 - #44 theA
INFO  22:51:08,971 - #33 .
INFO  22:51:08,971 - #44 x
INFO  22:51:08,971 - #36 [
INFO  22:51:08,971 - #44 i
INFO  22:51:08,971 - #37 ]
INFO  22:51:08,971 - #35 )
INFO  22:51:08,971 - #31 ;
INFO  22:51:08,971 - #44 i
INFO  22:51:08,972 - #29 ++
INFO  22:51:08,972 - #31 ;
INFO  22:51:08,972 - #39 }
INFO  22:51:08,972 - #9 print
INFO  22:51:08,972 - #34 (
INFO  22:51:08,972 - #44 c
INFO  22:51:08,972 - #33 .
INFO  22:51:08,972 - #44 getValue
INFO  22:51:08,972 - #34 (
INFO  22:51:08,972 - #44 c
INFO  22:51:08,972 - #33 .
INFO  22:51:08,973 - #44 theA
INFO  22:51:08,973 - #33 .
INFO  22:51:08,973 - #44 x
INFO  22:51:08,973 - #36 [
INFO  22:51:08,973 - #43 0
INFO  22:51:08,973 - #37 ]
INFO  22:51:08,973 - #35 )
INFO  22:51:08,973 - #35 )
INFO  22:51:08,973 - #31 ;
INFO  22:51:08,973 - #39 }
INFO  22:51:08,974 - #39 }
INFO  22:51:08,974 - GlobalVar = 14
INFO  22:51:08,974 - GlobalConst = 2
INFO  22:51:08,974 - LocalMainVar = 4
INFO  22:51:08,974 - GlobalArray = 3
INFO  22:51:08,974 - FuncProg = 4
INFO  22:51:08,974 - Blocks = 4
INFO  22:51:08,974 - FuncCalls = 5
INFO  22:51:08,974 - FormalArg = 0
INFO  22:51:08,974 - DefClass = 3
INFO  22:51:08,974 - DefMethodClass = 0
INFO  22:51:28,021 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:51:28,032 - #2 program
INFO  22:51:28,032 - #44 Program
INFO  22:51:28,032 - #4 class
INFO  22:51:28,032 - #44 A
INFO  22:51:28,032 - #38 {
INFO  22:51:28,032 - #44 int
INFO  22:51:28,032 - #44 x
INFO  22:51:28,032 - #36 [
INFO  22:51:28,032 - #37 ]
INFO  22:51:28,033 - #32 ,
INFO  22:51:28,033 - #44 y
INFO  22:51:28,033 - #36 [
INFO  22:51:28,033 - #37 ]
INFO  22:51:28,033 - #31 ;
INFO  22:51:28,033 - #39 }
INFO  22:51:28,033 - #6 const
INFO  22:51:28,033 - #44 int
INFO  22:51:28,033 - #44 pi
INFO  22:51:28,033 - #28 =
INFO  22:51:28,034 - #43 3
INFO  22:51:28,034 - #32 ,
INFO  22:51:28,034 - #44 e
INFO  22:51:28,034 - #28 =
INFO  22:51:28,034 - #43 2
INFO  22:51:28,034 - #31 ;
INFO  22:51:28,034 - #4 class
INFO  22:51:28,034 - #44 C
INFO  22:51:28,034 - #14 extends
INFO  22:51:28,034 - #44 B
INFO  22:51:28,034 - #38 {
INFO  22:51:28,034 - #44 A
INFO  22:51:28,034 - #44 theA
INFO  22:51:28,035 - #31 ;
INFO  22:51:28,035 - #44 string
INFO  22:51:28,035 - #44 a
INFO  22:51:28,035 - #31 ;
INFO  22:51:28,035 - #38 {
INFO  22:51:28,035 - #12 void
INFO  22:51:28,035 - #44 aaa
INFO  22:51:28,035 - #34 (
INFO  22:51:28,035 - #35 )
INFO  22:51:28,035 - #44 A
INFO  22:51:28,035 - #44 a
INFO  22:51:28,035 - #31 ;
INFO  22:51:28,035 - #44 C
INFO  22:51:28,036 - #44 c
INFO  22:51:28,036 - #31 ;
INFO  22:51:28,036 - #44 int
INFO  22:51:28,036 - #44 i
INFO  22:51:28,036 - #31 ;
INFO  22:51:28,036 - #44 int
INFO  22:51:28,036 - #44 x
INFO  22:51:28,036 - #36 [
INFO  22:51:28,036 - #37 ]
INFO  22:51:28,036 - #31 ;
INFO  22:51:28,036 - #38 {
INFO  22:51:28,037 - #39 }
INFO  22:51:28,037 - #12 void
INFO  22:51:28,037 - #44 bbb
INFO  22:51:28,037 - #34 (
INFO  22:51:28,037 - #35 )
INFO  22:51:28,037 - #44 A
INFO  22:51:28,037 - #44 a
INFO  22:51:28,037 - #31 ;
INFO  22:51:28,037 - #44 C
INFO  22:51:28,037 - #44 c
INFO  22:51:28,037 - #31 ;
INFO  22:51:28,037 - #44 int
INFO  22:51:28,037 - #44 i
INFO  22:51:28,038 - #31 ;
INFO  22:51:28,038 - #44 int
INFO  22:51:28,038 - #44 x
INFO  22:51:28,038 - #36 [
INFO  22:51:28,038 - #37 ]
INFO  22:51:28,038 - #31 ;
INFO  22:51:28,038 - #38 {
INFO  22:51:28,038 - #39 }
INFO  22:51:28,039 - #12 void
INFO  22:51:28,039 - #44 ccc
INFO  22:51:28,039 - #34 (
INFO  22:51:28,039 - #35 )
INFO  22:51:28,039 - #44 A
INFO  22:51:28,039 - #44 a
INFO  22:51:28,039 - #31 ;
INFO  22:51:28,039 - #44 C
INFO  22:51:28,040 - #44 c
INFO  22:51:28,040 - #31 ;
INFO  22:51:28,040 - #44 int
INFO  22:51:28,040 - #44 i
INFO  22:51:28,040 - #31 ;
INFO  22:51:28,040 - #44 int
INFO  22:51:28,040 - #44 x
INFO  22:51:28,040 - #36 [
INFO  22:51:28,040 - #37 ]
INFO  22:51:28,041 - #31 ;
INFO  22:51:28,041 - #38 {
INFO  22:51:28,041 - #39 }
INFO  22:51:28,041 - #39 }
INFO  22:51:28,041 - #39 }
INFO  22:51:28,041 - #38 {
INFO  22:51:28,041 - #12 void
INFO  22:51:28,041 - #44 main
INFO  22:51:28,041 - #34 (
INFO  22:51:28,042 - #35 )
INFO  22:51:28,042 - #44 A
INFO  22:51:28,042 - #44 a
INFO  22:51:28,042 - #31 ;
INFO  22:51:28,042 - #44 C
INFO  22:51:28,042 - #44 c
INFO  22:51:28,042 - #31 ;
INFO  22:51:28,042 - #44 int
INFO  22:51:28,042 - #44 i
INFO  22:51:28,042 - #31 ;
INFO  22:51:28,042 - #44 int
INFO  22:51:28,042 - #44 x
INFO  22:51:28,042 - #36 [
INFO  22:51:28,042 - #37 ]
INFO  22:51:28,043 - #31 ;
INFO  22:51:28,043 - #38 {
INFO  22:51:28,043 - #44 a
INFO  22:51:28,043 - #28 =
INFO  22:51:28,043 - #8 new
INFO  22:51:28,043 - #44 A
INFO  22:51:28,043 - #31 ;
INFO  22:51:28,043 - #44 a
INFO  22:51:28,043 - #33 .
INFO  22:51:28,043 - #44 x
INFO  22:51:28,044 - #28 =
INFO  22:51:28,044 - #8 new
INFO  22:51:28,044 - #44 int
INFO  22:51:28,044 - #36 [
INFO  22:51:28,044 - #43 5
INFO  22:51:28,044 - #37 ]
INFO  22:51:28,044 - #31 ;
INFO  22:51:28,044 - #44 a
INFO  22:51:28,045 - #33 .
INFO  22:51:28,045 - #44 y
INFO  22:51:28,045 - #28 =
INFO  22:51:28,045 - #8 new
INFO  22:51:28,045 - #44 int
INFO  22:51:28,045 - #36 [
INFO  22:51:28,045 - #43 5
INFO  22:51:28,045 - #37 ]
INFO  22:51:28,045 - #31 ;
INFO  22:51:28,046 - #44 c
INFO  22:51:28,046 - #28 =
INFO  22:51:28,046 - #8 new
INFO  22:51:28,046 - #44 C
INFO  22:51:28,046 - #31 ;
INFO  22:51:28,046 - #44 c
INFO  22:51:28,046 - #33 .
INFO  22:51:28,046 - #44 theA
INFO  22:51:28,046 - #28 =
INFO  22:51:28,046 - #44 a
INFO  22:51:28,046 - #31 ;
INFO  22:51:28,047 - #44 c
INFO  22:51:28,047 - #33 .
INFO  22:51:28,047 - #44 x
INFO  22:51:28,047 - #28 =
INFO  22:51:28,047 - #8 new
INFO  22:51:28,047 - #44 int
INFO  22:51:28,047 - #36 [
INFO  22:51:28,047 - #43 5
INFO  22:51:28,047 - #37 ]
INFO  22:51:28,047 - #31 ;
INFO  22:51:28,047 - #44 x
INFO  22:51:28,047 - #28 =
INFO  22:51:28,048 - #8 new
INFO  22:51:28,048 - #44 int
INFO  22:51:28,048 - #36 [
INFO  22:51:28,048 - #43 3
INFO  22:51:28,048 - #37 ]
INFO  22:51:28,048 - #31 ;
INFO  22:51:28,048 - #44 i
INFO  22:51:28,048 - #28 =
INFO  22:51:28,048 - #43 0
INFO  22:51:28,049 - #31 ;
INFO  22:51:28,049 - #10 read
INFO  22:51:28,049 - #34 (
INFO  22:51:28,049 - #44 c
INFO  22:51:28,049 - #33 .
INFO  22:51:28,049 - #44 i
INFO  22:51:28,049 - #35 )
INFO  22:51:28,050 - #31 ;
INFO  22:51:28,050 - #13 while
INFO  22:51:28,050 - #34 (
INFO  22:51:28,050 - #44 i
INFO  22:51:28,050 - #24 <
INFO  22:51:28,050 - #43 5
INFO  22:51:28,050 - #35 )
INFO  22:51:28,050 - #38 {
INFO  22:51:28,050 - #10 read
INFO  22:51:28,051 - #34 (
INFO  22:51:28,051 - #44 c
INFO  22:51:28,051 - #33 .
INFO  22:51:28,051 - #44 x
INFO  22:51:28,051 - #36 [
INFO  22:51:28,051 - #44 i
INFO  22:51:28,051 - #37 ]
INFO  22:51:28,051 - #35 )
INFO  22:51:28,051 - #31 ;
INFO  22:51:28,051 - #10 read
INFO  22:51:28,052 - #34 (
INFO  22:51:28,052 - #44 c
INFO  22:51:28,052 - #33 .
INFO  22:51:28,052 - #44 theA
INFO  22:51:28,052 - #33 .
INFO  22:51:28,052 - #44 x
INFO  22:51:28,052 - #36 [
INFO  22:51:28,052 - #44 i
INFO  22:51:28,052 - #37 ]
INFO  22:51:28,052 - #35 )
INFO  22:51:28,053 - #31 ;
INFO  22:51:28,053 - #44 i
INFO  22:51:28,053 - #29 ++
INFO  22:51:28,053 - #31 ;
INFO  22:51:28,053 - #39 }
INFO  22:51:28,053 - #9 print
INFO  22:51:28,053 - #34 (
INFO  22:51:28,053 - #44 c
INFO  22:51:28,053 - #33 .
INFO  22:51:28,053 - #44 getValue
INFO  22:51:28,053 - #34 (
INFO  22:51:28,054 - #44 c
INFO  22:51:28,054 - #33 .
INFO  22:51:28,054 - #44 theA
INFO  22:51:28,054 - #33 .
INFO  22:51:28,054 - #44 x
INFO  22:51:28,054 - #36 [
INFO  22:51:28,054 - #43 0
INFO  22:51:28,054 - #37 ]
INFO  22:51:28,054 - #35 )
INFO  22:51:28,055 - #35 )
INFO  22:51:28,055 - #31 ;
INFO  22:51:28,055 - #39 }
INFO  22:51:28,055 - #39 }
INFO  22:51:28,055 - GlobalVar = 0
INFO  22:51:28,056 - GlobalConst = 2
INFO  22:51:28,056 - LocalMainVar = 4
INFO  22:51:28,056 - GlobalArray = 0
INFO  22:51:28,056 - FuncProg = 1
INFO  22:51:28,056 - Blocks = 4
INFO  22:51:28,056 - FuncCalls = 5
INFO  22:51:28,056 - FormalArg = 0
INFO  22:51:28,056 - DefClass = 2
INFO  22:51:28,056 - DefMethodClass = 3
INFO  22:53:27,351 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:53:27,360 - #2 program
INFO  22:53:27,360 - #44 Program
INFO  22:53:27,360 - #4 class
INFO  22:53:27,360 - #44 A
INFO  22:53:27,360 - #38 {
INFO  22:53:27,360 - #44 int
INFO  22:53:27,360 - #44 x
INFO  22:53:27,360 - #36 [
INFO  22:53:27,361 - #37 ]
INFO  22:53:27,361 - #32 ,
INFO  22:53:27,361 - #44 y
INFO  22:53:27,361 - #36 [
INFO  22:53:27,361 - #37 ]
INFO  22:53:27,361 - #31 ;
INFO  22:53:27,361 - #39 }
INFO  22:53:27,361 - #6 const
INFO  22:53:27,361 - #44 int
INFO  22:53:27,361 - #44 pi
INFO  22:53:27,361 - #28 =
INFO  22:53:27,362 - #43 3
INFO  22:53:27,362 - #32 ,
INFO  22:53:27,362 - #44 e
INFO  22:53:27,362 - #28 =
INFO  22:53:27,362 - #43 2
INFO  22:53:27,362 - #31 ;
INFO  22:53:27,362 - #4 class
INFO  22:53:27,362 - #44 B
INFO  22:53:27,362 - #14 extends
INFO  22:53:27,362 - #44 A
INFO  22:53:27,362 - #38 {
INFO  22:53:27,362 - #44 int
INFO  22:53:27,362 - #44 i
INFO  22:53:27,363 - #31 ;
INFO  22:53:27,363 - #44 int
INFO  22:53:27,363 - #44 x
INFO  22:53:27,363 - #36 [
INFO  22:53:27,363 - #37 ]
INFO  22:53:27,363 - #31 ;
INFO  22:53:27,363 - #38 {
INFO  22:53:27,363 - #44 int
INFO  22:53:27,363 - #44 getValue
INFO  22:53:27,363 - #34 (
INFO  22:53:27,363 - #44 int
INFO  22:53:27,363 - #44 a
INFO  22:53:27,363 - #35 )
INFO  22:53:27,363 - #44 int
INFO  22:53:27,364 - #44 b
INFO  22:53:27,364 - #31 ;
INFO  22:53:27,364 - #44 bool
INFO  22:53:27,364 - #44 c
INFO  22:53:27,364 - #31 ;
INFO  22:53:27,364 - #38 {
INFO  22:53:27,364 - #11 return
INFO  22:53:27,364 - #44 this
INFO  22:53:27,364 - #33 .
INFO  22:53:27,364 - #44 i
INFO  22:53:27,364 - #15 +
INFO  22:53:27,365 - #44 this
INFO  22:53:27,365 - #33 .
INFO  22:53:27,365 - #44 x
INFO  22:53:27,365 - #36 [
INFO  22:53:27,365 - #43 0
INFO  22:53:27,365 - #37 ]
INFO  22:53:27,365 - #15 +
INFO  22:53:27,365 - #44 a
INFO  22:53:27,365 - #31 ;
INFO  22:53:27,365 - #39 }
INFO  22:53:27,365 - #39 }
INFO  22:53:27,366 - #39 }
INFO  22:53:27,366 - #39 }
ERROR 22:53:27,366 - 
Sintaksna greska na liniji 13
ERROR 22:53:27,366 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 13
INFO  22:53:27,366 - GlobalVar = 0
INFO  22:53:27,366 - GlobalConst = 2
INFO  22:53:27,366 - LocalMainVar = 0
INFO  22:53:27,366 - GlobalArray = 0
INFO  22:53:27,366 - FuncProg = 0
INFO  22:53:27,366 - Blocks = 1
INFO  22:53:27,366 - FuncCalls = 0
INFO  22:53:27,367 - FormalArg = 1
INFO  22:53:27,367 - DefClass = 1
INFO  22:53:27,367 - DefMethodClass = 1
INFO  22:53:44,450 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:53:44,459 - #2 program
INFO  22:53:44,459 - #44 Program
INFO  22:53:44,459 - #4 class
INFO  22:53:44,459 - #44 A
INFO  22:53:44,459 - #38 {
INFO  22:53:44,460 - #44 int
INFO  22:53:44,460 - #44 x
INFO  22:53:44,460 - #36 [
INFO  22:53:44,460 - #37 ]
INFO  22:53:44,460 - #32 ,
INFO  22:53:44,460 - #44 y
INFO  22:53:44,460 - #36 [
INFO  22:53:44,460 - #37 ]
INFO  22:53:44,460 - #31 ;
INFO  22:53:44,460 - #39 }
INFO  22:53:44,460 - #6 const
INFO  22:53:44,461 - #44 int
INFO  22:53:44,461 - #44 pi
INFO  22:53:44,461 - #28 =
INFO  22:53:44,461 - #43 3
INFO  22:53:44,461 - #32 ,
INFO  22:53:44,461 - #44 e
INFO  22:53:44,461 - #28 =
INFO  22:53:44,461 - #43 2
INFO  22:53:44,461 - #31 ;
INFO  22:53:44,461 - #4 class
INFO  22:53:44,461 - #44 B
INFO  22:53:44,461 - #14 extends
INFO  22:53:44,461 - #44 A
INFO  22:53:44,461 - #38 {
INFO  22:53:44,462 - #39 }
INFO  22:53:44,462 - #4 class
INFO  22:53:44,462 - #44 C
INFO  22:53:44,462 - #14 extends
INFO  22:53:44,462 - #44 B
INFO  22:53:44,462 - #38 {
INFO  22:53:44,462 - #44 A
INFO  22:53:44,462 - #44 theA
INFO  22:53:44,462 - #31 ;
INFO  22:53:44,462 - #44 string
INFO  22:53:44,462 - #44 a
INFO  22:53:44,462 - #31 ;
INFO  22:53:44,462 - #38 {
INFO  22:53:44,462 - #12 void
INFO  22:53:44,463 - #44 aaa
INFO  22:53:44,463 - #34 (
INFO  22:53:44,463 - #35 )
INFO  22:53:44,463 - #44 A
INFO  22:53:44,463 - #44 a
INFO  22:53:44,463 - #31 ;
INFO  22:53:44,463 - #44 C
INFO  22:53:44,463 - #44 c
INFO  22:53:44,463 - #31 ;
INFO  22:53:44,464 - #44 int
INFO  22:53:44,464 - #44 i
INFO  22:53:44,464 - #31 ;
INFO  22:53:44,464 - #44 int
INFO  22:53:44,464 - #44 x
INFO  22:53:44,464 - #36 [
INFO  22:53:44,464 - #37 ]
INFO  22:53:44,464 - #31 ;
INFO  22:53:44,464 - #38 {
INFO  22:53:44,464 - #39 }
INFO  22:53:44,464 - #12 void
INFO  22:53:44,465 - #44 bbb
INFO  22:53:44,465 - #34 (
INFO  22:53:44,465 - #35 )
INFO  22:53:44,465 - #44 A
INFO  22:53:44,465 - #44 a
INFO  22:53:44,465 - #31 ;
INFO  22:53:44,465 - #44 C
INFO  22:53:44,465 - #44 c
INFO  22:53:44,465 - #31 ;
INFO  22:53:44,466 - #44 int
INFO  22:53:44,466 - #44 i
INFO  22:53:44,466 - #31 ;
INFO  22:53:44,466 - #44 int
INFO  22:53:44,466 - #44 x
INFO  22:53:44,466 - #36 [
INFO  22:53:44,466 - #37 ]
INFO  22:53:44,466 - #31 ;
INFO  22:53:44,466 - #38 {
INFO  22:53:44,467 - #39 }
INFO  22:53:44,467 - #12 void
INFO  22:53:44,467 - #44 ccc
INFO  22:53:44,467 - #34 (
INFO  22:53:44,467 - #35 )
INFO  22:53:44,467 - #44 A
INFO  22:53:44,467 - #44 a
INFO  22:53:44,467 - #31 ;
INFO  22:53:44,467 - #44 C
INFO  22:53:44,468 - #44 c
INFO  22:53:44,468 - #31 ;
INFO  22:53:44,468 - #44 int
INFO  22:53:44,468 - #44 i
INFO  22:53:44,468 - #31 ;
INFO  22:53:44,468 - #44 int
INFO  22:53:44,468 - #44 x
INFO  22:53:44,468 - #36 [
INFO  22:53:44,468 - #37 ]
INFO  22:53:44,468 - #31 ;
INFO  22:53:44,469 - #38 {
INFO  22:53:44,469 - #39 }
INFO  22:53:44,469 - #39 }
INFO  22:53:44,469 - #39 }
INFO  22:53:44,469 - #38 {
INFO  22:53:44,469 - #12 void
INFO  22:53:44,469 - #44 main
INFO  22:53:44,469 - #34 (
INFO  22:53:44,469 - #35 )
INFO  22:53:44,469 - #44 A
INFO  22:53:44,469 - #44 a
INFO  22:53:44,470 - #31 ;
INFO  22:53:44,470 - #44 C
INFO  22:53:44,470 - #44 c
INFO  22:53:44,470 - #31 ;
INFO  22:53:44,470 - #44 int
INFO  22:53:44,470 - #44 i
INFO  22:53:44,470 - #31 ;
INFO  22:53:44,470 - #44 int
INFO  22:53:44,470 - #44 x
INFO  22:53:44,470 - #36 [
INFO  22:53:44,470 - #37 ]
INFO  22:53:44,471 - #31 ;
INFO  22:53:44,471 - #38 {
INFO  22:53:44,471 - #44 a
INFO  22:53:44,471 - #28 =
INFO  22:53:44,471 - #8 new
INFO  22:53:44,471 - #44 A
INFO  22:53:44,471 - #31 ;
INFO  22:53:44,471 - #44 a
INFO  22:53:44,471 - #33 .
INFO  22:53:44,471 - #44 x
INFO  22:53:44,472 - #28 =
INFO  22:53:44,472 - #8 new
INFO  22:53:44,472 - #44 int
INFO  22:53:44,472 - #36 [
INFO  22:53:44,472 - #43 5
INFO  22:53:44,472 - #37 ]
INFO  22:53:44,472 - #31 ;
INFO  22:53:44,472 - #44 a
INFO  22:53:44,472 - #33 .
INFO  22:53:44,472 - #44 y
INFO  22:53:44,473 - #28 =
INFO  22:53:44,473 - #8 new
INFO  22:53:44,473 - #44 int
INFO  22:53:44,473 - #36 [
INFO  22:53:44,473 - #43 5
INFO  22:53:44,473 - #37 ]
INFO  22:53:44,473 - #31 ;
INFO  22:53:44,473 - #44 c
INFO  22:53:44,473 - #28 =
INFO  22:53:44,473 - #8 new
INFO  22:53:44,473 - #44 C
INFO  22:53:44,473 - #31 ;
INFO  22:53:44,473 - #44 c
INFO  22:53:44,474 - #33 .
INFO  22:53:44,474 - #44 theA
INFO  22:53:44,474 - #28 =
INFO  22:53:44,474 - #44 a
INFO  22:53:44,474 - #31 ;
INFO  22:53:44,474 - #44 c
INFO  22:53:44,474 - #33 .
INFO  22:53:44,474 - #44 x
INFO  22:53:44,474 - #28 =
INFO  22:53:44,474 - #8 new
INFO  22:53:44,474 - #44 int
INFO  22:53:44,474 - #36 [
INFO  22:53:44,474 - #43 5
INFO  22:53:44,475 - #37 ]
INFO  22:53:44,475 - #31 ;
INFO  22:53:44,475 - #44 x
INFO  22:53:44,475 - #28 =
INFO  22:53:44,475 - #8 new
INFO  22:53:44,475 - #44 int
INFO  22:53:44,475 - #36 [
INFO  22:53:44,475 - #43 3
INFO  22:53:44,475 - #37 ]
INFO  22:53:44,476 - #31 ;
INFO  22:53:44,476 - #44 i
INFO  22:53:44,476 - #28 =
INFO  22:53:44,476 - #43 0
INFO  22:53:44,476 - #31 ;
INFO  22:53:44,476 - #10 read
INFO  22:53:44,476 - #34 (
INFO  22:53:44,476 - #44 c
INFO  22:53:44,477 - #33 .
INFO  22:53:44,477 - #44 i
INFO  22:53:44,477 - #35 )
INFO  22:53:44,477 - #31 ;
INFO  22:53:44,477 - #13 while
INFO  22:53:44,477 - #34 (
INFO  22:53:44,477 - #44 i
INFO  22:53:44,477 - #24 <
INFO  22:53:44,477 - #43 5
INFO  22:53:44,477 - #35 )
INFO  22:53:44,478 - #38 {
INFO  22:53:44,478 - #10 read
INFO  22:53:44,478 - #34 (
INFO  22:53:44,478 - #44 c
INFO  22:53:44,478 - #33 .
INFO  22:53:44,478 - #44 x
INFO  22:53:44,478 - #36 [
INFO  22:53:44,478 - #44 i
INFO  22:53:44,478 - #37 ]
INFO  22:53:44,478 - #35 )
INFO  22:53:44,478 - #31 ;
INFO  22:53:44,479 - #10 read
INFO  22:53:44,479 - #34 (
INFO  22:53:44,479 - #44 c
INFO  22:53:44,479 - #33 .
INFO  22:53:44,479 - #44 theA
INFO  22:53:44,479 - #33 .
INFO  22:53:44,479 - #44 x
INFO  22:53:44,479 - #36 [
INFO  22:53:44,479 - #44 i
INFO  22:53:44,479 - #37 ]
INFO  22:53:44,480 - #35 )
INFO  22:53:44,480 - #31 ;
INFO  22:53:44,480 - #44 i
INFO  22:53:44,480 - #29 ++
INFO  22:53:44,480 - #31 ;
INFO  22:53:44,480 - #39 }
INFO  22:53:44,480 - #9 print
INFO  22:53:44,480 - #34 (
INFO  22:53:44,480 - #44 c
INFO  22:53:44,480 - #33 .
INFO  22:53:44,480 - #44 getValue
INFO  22:53:44,481 - #34 (
INFO  22:53:44,481 - #44 c
INFO  22:53:44,481 - #33 .
INFO  22:53:44,481 - #44 theA
INFO  22:53:44,481 - #33 .
INFO  22:53:44,481 - #44 x
INFO  22:53:44,481 - #36 [
INFO  22:53:44,481 - #43 0
INFO  22:53:44,481 - #37 ]
INFO  22:53:44,482 - #35 )
INFO  22:53:44,482 - #35 )
INFO  22:53:44,482 - #31 ;
INFO  22:53:44,482 - #39 }
INFO  22:53:44,482 - #39 }
INFO  22:53:44,482 - GlobalVar = 14
INFO  22:53:44,483 - GlobalConst = 2
INFO  22:53:44,483 - LocalMainVar = 4
INFO  22:53:44,483 - GlobalArray = 3
INFO  22:53:44,483 - FuncProg = 4
INFO  22:53:44,483 - Blocks = 4
INFO  22:53:44,483 - FuncCalls = 5
INFO  22:53:44,483 - FormalArg = 0
INFO  22:53:44,483 - DefClass = 3
INFO  22:53:44,483 - DefMethodClass = 0
INFO  22:54:02,687 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:54:02,707 - #2 program
INFO  22:54:02,707 - #44 Program
INFO  22:54:02,708 - #4 class
INFO  22:54:02,708 - #44 A
INFO  22:54:02,708 - #38 {
INFO  22:54:02,708 - #44 int
INFO  22:54:02,708 - #44 x
INFO  22:54:02,708 - #36 [
INFO  22:54:02,708 - #37 ]
INFO  22:54:02,708 - #32 ,
INFO  22:54:02,708 - #44 y
INFO  22:54:02,708 - #36 [
INFO  22:54:02,708 - #37 ]
INFO  22:54:02,708 - #31 ;
INFO  22:54:02,709 - #39 }
INFO  22:54:02,709 - #6 const
INFO  22:54:02,709 - #44 int
INFO  22:54:02,709 - #44 pi
INFO  22:54:02,709 - #28 =
INFO  22:54:02,709 - #43 3
INFO  22:54:02,709 - #32 ,
INFO  22:54:02,709 - #44 e
INFO  22:54:02,709 - #28 =
INFO  22:54:02,709 - #43 2
INFO  22:54:02,709 - #31 ;
INFO  22:54:02,709 - #4 class
INFO  22:54:02,709 - #44 D
INFO  22:54:02,710 - #38 {
INFO  22:54:02,710 - #39 }
INFO  22:54:02,710 - #4 class
INFO  22:54:02,710 - #44 C
INFO  22:54:02,710 - #14 extends
INFO  22:54:02,710 - #44 B
INFO  22:54:02,710 - #38 {
INFO  22:54:02,710 - #44 A
INFO  22:54:02,710 - #44 theA
INFO  22:54:02,710 - #31 ;
INFO  22:54:02,710 - #44 string
INFO  22:54:02,711 - #44 a
INFO  22:54:02,711 - #31 ;
INFO  22:54:02,711 - #38 {
INFO  22:54:02,711 - #12 void
INFO  22:54:02,711 - #44 aaa
INFO  22:54:02,711 - #34 (
INFO  22:54:02,711 - #35 )
INFO  22:54:02,711 - #44 A
INFO  22:54:02,711 - #44 a
INFO  22:54:02,711 - #31 ;
INFO  22:54:02,711 - #44 C
INFO  22:54:02,711 - #44 c
INFO  22:54:02,711 - #31 ;
INFO  22:54:02,712 - #44 int
INFO  22:54:02,712 - #44 i
INFO  22:54:02,712 - #31 ;
INFO  22:54:02,712 - #44 int
INFO  22:54:02,712 - #44 x
INFO  22:54:02,712 - #36 [
INFO  22:54:02,712 - #37 ]
INFO  22:54:02,712 - #31 ;
INFO  22:54:02,712 - #38 {
INFO  22:54:02,712 - #39 }
INFO  22:54:02,712 - #12 void
INFO  22:54:02,712 - #44 bbb
INFO  22:54:02,713 - #34 (
INFO  22:54:02,713 - #35 )
INFO  22:54:02,713 - #44 A
INFO  22:54:02,713 - #44 a
INFO  22:54:02,713 - #31 ;
INFO  22:54:02,713 - #44 C
INFO  22:54:02,713 - #44 c
INFO  22:54:02,713 - #31 ;
INFO  22:54:02,713 - #44 int
INFO  22:54:02,713 - #44 i
INFO  22:54:02,713 - #31 ;
INFO  22:54:02,714 - #44 int
INFO  22:54:02,714 - #44 x
INFO  22:54:02,714 - #36 [
INFO  22:54:02,714 - #37 ]
INFO  22:54:02,714 - #31 ;
INFO  22:54:02,714 - #38 {
INFO  22:54:02,714 - #39 }
INFO  22:54:02,714 - #12 void
INFO  22:54:02,714 - #44 ccc
INFO  22:54:02,714 - #34 (
INFO  22:54:02,714 - #35 )
INFO  22:54:02,715 - #44 A
INFO  22:54:02,715 - #44 a
INFO  22:54:02,715 - #31 ;
INFO  22:54:02,715 - #44 C
INFO  22:54:02,715 - #44 c
INFO  22:54:02,715 - #31 ;
INFO  22:54:02,715 - #44 int
INFO  22:54:02,715 - #44 i
INFO  22:54:02,715 - #31 ;
INFO  22:54:02,715 - #44 int
INFO  22:54:02,716 - #44 x
INFO  22:54:02,716 - #36 [
INFO  22:54:02,716 - #37 ]
INFO  22:54:02,716 - #31 ;
INFO  22:54:02,716 - #38 {
INFO  22:54:02,716 - #39 }
INFO  22:54:02,716 - #39 }
INFO  22:54:02,716 - #39 }
INFO  22:54:02,716 - #38 {
INFO  22:54:02,716 - #12 void
INFO  22:54:02,716 - #44 main
INFO  22:54:02,717 - #34 (
INFO  22:54:02,717 - #35 )
INFO  22:54:02,717 - #44 A
INFO  22:54:02,717 - #44 a
INFO  22:54:02,717 - #31 ;
INFO  22:54:02,717 - #44 C
INFO  22:54:02,717 - #44 c
INFO  22:54:02,717 - #31 ;
INFO  22:54:02,717 - #44 int
INFO  22:54:02,717 - #44 i
INFO  22:54:02,717 - #31 ;
INFO  22:54:02,717 - #44 int
INFO  22:54:02,718 - #44 x
INFO  22:54:02,718 - #36 [
INFO  22:54:02,718 - #37 ]
INFO  22:54:02,718 - #31 ;
INFO  22:54:02,718 - #38 {
INFO  22:54:02,718 - #44 a
INFO  22:54:02,718 - #28 =
INFO  22:54:02,718 - #8 new
INFO  22:54:02,718 - #44 A
INFO  22:54:02,718 - #31 ;
INFO  22:54:02,719 - #44 a
INFO  22:54:02,719 - #33 .
INFO  22:54:02,719 - #44 x
INFO  22:54:02,719 - #28 =
INFO  22:54:02,719 - #8 new
INFO  22:54:02,719 - #44 int
INFO  22:54:02,719 - #36 [
INFO  22:54:02,719 - #43 5
INFO  22:54:02,720 - #37 ]
INFO  22:54:02,720 - #31 ;
INFO  22:54:02,720 - #44 a
INFO  22:54:02,720 - #33 .
INFO  22:54:02,720 - #44 y
INFO  22:54:02,720 - #28 =
INFO  22:54:02,720 - #8 new
INFO  22:54:02,720 - #44 int
INFO  22:54:02,720 - #36 [
INFO  22:54:02,721 - #43 5
INFO  22:54:02,721 - #37 ]
INFO  22:54:02,721 - #31 ;
INFO  22:54:02,721 - #44 c
INFO  22:54:02,721 - #28 =
INFO  22:54:02,721 - #8 new
INFO  22:54:02,721 - #44 C
INFO  22:54:02,721 - #31 ;
INFO  22:54:02,721 - #44 c
INFO  22:54:02,722 - #33 .
INFO  22:54:02,722 - #44 theA
INFO  22:54:02,722 - #28 =
INFO  22:54:02,722 - #44 a
INFO  22:54:02,722 - #31 ;
INFO  22:54:02,722 - #44 c
INFO  22:54:02,722 - #33 .
INFO  22:54:02,722 - #44 x
INFO  22:54:02,722 - #28 =
INFO  22:54:02,722 - #8 new
INFO  22:54:02,722 - #44 int
INFO  22:54:02,722 - #36 [
INFO  22:54:02,722 - #43 5
INFO  22:54:02,723 - #37 ]
INFO  22:54:02,723 - #31 ;
INFO  22:54:02,723 - #44 x
INFO  22:54:02,723 - #28 =
INFO  22:54:02,723 - #8 new
INFO  22:54:02,723 - #44 int
INFO  22:54:02,723 - #36 [
INFO  22:54:02,723 - #43 3
INFO  22:54:02,723 - #37 ]
INFO  22:54:02,723 - #31 ;
INFO  22:54:02,724 - #44 i
INFO  22:54:02,724 - #28 =
INFO  22:54:02,724 - #43 0
INFO  22:54:02,724 - #31 ;
INFO  22:54:02,724 - #10 read
INFO  22:54:02,724 - #34 (
INFO  22:54:02,724 - #44 c
INFO  22:54:02,724 - #33 .
INFO  22:54:02,724 - #44 i
INFO  22:54:02,724 - #35 )
INFO  22:54:02,725 - #31 ;
INFO  22:54:02,725 - #13 while
INFO  22:54:02,725 - #34 (
INFO  22:54:02,725 - #44 i
INFO  22:54:02,725 - #24 <
INFO  22:54:02,725 - #43 5
INFO  22:54:02,725 - #35 )
INFO  22:54:02,726 - #38 {
INFO  22:54:02,726 - #10 read
INFO  22:54:02,726 - #34 (
INFO  22:54:02,726 - #44 c
INFO  22:54:02,726 - #33 .
INFO  22:54:02,726 - #44 x
INFO  22:54:02,726 - #36 [
INFO  22:54:02,726 - #44 i
INFO  22:54:02,726 - #37 ]
INFO  22:54:02,726 - #35 )
INFO  22:54:02,727 - #31 ;
INFO  22:54:02,727 - #10 read
INFO  22:54:02,727 - #34 (
INFO  22:54:02,727 - #44 c
INFO  22:54:02,727 - #33 .
INFO  22:54:02,727 - #44 theA
INFO  22:54:02,727 - #33 .
INFO  22:54:02,728 - #44 x
INFO  22:54:02,728 - #36 [
INFO  22:54:02,728 - #44 i
INFO  22:54:02,728 - #37 ]
INFO  22:54:02,728 - #35 )
INFO  22:54:02,728 - #31 ;
INFO  22:54:02,728 - #44 i
INFO  22:54:02,728 - #29 ++
INFO  22:54:02,729 - #31 ;
INFO  22:54:02,729 - #39 }
INFO  22:54:02,729 - #9 print
INFO  22:54:02,729 - #34 (
INFO  22:54:02,729 - #44 c
INFO  22:54:02,729 - #33 .
INFO  22:54:02,729 - #44 getValue
INFO  22:54:02,729 - #34 (
INFO  22:54:02,729 - #44 c
INFO  22:54:02,729 - #33 .
INFO  22:54:02,730 - #44 theA
INFO  22:54:02,730 - #33 .
INFO  22:54:02,730 - #44 x
INFO  22:54:02,730 - #36 [
INFO  22:54:02,730 - #43 0
INFO  22:54:02,730 - #37 ]
INFO  22:54:02,730 - #35 )
INFO  22:54:02,730 - #35 )
INFO  22:54:02,731 - #31 ;
INFO  22:54:02,731 - #39 }
INFO  22:54:02,731 - #39 }
INFO  22:54:02,731 - GlobalVar = 14
INFO  22:54:02,731 - GlobalConst = 2
INFO  22:54:02,731 - LocalMainVar = 4
INFO  22:54:02,731 - GlobalArray = 3
INFO  22:54:02,731 - FuncProg = 4
INFO  22:54:02,732 - Blocks = 4
INFO  22:54:02,732 - FuncCalls = 5
INFO  22:54:02,732 - FormalArg = 0
INFO  22:54:02,732 - DefClass = 3
INFO  22:54:02,732 - DefMethodClass = 0
INFO  22:54:11,041 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:54:11,049 - #2 program
INFO  22:54:11,049 - #44 Program
INFO  22:54:11,049 - #4 class
INFO  22:54:11,049 - #44 A
INFO  22:54:11,049 - #38 {
INFO  22:54:11,050 - #44 int
INFO  22:54:11,050 - #44 x
INFO  22:54:11,050 - #36 [
INFO  22:54:11,050 - #37 ]
INFO  22:54:11,050 - #32 ,
INFO  22:54:11,050 - #44 y
INFO  22:54:11,050 - #36 [
INFO  22:54:11,050 - #37 ]
INFO  22:54:11,050 - #31 ;
INFO  22:54:11,050 - #39 }
INFO  22:54:11,051 - #6 const
INFO  22:54:11,051 - #44 int
INFO  22:54:11,051 - #44 pi
INFO  22:54:11,051 - #28 =
INFO  22:54:11,051 - #43 3
INFO  22:54:11,051 - #32 ,
INFO  22:54:11,051 - #44 e
INFO  22:54:11,051 - #28 =
INFO  22:54:11,051 - #43 2
INFO  22:54:11,051 - #31 ;
INFO  22:54:11,051 - #4 class
INFO  22:54:11,051 - #44 C
INFO  22:54:11,051 - #14 extends
INFO  22:54:11,052 - #44 B
INFO  22:54:11,052 - #38 {
INFO  22:54:11,052 - #44 A
INFO  22:54:11,052 - #44 theA
INFO  22:54:11,052 - #31 ;
INFO  22:54:11,052 - #44 string
INFO  22:54:11,052 - #44 a
INFO  22:54:11,052 - #31 ;
INFO  22:54:11,052 - #38 {
INFO  22:54:11,052 - #12 void
INFO  22:54:11,052 - #44 aaa
INFO  22:54:11,052 - #34 (
INFO  22:54:11,053 - #35 )
INFO  22:54:11,053 - #44 A
INFO  22:54:11,053 - #44 a
INFO  22:54:11,053 - #31 ;
INFO  22:54:11,053 - #44 C
INFO  22:54:11,053 - #44 c
INFO  22:54:11,053 - #31 ;
INFO  22:54:11,053 - #44 int
INFO  22:54:11,053 - #44 i
INFO  22:54:11,053 - #31 ;
INFO  22:54:11,053 - #44 int
INFO  22:54:11,053 - #44 x
INFO  22:54:11,053 - #36 [
INFO  22:54:11,054 - #37 ]
INFO  22:54:11,054 - #31 ;
INFO  22:54:11,054 - #38 {
INFO  22:54:11,054 - #39 }
INFO  22:54:11,054 - #12 void
INFO  22:54:11,054 - #44 bbb
INFO  22:54:11,054 - #34 (
INFO  22:54:11,054 - #35 )
INFO  22:54:11,054 - #44 A
INFO  22:54:11,054 - #44 a
INFO  22:54:11,054 - #31 ;
INFO  22:54:11,054 - #44 C
INFO  22:54:11,055 - #44 c
INFO  22:54:11,055 - #31 ;
INFO  22:54:11,055 - #44 int
INFO  22:54:11,055 - #44 i
INFO  22:54:11,055 - #31 ;
INFO  22:54:11,055 - #44 int
INFO  22:54:11,055 - #44 x
INFO  22:54:11,055 - #36 [
INFO  22:54:11,056 - #37 ]
INFO  22:54:11,056 - #31 ;
INFO  22:54:11,056 - #38 {
INFO  22:54:11,056 - #39 }
INFO  22:54:11,056 - #12 void
INFO  22:54:11,056 - #44 ccc
INFO  22:54:11,056 - #34 (
INFO  22:54:11,056 - #35 )
INFO  22:54:11,056 - #44 A
INFO  22:54:11,057 - #44 a
INFO  22:54:11,057 - #31 ;
INFO  22:54:11,057 - #44 C
INFO  22:54:11,057 - #44 c
INFO  22:54:11,057 - #31 ;
INFO  22:54:11,057 - #44 int
INFO  22:54:11,057 - #44 i
INFO  22:54:11,057 - #31 ;
INFO  22:54:11,058 - #44 int
INFO  22:54:11,058 - #44 x
INFO  22:54:11,058 - #36 [
INFO  22:54:11,058 - #37 ]
INFO  22:54:11,058 - #31 ;
INFO  22:54:11,058 - #38 {
INFO  22:54:11,058 - #39 }
INFO  22:54:11,058 - #39 }
INFO  22:54:11,058 - #39 }
INFO  22:54:11,059 - #38 {
INFO  22:54:11,059 - #12 void
INFO  22:54:11,059 - #44 main
INFO  22:54:11,059 - #34 (
INFO  22:54:11,059 - #35 )
INFO  22:54:11,059 - #44 A
INFO  22:54:11,059 - #44 a
INFO  22:54:11,059 - #31 ;
INFO  22:54:11,059 - #44 C
INFO  22:54:11,059 - #44 c
INFO  22:54:11,060 - #31 ;
INFO  22:54:11,060 - #44 int
INFO  22:54:11,060 - #44 i
INFO  22:54:11,060 - #31 ;
INFO  22:54:11,060 - #44 int
INFO  22:54:11,060 - #44 x
INFO  22:54:11,060 - #36 [
INFO  22:54:11,060 - #37 ]
INFO  22:54:11,060 - #31 ;
INFO  22:54:11,060 - #38 {
INFO  22:54:11,060 - #44 a
INFO  22:54:11,061 - #28 =
INFO  22:54:11,061 - #8 new
INFO  22:54:11,061 - #44 A
INFO  22:54:11,061 - #31 ;
INFO  22:54:11,061 - #44 a
INFO  22:54:11,061 - #33 .
INFO  22:54:11,061 - #44 x
INFO  22:54:11,061 - #28 =
INFO  22:54:11,061 - #8 new
INFO  22:54:11,061 - #44 int
INFO  22:54:11,062 - #36 [
INFO  22:54:11,062 - #43 5
INFO  22:54:11,062 - #37 ]
INFO  22:54:11,062 - #31 ;
INFO  22:54:11,062 - #44 a
INFO  22:54:11,062 - #33 .
INFO  22:54:11,062 - #44 y
INFO  22:54:11,062 - #28 =
INFO  22:54:11,062 - #8 new
INFO  22:54:11,062 - #44 int
INFO  22:54:11,062 - #36 [
INFO  22:54:11,063 - #43 5
INFO  22:54:11,063 - #37 ]
INFO  22:54:11,063 - #31 ;
INFO  22:54:11,063 - #44 c
INFO  22:54:11,063 - #28 =
INFO  22:54:11,063 - #8 new
INFO  22:54:11,063 - #44 C
INFO  22:54:11,063 - #31 ;
INFO  22:54:11,063 - #44 c
INFO  22:54:11,063 - #33 .
INFO  22:54:11,063 - #44 theA
INFO  22:54:11,063 - #28 =
INFO  22:54:11,064 - #44 a
INFO  22:54:11,064 - #31 ;
INFO  22:54:11,064 - #44 c
INFO  22:54:11,064 - #33 .
INFO  22:54:11,064 - #44 x
INFO  22:54:11,064 - #28 =
INFO  22:54:11,064 - #8 new
INFO  22:54:11,064 - #44 int
INFO  22:54:11,064 - #36 [
INFO  22:54:11,064 - #43 5
INFO  22:54:11,064 - #37 ]
INFO  22:54:11,064 - #31 ;
INFO  22:54:11,064 - #44 x
INFO  22:54:11,065 - #28 =
INFO  22:54:11,065 - #8 new
INFO  22:54:11,065 - #44 int
INFO  22:54:11,065 - #36 [
INFO  22:54:11,065 - #43 3
INFO  22:54:11,065 - #37 ]
INFO  22:54:11,065 - #31 ;
INFO  22:54:11,065 - #44 i
INFO  22:54:11,065 - #28 =
INFO  22:54:11,065 - #43 0
INFO  22:54:11,066 - #31 ;
INFO  22:54:11,066 - #10 read
INFO  22:54:11,066 - #34 (
INFO  22:54:11,066 - #44 c
INFO  22:54:11,066 - #33 .
INFO  22:54:11,066 - #44 i
INFO  22:54:11,067 - #35 )
INFO  22:54:11,067 - #31 ;
INFO  22:54:11,067 - #13 while
INFO  22:54:11,067 - #34 (
INFO  22:54:11,067 - #44 i
INFO  22:54:11,067 - #24 <
INFO  22:54:11,067 - #43 5
INFO  22:54:11,067 - #35 )
INFO  22:54:11,068 - #38 {
INFO  22:54:11,068 - #10 read
INFO  22:54:11,068 - #34 (
INFO  22:54:11,068 - #44 c
INFO  22:54:11,068 - #33 .
INFO  22:54:11,068 - #44 x
INFO  22:54:11,068 - #36 [
INFO  22:54:11,068 - #44 i
INFO  22:54:11,068 - #37 ]
INFO  22:54:11,068 - #35 )
INFO  22:54:11,069 - #31 ;
INFO  22:54:11,069 - #10 read
INFO  22:54:11,069 - #34 (
INFO  22:54:11,069 - #44 c
INFO  22:54:11,069 - #33 .
INFO  22:54:11,069 - #44 theA
INFO  22:54:11,069 - #33 .
INFO  22:54:11,069 - #44 x
INFO  22:54:11,069 - #36 [
INFO  22:54:11,069 - #44 i
INFO  22:54:11,069 - #37 ]
INFO  22:54:11,070 - #35 )
INFO  22:54:11,070 - #31 ;
INFO  22:54:11,070 - #44 i
INFO  22:54:11,070 - #29 ++
INFO  22:54:11,070 - #31 ;
INFO  22:54:11,070 - #39 }
INFO  22:54:11,070 - #9 print
INFO  22:54:11,071 - #34 (
INFO  22:54:11,071 - #44 c
INFO  22:54:11,071 - #33 .
INFO  22:54:11,071 - #44 getValue
INFO  22:54:11,071 - #34 (
INFO  22:54:11,071 - #44 c
INFO  22:54:11,071 - #33 .
INFO  22:54:11,071 - #44 theA
INFO  22:54:11,071 - #33 .
INFO  22:54:11,071 - #44 x
INFO  22:54:11,072 - #36 [
INFO  22:54:11,072 - #43 0
INFO  22:54:11,072 - #37 ]
INFO  22:54:11,072 - #35 )
INFO  22:54:11,072 - #35 )
INFO  22:54:11,072 - #31 ;
INFO  22:54:11,072 - #39 }
INFO  22:54:11,072 - #39 }
INFO  22:54:11,073 - GlobalVar = 0
INFO  22:54:11,073 - GlobalConst = 2
INFO  22:54:11,073 - LocalMainVar = 4
INFO  22:54:11,073 - GlobalArray = 0
INFO  22:54:11,073 - FuncProg = 1
INFO  22:54:11,073 - Blocks = 4
INFO  22:54:11,073 - FuncCalls = 5
INFO  22:54:11,073 - FormalArg = 0
INFO  22:54:11,073 - DefClass = 2
INFO  22:54:11,074 - DefMethodClass = 3
INFO  22:55:47,926 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:55:47,935 - #2 program
INFO  22:55:47,935 - #44 Program
INFO  22:55:47,935 - #4 class
INFO  22:55:47,935 - #44 A
INFO  22:55:47,935 - #38 {
INFO  22:55:47,935 - #44 int
INFO  22:55:47,935 - #44 x
INFO  22:55:47,936 - #36 [
INFO  22:55:47,936 - #37 ]
INFO  22:55:47,936 - #32 ,
INFO  22:55:47,936 - #44 y
INFO  22:55:47,936 - #36 [
INFO  22:55:47,936 - #37 ]
INFO  22:55:47,936 - #31 ;
INFO  22:55:47,936 - #39 }
INFO  22:55:47,936 - #6 const
INFO  22:55:47,936 - #44 int
INFO  22:55:47,936 - #44 pi
INFO  22:55:47,937 - #28 =
INFO  22:55:47,937 - #43 3
INFO  22:55:47,937 - #32 ,
INFO  22:55:47,937 - #44 e
INFO  22:55:47,937 - #28 =
INFO  22:55:47,937 - #43 2
INFO  22:55:47,937 - #31 ;
INFO  22:55:47,937 - #4 class
INFO  22:55:47,937 - #44 B
INFO  22:55:47,937 - #14 extends
INFO  22:55:47,937 - #44 A
INFO  22:55:47,937 - #38 {
INFO  22:55:47,937 - #44 int
INFO  22:55:47,937 - #44 i
INFO  22:55:47,938 - #31 ;
INFO  22:55:47,938 - #44 int
INFO  22:55:47,938 - #44 x
INFO  22:55:47,938 - #36 [
INFO  22:55:47,938 - #37 ]
INFO  22:55:47,938 - #31 ;
INFO  22:55:47,938 - #38 {
INFO  22:55:47,938 - #44 int
INFO  22:55:47,938 - #44 getValue
INFO  22:55:47,938 - #34 (
INFO  22:55:47,938 - #44 int
INFO  22:55:47,938 - #44 a
INFO  22:55:47,938 - #35 )
INFO  22:55:47,939 - #44 int
INFO  22:55:47,939 - #44 b
INFO  22:55:47,939 - #31 ;
INFO  22:55:47,939 - #44 bool
INFO  22:55:47,939 - #44 c
INFO  22:55:47,939 - #31 ;
INFO  22:55:47,939 - #38 {
INFO  22:55:47,939 - #11 return
INFO  22:55:47,939 - #44 this
INFO  22:55:47,939 - #33 .
INFO  22:55:47,939 - #44 i
INFO  22:55:47,939 - #15 +
INFO  22:55:47,940 - #44 this
INFO  22:55:47,940 - #33 .
INFO  22:55:47,940 - #44 x
INFO  22:55:47,940 - #36 [
INFO  22:55:47,940 - #43 0
INFO  22:55:47,940 - #37 ]
INFO  22:55:47,940 - #15 +
INFO  22:55:47,940 - #44 a
INFO  22:55:47,940 - #31 ;
INFO  22:55:47,940 - #39 }
INFO  22:55:47,940 - #39 }
INFO  22:55:47,941 - #39 }
INFO  22:55:47,941 - #39 }
ERROR 22:55:47,941 - 
Sintaksna greska na liniji 13
ERROR 22:55:47,941 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 13
INFO  22:55:47,941 - GlobalVar = 0
INFO  22:55:47,941 - GlobalConst = 2
INFO  22:55:47,941 - LocalMainVar = 0
INFO  22:55:47,941 - GlobalArray = 0
INFO  22:55:47,941 - FuncProg = 0
INFO  22:55:47,941 - Blocks = 1
INFO  22:55:47,942 - FuncCalls = 0
INFO  22:55:47,942 - FormalArg = 1
INFO  22:55:47,942 - DefClass = 1
INFO  22:55:47,942 - DefMethodClass = 1
INFO  22:56:15,878 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:56:15,887 - #2 program
INFO  22:56:15,887 - #44 Program
INFO  22:56:15,887 - #4 class
INFO  22:56:15,887 - #44 A
INFO  22:56:15,887 - #38 {
INFO  22:56:15,887 - #44 int
INFO  22:56:15,887 - #44 x
INFO  22:56:15,888 - #36 [
INFO  22:56:15,888 - #37 ]
INFO  22:56:15,888 - #32 ,
INFO  22:56:15,888 - #44 y
INFO  22:56:15,888 - #36 [
INFO  22:56:15,888 - #37 ]
INFO  22:56:15,888 - #31 ;
INFO  22:56:15,888 - #39 }
INFO  22:56:15,888 - #6 const
INFO  22:56:15,888 - #44 int
INFO  22:56:15,888 - #44 pi
INFO  22:56:15,888 - #28 =
INFO  22:56:15,889 - #43 3
INFO  22:56:15,889 - #32 ,
INFO  22:56:15,889 - #44 e
INFO  22:56:15,889 - #28 =
INFO  22:56:15,889 - #43 2
INFO  22:56:15,889 - #31 ;
INFO  22:56:15,889 - #4 class
INFO  22:56:15,889 - #44 B
INFO  22:56:15,889 - #14 extends
INFO  22:56:15,889 - #44 A
INFO  22:56:15,889 - #38 {
INFO  22:56:15,889 - #44 int
INFO  22:56:15,889 - #44 i
INFO  22:56:15,889 - #31 ;
INFO  22:56:15,890 - #44 int
INFO  22:56:15,890 - #44 x
INFO  22:56:15,890 - #36 [
INFO  22:56:15,890 - #37 ]
INFO  22:56:15,890 - #31 ;
INFO  22:56:15,890 - #38 {
INFO  22:56:15,890 - #44 int
INFO  22:56:15,890 - #44 getValue
INFO  22:56:15,890 - #34 (
INFO  22:56:15,890 - #44 int
INFO  22:56:15,890 - #44 a
INFO  22:56:15,890 - #35 )
INFO  22:56:15,890 - #44 int
INFO  22:56:15,891 - #44 b
INFO  22:56:15,891 - #31 ;
INFO  22:56:15,891 - #44 bool
INFO  22:56:15,891 - #44 c
INFO  22:56:15,891 - #31 ;
INFO  22:56:15,891 - #38 {
INFO  22:56:15,891 - #11 return
INFO  22:56:15,891 - #44 this
INFO  22:56:15,891 - #33 .
INFO  22:56:15,891 - #44 i
INFO  22:56:15,891 - #15 +
INFO  22:56:15,891 - #44 this
INFO  22:56:15,892 - #33 .
INFO  22:56:15,892 - #44 x
INFO  22:56:15,892 - #36 [
INFO  22:56:15,892 - #43 0
INFO  22:56:15,892 - #37 ]
INFO  22:56:15,892 - #15 +
INFO  22:56:15,892 - #44 a
INFO  22:56:15,892 - #31 ;
INFO  22:56:15,892 - #39 }
INFO  22:56:15,893 - #39 }
INFO  22:56:15,893 - #39 }
INFO  22:56:15,893 - #4 class
INFO  22:56:15,893 - #44 C
INFO  22:56:15,893 - #14 extends
INFO  22:56:15,893 - #44 B
INFO  22:56:15,893 - #38 {
INFO  22:56:15,893 - #44 A
INFO  22:56:15,894 - #44 theA
INFO  22:56:15,894 - #31 ;
INFO  22:56:15,894 - #44 string
INFO  22:56:15,894 - #44 a
INFO  22:56:15,894 - #31 ;
INFO  22:56:15,894 - #38 {
INFO  22:56:15,894 - #12 void
INFO  22:56:15,894 - #44 aaa
INFO  22:56:15,895 - #34 (
INFO  22:56:15,895 - #35 )
INFO  22:56:15,895 - #44 A
INFO  22:56:15,895 - #44 a
INFO  22:56:15,895 - #31 ;
INFO  22:56:15,895 - #44 C
INFO  22:56:15,895 - #44 c
INFO  22:56:15,895 - #31 ;
INFO  22:56:15,895 - #44 int
INFO  22:56:15,895 - #44 i
INFO  22:56:15,895 - #31 ;
INFO  22:56:15,896 - #44 int
INFO  22:56:15,896 - #44 x
INFO  22:56:15,896 - #36 [
INFO  22:56:15,896 - #37 ]
INFO  22:56:15,896 - #31 ;
INFO  22:56:15,896 - #38 {
INFO  22:56:15,896 - #39 }
INFO  22:56:15,896 - #12 void
INFO  22:56:15,896 - #44 bbb
INFO  22:56:15,896 - #34 (
INFO  22:56:15,897 - #35 )
INFO  22:56:15,897 - #44 A
INFO  22:56:15,897 - #44 a
INFO  22:56:15,897 - #31 ;
INFO  22:56:15,897 - #44 C
INFO  22:56:15,897 - #44 c
INFO  22:56:15,897 - #31 ;
INFO  22:56:15,897 - #44 int
INFO  22:56:15,897 - #44 i
INFO  22:56:15,897 - #31 ;
INFO  22:56:15,898 - #44 int
INFO  22:56:15,898 - #44 x
INFO  22:56:15,898 - #36 [
INFO  22:56:15,898 - #37 ]
INFO  22:56:15,898 - #31 ;
INFO  22:56:15,898 - #38 {
INFO  22:56:15,898 - #39 }
INFO  22:56:15,898 - #12 void
INFO  22:56:15,898 - #44 ccc
INFO  22:56:15,898 - #34 (
INFO  22:56:15,898 - #35 )
INFO  22:56:15,899 - #44 A
INFO  22:56:15,899 - #44 a
INFO  22:56:15,899 - #31 ;
INFO  22:56:15,899 - #44 C
INFO  22:56:15,899 - #44 c
INFO  22:56:15,899 - #31 ;
INFO  22:56:15,899 - #44 int
INFO  22:56:15,899 - #44 i
INFO  22:56:15,899 - #31 ;
INFO  22:56:15,899 - #44 int
INFO  22:56:15,900 - #44 x
INFO  22:56:15,900 - #36 [
INFO  22:56:15,900 - #37 ]
INFO  22:56:15,900 - #31 ;
INFO  22:56:15,900 - #38 {
INFO  22:56:15,900 - #39 }
INFO  22:56:15,900 - #39 }
INFO  22:56:15,900 - #39 }
INFO  22:56:15,901 - #38 {
INFO  22:56:15,901 - #12 void
INFO  22:56:15,901 - #44 main
INFO  22:56:15,901 - #34 (
INFO  22:56:15,901 - #35 )
INFO  22:56:15,901 - #44 A
INFO  22:56:15,901 - #44 a
INFO  22:56:15,901 - #31 ;
INFO  22:56:15,901 - #44 C
INFO  22:56:15,901 - #44 c
INFO  22:56:15,901 - #31 ;
INFO  22:56:15,902 - #44 int
INFO  22:56:15,902 - #44 i
INFO  22:56:15,902 - #31 ;
INFO  22:56:15,902 - #44 int
INFO  22:56:15,902 - #44 x
INFO  22:56:15,902 - #36 [
INFO  22:56:15,902 - #37 ]
INFO  22:56:15,902 - #31 ;
INFO  22:56:15,902 - #38 {
INFO  22:56:15,902 - #44 a
INFO  22:56:15,902 - #28 =
INFO  22:56:15,902 - #8 new
INFO  22:56:15,902 - #44 A
INFO  22:56:15,903 - #31 ;
INFO  22:56:15,903 - #44 a
INFO  22:56:15,903 - #33 .
INFO  22:56:15,903 - #44 x
INFO  22:56:15,903 - #28 =
INFO  22:56:15,903 - #8 new
INFO  22:56:15,903 - #44 int
INFO  22:56:15,903 - #36 [
INFO  22:56:15,903 - #43 5
INFO  22:56:15,903 - #37 ]
INFO  22:56:15,904 - #31 ;
INFO  22:56:15,904 - #44 a
INFO  22:56:15,904 - #33 .
INFO  22:56:15,904 - #44 y
INFO  22:56:15,904 - #28 =
INFO  22:56:15,904 - #8 new
INFO  22:56:15,904 - #44 int
INFO  22:56:15,904 - #36 [
INFO  22:56:15,904 - #43 5
INFO  22:56:15,905 - #37 ]
INFO  22:56:15,905 - #31 ;
INFO  22:56:15,905 - #44 c
INFO  22:56:15,905 - #28 =
INFO  22:56:15,905 - #8 new
INFO  22:56:15,905 - #44 C
INFO  22:56:15,905 - #31 ;
INFO  22:56:15,905 - #44 c
INFO  22:56:15,905 - #33 .
INFO  22:56:15,905 - #44 theA
INFO  22:56:15,905 - #28 =
INFO  22:56:15,906 - #44 a
INFO  22:56:15,906 - #31 ;
INFO  22:56:15,906 - #44 c
INFO  22:56:15,906 - #33 .
INFO  22:56:15,906 - #44 x
INFO  22:56:15,906 - #28 =
INFO  22:56:15,906 - #8 new
INFO  22:56:15,906 - #44 int
INFO  22:56:15,906 - #36 [
INFO  22:56:15,906 - #43 5
INFO  22:56:15,906 - #37 ]
INFO  22:56:15,907 - #31 ;
INFO  22:56:15,907 - #44 x
INFO  22:56:15,907 - #28 =
INFO  22:56:15,907 - #8 new
INFO  22:56:15,907 - #44 int
INFO  22:56:15,907 - #36 [
INFO  22:56:15,907 - #43 3
INFO  22:56:15,907 - #37 ]
INFO  22:56:15,907 - #31 ;
INFO  22:56:15,907 - #44 i
INFO  22:56:15,908 - #28 =
INFO  22:56:15,908 - #43 0
INFO  22:56:15,908 - #31 ;
INFO  22:56:15,908 - #10 read
INFO  22:56:15,908 - #34 (
INFO  22:56:15,908 - #44 c
INFO  22:56:15,908 - #33 .
INFO  22:56:15,908 - #44 i
INFO  22:56:15,908 - #35 )
INFO  22:56:15,908 - #31 ;
INFO  22:56:15,908 - #13 while
INFO  22:56:15,909 - #34 (
INFO  22:56:15,909 - #44 i
INFO  22:56:15,909 - #24 <
INFO  22:56:15,909 - #43 5
INFO  22:56:15,909 - #35 )
INFO  22:56:15,909 - #38 {
INFO  22:56:15,909 - #10 read
INFO  22:56:15,909 - #34 (
INFO  22:56:15,909 - #44 c
INFO  22:56:15,909 - #33 .
INFO  22:56:15,910 - #44 x
INFO  22:56:15,910 - #36 [
INFO  22:56:15,910 - #44 i
INFO  22:56:15,910 - #37 ]
INFO  22:56:15,910 - #35 )
INFO  22:56:15,910 - #31 ;
INFO  22:56:15,910 - #10 read
INFO  22:56:15,910 - #34 (
INFO  22:56:15,910 - #44 c
INFO  22:56:15,910 - #33 .
INFO  22:56:15,910 - #44 theA
INFO  22:56:15,911 - #33 .
INFO  22:56:15,911 - #44 x
INFO  22:56:15,911 - #36 [
INFO  22:56:15,911 - #44 i
INFO  22:56:15,911 - #37 ]
INFO  22:56:15,911 - #35 )
INFO  22:56:15,911 - #31 ;
INFO  22:56:15,911 - #44 i
INFO  22:56:15,911 - #29 ++
INFO  22:56:15,911 - #31 ;
INFO  22:56:15,911 - #39 }
INFO  22:56:15,911 - #9 print
INFO  22:56:15,911 - #34 (
INFO  22:56:15,912 - #44 c
INFO  22:56:15,912 - #33 .
INFO  22:56:15,912 - #44 getValue
INFO  22:56:15,912 - #34 (
INFO  22:56:15,912 - #44 c
INFO  22:56:15,912 - #33 .
INFO  22:56:15,912 - #44 theA
INFO  22:56:15,912 - #33 .
INFO  22:56:15,912 - #44 x
INFO  22:56:15,912 - #36 [
INFO  22:56:15,912 - #43 0
INFO  22:56:15,912 - #37 ]
INFO  22:56:15,912 - #35 )
INFO  22:56:15,912 - #35 )
INFO  22:56:15,913 - #31 ;
INFO  22:56:15,913 - #39 }
INFO  22:56:15,913 - #39 }
INFO  22:56:15,913 - GlobalVar = 14
INFO  22:56:15,913 - GlobalConst = 2
INFO  22:56:15,913 - LocalMainVar = 4
INFO  22:56:15,913 - GlobalArray = 3
INFO  22:56:15,913 - FuncProg = 4
INFO  22:56:15,913 - Blocks = 5
INFO  22:56:15,913 - FuncCalls = 5
INFO  22:56:15,913 - FormalArg = 1
INFO  22:56:15,913 - DefClass = 3
INFO  22:56:15,913 - DefMethodClass = 1
INFO  22:59:16,394 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:59:16,403 - #2 program
INFO  22:59:16,403 - #44 Program
INFO  22:59:16,403 - #4 class
INFO  22:59:16,403 - #44 A
INFO  22:59:16,403 - #38 {
INFO  22:59:16,403 - #44 int
INFO  22:59:16,403 - #44 x
INFO  22:59:16,404 - #36 [
INFO  22:59:16,404 - #37 ]
INFO  22:59:16,404 - #32 ,
INFO  22:59:16,404 - #44 y
INFO  22:59:16,404 - #36 [
INFO  22:59:16,404 - #37 ]
INFO  22:59:16,404 - #31 ;
INFO  22:59:16,404 - #39 }
INFO  22:59:16,404 - #6 const
INFO  22:59:16,404 - #44 int
INFO  22:59:16,404 - #44 pi
INFO  22:59:16,404 - #28 =
INFO  22:59:16,404 - #43 3
INFO  22:59:16,405 - #32 ,
INFO  22:59:16,405 - #44 e
INFO  22:59:16,405 - #28 =
INFO  22:59:16,405 - #43 2
INFO  22:59:16,405 - #31 ;
INFO  22:59:16,405 - #4 class
INFO  22:59:16,405 - #44 C
INFO  22:59:16,405 - #14 extends
INFO  22:59:16,405 - #44 B
INFO  22:59:16,405 - #38 {
INFO  22:59:16,405 - #44 A
INFO  22:59:16,405 - #44 theA
INFO  22:59:16,405 - #31 ;
INFO  22:59:16,405 - #44 string
INFO  22:59:16,406 - #44 a
INFO  22:59:16,406 - #31 ;
INFO  22:59:16,406 - #38 {
INFO  22:59:16,406 - #12 void
INFO  22:59:16,406 - #44 aaa
INFO  22:59:16,406 - #34 (
INFO  22:59:16,406 - #35 )
INFO  22:59:16,406 - #44 A
INFO  22:59:16,406 - #44 a
INFO  22:59:16,406 - #31 ;
INFO  22:59:16,406 - #44 C
INFO  22:59:16,406 - #44 c
INFO  22:59:16,406 - #31 ;
INFO  22:59:16,407 - #44 int
INFO  22:59:16,407 - #44 i
INFO  22:59:16,407 - #31 ;
INFO  22:59:16,407 - #44 int
INFO  22:59:16,407 - #44 x
INFO  22:59:16,407 - #36 [
INFO  22:59:16,407 - #37 ]
INFO  22:59:16,407 - #31 ;
INFO  22:59:16,407 - #38 {
INFO  22:59:16,407 - #39 }
INFO  22:59:16,407 - #12 void
INFO  22:59:16,407 - #44 bbb
INFO  22:59:16,408 - #34 (
INFO  22:59:16,408 - #35 )
INFO  22:59:16,408 - #44 A
INFO  22:59:16,408 - #44 a
INFO  22:59:16,408 - #31 ;
INFO  22:59:16,408 - #44 C
INFO  22:59:16,408 - #44 c
INFO  22:59:16,408 - #31 ;
INFO  22:59:16,408 - #44 int
INFO  22:59:16,408 - #44 i
INFO  22:59:16,408 - #31 ;
INFO  22:59:16,408 - #44 int
INFO  22:59:16,409 - #44 x
INFO  22:59:16,409 - #36 [
INFO  22:59:16,409 - #37 ]
INFO  22:59:16,409 - #31 ;
INFO  22:59:16,409 - #38 {
INFO  22:59:16,409 - #39 }
INFO  22:59:16,409 - #12 void
INFO  22:59:16,409 - #44 ccc
INFO  22:59:16,409 - #34 (
INFO  22:59:16,409 - #35 )
INFO  22:59:16,410 - #44 A
INFO  22:59:16,410 - #44 a
INFO  22:59:16,410 - #31 ;
INFO  22:59:16,410 - #44 C
INFO  22:59:16,410 - #44 c
INFO  22:59:16,410 - #31 ;
INFO  22:59:16,410 - #44 int
INFO  22:59:16,410 - #44 i
INFO  22:59:16,411 - #31 ;
INFO  22:59:16,411 - #44 int
INFO  22:59:16,411 - #44 x
INFO  22:59:16,411 - #36 [
INFO  22:59:16,411 - #37 ]
INFO  22:59:16,411 - #31 ;
INFO  22:59:16,411 - #38 {
INFO  22:59:16,411 - #39 }
INFO  22:59:16,411 - #39 }
INFO  22:59:16,412 - #39 }
INFO  22:59:16,412 - #4 class
INFO  22:59:16,412 - #44 B
INFO  22:59:16,412 - #14 extends
INFO  22:59:16,412 - #44 A
INFO  22:59:16,412 - #38 {
INFO  22:59:16,412 - #44 int
INFO  22:59:16,412 - #44 i
INFO  22:59:16,412 - #31 ;
INFO  22:59:16,412 - #44 int
INFO  22:59:16,412 - #44 x
INFO  22:59:16,413 - #36 [
INFO  22:59:16,413 - #37 ]
INFO  22:59:16,413 - #31 ;
INFO  22:59:16,413 - #38 {
INFO  22:59:16,413 - #44 int
INFO  22:59:16,413 - #44 getValue
INFO  22:59:16,413 - #34 (
INFO  22:59:16,413 - #44 int
INFO  22:59:16,413 - #44 a
INFO  22:59:16,413 - #35 )
INFO  22:59:16,413 - #44 int
INFO  22:59:16,413 - #44 b
INFO  22:59:16,414 - #31 ;
INFO  22:59:16,414 - #44 bool
INFO  22:59:16,414 - #44 c
INFO  22:59:16,414 - #31 ;
INFO  22:59:16,414 - #38 {
INFO  22:59:16,415 - #11 return
INFO  22:59:16,415 - #44 this
INFO  22:59:16,415 - #33 .
INFO  22:59:16,415 - #44 i
INFO  22:59:16,415 - #15 +
INFO  22:59:16,415 - #44 this
INFO  22:59:16,415 - #33 .
INFO  22:59:16,415 - #44 x
INFO  22:59:16,415 - #36 [
INFO  22:59:16,415 - #43 0
INFO  22:59:16,416 - #37 ]
INFO  22:59:16,416 - #15 +
INFO  22:59:16,416 - #44 a
INFO  22:59:16,416 - #31 ;
INFO  22:59:16,416 - #39 }
INFO  22:59:16,416 - #39 }
INFO  22:59:16,416 - #39 }
INFO  22:59:16,416 - #38 {
INFO  22:59:16,416 - #12 void
INFO  22:59:16,416 - #44 main
INFO  22:59:16,416 - #34 (
INFO  22:59:16,417 - #35 )
INFO  22:59:16,417 - #44 A
INFO  22:59:16,417 - #44 a
INFO  22:59:16,417 - #31 ;
INFO  22:59:16,417 - #44 C
INFO  22:59:16,417 - #44 c
INFO  22:59:16,417 - #31 ;
INFO  22:59:16,417 - #44 int
INFO  22:59:16,417 - #44 i
INFO  22:59:16,417 - #31 ;
INFO  22:59:16,417 - #44 int
INFO  22:59:16,417 - #44 x
INFO  22:59:16,417 - #36 [
INFO  22:59:16,417 - #37 ]
INFO  22:59:16,418 - #31 ;
INFO  22:59:16,418 - #38 {
INFO  22:59:16,418 - #44 a
INFO  22:59:16,418 - #28 =
INFO  22:59:16,418 - #8 new
INFO  22:59:16,418 - #44 A
INFO  22:59:16,418 - #31 ;
INFO  22:59:16,418 - #44 a
INFO  22:59:16,418 - #33 .
INFO  22:59:16,418 - #44 x
INFO  22:59:16,418 - #28 =
INFO  22:59:16,419 - #8 new
INFO  22:59:16,419 - #44 int
INFO  22:59:16,419 - #36 [
INFO  22:59:16,419 - #43 5
INFO  22:59:16,419 - #37 ]
INFO  22:59:16,419 - #31 ;
INFO  22:59:16,419 - #44 a
INFO  22:59:16,419 - #33 .
INFO  22:59:16,420 - #44 y
INFO  22:59:16,420 - #28 =
INFO  22:59:16,420 - #8 new
INFO  22:59:16,420 - #44 int
INFO  22:59:16,420 - #36 [
INFO  22:59:16,420 - #43 5
INFO  22:59:16,420 - #37 ]
INFO  22:59:16,420 - #31 ;
INFO  22:59:16,421 - #44 c
INFO  22:59:16,421 - #28 =
INFO  22:59:16,421 - #8 new
INFO  22:59:16,421 - #44 C
INFO  22:59:16,421 - #31 ;
INFO  22:59:16,421 - #44 c
INFO  22:59:16,421 - #33 .
INFO  22:59:16,421 - #44 theA
INFO  22:59:16,422 - #28 =
INFO  22:59:16,422 - #44 a
INFO  22:59:16,422 - #31 ;
INFO  22:59:16,422 - #44 c
INFO  22:59:16,422 - #33 .
INFO  22:59:16,422 - #44 x
INFO  22:59:16,422 - #28 =
INFO  22:59:16,422 - #8 new
INFO  22:59:16,423 - #44 int
INFO  22:59:16,423 - #36 [
INFO  22:59:16,423 - #43 5
INFO  22:59:16,423 - #37 ]
INFO  22:59:16,423 - #31 ;
INFO  22:59:16,423 - #44 x
INFO  22:59:16,423 - #28 =
INFO  22:59:16,423 - #8 new
INFO  22:59:16,423 - #44 int
INFO  22:59:16,423 - #36 [
INFO  22:59:16,423 - #43 3
INFO  22:59:16,424 - #37 ]
INFO  22:59:16,424 - #31 ;
INFO  22:59:16,424 - #44 i
INFO  22:59:16,424 - #28 =
INFO  22:59:16,424 - #43 0
INFO  22:59:16,424 - #31 ;
INFO  22:59:16,424 - #10 read
INFO  22:59:16,424 - #34 (
INFO  22:59:16,424 - #44 c
INFO  22:59:16,424 - #33 .
INFO  22:59:16,425 - #44 i
INFO  22:59:16,425 - #35 )
INFO  22:59:16,425 - #31 ;
INFO  22:59:16,425 - #13 while
INFO  22:59:16,425 - #34 (
INFO  22:59:16,425 - #44 i
INFO  22:59:16,425 - #24 <
INFO  22:59:16,425 - #43 5
INFO  22:59:16,425 - #35 )
INFO  22:59:16,425 - #38 {
INFO  22:59:16,425 - #10 read
INFO  22:59:16,426 - #34 (
INFO  22:59:16,426 - #44 c
INFO  22:59:16,426 - #33 .
INFO  22:59:16,426 - #44 x
INFO  22:59:16,426 - #36 [
INFO  22:59:16,426 - #44 i
INFO  22:59:16,426 - #37 ]
INFO  22:59:16,426 - #35 )
INFO  22:59:16,426 - #31 ;
INFO  22:59:16,426 - #10 read
INFO  22:59:16,427 - #34 (
INFO  22:59:16,427 - #44 c
INFO  22:59:16,427 - #33 .
INFO  22:59:16,427 - #44 theA
INFO  22:59:16,427 - #33 .
INFO  22:59:16,427 - #44 x
INFO  22:59:16,427 - #36 [
INFO  22:59:16,427 - #44 i
INFO  22:59:16,427 - #37 ]
INFO  22:59:16,427 - #35 )
INFO  22:59:16,427 - #31 ;
INFO  22:59:16,428 - #44 i
INFO  22:59:16,428 - #29 ++
INFO  22:59:16,428 - #31 ;
INFO  22:59:16,428 - #39 }
INFO  22:59:16,428 - #9 print
INFO  22:59:16,428 - #34 (
INFO  22:59:16,428 - #44 c
INFO  22:59:16,428 - #33 .
INFO  22:59:16,428 - #44 getValue
INFO  22:59:16,428 - #34 (
INFO  22:59:16,428 - #44 c
INFO  22:59:16,428 - #33 .
INFO  22:59:16,428 - #44 theA
INFO  22:59:16,429 - #33 .
INFO  22:59:16,429 - #44 x
INFO  22:59:16,429 - #36 [
INFO  22:59:16,429 - #43 0
INFO  22:59:16,429 - #37 ]
INFO  22:59:16,429 - #35 )
INFO  22:59:16,429 - #35 )
INFO  22:59:16,429 - #31 ;
INFO  22:59:16,429 - #39 }
INFO  22:59:16,429 - #39 }
INFO  22:59:16,429 - GlobalVar = 4
INFO  22:59:16,430 - GlobalConst = 2
INFO  22:59:16,430 - LocalMainVar = 4
INFO  22:59:16,430 - GlobalArray = 1
INFO  22:59:16,430 - FuncProg = 2
INFO  22:59:16,430 - Blocks = 5
INFO  22:59:16,430 - FuncCalls = 5
INFO  22:59:16,430 - FormalArg = 1
INFO  22:59:16,430 - DefClass = 3
INFO  22:59:16,430 - DefMethodClass = 3
INFO  22:59:35,351 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  22:59:35,361 - #2 program
INFO  22:59:35,361 - #44 Program
INFO  22:59:35,361 - #4 class
INFO  22:59:35,361 - #44 A
INFO  22:59:35,361 - #38 {
INFO  22:59:35,361 - #44 int
INFO  22:59:35,361 - #44 x
INFO  22:59:35,361 - #36 [
INFO  22:59:35,361 - #37 ]
INFO  22:59:35,361 - #32 ,
INFO  22:59:35,362 - #44 y
INFO  22:59:35,362 - #36 [
INFO  22:59:35,362 - #37 ]
INFO  22:59:35,362 - #31 ;
INFO  22:59:35,362 - #39 }
INFO  22:59:35,362 - #6 const
INFO  22:59:35,362 - #44 int
INFO  22:59:35,362 - #44 pi
INFO  22:59:35,362 - #28 =
INFO  22:59:35,362 - #43 3
INFO  22:59:35,362 - #32 ,
INFO  22:59:35,362 - #44 e
INFO  22:59:35,362 - #28 =
INFO  22:59:35,362 - #43 2
INFO  22:59:35,363 - #31 ;
INFO  22:59:35,363 - #4 class
INFO  22:59:35,363 - #44 C
INFO  22:59:35,363 - #14 extends
INFO  22:59:35,363 - #44 B
INFO  22:59:35,363 - #38 {
INFO  22:59:35,363 - #44 A
INFO  22:59:35,363 - #44 theA
INFO  22:59:35,363 - #31 ;
INFO  22:59:35,363 - #44 string
INFO  22:59:35,363 - #44 a
INFO  22:59:35,363 - #31 ;
INFO  22:59:35,363 - #38 {
INFO  22:59:35,364 - #12 void
INFO  22:59:35,364 - #44 aaa
INFO  22:59:35,364 - #34 (
INFO  22:59:35,364 - #35 )
INFO  22:59:35,364 - #44 A
INFO  22:59:35,364 - #44 a
INFO  22:59:35,364 - #31 ;
INFO  22:59:35,364 - #44 C
INFO  22:59:35,364 - #44 c
INFO  22:59:35,364 - #31 ;
INFO  22:59:35,364 - #44 int
INFO  22:59:35,364 - #44 i
INFO  22:59:35,364 - #31 ;
INFO  22:59:35,364 - #44 int
INFO  22:59:35,365 - #44 x
INFO  22:59:35,365 - #36 [
INFO  22:59:35,365 - #37 ]
INFO  22:59:35,365 - #31 ;
INFO  22:59:35,365 - #38 {
INFO  22:59:35,365 - #39 }
INFO  22:59:35,365 - #12 void
INFO  22:59:35,365 - #44 bbb
INFO  22:59:35,365 - #34 (
INFO  22:59:35,365 - #35 )
INFO  22:59:35,365 - #44 A
INFO  22:59:35,365 - #44 a
INFO  22:59:35,365 - #31 ;
INFO  22:59:35,366 - #44 C
INFO  22:59:35,366 - #44 c
INFO  22:59:35,366 - #31 ;
INFO  22:59:35,366 - #44 int
INFO  22:59:35,366 - #44 i
INFO  22:59:35,366 - #31 ;
INFO  22:59:35,366 - #44 int
INFO  22:59:35,366 - #44 x
INFO  22:59:35,366 - #36 [
INFO  22:59:35,366 - #37 ]
INFO  22:59:35,366 - #31 ;
INFO  22:59:35,367 - #38 {
INFO  22:59:35,367 - #39 }
INFO  22:59:35,367 - #12 void
INFO  22:59:35,367 - #44 ccc
INFO  22:59:35,367 - #34 (
INFO  22:59:35,367 - #35 )
INFO  22:59:35,367 - #44 A
INFO  22:59:35,367 - #44 a
INFO  22:59:35,367 - #31 ;
INFO  22:59:35,367 - #44 C
INFO  22:59:35,368 - #44 c
INFO  22:59:35,368 - #31 ;
INFO  22:59:35,368 - #44 int
INFO  22:59:35,368 - #44 i
INFO  22:59:35,368 - #31 ;
INFO  22:59:35,368 - #44 int
INFO  22:59:35,368 - #44 x
INFO  22:59:35,368 - #36 [
INFO  22:59:35,368 - #37 ]
INFO  22:59:35,368 - #31 ;
INFO  22:59:35,368 - #38 {
INFO  22:59:35,369 - #39 }
INFO  22:59:35,369 - #39 }
INFO  22:59:35,369 - #39 }
INFO  22:59:35,369 - #4 class
INFO  22:59:35,369 - #44 C
INFO  22:59:35,369 - #14 extends
INFO  22:59:35,369 - #44 B
INFO  22:59:35,369 - #38 {
INFO  22:59:35,369 - #44 A
INFO  22:59:35,369 - #44 theA
INFO  22:59:35,370 - #31 ;
INFO  22:59:35,370 - #44 string
INFO  22:59:35,370 - #44 a
INFO  22:59:35,370 - #31 ;
INFO  22:59:35,370 - #38 {
INFO  22:59:35,370 - #12 void
INFO  22:59:35,370 - #44 aaa
INFO  22:59:35,370 - #34 (
INFO  22:59:35,370 - #35 )
INFO  22:59:35,370 - #44 A
INFO  22:59:35,370 - #44 a
INFO  22:59:35,370 - #31 ;
INFO  22:59:35,370 - #44 C
INFO  22:59:35,370 - #44 c
INFO  22:59:35,371 - #31 ;
INFO  22:59:35,371 - #44 int
INFO  22:59:35,371 - #44 i
INFO  22:59:35,371 - #31 ;
INFO  22:59:35,371 - #44 int
INFO  22:59:35,371 - #44 x
INFO  22:59:35,371 - #36 [
INFO  22:59:35,371 - #37 ]
INFO  22:59:35,371 - #31 ;
INFO  22:59:35,371 - #38 {
INFO  22:59:35,371 - #39 }
INFO  22:59:35,371 - #12 void
INFO  22:59:35,371 - #44 bbb
INFO  22:59:35,372 - #34 (
INFO  22:59:35,372 - #35 )
INFO  22:59:35,372 - #44 A
INFO  22:59:35,372 - #44 a
INFO  22:59:35,372 - #31 ;
INFO  22:59:35,372 - #44 C
INFO  22:59:35,372 - #44 c
INFO  22:59:35,372 - #31 ;
INFO  22:59:35,372 - #44 int
INFO  22:59:35,372 - #44 i
INFO  22:59:35,372 - #31 ;
INFO  22:59:35,372 - #44 int
INFO  22:59:35,372 - #44 x
INFO  22:59:35,373 - #36 [
INFO  22:59:35,373 - #37 ]
INFO  22:59:35,373 - #31 ;
INFO  22:59:35,373 - #38 {
INFO  22:59:35,373 - #39 }
INFO  22:59:35,373 - #12 void
INFO  22:59:35,373 - #44 ccc
INFO  22:59:35,373 - #34 (
INFO  22:59:35,373 - #35 )
INFO  22:59:35,373 - #44 A
INFO  22:59:35,373 - #44 a
INFO  22:59:35,373 - #31 ;
INFO  22:59:35,373 - #44 C
INFO  22:59:35,373 - #44 c
INFO  22:59:35,374 - #31 ;
INFO  22:59:35,374 - #44 int
INFO  22:59:35,374 - #44 i
INFO  22:59:35,374 - #31 ;
INFO  22:59:35,374 - #44 int
INFO  22:59:35,374 - #44 x
INFO  22:59:35,374 - #36 [
INFO  22:59:35,374 - #37 ]
INFO  22:59:35,374 - #31 ;
INFO  22:59:35,374 - #38 {
INFO  22:59:35,374 - #39 }
INFO  22:59:35,374 - #39 }
INFO  22:59:35,374 - #39 }
INFO  22:59:35,375 - #4 class
INFO  22:59:35,375 - #44 B
INFO  22:59:35,375 - #14 extends
INFO  22:59:35,375 - #44 A
INFO  22:59:35,375 - #38 {
INFO  22:59:35,375 - #44 int
INFO  22:59:35,375 - #44 i
INFO  22:59:35,375 - #31 ;
INFO  22:59:35,375 - #44 int
INFO  22:59:35,375 - #44 x
INFO  22:59:35,375 - #36 [
INFO  22:59:35,376 - #37 ]
INFO  22:59:35,376 - #31 ;
INFO  22:59:35,376 - #38 {
INFO  22:59:35,376 - #44 int
INFO  22:59:35,376 - #44 getValue
INFO  22:59:35,376 - #34 (
INFO  22:59:35,376 - #44 int
INFO  22:59:35,376 - #44 a
INFO  22:59:35,376 - #35 )
INFO  22:59:35,376 - #44 int
INFO  22:59:35,376 - #44 b
INFO  22:59:35,376 - #31 ;
INFO  22:59:35,376 - #44 bool
INFO  22:59:35,376 - #44 c
INFO  22:59:35,377 - #31 ;
INFO  22:59:35,377 - #38 {
INFO  22:59:35,377 - #11 return
INFO  22:59:35,377 - #44 this
INFO  22:59:35,377 - #33 .
INFO  22:59:35,377 - #44 i
INFO  22:59:35,377 - #15 +
INFO  22:59:35,377 - #44 this
INFO  22:59:35,377 - #33 .
INFO  22:59:35,377 - #44 x
INFO  22:59:35,377 - #36 [
INFO  22:59:35,377 - #43 0
INFO  22:59:35,377 - #37 ]
INFO  22:59:35,378 - #15 +
INFO  22:59:35,378 - #44 a
INFO  22:59:35,378 - #31 ;
INFO  22:59:35,378 - #39 }
INFO  22:59:35,378 - #39 }
INFO  22:59:35,378 - #39 }
INFO  22:59:35,378 - #38 {
INFO  22:59:35,378 - #12 void
INFO  22:59:35,378 - #44 main
INFO  22:59:35,378 - #34 (
INFO  22:59:35,378 - #35 )
INFO  22:59:35,378 - #44 A
INFO  22:59:35,378 - #44 a
INFO  22:59:35,379 - #31 ;
INFO  22:59:35,379 - #44 C
INFO  22:59:35,379 - #44 c
INFO  22:59:35,379 - #31 ;
INFO  22:59:35,379 - #44 int
INFO  22:59:35,379 - #44 i
INFO  22:59:35,379 - #31 ;
INFO  22:59:35,379 - #44 int
INFO  22:59:35,379 - #44 x
INFO  22:59:35,379 - #36 [
INFO  22:59:35,379 - #37 ]
INFO  22:59:35,379 - #31 ;
INFO  22:59:35,379 - #38 {
INFO  22:59:35,380 - #44 a
INFO  22:59:35,380 - #28 =
INFO  22:59:35,380 - #8 new
INFO  22:59:35,380 - #44 A
INFO  22:59:35,380 - #31 ;
INFO  22:59:35,380 - #44 a
INFO  22:59:35,380 - #33 .
INFO  22:59:35,380 - #44 x
INFO  22:59:35,381 - #28 =
INFO  22:59:35,381 - #8 new
INFO  22:59:35,381 - #44 int
INFO  22:59:35,381 - #36 [
INFO  22:59:35,381 - #43 5
INFO  22:59:35,381 - #37 ]
INFO  22:59:35,381 - #31 ;
INFO  22:59:35,381 - #44 a
INFO  22:59:35,382 - #33 .
INFO  22:59:35,382 - #44 y
INFO  22:59:35,382 - #28 =
INFO  22:59:35,382 - #8 new
INFO  22:59:35,382 - #44 int
INFO  22:59:35,382 - #36 [
INFO  22:59:35,382 - #43 5
INFO  22:59:35,382 - #37 ]
INFO  22:59:35,383 - #31 ;
INFO  22:59:35,383 - #44 c
INFO  22:59:35,383 - #28 =
INFO  22:59:35,383 - #8 new
INFO  22:59:35,383 - #44 C
INFO  22:59:35,383 - #31 ;
INFO  22:59:35,383 - #44 c
INFO  22:59:35,383 - #33 .
INFO  22:59:35,384 - #44 theA
INFO  22:59:35,384 - #28 =
INFO  22:59:35,384 - #44 a
INFO  22:59:35,384 - #31 ;
INFO  22:59:35,384 - #44 c
INFO  22:59:35,384 - #33 .
INFO  22:59:35,384 - #44 x
INFO  22:59:35,384 - #28 =
INFO  22:59:35,385 - #8 new
INFO  22:59:35,385 - #44 int
INFO  22:59:35,385 - #36 [
INFO  22:59:35,385 - #43 5
INFO  22:59:35,385 - #37 ]
INFO  22:59:35,385 - #31 ;
INFO  22:59:35,385 - #44 x
INFO  22:59:35,385 - #28 =
INFO  22:59:35,385 - #8 new
INFO  22:59:35,386 - #44 int
INFO  22:59:35,386 - #36 [
INFO  22:59:35,386 - #43 3
INFO  22:59:35,386 - #37 ]
INFO  22:59:35,386 - #31 ;
INFO  22:59:35,386 - #44 i
INFO  22:59:35,386 - #28 =
INFO  22:59:35,386 - #43 0
INFO  22:59:35,386 - #31 ;
INFO  22:59:35,386 - #10 read
INFO  22:59:35,387 - #34 (
INFO  22:59:35,387 - #44 c
INFO  22:59:35,387 - #33 .
INFO  22:59:35,387 - #44 i
INFO  22:59:35,387 - #35 )
INFO  22:59:35,387 - #31 ;
INFO  22:59:35,387 - #13 while
INFO  22:59:35,387 - #34 (
INFO  22:59:35,387 - #44 i
INFO  22:59:35,387 - #24 <
INFO  22:59:35,387 - #43 5
INFO  22:59:35,387 - #35 )
INFO  22:59:35,387 - #38 {
INFO  22:59:35,387 - #10 read
INFO  22:59:35,387 - #34 (
INFO  22:59:35,388 - #44 c
INFO  22:59:35,388 - #33 .
INFO  22:59:35,388 - #44 x
INFO  22:59:35,388 - #36 [
INFO  22:59:35,388 - #44 i
INFO  22:59:35,388 - #37 ]
INFO  22:59:35,388 - #35 )
INFO  22:59:35,388 - #31 ;
INFO  22:59:35,388 - #10 read
INFO  22:59:35,388 - #34 (
INFO  22:59:35,388 - #44 c
INFO  22:59:35,388 - #33 .
INFO  22:59:35,388 - #44 theA
INFO  22:59:35,388 - #33 .
INFO  22:59:35,388 - #44 x
INFO  22:59:35,389 - #36 [
INFO  22:59:35,389 - #44 i
INFO  22:59:35,389 - #37 ]
INFO  22:59:35,389 - #35 )
INFO  22:59:35,389 - #31 ;
INFO  22:59:35,389 - #44 i
INFO  22:59:35,389 - #29 ++
INFO  22:59:35,389 - #31 ;
INFO  22:59:35,389 - #39 }
INFO  22:59:35,389 - #9 print
INFO  22:59:35,389 - #34 (
INFO  22:59:35,389 - #44 c
INFO  22:59:35,389 - #33 .
INFO  22:59:35,389 - #44 getValue
INFO  22:59:35,390 - #34 (
INFO  22:59:35,390 - #44 c
INFO  22:59:35,390 - #33 .
INFO  22:59:35,390 - #44 theA
INFO  22:59:35,390 - #33 .
INFO  22:59:35,390 - #44 x
INFO  22:59:35,390 - #36 [
INFO  22:59:35,390 - #43 0
INFO  22:59:35,390 - #37 ]
INFO  22:59:35,390 - #35 )
INFO  22:59:35,390 - #35 )
INFO  22:59:35,391 - #31 ;
INFO  22:59:35,391 - #39 }
INFO  22:59:35,391 - #39 }
INFO  22:59:35,391 - GlobalVar = 18
INFO  22:59:35,391 - GlobalConst = 2
INFO  22:59:35,391 - LocalMainVar = 4
INFO  22:59:35,391 - GlobalArray = 4
INFO  22:59:35,391 - FuncProg = 5
INFO  22:59:35,391 - Blocks = 8
INFO  22:59:35,391 - FuncCalls = 5
INFO  22:59:35,391 - FormalArg = 1
INFO  22:59:35,391 - DefClass = 4
INFO  22:59:35,392 - DefMethodClass = 3
INFO  23:01:37,245 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:01:37,254 - #2 program
INFO  23:01:37,254 - #44 Program
INFO  23:01:37,254 - #4 class
INFO  23:01:37,255 - #44 A
INFO  23:01:37,255 - #38 {
INFO  23:01:37,255 - #44 int
INFO  23:01:37,255 - #44 x
INFO  23:01:37,255 - #36 [
INFO  23:01:37,255 - #37 ]
INFO  23:01:37,255 - #32 ,
INFO  23:01:37,255 - #44 y
INFO  23:01:37,255 - #36 [
INFO  23:01:37,255 - #37 ]
INFO  23:01:37,255 - #31 ;
INFO  23:01:37,255 - #39 }
INFO  23:01:37,256 - #6 const
INFO  23:01:37,256 - #44 int
INFO  23:01:37,256 - #44 pi
INFO  23:01:37,256 - #28 =
INFO  23:01:37,256 - #43 3
INFO  23:01:37,256 - #32 ,
INFO  23:01:37,256 - #44 e
INFO  23:01:37,256 - #28 =
INFO  23:01:37,256 - #43 2
INFO  23:01:37,256 - #31 ;
INFO  23:01:37,256 - #4 class
INFO  23:01:37,256 - #44 B
INFO  23:01:37,257 - #14 extends
INFO  23:01:37,257 - #44 A
INFO  23:01:37,257 - #38 {
INFO  23:01:37,257 - #44 int
INFO  23:01:37,257 - #44 i
INFO  23:01:37,257 - #31 ;
INFO  23:01:37,257 - #44 int
INFO  23:01:37,257 - #44 x
INFO  23:01:37,257 - #36 [
INFO  23:01:37,257 - #37 ]
INFO  23:01:37,257 - #31 ;
INFO  23:01:37,257 - #38 {
INFO  23:01:37,258 - #44 int
INFO  23:01:37,258 - #44 getValue
INFO  23:01:37,258 - #34 (
INFO  23:01:37,258 - #44 int
INFO  23:01:37,258 - #44 a
INFO  23:01:37,258 - #35 )
INFO  23:01:37,258 - #44 int
INFO  23:01:37,258 - #44 b
INFO  23:01:37,258 - #31 ;
INFO  23:01:37,258 - #44 bool
INFO  23:01:37,258 - #44 c
INFO  23:01:37,258 - #31 ;
INFO  23:01:37,258 - #38 {
INFO  23:01:37,258 - #11 return
INFO  23:01:37,259 - #44 this
INFO  23:01:37,259 - #33 .
INFO  23:01:37,259 - #44 i
INFO  23:01:37,259 - #15 +
INFO  23:01:37,259 - #44 this
INFO  23:01:37,259 - #33 .
INFO  23:01:37,259 - #44 x
INFO  23:01:37,259 - #36 [
INFO  23:01:37,259 - #43 0
INFO  23:01:37,259 - #37 ]
INFO  23:01:37,260 - #15 +
INFO  23:01:37,260 - #44 a
INFO  23:01:37,260 - #31 ;
INFO  23:01:37,260 - #39 }
INFO  23:01:37,260 - #39 }
INFO  23:01:37,260 - #39 }
INFO  23:01:37,260 - #4 class
INFO  23:01:37,260 - #44 C
INFO  23:01:37,260 - #14 extends
INFO  23:01:37,260 - #44 B
INFO  23:01:37,260 - #38 {
INFO  23:01:37,260 - #44 A
INFO  23:01:37,261 - #44 theA
INFO  23:01:37,261 - #31 ;
INFO  23:01:37,261 - #44 string
INFO  23:01:37,261 - #44 a
INFO  23:01:37,261 - #31 ;
INFO  23:01:37,261 - #38 {
INFO  23:01:37,261 - #12 void
INFO  23:01:37,261 - #44 aaa
INFO  23:01:37,261 - #34 (
INFO  23:01:37,261 - #35 )
INFO  23:01:37,261 - #44 A
INFO  23:01:37,262 - #44 a
INFO  23:01:37,262 - #31 ;
INFO  23:01:37,262 - #44 C
INFO  23:01:37,262 - #44 c
INFO  23:01:37,262 - #31 ;
INFO  23:01:37,262 - #44 int
INFO  23:01:37,262 - #44 i
INFO  23:01:37,262 - #31 ;
INFO  23:01:37,262 - #44 int
INFO  23:01:37,262 - #44 x
INFO  23:01:37,263 - #36 [
INFO  23:01:37,263 - #37 ]
INFO  23:01:37,263 - #31 ;
INFO  23:01:37,263 - #38 {
INFO  23:01:37,263 - #39 }
INFO  23:01:37,263 - #12 void
INFO  23:01:37,263 - #44 bbb
INFO  23:01:37,263 - #34 (
INFO  23:01:37,263 - #35 )
INFO  23:01:37,263 - #44 A
INFO  23:01:37,263 - #44 a
INFO  23:01:37,263 - #31 ;
INFO  23:01:37,264 - #44 C
INFO  23:01:37,264 - #44 c
INFO  23:01:37,264 - #31 ;
INFO  23:01:37,264 - #44 int
INFO  23:01:37,264 - #44 i
INFO  23:01:37,264 - #31 ;
INFO  23:01:37,264 - #44 int
INFO  23:01:37,264 - #44 x
INFO  23:01:37,264 - #36 [
INFO  23:01:37,264 - #37 ]
INFO  23:01:37,264 - #31 ;
INFO  23:01:37,264 - #38 {
INFO  23:01:37,264 - #39 }
INFO  23:01:37,265 - #12 void
INFO  23:01:37,265 - #44 ccc
INFO  23:01:37,265 - #34 (
INFO  23:01:37,265 - #35 )
INFO  23:01:37,265 - #44 A
INFO  23:01:37,265 - #44 a
INFO  23:01:37,265 - #31 ;
INFO  23:01:37,265 - #44 C
INFO  23:01:37,265 - #44 c
INFO  23:01:37,265 - #31 ;
INFO  23:01:37,265 - #44 int
INFO  23:01:37,266 - #44 i
INFO  23:01:37,266 - #31 ;
INFO  23:01:37,266 - #44 int
INFO  23:01:37,266 - #44 x
INFO  23:01:37,266 - #36 [
INFO  23:01:37,266 - #37 ]
INFO  23:01:37,266 - #31 ;
INFO  23:01:37,266 - #38 {
INFO  23:01:37,266 - #39 }
INFO  23:01:37,266 - #39 }
INFO  23:01:37,266 - #39 }
INFO  23:01:37,267 - #38 {
INFO  23:01:37,267 - #12 void
INFO  23:01:37,267 - #44 main
INFO  23:01:37,267 - #34 (
INFO  23:01:37,267 - #35 )
INFO  23:01:37,267 - #44 A
INFO  23:01:37,267 - #44 a
INFO  23:01:37,267 - #31 ;
INFO  23:01:37,267 - #44 C
INFO  23:01:37,267 - #44 c
INFO  23:01:37,267 - #31 ;
INFO  23:01:37,268 - #44 int
INFO  23:01:37,268 - #44 i
INFO  23:01:37,268 - #31 ;
INFO  23:01:37,268 - #44 int
INFO  23:01:37,268 - #44 x
INFO  23:01:37,268 - #36 [
INFO  23:01:37,268 - #37 ]
INFO  23:01:37,268 - #31 ;
INFO  23:01:37,268 - #38 {
INFO  23:01:37,268 - #44 a
INFO  23:01:37,268 - #28 =
INFO  23:01:37,268 - #8 new
INFO  23:01:37,269 - #44 A
INFO  23:01:37,269 - #31 ;
INFO  23:01:37,269 - #44 a
INFO  23:01:37,269 - #33 .
INFO  23:01:37,269 - #44 x
INFO  23:01:37,269 - #28 =
INFO  23:01:37,269 - #8 new
INFO  23:01:37,269 - #44 int
INFO  23:01:37,269 - #36 [
INFO  23:01:37,269 - #43 5
INFO  23:01:37,270 - #37 ]
INFO  23:01:37,270 - #31 ;
INFO  23:01:37,270 - #44 a
INFO  23:01:37,270 - #33 .
INFO  23:01:37,270 - #44 y
INFO  23:01:37,270 - #28 =
INFO  23:01:37,270 - #8 new
INFO  23:01:37,270 - #44 int
INFO  23:01:37,271 - #36 [
INFO  23:01:37,271 - #43 5
INFO  23:01:37,271 - #37 ]
INFO  23:01:37,271 - #31 ;
INFO  23:01:37,271 - #44 c
INFO  23:01:37,271 - #28 =
INFO  23:01:37,271 - #8 new
INFO  23:01:37,271 - #44 C
INFO  23:01:37,272 - #31 ;
INFO  23:01:37,272 - #44 c
INFO  23:01:37,272 - #33 .
INFO  23:01:37,272 - #44 theA
INFO  23:01:37,272 - #28 =
INFO  23:01:37,272 - #44 a
INFO  23:01:37,272 - #31 ;
INFO  23:01:37,272 - #44 c
INFO  23:01:37,272 - #33 .
INFO  23:01:37,273 - #44 x
INFO  23:01:37,273 - #28 =
INFO  23:01:37,273 - #8 new
INFO  23:01:37,273 - #44 int
INFO  23:01:37,273 - #36 [
INFO  23:01:37,273 - #43 5
INFO  23:01:37,273 - #37 ]
INFO  23:01:37,273 - #31 ;
INFO  23:01:37,273 - #44 x
INFO  23:01:37,274 - #28 =
INFO  23:01:37,274 - #8 new
INFO  23:01:37,274 - #44 int
INFO  23:01:37,274 - #36 [
INFO  23:01:37,274 - #43 3
INFO  23:01:37,274 - #37 ]
INFO  23:01:37,274 - #31 ;
INFO  23:01:37,274 - #44 i
INFO  23:01:37,274 - #28 =
INFO  23:01:37,275 - #43 0
INFO  23:01:37,275 - #31 ;
INFO  23:01:37,275 - #10 read
INFO  23:01:37,275 - #34 (
INFO  23:01:37,275 - #44 c
INFO  23:01:37,275 - #33 .
INFO  23:01:37,275 - #44 i
INFO  23:01:37,275 - #35 )
INFO  23:01:37,275 - #31 ;
INFO  23:01:37,276 - #13 while
INFO  23:01:37,276 - #34 (
INFO  23:01:37,276 - #44 i
INFO  23:01:37,276 - #24 <
INFO  23:01:37,276 - #43 5
INFO  23:01:37,276 - #35 )
INFO  23:01:37,276 - #38 {
INFO  23:01:37,276 - #10 read
INFO  23:01:37,277 - #34 (
INFO  23:01:37,277 - #44 c
INFO  23:01:37,277 - #33 .
INFO  23:01:37,277 - #44 x
INFO  23:01:37,277 - #36 [
INFO  23:01:37,277 - #44 i
INFO  23:01:37,277 - #37 ]
INFO  23:01:37,277 - #35 )
INFO  23:01:37,277 - #31 ;
INFO  23:01:37,277 - #10 read
INFO  23:01:37,278 - #34 (
INFO  23:01:37,278 - #44 c
INFO  23:01:37,278 - #33 .
INFO  23:01:37,278 - #44 theA
INFO  23:01:37,278 - #33 .
INFO  23:01:37,278 - #44 x
INFO  23:01:37,278 - #36 [
INFO  23:01:37,278 - #44 i
INFO  23:01:37,278 - #37 ]
INFO  23:01:37,279 - #35 )
INFO  23:01:37,279 - #31 ;
INFO  23:01:37,279 - #44 i
INFO  23:01:37,279 - #29 ++
INFO  23:01:37,279 - #31 ;
INFO  23:01:37,279 - #39 }
INFO  23:01:37,279 - #9 print
INFO  23:01:37,279 - #34 (
INFO  23:01:37,280 - #44 c
INFO  23:01:37,280 - #33 .
INFO  23:01:37,280 - #44 getValue
INFO  23:01:37,280 - #34 (
INFO  23:01:37,280 - #44 c
INFO  23:01:37,280 - #33 .
INFO  23:01:37,280 - #44 theA
INFO  23:01:37,280 - #33 .
INFO  23:01:37,280 - #44 x
INFO  23:01:37,281 - #36 [
INFO  23:01:37,281 - #43 0
INFO  23:01:37,281 - #37 ]
INFO  23:01:37,281 - #35 )
INFO  23:01:37,281 - #35 )
INFO  23:01:37,281 - #31 ;
INFO  23:01:37,281 - #39 }
INFO  23:01:37,281 - #39 }
INFO  23:01:37,281 - GlobalVar = 14
INFO  23:01:37,281 - GlobalConst = 2
INFO  23:01:37,281 - LocalMainVar = 4
INFO  23:01:37,282 - GlobalArray = 3
INFO  23:01:37,282 - FuncProg = 4
INFO  23:01:37,282 - Blocks = 5
INFO  23:01:37,282 - FuncCalls = 5
INFO  23:01:37,282 - FormalArg = 1
INFO  23:01:37,282 - DefClass = 3
INFO  23:01:37,282 - DefMethodClass = 1
INFO  23:03:52,584 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:03:52,594 - #2 program
INFO  23:03:52,594 - #44 Program
INFO  23:03:52,594 - #4 class
INFO  23:03:52,594 - #44 A
INFO  23:03:52,594 - #38 {
INFO  23:03:52,595 - #44 int
INFO  23:03:52,595 - #44 x
INFO  23:03:52,595 - #36 [
INFO  23:03:52,595 - #37 ]
INFO  23:03:52,595 - #32 ,
INFO  23:03:52,595 - #44 y
INFO  23:03:52,595 - #36 [
INFO  23:03:52,595 - #37 ]
INFO  23:03:52,595 - #31 ;
INFO  23:03:52,595 - #39 }
INFO  23:03:52,595 - #6 const
INFO  23:03:52,595 - #44 int
INFO  23:03:52,596 - #44 pi
INFO  23:03:52,596 - #28 =
INFO  23:03:52,596 - #43 3
INFO  23:03:52,596 - #32 ,
INFO  23:03:52,596 - #44 e
INFO  23:03:52,596 - #28 =
INFO  23:03:52,596 - #43 2
INFO  23:03:52,596 - #31 ;
INFO  23:03:52,596 - #4 class
INFO  23:03:52,596 - #44 B
INFO  23:03:52,596 - #14 extends
INFO  23:03:52,596 - #44 A
INFO  23:03:52,596 - #38 {
INFO  23:03:52,597 - #44 int
INFO  23:03:52,597 - #44 i
INFO  23:03:52,597 - #31 ;
INFO  23:03:52,597 - #44 int
INFO  23:03:52,597 - #44 x
INFO  23:03:52,597 - #36 [
INFO  23:03:52,597 - #37 ]
INFO  23:03:52,597 - #31 ;
INFO  23:03:52,597 - #38 {
INFO  23:03:52,597 - #44 int
INFO  23:03:52,597 - #44 getValue
INFO  23:03:52,597 - #34 (
INFO  23:03:52,597 - #44 int
INFO  23:03:52,597 - #44 a
INFO  23:03:52,598 - #35 )
INFO  23:03:52,598 - #44 int
INFO  23:03:52,598 - #44 b
INFO  23:03:52,598 - #31 ;
INFO  23:03:52,598 - #44 bool
INFO  23:03:52,598 - #44 c
INFO  23:03:52,598 - #31 ;
INFO  23:03:52,598 - #38 {
INFO  23:03:52,598 - #11 return
INFO  23:03:52,598 - #44 this
INFO  23:03:52,598 - #33 .
INFO  23:03:52,599 - #44 i
INFO  23:03:52,599 - #15 +
INFO  23:03:52,599 - #44 this
INFO  23:03:52,599 - #33 .
INFO  23:03:52,599 - #44 x
INFO  23:03:52,599 - #36 [
INFO  23:03:52,599 - #43 0
INFO  23:03:52,599 - #37 ]
INFO  23:03:52,599 - #15 +
INFO  23:03:52,599 - #44 a
INFO  23:03:52,599 - #31 ;
INFO  23:03:52,599 - #39 }
INFO  23:03:52,599 - #39 }
INFO  23:03:52,600 - #39 }
INFO  23:03:52,600 - #4 class
INFO  23:03:52,600 - #44 C
INFO  23:03:52,600 - #14 extends
INFO  23:03:52,600 - #44 B
INFO  23:03:52,600 - #38 {
INFO  23:03:52,600 - #44 A
INFO  23:03:52,600 - #44 theA
INFO  23:03:52,600 - #31 ;
INFO  23:03:52,601 - #44 string
INFO  23:03:52,601 - #44 a
INFO  23:03:52,601 - #31 ;
INFO  23:03:52,601 - #38 {
INFO  23:03:52,601 - #12 void
INFO  23:03:52,601 - #44 aaa
INFO  23:03:52,601 - #34 (
INFO  23:03:52,601 - #35 )
INFO  23:03:52,601 - #44 A
INFO  23:03:52,601 - #44 a
INFO  23:03:52,601 - #31 ;
INFO  23:03:52,602 - #44 C
INFO  23:03:52,602 - #44 c
INFO  23:03:52,602 - #31 ;
INFO  23:03:52,602 - #44 int
INFO  23:03:52,602 - #44 i
INFO  23:03:52,602 - #31 ;
INFO  23:03:52,602 - #44 int
INFO  23:03:52,602 - #44 x
INFO  23:03:52,602 - #36 [
INFO  23:03:52,602 - #37 ]
INFO  23:03:52,603 - #31 ;
INFO  23:03:52,603 - #38 {
INFO  23:03:52,603 - #39 }
INFO  23:03:52,603 - #12 void
INFO  23:03:52,603 - #44 bbb
INFO  23:03:52,603 - #34 (
INFO  23:03:52,603 - #35 )
INFO  23:03:52,603 - #44 A
INFO  23:03:52,603 - #44 a
INFO  23:03:52,603 - #31 ;
INFO  23:03:52,603 - #44 C
INFO  23:03:52,603 - #44 c
INFO  23:03:52,604 - #31 ;
INFO  23:03:52,604 - #44 int
INFO  23:03:52,604 - #44 i
INFO  23:03:52,604 - #31 ;
INFO  23:03:52,604 - #44 int
INFO  23:03:52,604 - #44 x
INFO  23:03:52,604 - #36 [
INFO  23:03:52,604 - #37 ]
INFO  23:03:52,604 - #31 ;
INFO  23:03:52,604 - #38 {
INFO  23:03:52,604 - #39 }
INFO  23:03:52,604 - #12 void
INFO  23:03:52,605 - #44 ccc
INFO  23:03:52,605 - #34 (
INFO  23:03:52,605 - #35 )
INFO  23:03:52,605 - #44 A
INFO  23:03:52,605 - #44 a
INFO  23:03:52,605 - #31 ;
INFO  23:03:52,605 - #44 C
INFO  23:03:52,605 - #44 c
INFO  23:03:52,605 - #31 ;
INFO  23:03:52,605 - #44 int
INFO  23:03:52,605 - #44 i
INFO  23:03:52,606 - #31 ;
INFO  23:03:52,606 - #44 int
INFO  23:03:52,606 - #44 x
INFO  23:03:52,606 - #36 [
INFO  23:03:52,606 - #37 ]
INFO  23:03:52,606 - #31 ;
INFO  23:03:52,606 - #38 {
INFO  23:03:52,606 - #39 }
INFO  23:03:52,606 - #39 }
INFO  23:03:52,606 - #39 }
INFO  23:03:52,606 - #38 {
INFO  23:03:52,607 - #12 void
INFO  23:03:52,607 - #44 main
INFO  23:03:52,607 - #34 (
INFO  23:03:52,607 - #35 )
INFO  23:03:52,607 - #44 A
INFO  23:03:52,607 - #44 a
INFO  23:03:52,607 - #31 ;
INFO  23:03:52,607 - #44 C
INFO  23:03:52,607 - #44 c
INFO  23:03:52,607 - #31 ;
INFO  23:03:52,607 - #44 int
INFO  23:03:52,607 - #44 i
INFO  23:03:52,608 - #31 ;
INFO  23:03:52,608 - #44 int
INFO  23:03:52,608 - #44 x
INFO  23:03:52,608 - #36 [
INFO  23:03:52,608 - #37 ]
INFO  23:03:52,608 - #31 ;
INFO  23:03:52,608 - #38 {
INFO  23:03:52,608 - #44 a
INFO  23:03:52,608 - #28 =
INFO  23:03:52,608 - #8 new
INFO  23:03:52,608 - #44 A
INFO  23:03:52,608 - #31 ;
INFO  23:03:52,609 - #44 a
INFO  23:03:52,609 - #33 .
INFO  23:03:52,609 - #44 x
INFO  23:03:52,609 - #28 =
INFO  23:03:52,609 - #8 new
INFO  23:03:52,609 - #44 int
INFO  23:03:52,609 - #36 [
INFO  23:03:52,609 - #43 5
INFO  23:03:52,610 - #37 ]
INFO  23:03:52,610 - #31 ;
INFO  23:03:52,610 - #44 a
INFO  23:03:52,610 - #33 .
INFO  23:03:52,610 - #44 y
INFO  23:03:52,610 - #28 =
INFO  23:03:52,610 - #8 new
INFO  23:03:52,610 - #44 int
INFO  23:03:52,610 - #36 [
INFO  23:03:52,611 - #43 5
INFO  23:03:52,611 - #37 ]
INFO  23:03:52,611 - #31 ;
INFO  23:03:52,611 - #44 c
INFO  23:03:52,611 - #28 =
INFO  23:03:52,611 - #8 new
INFO  23:03:52,611 - #44 C
INFO  23:03:52,611 - #31 ;
INFO  23:03:52,612 - #44 c
INFO  23:03:52,612 - #33 .
INFO  23:03:52,612 - #44 theA
INFO  23:03:52,612 - #28 =
INFO  23:03:52,612 - #44 a
INFO  23:03:52,612 - #31 ;
INFO  23:03:52,612 - #44 c
INFO  23:03:52,612 - #33 .
INFO  23:03:52,612 - #44 x
INFO  23:03:52,613 - #28 =
INFO  23:03:52,613 - #8 new
INFO  23:03:52,613 - #44 int
INFO  23:03:52,613 - #36 [
INFO  23:03:52,613 - #43 5
INFO  23:03:52,613 - #37 ]
INFO  23:03:52,613 - #31 ;
INFO  23:03:52,613 - #44 x
INFO  23:03:52,613 - #28 =
INFO  23:03:52,614 - #8 new
INFO  23:03:52,614 - #44 int
INFO  23:03:52,614 - #36 [
INFO  23:03:52,614 - #43 3
INFO  23:03:52,614 - #37 ]
INFO  23:03:52,614 - #31 ;
INFO  23:03:52,614 - #44 i
INFO  23:03:52,614 - #28 =
INFO  23:03:52,614 - #43 0
INFO  23:03:52,615 - #31 ;
INFO  23:03:52,615 - #10 read
INFO  23:03:52,615 - #34 (
INFO  23:03:52,615 - #44 c
INFO  23:03:52,615 - #33 .
INFO  23:03:52,615 - #44 i
INFO  23:03:52,615 - #35 )
INFO  23:03:52,615 - #31 ;
INFO  23:03:52,615 - #13 while
INFO  23:03:52,616 - #34 (
INFO  23:03:52,616 - #44 i
INFO  23:03:52,616 - #24 <
INFO  23:03:52,616 - #43 5
INFO  23:03:52,616 - #35 )
INFO  23:03:52,616 - #38 {
INFO  23:03:52,616 - #10 read
INFO  23:03:52,616 - #34 (
INFO  23:03:52,616 - #44 c
INFO  23:03:52,616 - #33 .
INFO  23:03:52,617 - #44 x
INFO  23:03:52,617 - #36 [
INFO  23:03:52,617 - #44 i
INFO  23:03:52,617 - #37 ]
INFO  23:03:52,617 - #35 )
INFO  23:03:52,617 - #31 ;
INFO  23:03:52,617 - #10 read
INFO  23:03:52,617 - #34 (
INFO  23:03:52,617 - #44 c
INFO  23:03:52,617 - #33 .
INFO  23:03:52,617 - #44 theA
INFO  23:03:52,618 - #33 .
INFO  23:03:52,618 - #44 x
INFO  23:03:52,618 - #36 [
INFO  23:03:52,618 - #44 i
INFO  23:03:52,618 - #37 ]
INFO  23:03:52,618 - #35 )
INFO  23:03:52,618 - #31 ;
INFO  23:03:52,618 - #44 i
INFO  23:03:52,618 - #29 ++
INFO  23:03:52,619 - #31 ;
INFO  23:03:52,619 - #39 }
INFO  23:03:52,619 - #9 print
INFO  23:03:52,619 - #34 (
INFO  23:03:52,619 - #44 c
INFO  23:03:52,619 - #33 .
INFO  23:03:52,619 - #44 getValue
INFO  23:03:52,619 - #34 (
INFO  23:03:52,620 - #44 c
INFO  23:03:52,620 - #33 .
INFO  23:03:52,620 - #44 theA
INFO  23:03:52,620 - #33 .
INFO  23:03:52,620 - #44 x
INFO  23:03:52,620 - #36 [
INFO  23:03:52,620 - #43 0
INFO  23:03:52,620 - #37 ]
INFO  23:03:52,620 - #35 )
INFO  23:03:52,620 - #35 )
INFO  23:03:52,620 - #31 ;
INFO  23:03:52,620 - #39 }
INFO  23:03:52,621 - #39 }
INFO  23:03:52,621 - GlobalVar = 14
INFO  23:03:52,621 - GlobalConst = 2
INFO  23:03:52,621 - LocalMainVar = 4
INFO  23:03:52,621 - GlobalArray = 3
INFO  23:03:52,621 - FuncProg = 4
INFO  23:03:52,621 - Blocks = 5
INFO  23:03:52,621 - FuncCalls = 5
INFO  23:03:52,621 - FormalArg = 1
INFO  23:03:52,621 - DefClass = 3
INFO  23:03:52,621 - DefMethodClass = 1
INFO  23:04:00,689 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:04:00,699 - #2 program
INFO  23:04:00,699 - #44 Program
INFO  23:04:00,699 - #4 class
INFO  23:04:00,699 - #44 A
INFO  23:04:00,699 - #38 {
INFO  23:04:00,700 - #44 int
INFO  23:04:00,700 - #44 x
INFO  23:04:00,700 - #36 [
INFO  23:04:00,700 - #37 ]
INFO  23:04:00,700 - #32 ,
INFO  23:04:00,700 - #44 y
INFO  23:04:00,700 - #36 [
INFO  23:04:00,700 - #37 ]
INFO  23:04:00,700 - #31 ;
INFO  23:04:00,700 - #39 }
INFO  23:04:00,700 - #6 const
INFO  23:04:00,701 - #44 int
INFO  23:04:00,701 - #44 pi
INFO  23:04:00,701 - #28 =
INFO  23:04:00,701 - #43 3
INFO  23:04:00,701 - #32 ,
INFO  23:04:00,701 - #44 e
INFO  23:04:00,701 - #28 =
INFO  23:04:00,701 - #43 2
INFO  23:04:00,701 - #31 ;
INFO  23:04:00,701 - #4 class
INFO  23:04:00,702 - #44 B
INFO  23:04:00,702 - #14 extends
INFO  23:04:00,702 - #44 A
INFO  23:04:00,702 - #38 {
INFO  23:04:00,702 - #44 int
INFO  23:04:00,702 - #44 i
INFO  23:04:00,702 - #31 ;
INFO  23:04:00,702 - #44 int
INFO  23:04:00,702 - #44 x
INFO  23:04:00,702 - #36 [
INFO  23:04:00,703 - #37 ]
INFO  23:04:00,703 - #31 ;
INFO  23:04:00,703 - #38 {
INFO  23:04:00,703 - #44 int
INFO  23:04:00,703 - #44 getValue
INFO  23:04:00,703 - #34 (
INFO  23:04:00,703 - #44 int
INFO  23:04:00,703 - #44 a
INFO  23:04:00,703 - #35 )
INFO  23:04:00,703 - #44 int
INFO  23:04:00,704 - #44 b
INFO  23:04:00,704 - #31 ;
INFO  23:04:00,704 - #44 bool
INFO  23:04:00,704 - #44 c
INFO  23:04:00,704 - #31 ;
INFO  23:04:00,704 - #38 {
INFO  23:04:00,704 - #11 return
INFO  23:04:00,704 - #44 this
INFO  23:04:00,704 - #33 .
INFO  23:04:00,705 - #44 i
INFO  23:04:00,705 - #15 +
INFO  23:04:00,705 - #44 this
INFO  23:04:00,705 - #33 .
INFO  23:04:00,705 - #44 x
INFO  23:04:00,705 - #36 [
INFO  23:04:00,705 - #43 0
INFO  23:04:00,705 - #37 ]
INFO  23:04:00,705 - #15 +
INFO  23:04:00,705 - #44 a
INFO  23:04:00,706 - #31 ;
INFO  23:04:00,706 - #39 }
INFO  23:04:00,706 - #39 }
INFO  23:04:00,706 - #39 }
INFO  23:04:00,706 - #4 class
INFO  23:04:00,706 - #44 C
INFO  23:04:00,706 - #14 extends
INFO  23:04:00,706 - #44 B
INFO  23:04:00,706 - #38 {
INFO  23:04:00,706 - #44 A
INFO  23:04:00,707 - #44 theA
INFO  23:04:00,707 - #31 ;
INFO  23:04:00,707 - #44 string
INFO  23:04:00,707 - #44 a
INFO  23:04:00,707 - #31 ;
INFO  23:04:00,707 - #38 {
INFO  23:04:00,707 - #12 void
INFO  23:04:00,707 - #44 aaa
INFO  23:04:00,707 - #34 (
INFO  23:04:00,707 - #35 )
INFO  23:04:00,707 - #44 A
INFO  23:04:00,708 - #44 a
INFO  23:04:00,708 - #31 ;
INFO  23:04:00,708 - #44 C
INFO  23:04:00,708 - #44 c
INFO  23:04:00,708 - #31 ;
INFO  23:04:00,708 - #44 int
INFO  23:04:00,708 - #44 i
INFO  23:04:00,708 - #31 ;
INFO  23:04:00,708 - #44 int
INFO  23:04:00,709 - #44 x
INFO  23:04:00,709 - #36 [
INFO  23:04:00,709 - #37 ]
INFO  23:04:00,709 - #31 ;
INFO  23:04:00,709 - #38 {
INFO  23:04:00,709 - #39 }
INFO  23:04:00,709 - #12 void
INFO  23:04:00,709 - #44 bbb
INFO  23:04:00,709 - #34 (
INFO  23:04:00,710 - #35 )
INFO  23:04:00,710 - #44 A
INFO  23:04:00,710 - #44 a
INFO  23:04:00,710 - #31 ;
INFO  23:04:00,710 - #44 C
INFO  23:04:00,710 - #44 c
INFO  23:04:00,710 - #31 ;
INFO  23:04:00,710 - #44 int
INFO  23:04:00,710 - #44 i
INFO  23:04:00,710 - #31 ;
INFO  23:04:00,710 - #44 int
INFO  23:04:00,710 - #44 x
INFO  23:04:00,710 - #36 [
INFO  23:04:00,710 - #37 ]
INFO  23:04:00,711 - #31 ;
INFO  23:04:00,711 - #38 {
INFO  23:04:00,711 - #39 }
INFO  23:04:00,711 - #12 void
INFO  23:04:00,711 - #44 ccc
INFO  23:04:00,711 - #34 (
INFO  23:04:00,711 - #35 )
INFO  23:04:00,711 - #44 A
INFO  23:04:00,711 - #44 a
INFO  23:04:00,711 - #31 ;
INFO  23:04:00,711 - #44 C
INFO  23:04:00,712 - #44 c
INFO  23:04:00,712 - #31 ;
INFO  23:04:00,712 - #44 int
INFO  23:04:00,712 - #44 i
INFO  23:04:00,712 - #31 ;
INFO  23:04:00,712 - #44 int
INFO  23:04:00,712 - #44 x
INFO  23:04:00,712 - #36 [
INFO  23:04:00,712 - #37 ]
INFO  23:04:00,712 - #31 ;
INFO  23:04:00,713 - #38 {
INFO  23:04:00,713 - #39 }
INFO  23:04:00,713 - #39 }
INFO  23:04:00,713 - #39 }
INFO  23:04:00,713 - #38 {
INFO  23:04:00,713 - #12 void
INFO  23:04:00,713 - #44 main
INFO  23:04:00,713 - #34 (
INFO  23:04:00,713 - #35 )
INFO  23:04:00,713 - #44 A
INFO  23:04:00,713 - #44 a
INFO  23:04:00,714 - #31 ;
INFO  23:04:00,714 - #44 C
INFO  23:04:00,714 - #44 c
INFO  23:04:00,714 - #31 ;
INFO  23:04:00,714 - #44 int
INFO  23:04:00,714 - #44 i
INFO  23:04:00,714 - #31 ;
INFO  23:04:00,714 - #44 int
INFO  23:04:00,714 - #44 x
INFO  23:04:00,714 - #36 [
INFO  23:04:00,714 - #37 ]
INFO  23:04:00,714 - #31 ;
INFO  23:04:00,714 - #38 {
INFO  23:04:00,714 - #44 a
INFO  23:04:00,715 - #28 =
INFO  23:04:00,715 - #8 new
INFO  23:04:00,715 - #44 A
INFO  23:04:00,715 - #31 ;
INFO  23:04:00,715 - #44 a
INFO  23:04:00,715 - #33 .
INFO  23:04:00,715 - #44 x
INFO  23:04:00,715 - #28 =
INFO  23:04:00,715 - #8 new
INFO  23:04:00,715 - #44 int
INFO  23:04:00,716 - #36 [
INFO  23:04:00,716 - #43 5
INFO  23:04:00,716 - #37 ]
INFO  23:04:00,716 - #31 ;
INFO  23:04:00,716 - #44 a
INFO  23:04:00,716 - #33 .
INFO  23:04:00,716 - #44 y
INFO  23:04:00,717 - #28 =
INFO  23:04:00,717 - #8 new
INFO  23:04:00,717 - #44 int
INFO  23:04:00,717 - #36 [
INFO  23:04:00,717 - #43 5
INFO  23:04:00,717 - #37 ]
INFO  23:04:00,717 - #31 ;
INFO  23:04:00,717 - #44 c
INFO  23:04:00,718 - #28 =
INFO  23:04:00,718 - #8 new
INFO  23:04:00,718 - #44 C
INFO  23:04:00,718 - #31 ;
INFO  23:04:00,718 - #44 c
INFO  23:04:00,718 - #33 .
INFO  23:04:00,718 - #44 theA
INFO  23:04:00,718 - #28 =
INFO  23:04:00,719 - #44 a
INFO  23:04:00,719 - #31 ;
INFO  23:04:00,719 - #44 c
INFO  23:04:00,719 - #33 .
INFO  23:04:00,719 - #44 x
INFO  23:04:00,719 - #28 =
INFO  23:04:00,719 - #8 new
INFO  23:04:00,719 - #44 int
INFO  23:04:00,719 - #36 [
INFO  23:04:00,720 - #43 5
INFO  23:04:00,720 - #37 ]
INFO  23:04:00,720 - #31 ;
INFO  23:04:00,720 - #44 x
INFO  23:04:00,720 - #28 =
INFO  23:04:00,720 - #8 new
INFO  23:04:00,720 - #44 int
INFO  23:04:00,720 - #36 [
INFO  23:04:00,720 - #43 3
INFO  23:04:00,721 - #37 ]
INFO  23:04:00,721 - #31 ;
INFO  23:04:00,721 - #44 i
INFO  23:04:00,721 - #28 =
INFO  23:04:00,721 - #43 0
INFO  23:04:00,721 - #31 ;
INFO  23:04:00,721 - #10 read
INFO  23:04:00,721 - #34 (
INFO  23:04:00,722 - #44 c
INFO  23:04:00,722 - #33 .
INFO  23:04:00,722 - #44 i
INFO  23:04:00,722 - #35 )
INFO  23:04:00,722 - #31 ;
INFO  23:04:00,722 - #13 while
INFO  23:04:00,722 - #34 (
INFO  23:04:00,722 - #44 i
INFO  23:04:00,722 - #24 <
INFO  23:04:00,722 - #43 5
INFO  23:04:00,723 - #35 )
INFO  23:04:00,723 - #38 {
INFO  23:04:00,723 - #10 read
INFO  23:04:00,723 - #34 (
INFO  23:04:00,723 - #44 c
INFO  23:04:00,723 - #33 .
INFO  23:04:00,723 - #44 x
INFO  23:04:00,723 - #36 [
INFO  23:04:00,723 - #44 i
INFO  23:04:00,724 - #37 ]
INFO  23:04:00,724 - #35 )
INFO  23:04:00,724 - #31 ;
INFO  23:04:00,724 - #10 read
INFO  23:04:00,724 - #34 (
INFO  23:04:00,724 - #44 c
INFO  23:04:00,724 - #33 .
INFO  23:04:00,724 - #44 theA
INFO  23:04:00,724 - #33 .
INFO  23:04:00,725 - #44 x
INFO  23:04:00,725 - #36 [
INFO  23:04:00,725 - #44 i
INFO  23:04:00,725 - #37 ]
INFO  23:04:00,725 - #35 )
INFO  23:04:00,725 - #31 ;
INFO  23:04:00,725 - #44 i
INFO  23:04:00,725 - #29 ++
INFO  23:04:00,725 - #31 ;
INFO  23:04:00,726 - #39 }
INFO  23:04:00,726 - #9 print
INFO  23:04:00,726 - #34 (
INFO  23:04:00,726 - #44 c
INFO  23:04:00,726 - #33 .
INFO  23:04:00,726 - #44 getValue
INFO  23:04:00,726 - #34 (
INFO  23:04:00,726 - #44 c
INFO  23:04:00,726 - #33 .
INFO  23:04:00,726 - #44 theA
INFO  23:04:00,726 - #33 .
INFO  23:04:00,726 - #44 x
INFO  23:04:00,727 - #36 [
INFO  23:04:00,727 - #43 0
INFO  23:04:00,727 - #37 ]
INFO  23:04:00,727 - #35 )
INFO  23:04:00,727 - #35 )
INFO  23:04:00,727 - #31 ;
INFO  23:04:00,727 - #39 }
INFO  23:04:00,727 - #39 }
INFO  23:04:00,727 - GlobalVar = 14
INFO  23:04:00,727 - GlobalConst = 2
INFO  23:04:00,727 - LocalMainVar = 4
INFO  23:04:00,728 - GlobalArray = 3
INFO  23:04:00,728 - FuncProg = 4
INFO  23:04:00,728 - Blocks = 5
INFO  23:04:00,728 - FuncCalls = 5
INFO  23:04:00,728 - FormalArg = 1
INFO  23:04:00,728 - DefClass = 3
INFO  23:04:00,728 - DefMethodClass = 1
INFO  23:04:05,833 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:04:05,842 - #2 program
INFO  23:04:05,842 - #44 Program
INFO  23:04:05,842 - #4 class
INFO  23:04:05,842 - #44 A
INFO  23:04:05,842 - #38 {
INFO  23:04:05,842 - #44 int
INFO  23:04:05,842 - #44 x
INFO  23:04:05,842 - #36 [
INFO  23:04:05,843 - #37 ]
INFO  23:04:05,843 - #32 ,
INFO  23:04:05,843 - #44 y
INFO  23:04:05,843 - #36 [
INFO  23:04:05,843 - #37 ]
INFO  23:04:05,843 - #31 ;
INFO  23:04:05,843 - #39 }
INFO  23:04:05,843 - #6 const
INFO  23:04:05,843 - #44 int
INFO  23:04:05,843 - #44 pi
INFO  23:04:05,843 - #28 =
INFO  23:04:05,843 - #43 3
INFO  23:04:05,843 - #32 ,
INFO  23:04:05,844 - #44 e
INFO  23:04:05,844 - #28 =
INFO  23:04:05,844 - #43 2
INFO  23:04:05,844 - #31 ;
INFO  23:04:05,844 - #4 class
INFO  23:04:05,844 - #44 B
INFO  23:04:05,844 - #14 extends
INFO  23:04:05,844 - #44 A
INFO  23:04:05,844 - #38 {
INFO  23:04:05,844 - #44 int
INFO  23:04:05,844 - #44 i
INFO  23:04:05,844 - #31 ;
INFO  23:04:05,844 - #44 int
INFO  23:04:05,844 - #44 x
INFO  23:04:05,845 - #36 [
INFO  23:04:05,845 - #37 ]
INFO  23:04:05,845 - #31 ;
INFO  23:04:05,845 - #38 {
INFO  23:04:05,845 - #44 int
INFO  23:04:05,845 - #44 getValue
INFO  23:04:05,845 - #34 (
INFO  23:04:05,845 - #44 int
INFO  23:04:05,845 - #44 a
INFO  23:04:05,845 - #35 )
INFO  23:04:05,845 - #44 int
INFO  23:04:05,845 - #44 b
INFO  23:04:05,845 - #31 ;
INFO  23:04:05,845 - #44 bool
INFO  23:04:05,846 - #44 c
INFO  23:04:05,846 - #31 ;
INFO  23:04:05,846 - #38 {
INFO  23:04:05,846 - #11 return
INFO  23:04:05,846 - #44 this
INFO  23:04:05,846 - #33 .
INFO  23:04:05,846 - #44 i
INFO  23:04:05,846 - #15 +
INFO  23:04:05,847 - #44 this
INFO  23:04:05,847 - #33 .
INFO  23:04:05,847 - #44 x
INFO  23:04:05,847 - #36 [
INFO  23:04:05,847 - #43 0
INFO  23:04:05,847 - #37 ]
INFO  23:04:05,847 - #15 +
INFO  23:04:05,847 - #44 a
INFO  23:04:05,847 - #31 ;
INFO  23:04:05,847 - #39 }
INFO  23:04:05,847 - #39 }
INFO  23:04:05,848 - #39 }
INFO  23:04:05,848 - #4 class
INFO  23:04:05,848 - #44 C
INFO  23:04:05,848 - #14 extends
INFO  23:04:05,848 - #44 B
INFO  23:04:05,848 - #38 {
INFO  23:04:05,848 - #44 A
INFO  23:04:05,848 - #44 theA
INFO  23:04:05,848 - #31 ;
INFO  23:04:05,848 - #44 string
INFO  23:04:05,849 - #44 a
INFO  23:04:05,849 - #31 ;
INFO  23:04:05,849 - #38 {
INFO  23:04:05,849 - #12 void
INFO  23:04:05,849 - #44 aaa
INFO  23:04:05,849 - #34 (
INFO  23:04:05,849 - #35 )
INFO  23:04:05,849 - #44 A
INFO  23:04:05,849 - #44 a
INFO  23:04:05,849 - #31 ;
INFO  23:04:05,849 - #44 C
INFO  23:04:05,850 - #44 c
INFO  23:04:05,850 - #31 ;
INFO  23:04:05,850 - #44 int
INFO  23:04:05,850 - #44 i
INFO  23:04:05,850 - #31 ;
INFO  23:04:05,850 - #44 int
INFO  23:04:05,850 - #44 x
INFO  23:04:05,850 - #36 [
INFO  23:04:05,850 - #37 ]
INFO  23:04:05,850 - #31 ;
INFO  23:04:05,851 - #38 {
INFO  23:04:05,851 - #39 }
INFO  23:04:05,851 - #12 void
INFO  23:04:05,851 - #44 bbb
INFO  23:04:05,851 - #34 (
INFO  23:04:05,851 - #35 )
INFO  23:04:05,851 - #44 A
INFO  23:04:05,851 - #44 a
INFO  23:04:05,851 - #31 ;
INFO  23:04:05,851 - #44 C
INFO  23:04:05,851 - #44 c
INFO  23:04:05,851 - #31 ;
INFO  23:04:05,851 - #44 int
INFO  23:04:05,851 - #44 i
INFO  23:04:05,852 - #31 ;
INFO  23:04:05,852 - #44 int
INFO  23:04:05,852 - #44 x
INFO  23:04:05,852 - #36 [
INFO  23:04:05,852 - #37 ]
INFO  23:04:05,852 - #31 ;
INFO  23:04:05,852 - #38 {
INFO  23:04:05,852 - #39 }
INFO  23:04:05,852 - #12 void
INFO  23:04:05,852 - #44 ccc
INFO  23:04:05,852 - #34 (
INFO  23:04:05,852 - #35 )
INFO  23:04:05,853 - #44 A
INFO  23:04:05,853 - #44 a
INFO  23:04:05,853 - #31 ;
INFO  23:04:05,853 - #44 C
INFO  23:04:05,853 - #44 c
INFO  23:04:05,853 - #31 ;
INFO  23:04:05,853 - #44 int
INFO  23:04:05,853 - #44 i
INFO  23:04:05,853 - #31 ;
INFO  23:04:05,853 - #44 int
INFO  23:04:05,854 - #44 x
INFO  23:04:05,854 - #36 [
INFO  23:04:05,854 - #37 ]
INFO  23:04:05,854 - #31 ;
INFO  23:04:05,854 - #38 {
INFO  23:04:05,854 - #39 }
INFO  23:04:05,854 - #39 }
INFO  23:04:05,854 - #39 }
INFO  23:04:05,854 - #38 {
INFO  23:04:05,854 - #12 void
INFO  23:04:05,855 - #44 main
INFO  23:04:05,855 - #34 (
INFO  23:04:05,855 - #35 )
INFO  23:04:05,855 - #44 A
INFO  23:04:05,855 - #44 a
INFO  23:04:05,855 - #31 ;
INFO  23:04:05,855 - #44 C
INFO  23:04:05,855 - #44 c
INFO  23:04:05,855 - #31 ;
INFO  23:04:05,855 - #44 int
INFO  23:04:05,855 - #44 i
INFO  23:04:05,855 - #31 ;
INFO  23:04:05,855 - #44 int
INFO  23:04:05,855 - #44 x
INFO  23:04:05,856 - #36 [
INFO  23:04:05,856 - #37 ]
INFO  23:04:05,856 - #31 ;
INFO  23:04:05,856 - #38 {
INFO  23:04:05,856 - #44 a
INFO  23:04:05,856 - #28 =
INFO  23:04:05,856 - #8 new
INFO  23:04:05,856 - #44 A
INFO  23:04:05,856 - #31 ;
INFO  23:04:05,856 - #44 a
INFO  23:04:05,856 - #33 .
INFO  23:04:05,856 - #44 x
INFO  23:04:05,857 - #28 =
INFO  23:04:05,857 - #8 new
INFO  23:04:05,857 - #44 int
INFO  23:04:05,857 - #36 [
INFO  23:04:05,857 - #43 5
INFO  23:04:05,857 - #37 ]
INFO  23:04:05,857 - #31 ;
INFO  23:04:05,857 - #44 a
INFO  23:04:05,858 - #33 .
INFO  23:04:05,858 - #44 y
INFO  23:04:05,858 - #28 =
INFO  23:04:05,858 - #8 new
INFO  23:04:05,858 - #44 int
INFO  23:04:05,858 - #36 [
INFO  23:04:05,858 - #43 5
INFO  23:04:05,858 - #37 ]
INFO  23:04:05,858 - #31 ;
INFO  23:04:05,859 - #44 c
INFO  23:04:05,859 - #28 =
INFO  23:04:05,859 - #8 new
INFO  23:04:05,859 - #44 C
INFO  23:04:05,859 - #31 ;
INFO  23:04:05,859 - #44 c
INFO  23:04:05,859 - #33 .
INFO  23:04:05,859 - #44 theA
INFO  23:04:05,859 - #28 =
INFO  23:04:05,860 - #44 a
INFO  23:04:05,860 - #31 ;
INFO  23:04:05,860 - #44 c
INFO  23:04:05,860 - #33 .
INFO  23:04:05,860 - #44 x
INFO  23:04:05,860 - #28 =
INFO  23:04:05,860 - #8 new
INFO  23:04:05,860 - #44 int
INFO  23:04:05,860 - #36 [
INFO  23:04:05,860 - #43 5
INFO  23:04:05,860 - #37 ]
INFO  23:04:05,861 - #31 ;
INFO  23:04:05,861 - #44 x
INFO  23:04:05,861 - #28 =
INFO  23:04:05,861 - #8 new
INFO  23:04:05,861 - #44 int
INFO  23:04:05,861 - #36 [
INFO  23:04:05,861 - #43 3
INFO  23:04:05,861 - #37 ]
INFO  23:04:05,861 - #31 ;
INFO  23:04:05,861 - #44 i
INFO  23:04:05,862 - #28 =
INFO  23:04:05,862 - #43 0
INFO  23:04:05,862 - #31 ;
INFO  23:04:05,862 - #10 read
INFO  23:04:05,862 - #34 (
INFO  23:04:05,862 - #44 c
INFO  23:04:05,862 - #33 .
INFO  23:04:05,862 - #44 i
INFO  23:04:05,862 - #35 )
INFO  23:04:05,862 - #31 ;
INFO  23:04:05,863 - #13 while
INFO  23:04:05,863 - #34 (
INFO  23:04:05,863 - #44 i
INFO  23:04:05,863 - #24 <
INFO  23:04:05,863 - #43 5
INFO  23:04:05,863 - #35 )
INFO  23:04:05,863 - #38 {
INFO  23:04:05,863 - #10 read
INFO  23:04:05,863 - #34 (
INFO  23:04:05,863 - #44 c
INFO  23:04:05,863 - #33 .
INFO  23:04:05,864 - #44 x
INFO  23:04:05,864 - #36 [
INFO  23:04:05,864 - #44 i
INFO  23:04:05,864 - #37 ]
INFO  23:04:05,864 - #35 )
INFO  23:04:05,864 - #31 ;
INFO  23:04:05,864 - #10 read
INFO  23:04:05,864 - #34 (
INFO  23:04:05,864 - #44 c
INFO  23:04:05,864 - #33 .
INFO  23:04:05,864 - #44 theA
INFO  23:04:05,865 - #33 .
INFO  23:04:05,865 - #44 x
INFO  23:04:05,865 - #36 [
INFO  23:04:05,865 - #44 i
INFO  23:04:05,865 - #37 ]
INFO  23:04:05,865 - #35 )
INFO  23:04:05,865 - #31 ;
INFO  23:04:05,865 - #44 i
INFO  23:04:05,865 - #29 ++
INFO  23:04:05,865 - #31 ;
INFO  23:04:05,865 - #39 }
INFO  23:04:05,865 - #9 print
INFO  23:04:05,865 - #34 (
INFO  23:04:05,865 - #44 c
INFO  23:04:05,866 - #33 .
INFO  23:04:05,866 - #44 getValue
INFO  23:04:05,866 - #34 (
INFO  23:04:05,866 - #44 c
INFO  23:04:05,866 - #33 .
INFO  23:04:05,866 - #44 theA
INFO  23:04:05,866 - #33 .
INFO  23:04:05,866 - #44 x
INFO  23:04:05,866 - #36 [
INFO  23:04:05,866 - #43 0
INFO  23:04:05,866 - #37 ]
INFO  23:04:05,866 - #35 )
INFO  23:04:05,867 - #35 )
INFO  23:04:05,867 - #31 ;
INFO  23:04:05,867 - #39 }
INFO  23:04:05,867 - #39 }
INFO  23:04:05,867 - GlobalVar = 14
INFO  23:04:05,867 - GlobalConst = 2
INFO  23:04:05,867 - LocalMainVar = 4
INFO  23:04:05,867 - GlobalArray = 3
INFO  23:04:05,867 - FuncProg = 4
INFO  23:04:05,867 - Blocks = 5
INFO  23:04:05,867 - FuncCalls = 5
INFO  23:04:05,867 - FormalArg = 1
INFO  23:04:05,867 - DefClass = 3
INFO  23:04:05,868 - DefMethodClass = 1
INFO  23:04:14,854 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:04:14,863 - #2 program
INFO  23:04:14,863 - #44 Program
INFO  23:04:14,863 - #4 class
INFO  23:04:14,863 - #44 A
INFO  23:04:14,863 - #38 {
INFO  23:04:14,863 - #44 int
INFO  23:04:14,863 - #44 x
INFO  23:04:14,863 - #36 [
INFO  23:04:14,863 - #37 ]
INFO  23:04:14,863 - #32 ,
INFO  23:04:14,864 - #44 y
INFO  23:04:14,864 - #36 [
INFO  23:04:14,864 - #37 ]
INFO  23:04:14,864 - #31 ;
INFO  23:04:14,864 - #39 }
INFO  23:04:14,864 - #6 const
INFO  23:04:14,864 - #44 int
INFO  23:04:14,864 - #44 pi
INFO  23:04:14,864 - #28 =
INFO  23:04:14,864 - #43 3
INFO  23:04:14,864 - #32 ,
INFO  23:04:14,865 - #44 e
INFO  23:04:14,865 - #28 =
INFO  23:04:14,865 - #43 2
INFO  23:04:14,865 - #31 ;
INFO  23:04:14,865 - #4 class
INFO  23:04:14,865 - #44 B
INFO  23:04:14,865 - #14 extends
INFO  23:04:14,865 - #44 A
INFO  23:04:14,865 - #38 {
INFO  23:04:14,865 - #44 int
INFO  23:04:14,865 - #44 i
INFO  23:04:14,865 - #31 ;
INFO  23:04:14,866 - #44 int
INFO  23:04:14,866 - #44 x
INFO  23:04:14,866 - #36 [
INFO  23:04:14,866 - #37 ]
INFO  23:04:14,866 - #31 ;
INFO  23:04:14,866 - #38 {
INFO  23:04:14,866 - #44 int
INFO  23:04:14,866 - #44 getValue
INFO  23:04:14,866 - #34 (
INFO  23:04:14,866 - #44 int
INFO  23:04:14,866 - #44 a
INFO  23:04:14,867 - #35 )
INFO  23:04:14,867 - #44 int
INFO  23:04:14,867 - #44 b
INFO  23:04:14,867 - #31 ;
INFO  23:04:14,867 - #44 bool
INFO  23:04:14,867 - #44 c
INFO  23:04:14,867 - #31 ;
INFO  23:04:14,867 - #38 {
INFO  23:04:14,867 - #11 return
INFO  23:04:14,867 - #44 this
INFO  23:04:14,867 - #33 .
INFO  23:04:14,867 - #44 i
INFO  23:04:14,868 - #15 +
INFO  23:04:14,868 - #44 this
INFO  23:04:14,868 - #33 .
INFO  23:04:14,868 - #44 x
INFO  23:04:14,868 - #36 [
INFO  23:04:14,868 - #43 0
INFO  23:04:14,868 - #37 ]
INFO  23:04:14,868 - #15 +
INFO  23:04:14,868 - #44 a
INFO  23:04:14,868 - #31 ;
INFO  23:04:14,868 - #39 }
INFO  23:04:14,868 - #39 }
INFO  23:04:14,869 - #39 }
INFO  23:04:14,869 - #4 class
INFO  23:04:14,869 - #44 C
INFO  23:04:14,869 - #14 extends
INFO  23:04:14,869 - #44 B
INFO  23:04:14,869 - #38 {
INFO  23:04:14,869 - #44 A
INFO  23:04:14,869 - #44 theA
INFO  23:04:14,869 - #31 ;
INFO  23:04:14,869 - #44 string
INFO  23:04:14,870 - #44 a
INFO  23:04:14,870 - #31 ;
INFO  23:04:14,870 - #38 {
INFO  23:04:14,870 - #12 void
INFO  23:04:14,870 - #44 aaa
INFO  23:04:14,870 - #34 (
INFO  23:04:14,870 - #35 )
INFO  23:04:14,870 - #44 A
INFO  23:04:14,870 - #44 a
INFO  23:04:14,870 - #31 ;
INFO  23:04:14,870 - #44 C
INFO  23:04:14,871 - #44 c
INFO  23:04:14,871 - #31 ;
INFO  23:04:14,871 - #44 int
INFO  23:04:14,871 - #44 i
INFO  23:04:14,871 - #31 ;
INFO  23:04:14,871 - #44 int
INFO  23:04:14,871 - #44 x
INFO  23:04:14,871 - #36 [
INFO  23:04:14,871 - #37 ]
INFO  23:04:14,871 - #31 ;
INFO  23:04:14,871 - #38 {
INFO  23:04:14,872 - #39 }
INFO  23:04:14,872 - #12 void
INFO  23:04:14,872 - #44 bbb
INFO  23:04:14,872 - #34 (
INFO  23:04:14,872 - #35 )
INFO  23:04:14,872 - #44 A
INFO  23:04:14,872 - #44 a
INFO  23:04:14,872 - #31 ;
INFO  23:04:14,872 - #44 C
INFO  23:04:14,872 - #44 c
INFO  23:04:14,872 - #31 ;
INFO  23:04:14,872 - #44 int
INFO  23:04:14,872 - #44 i
INFO  23:04:14,872 - #31 ;
INFO  23:04:14,873 - #44 int
INFO  23:04:14,873 - #44 x
INFO  23:04:14,873 - #36 [
INFO  23:04:14,873 - #37 ]
INFO  23:04:14,873 - #31 ;
INFO  23:04:14,873 - #38 {
INFO  23:04:14,873 - #39 }
INFO  23:04:14,873 - #12 void
INFO  23:04:14,873 - #44 ccc
INFO  23:04:14,873 - #34 (
INFO  23:04:14,873 - #35 )
INFO  23:04:14,874 - #44 A
INFO  23:04:14,874 - #44 a
INFO  23:04:14,874 - #31 ;
INFO  23:04:14,874 - #44 C
INFO  23:04:14,874 - #44 c
INFO  23:04:14,874 - #31 ;
INFO  23:04:14,874 - #44 int
INFO  23:04:14,874 - #44 i
INFO  23:04:14,874 - #31 ;
INFO  23:04:14,874 - #44 int
INFO  23:04:14,875 - #44 x
INFO  23:04:14,875 - #36 [
INFO  23:04:14,875 - #37 ]
INFO  23:04:14,875 - #31 ;
INFO  23:04:14,875 - #38 {
INFO  23:04:14,875 - #39 }
INFO  23:04:14,875 - #39 }
INFO  23:04:14,875 - #39 }
INFO  23:04:14,875 - #38 {
INFO  23:04:14,875 - #12 void
INFO  23:04:14,875 - #44 main
INFO  23:04:14,876 - #34 (
INFO  23:04:14,876 - #35 )
INFO  23:04:14,876 - #44 A
INFO  23:04:14,876 - #44 a
INFO  23:04:14,876 - #31 ;
INFO  23:04:14,876 - #44 C
INFO  23:04:14,876 - #44 c
INFO  23:04:14,876 - #31 ;
INFO  23:04:14,876 - #44 int
INFO  23:04:14,876 - #44 i
INFO  23:04:14,876 - #31 ;
INFO  23:04:14,876 - #44 int
INFO  23:04:14,876 - #44 x
INFO  23:04:14,876 - #36 [
INFO  23:04:14,877 - #37 ]
INFO  23:04:14,877 - #31 ;
INFO  23:04:14,877 - #38 {
INFO  23:04:14,877 - #44 a
INFO  23:04:14,877 - #28 =
INFO  23:04:14,877 - #8 new
INFO  23:04:14,877 - #44 A
INFO  23:04:14,877 - #31 ;
INFO  23:04:14,877 - #44 a
INFO  23:04:14,877 - #33 .
INFO  23:04:14,877 - #44 x
INFO  23:04:14,877 - #28 =
INFO  23:04:14,878 - #8 new
INFO  23:04:14,878 - #44 int
INFO  23:04:14,878 - #36 [
INFO  23:04:14,878 - #43 5
INFO  23:04:14,878 - #37 ]
INFO  23:04:14,878 - #31 ;
INFO  23:04:14,878 - #44 a
INFO  23:04:14,879 - #33 .
INFO  23:04:14,879 - #44 y
INFO  23:04:14,879 - #28 =
INFO  23:04:14,879 - #8 new
INFO  23:04:14,879 - #44 int
INFO  23:04:14,879 - #36 [
INFO  23:04:14,879 - #43 5
INFO  23:04:14,879 - #37 ]
INFO  23:04:14,879 - #31 ;
INFO  23:04:14,879 - #44 c
INFO  23:04:14,879 - #28 =
INFO  23:04:14,880 - #8 new
INFO  23:04:14,880 - #44 C
INFO  23:04:14,880 - #31 ;
INFO  23:04:14,880 - #44 c
INFO  23:04:14,880 - #33 .
INFO  23:04:14,880 - #44 theA
INFO  23:04:14,880 - #28 =
INFO  23:04:14,880 - #44 a
INFO  23:04:14,880 - #31 ;
INFO  23:04:14,880 - #44 c
INFO  23:04:14,881 - #33 .
INFO  23:04:14,881 - #44 x
INFO  23:04:14,881 - #28 =
INFO  23:04:14,881 - #8 new
INFO  23:04:14,881 - #44 int
INFO  23:04:14,881 - #36 [
INFO  23:04:14,881 - #43 5
INFO  23:04:14,881 - #37 ]
INFO  23:04:14,881 - #31 ;
INFO  23:04:14,881 - #44 x
INFO  23:04:14,881 - #28 =
INFO  23:04:14,882 - #8 new
INFO  23:04:14,882 - #44 int
INFO  23:04:14,882 - #36 [
INFO  23:04:14,882 - #43 3
INFO  23:04:14,882 - #37 ]
INFO  23:04:14,882 - #31 ;
INFO  23:04:14,882 - #44 i
INFO  23:04:14,882 - #28 =
INFO  23:04:14,882 - #43 0
INFO  23:04:14,882 - #31 ;
INFO  23:04:14,883 - #10 read
INFO  23:04:14,883 - #34 (
INFO  23:04:14,883 - #44 c
INFO  23:04:14,883 - #33 .
INFO  23:04:14,883 - #44 i
INFO  23:04:14,883 - #35 )
INFO  23:04:14,883 - #31 ;
INFO  23:04:14,883 - #13 while
INFO  23:04:14,883 - #34 (
INFO  23:04:14,883 - #44 i
INFO  23:04:14,883 - #24 <
INFO  23:04:14,884 - #43 5
INFO  23:04:14,884 - #35 )
INFO  23:04:14,884 - #38 {
INFO  23:04:14,884 - #10 read
INFO  23:04:14,884 - #34 (
INFO  23:04:14,884 - #44 c
INFO  23:04:14,884 - #33 .
INFO  23:04:14,884 - #44 x
INFO  23:04:14,884 - #36 [
INFO  23:04:14,884 - #44 i
INFO  23:04:14,884 - #37 ]
INFO  23:04:14,885 - #35 )
INFO  23:04:14,885 - #31 ;
INFO  23:04:14,885 - #10 read
INFO  23:04:14,885 - #34 (
INFO  23:04:14,885 - #44 c
INFO  23:04:14,885 - #33 .
INFO  23:04:14,885 - #44 theA
INFO  23:04:14,885 - #33 .
INFO  23:04:14,885 - #44 x
INFO  23:04:14,885 - #36 [
INFO  23:04:14,886 - #44 i
INFO  23:04:14,886 - #37 ]
INFO  23:04:14,886 - #35 )
INFO  23:04:14,886 - #31 ;
INFO  23:04:14,886 - #44 i
INFO  23:04:14,886 - #29 ++
INFO  23:04:14,886 - #31 ;
INFO  23:04:14,886 - #39 }
INFO  23:04:14,886 - #9 print
INFO  23:04:14,886 - #34 (
INFO  23:04:14,886 - #44 c
INFO  23:04:14,886 - #33 .
INFO  23:04:14,886 - #44 getValue
INFO  23:04:14,887 - #34 (
INFO  23:04:14,887 - #44 c
INFO  23:04:14,887 - #33 .
INFO  23:04:14,887 - #44 theA
INFO  23:04:14,887 - #33 .
INFO  23:04:14,887 - #44 x
INFO  23:04:14,887 - #36 [
INFO  23:04:14,887 - #43 0
INFO  23:04:14,887 - #37 ]
INFO  23:04:14,887 - #35 )
INFO  23:04:14,887 - #35 )
INFO  23:04:14,887 - #31 ;
INFO  23:04:14,887 - #39 }
INFO  23:04:14,887 - #39 }
INFO  23:04:14,888 - GlobalVar = 14
INFO  23:04:14,888 - GlobalConst = 2
INFO  23:04:14,888 - LocalMainVar = 4
INFO  23:04:14,888 - GlobalArray = 3
INFO  23:04:14,888 - FuncProg = 4
INFO  23:04:14,888 - Blocks = 5
INFO  23:04:14,888 - FuncCalls = 5
INFO  23:04:14,888 - FormalArg = 1
INFO  23:04:14,888 - DefClass = 3
INFO  23:04:14,888 - DefMethodClass = 1
INFO  23:08:10,027 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:08:10,036 - #2 program
INFO  23:08:10,036 - #44 Program
INFO  23:08:10,036 - #4 class
INFO  23:08:10,036 - #44 A
INFO  23:08:10,036 - #38 {
INFO  23:08:10,037 - #44 int
INFO  23:08:10,037 - #44 x
INFO  23:08:10,037 - #36 [
INFO  23:08:10,037 - #37 ]
INFO  23:08:10,037 - #32 ,
INFO  23:08:10,037 - #44 y
INFO  23:08:10,037 - #36 [
INFO  23:08:10,037 - #37 ]
INFO  23:08:10,037 - #31 ;
INFO  23:08:10,037 - #39 }
INFO  23:08:10,038 - #6 const
INFO  23:08:10,038 - #44 int
INFO  23:08:10,038 - #44 pi
INFO  23:08:10,038 - #28 =
INFO  23:08:10,038 - #43 3
INFO  23:08:10,038 - #32 ,
INFO  23:08:10,038 - #44 e
INFO  23:08:10,038 - #28 =
INFO  23:08:10,038 - #43 2
INFO  23:08:10,038 - #31 ;
INFO  23:08:10,038 - #4 class
INFO  23:08:10,039 - #44 B
INFO  23:08:10,039 - #14 extends
INFO  23:08:10,039 - #44 A
INFO  23:08:10,039 - #38 {
INFO  23:08:10,039 - #44 int
INFO  23:08:10,039 - #44 i
INFO  23:08:10,039 - #31 ;
INFO  23:08:10,039 - #44 int
INFO  23:08:10,039 - #44 x
INFO  23:08:10,040 - #36 [
INFO  23:08:10,040 - #37 ]
INFO  23:08:10,040 - #31 ;
INFO  23:08:10,040 - #38 {
INFO  23:08:10,040 - #44 int
INFO  23:08:10,040 - #44 getValue
INFO  23:08:10,040 - #34 (
INFO  23:08:10,040 - #44 int
INFO  23:08:10,040 - #44 a
INFO  23:08:10,040 - #35 )
INFO  23:08:10,040 - #44 int
INFO  23:08:10,041 - #44 b
INFO  23:08:10,041 - #31 ;
INFO  23:08:10,041 - #44 bool
INFO  23:08:10,041 - #44 c
INFO  23:08:10,041 - #31 ;
INFO  23:08:10,041 - #38 {
INFO  23:08:10,041 - #11 return
INFO  23:08:10,041 - #44 this
INFO  23:08:10,041 - #33 .
INFO  23:08:10,041 - #44 i
INFO  23:08:10,041 - #15 +
INFO  23:08:10,042 - #44 this
INFO  23:08:10,042 - #33 .
INFO  23:08:10,042 - #44 x
INFO  23:08:10,042 - #36 [
INFO  23:08:10,042 - #43 0
INFO  23:08:10,042 - #37 ]
INFO  23:08:10,042 - #15 +
INFO  23:08:10,042 - #44 a
INFO  23:08:10,042 - #31 ;
INFO  23:08:10,042 - #39 }
INFO  23:08:10,042 - #39 }
INFO  23:08:10,043 - #39 }
INFO  23:08:10,043 - #4 class
INFO  23:08:10,043 - #44 C
INFO  23:08:10,043 - #14 extends
INFO  23:08:10,043 - #44 B
INFO  23:08:10,043 - #38 {
INFO  23:08:10,043 - #44 A
INFO  23:08:10,043 - #44 theA
INFO  23:08:10,044 - #31 ;
INFO  23:08:10,044 - #44 string
INFO  23:08:10,044 - #44 a
INFO  23:08:10,044 - #31 ;
INFO  23:08:10,044 - #38 {
INFO  23:08:10,044 - #12 void
INFO  23:08:10,044 - #44 aaa
INFO  23:08:10,045 - #34 (
INFO  23:08:10,045 - #35 )
INFO  23:08:10,045 - #44 A
INFO  23:08:10,045 - #44 a
INFO  23:08:10,045 - #31 ;
INFO  23:08:10,045 - #44 C
INFO  23:08:10,045 - #44 c
INFO  23:08:10,045 - #31 ;
INFO  23:08:10,046 - #44 int
INFO  23:08:10,046 - #44 i
INFO  23:08:10,046 - #31 ;
INFO  23:08:10,046 - #44 int
INFO  23:08:10,046 - #44 x
INFO  23:08:10,046 - #36 [
INFO  23:08:10,046 - #37 ]
INFO  23:08:10,047 - #31 ;
INFO  23:08:10,047 - #38 {
INFO  23:08:10,047 - #39 }
INFO  23:08:10,047 - #12 void
INFO  23:08:10,047 - #44 bbb
INFO  23:08:10,047 - #34 (
INFO  23:08:10,047 - #35 )
INFO  23:08:10,048 - #44 A
INFO  23:08:10,048 - #44 a
INFO  23:08:10,048 - #31 ;
INFO  23:08:10,048 - #44 C
INFO  23:08:10,048 - #44 c
INFO  23:08:10,048 - #31 ;
INFO  23:08:10,048 - #44 int
INFO  23:08:10,049 - #44 i
INFO  23:08:10,049 - #31 ;
INFO  23:08:10,049 - #44 int
INFO  23:08:10,049 - #44 x
INFO  23:08:10,049 - #36 [
INFO  23:08:10,049 - #37 ]
INFO  23:08:10,049 - #31 ;
INFO  23:08:10,050 - #38 {
INFO  23:08:10,050 - #39 }
INFO  23:08:10,050 - #12 void
INFO  23:08:10,050 - #44 ccc
INFO  23:08:10,050 - #34 (
INFO  23:08:10,050 - #35 )
INFO  23:08:10,050 - #44 A
INFO  23:08:10,050 - #44 a
INFO  23:08:10,051 - #31 ;
INFO  23:08:10,051 - #44 C
INFO  23:08:10,051 - #44 c
INFO  23:08:10,051 - #31 ;
INFO  23:08:10,051 - #44 int
INFO  23:08:10,051 - #44 i
INFO  23:08:10,051 - #31 ;
INFO  23:08:10,051 - #44 int
INFO  23:08:10,051 - #44 x
INFO  23:08:10,052 - #36 [
INFO  23:08:10,052 - #37 ]
INFO  23:08:10,052 - #31 ;
INFO  23:08:10,052 - #38 {
INFO  23:08:10,052 - #39 }
INFO  23:08:10,052 - #39 }
INFO  23:08:10,052 - #39 }
INFO  23:08:10,052 - #38 {
INFO  23:08:10,052 - #12 void
INFO  23:08:10,052 - #44 main
INFO  23:08:10,052 - #34 (
INFO  23:08:10,053 - #35 )
INFO  23:08:10,053 - #44 A
INFO  23:08:10,053 - #44 a
INFO  23:08:10,053 - #31 ;
INFO  23:08:10,053 - #44 C
INFO  23:08:10,053 - #44 c
INFO  23:08:10,053 - #31 ;
INFO  23:08:10,053 - #44 int
INFO  23:08:10,053 - #44 i
INFO  23:08:10,053 - #31 ;
INFO  23:08:10,053 - #44 int
INFO  23:08:10,053 - #44 x
INFO  23:08:10,054 - #36 [
INFO  23:08:10,054 - #37 ]
INFO  23:08:10,054 - #31 ;
INFO  23:08:10,054 - #38 {
INFO  23:08:10,054 - #44 a
INFO  23:08:10,054 - #28 =
INFO  23:08:10,054 - #8 new
INFO  23:08:10,054 - #44 A
INFO  23:08:10,054 - #31 ;
INFO  23:08:10,054 - #44 a
INFO  23:08:10,055 - #33 .
INFO  23:08:10,055 - #44 x
INFO  23:08:10,055 - #28 =
INFO  23:08:10,055 - #8 new
INFO  23:08:10,055 - #44 int
INFO  23:08:10,056 - #36 [
INFO  23:08:10,056 - #43 5
INFO  23:08:10,056 - #37 ]
INFO  23:08:10,056 - #31 ;
INFO  23:08:10,056 - #44 a
INFO  23:08:10,056 - #33 .
INFO  23:08:10,057 - #44 y
INFO  23:08:10,057 - #28 =
INFO  23:08:10,057 - #8 new
INFO  23:08:10,057 - #44 int
INFO  23:08:10,057 - #36 [
INFO  23:08:10,057 - #43 5
INFO  23:08:10,057 - #37 ]
INFO  23:08:10,057 - #31 ;
INFO  23:08:10,058 - #44 c
INFO  23:08:10,058 - #28 =
INFO  23:08:10,058 - #8 new
INFO  23:08:10,058 - #44 C
INFO  23:08:10,058 - #31 ;
INFO  23:08:10,058 - #44 c
INFO  23:08:10,058 - #33 .
INFO  23:08:10,058 - #44 theA
INFO  23:08:10,058 - #28 =
INFO  23:08:10,058 - #44 a
INFO  23:08:10,058 - #31 ;
INFO  23:08:10,059 - #44 c
INFO  23:08:10,059 - #33 .
INFO  23:08:10,059 - #44 x
INFO  23:08:10,059 - #28 =
INFO  23:08:10,059 - #8 new
INFO  23:08:10,059 - #44 int
INFO  23:08:10,059 - #36 [
INFO  23:08:10,059 - #43 5
INFO  23:08:10,059 - #37 ]
INFO  23:08:10,059 - #31 ;
INFO  23:08:10,059 - #44 x
INFO  23:08:10,060 - #28 =
INFO  23:08:10,060 - #8 new
INFO  23:08:10,060 - #44 int
INFO  23:08:10,060 - #36 [
INFO  23:08:10,060 - #43 3
INFO  23:08:10,060 - #37 ]
INFO  23:08:10,060 - #31 ;
INFO  23:08:10,060 - #44 i
INFO  23:08:10,060 - #28 =
INFO  23:08:10,060 - #43 0
INFO  23:08:10,060 - #31 ;
INFO  23:08:10,060 - #10 read
INFO  23:08:10,061 - #34 (
INFO  23:08:10,061 - #44 c
INFO  23:08:10,061 - #33 .
INFO  23:08:10,061 - #44 i
INFO  23:08:10,061 - #35 )
INFO  23:08:10,061 - #31 ;
INFO  23:08:10,061 - #13 while
INFO  23:08:10,061 - #34 (
INFO  23:08:10,061 - #44 i
INFO  23:08:10,061 - #24 <
INFO  23:08:10,061 - #43 5
INFO  23:08:10,062 - #35 )
INFO  23:08:10,062 - #38 {
INFO  23:08:10,062 - #10 read
INFO  23:08:10,062 - #34 (
INFO  23:08:10,062 - #44 c
INFO  23:08:10,062 - #33 .
INFO  23:08:10,062 - #44 x
INFO  23:08:10,062 - #36 [
INFO  23:08:10,062 - #44 i
INFO  23:08:10,062 - #37 ]
INFO  23:08:10,062 - #35 )
INFO  23:08:10,062 - #31 ;
INFO  23:08:10,063 - #10 read
INFO  23:08:10,063 - #34 (
INFO  23:08:10,063 - #44 c
INFO  23:08:10,063 - #33 .
INFO  23:08:10,063 - #44 theA
INFO  23:08:10,063 - #33 .
INFO  23:08:10,063 - #44 x
INFO  23:08:10,063 - #36 [
INFO  23:08:10,063 - #44 i
INFO  23:08:10,063 - #37 ]
INFO  23:08:10,064 - #35 )
INFO  23:08:10,064 - #31 ;
INFO  23:08:10,064 - #44 i
INFO  23:08:10,064 - #29 ++
INFO  23:08:10,064 - #31 ;
INFO  23:08:10,064 - #39 }
INFO  23:08:10,064 - #9 print
INFO  23:08:10,065 - #34 (
INFO  23:08:10,065 - #44 c
INFO  23:08:10,065 - #33 .
INFO  23:08:10,065 - #44 getValue
INFO  23:08:10,065 - #34 (
INFO  23:08:10,065 - #44 c
INFO  23:08:10,065 - #33 .
INFO  23:08:10,065 - #44 theA
INFO  23:08:10,065 - #33 .
INFO  23:08:10,066 - #44 x
INFO  23:08:10,066 - #36 [
INFO  23:08:10,066 - #43 0
INFO  23:08:10,066 - #37 ]
INFO  23:08:10,066 - #35 )
INFO  23:08:10,066 - #35 )
INFO  23:08:10,066 - #31 ;
INFO  23:08:10,066 - #39 }
INFO  23:08:10,066 - #39 }
INFO  23:08:10,067 - GlobalVar = 14
INFO  23:08:10,067 - GlobalConst = 2
INFO  23:08:10,067 - LocalMainVar = 4
INFO  23:08:10,067 - GlobalArray = 3
INFO  23:08:10,067 - FuncProg = 4
INFO  23:08:10,067 - Blocks = 5
INFO  23:08:10,067 - FuncCalls = 5
INFO  23:08:10,067 - FormalArg = 1
INFO  23:08:10,067 - DefClass = 3
INFO  23:08:10,067 - DefMClass = 1
INFO  23:08:46,644 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:08:46,654 - #2 program
INFO  23:08:46,654 - #44 Program
INFO  23:08:46,654 - #4 class
INFO  23:08:46,654 - #44 A
INFO  23:08:46,654 - #38 {
INFO  23:08:46,654 - #44 int
INFO  23:08:46,654 - #44 x
INFO  23:08:46,654 - #36 [
INFO  23:08:46,654 - #37 ]
INFO  23:08:46,654 - #32 ,
INFO  23:08:46,655 - #44 y
INFO  23:08:46,655 - #36 [
INFO  23:08:46,655 - #37 ]
INFO  23:08:46,655 - #31 ;
INFO  23:08:46,655 - #39 }
INFO  23:08:46,655 - #6 const
INFO  23:08:46,655 - #44 int
INFO  23:08:46,655 - #44 pi
INFO  23:08:46,655 - #28 =
INFO  23:08:46,655 - #43 3
INFO  23:08:46,655 - #32 ,
INFO  23:08:46,655 - #44 e
INFO  23:08:46,655 - #28 =
INFO  23:08:46,655 - #43 2
INFO  23:08:46,656 - #31 ;
INFO  23:08:46,656 - #4 class
INFO  23:08:46,656 - #44 B
INFO  23:08:46,656 - #14 extends
INFO  23:08:46,656 - #44 A
INFO  23:08:46,656 - #38 {
INFO  23:08:46,656 - #44 int
INFO  23:08:46,656 - #44 i
INFO  23:08:46,656 - #31 ;
INFO  23:08:46,656 - #44 int
INFO  23:08:46,656 - #44 x
INFO  23:08:46,656 - #36 [
INFO  23:08:46,657 - #37 ]
INFO  23:08:46,657 - #31 ;
INFO  23:08:46,657 - #38 {
INFO  23:08:46,657 - #44 int
INFO  23:08:46,657 - #44 getValue
INFO  23:08:46,657 - #34 (
INFO  23:08:46,657 - #44 int
INFO  23:08:46,657 - #44 a
INFO  23:08:46,657 - #35 )
INFO  23:08:46,657 - #44 int
INFO  23:08:46,657 - #44 b
INFO  23:08:46,657 - #31 ;
INFO  23:08:46,657 - #44 bool
INFO  23:08:46,657 - #44 c
INFO  23:08:46,658 - #31 ;
INFO  23:08:46,658 - #38 {
INFO  23:08:46,658 - #11 return
INFO  23:08:46,658 - #44 this
INFO  23:08:46,658 - #33 .
INFO  23:08:46,658 - #44 i
INFO  23:08:46,658 - #15 +
INFO  23:08:46,658 - #44 this
INFO  23:08:46,658 - #33 .
INFO  23:08:46,658 - #44 x
INFO  23:08:46,658 - #36 [
INFO  23:08:46,658 - #43 0
INFO  23:08:46,659 - #37 ]
INFO  23:08:46,659 - #15 +
INFO  23:08:46,659 - #44 a
INFO  23:08:46,659 - #31 ;
INFO  23:08:46,659 - #39 }
INFO  23:08:46,659 - #39 }
INFO  23:08:46,659 - #39 }
INFO  23:08:46,659 - #4 class
INFO  23:08:46,659 - #44 C
INFO  23:08:46,659 - #14 extends
INFO  23:08:46,660 - #44 B
INFO  23:08:46,660 - #38 {
INFO  23:08:46,660 - #44 A
INFO  23:08:46,660 - #44 theA
INFO  23:08:46,660 - #31 ;
INFO  23:08:46,660 - #44 string
INFO  23:08:46,660 - #44 a
INFO  23:08:46,660 - #31 ;
INFO  23:08:46,660 - #38 {
INFO  23:08:46,661 - #12 void
INFO  23:08:46,661 - #44 aaa
INFO  23:08:46,661 - #34 (
INFO  23:08:46,661 - #35 )
INFO  23:08:46,661 - #44 A
INFO  23:08:46,661 - #44 a
INFO  23:08:46,661 - #31 ;
INFO  23:08:46,661 - #44 C
INFO  23:08:46,662 - #44 c
INFO  23:08:46,662 - #31 ;
INFO  23:08:46,662 - #44 int
INFO  23:08:46,662 - #44 i
INFO  23:08:46,662 - #31 ;
INFO  23:08:46,662 - #44 int
INFO  23:08:46,662 - #44 x
INFO  23:08:46,662 - #36 [
INFO  23:08:46,662 - #37 ]
INFO  23:08:46,663 - #31 ;
INFO  23:08:46,663 - #38 {
INFO  23:08:46,663 - #39 }
INFO  23:08:46,663 - #12 void
INFO  23:08:46,663 - #44 bbb
INFO  23:08:46,663 - #34 (
INFO  23:08:46,663 - #35 )
INFO  23:08:46,663 - #44 A
INFO  23:08:46,663 - #44 a
INFO  23:08:46,663 - #31 ;
INFO  23:08:46,664 - #44 C
INFO  23:08:46,664 - #44 c
INFO  23:08:46,664 - #31 ;
INFO  23:08:46,664 - #44 int
INFO  23:08:46,664 - #44 i
INFO  23:08:46,664 - #31 ;
INFO  23:08:46,664 - #44 int
INFO  23:08:46,664 - #44 x
INFO  23:08:46,664 - #36 [
INFO  23:08:46,664 - #37 ]
INFO  23:08:46,664 - #31 ;
INFO  23:08:46,664 - #38 {
INFO  23:08:46,664 - #39 }
INFO  23:08:46,664 - #12 void
INFO  23:08:46,665 - #44 ccc
INFO  23:08:46,665 - #34 (
INFO  23:08:46,665 - #35 )
INFO  23:08:46,665 - #44 A
INFO  23:08:46,665 - #44 a
INFO  23:08:46,665 - #31 ;
INFO  23:08:46,665 - #44 C
INFO  23:08:46,665 - #44 c
INFO  23:08:46,665 - #31 ;
INFO  23:08:46,665 - #44 int
INFO  23:08:46,665 - #44 i
INFO  23:08:46,665 - #31 ;
INFO  23:08:46,665 - #44 int
INFO  23:08:46,666 - #44 x
INFO  23:08:46,666 - #36 [
INFO  23:08:46,666 - #37 ]
INFO  23:08:46,666 - #31 ;
INFO  23:08:46,666 - #38 {
INFO  23:08:46,666 - #39 }
INFO  23:08:46,666 - #39 }
INFO  23:08:46,666 - #39 }
INFO  23:08:46,666 - #38 {
INFO  23:08:46,666 - #12 void
INFO  23:08:46,666 - #44 main
INFO  23:08:46,666 - #34 (
INFO  23:08:46,666 - #35 )
INFO  23:08:46,667 - #44 A
INFO  23:08:46,667 - #44 a
INFO  23:08:46,667 - #31 ;
INFO  23:08:46,667 - #44 C
INFO  23:08:46,667 - #44 c
INFO  23:08:46,667 - #31 ;
INFO  23:08:46,667 - #44 int
INFO  23:08:46,667 - #44 i
INFO  23:08:46,667 - #31 ;
INFO  23:08:46,667 - #44 int
INFO  23:08:46,667 - #44 x
INFO  23:08:46,667 - #36 [
INFO  23:08:46,667 - #37 ]
INFO  23:08:46,667 - #31 ;
INFO  23:08:46,668 - #38 {
INFO  23:08:46,668 - #44 a
INFO  23:08:46,668 - #28 =
INFO  23:08:46,668 - #8 new
INFO  23:08:46,668 - #44 A
INFO  23:08:46,668 - #31 ;
INFO  23:08:46,668 - #44 a
INFO  23:08:46,668 - #33 .
INFO  23:08:46,668 - #44 x
INFO  23:08:46,668 - #28 =
INFO  23:08:46,668 - #8 new
INFO  23:08:46,669 - #44 int
INFO  23:08:46,669 - #36 [
INFO  23:08:46,669 - #43 5
INFO  23:08:46,669 - #37 ]
INFO  23:08:46,669 - #31 ;
INFO  23:08:46,669 - #44 a
INFO  23:08:46,669 - #33 .
INFO  23:08:46,669 - #44 y
INFO  23:08:46,669 - #28 =
INFO  23:08:46,670 - #8 new
INFO  23:08:46,670 - #44 int
INFO  23:08:46,670 - #36 [
INFO  23:08:46,670 - #43 5
INFO  23:08:46,670 - #37 ]
INFO  23:08:46,670 - #31 ;
INFO  23:08:46,670 - #44 c
INFO  23:08:46,670 - #28 =
INFO  23:08:46,670 - #8 new
INFO  23:08:46,670 - #44 C
INFO  23:08:46,670 - #31 ;
INFO  23:08:46,670 - #44 c
INFO  23:08:46,670 - #33 .
INFO  23:08:46,671 - #44 theA
INFO  23:08:46,671 - #28 =
INFO  23:08:46,671 - #44 a
INFO  23:08:46,671 - #31 ;
INFO  23:08:46,671 - #44 c
INFO  23:08:46,671 - #33 .
INFO  23:08:46,671 - #44 x
INFO  23:08:46,671 - #28 =
INFO  23:08:46,671 - #8 new
INFO  23:08:46,671 - #44 int
INFO  23:08:46,671 - #36 [
INFO  23:08:46,671 - #43 5
INFO  23:08:46,671 - #37 ]
INFO  23:08:46,671 - #31 ;
INFO  23:08:46,672 - #44 x
INFO  23:08:46,672 - #28 =
INFO  23:08:46,672 - #8 new
INFO  23:08:46,672 - #44 int
INFO  23:08:46,672 - #36 [
INFO  23:08:46,672 - #43 3
INFO  23:08:46,672 - #37 ]
INFO  23:08:46,672 - #31 ;
INFO  23:08:46,672 - #44 i
INFO  23:08:46,672 - #28 =
INFO  23:08:46,672 - #43 0
INFO  23:08:46,672 - #31 ;
INFO  23:08:46,673 - #10 read
INFO  23:08:46,673 - #34 (
INFO  23:08:46,673 - #44 c
INFO  23:08:46,673 - #33 .
INFO  23:08:46,673 - #44 i
INFO  23:08:46,673 - #35 )
INFO  23:08:46,673 - #31 ;
INFO  23:08:46,673 - #13 while
INFO  23:08:46,673 - #34 (
INFO  23:08:46,673 - #44 i
INFO  23:08:46,673 - #24 <
INFO  23:08:46,673 - #43 5
INFO  23:08:46,673 - #35 )
INFO  23:08:46,674 - #38 {
INFO  23:08:46,674 - #10 read
INFO  23:08:46,674 - #34 (
INFO  23:08:46,674 - #44 c
INFO  23:08:46,674 - #33 .
INFO  23:08:46,674 - #44 x
INFO  23:08:46,674 - #36 [
INFO  23:08:46,674 - #44 i
INFO  23:08:46,674 - #37 ]
INFO  23:08:46,674 - #35 )
INFO  23:08:46,674 - #31 ;
INFO  23:08:46,674 - #10 read
INFO  23:08:46,674 - #34 (
INFO  23:08:46,675 - #44 c
INFO  23:08:46,675 - #33 .
INFO  23:08:46,675 - #44 theA
INFO  23:08:46,675 - #33 .
INFO  23:08:46,675 - #44 x
INFO  23:08:46,675 - #36 [
INFO  23:08:46,675 - #44 i
INFO  23:08:46,675 - #37 ]
INFO  23:08:46,675 - #35 )
INFO  23:08:46,676 - #31 ;
INFO  23:08:46,676 - #44 i
INFO  23:08:46,676 - #29 ++
INFO  23:08:46,676 - #31 ;
INFO  23:08:46,676 - #39 }
INFO  23:08:46,676 - #9 print
INFO  23:08:46,676 - #34 (
INFO  23:08:46,676 - #44 c
INFO  23:08:46,676 - #33 .
INFO  23:08:46,677 - #44 getValue
INFO  23:08:46,677 - #34 (
INFO  23:08:46,677 - #44 c
INFO  23:08:46,677 - #33 .
INFO  23:08:46,677 - #44 theA
INFO  23:08:46,677 - #33 .
INFO  23:08:46,677 - #44 x
INFO  23:08:46,677 - #36 [
INFO  23:08:46,677 - #43 0
INFO  23:08:46,678 - #37 ]
INFO  23:08:46,678 - #35 )
INFO  23:08:46,678 - #35 )
INFO  23:08:46,678 - #31 ;
INFO  23:08:46,678 - #39 }
INFO  23:08:46,678 - #39 }
INFO  23:08:46,678 - GlobalVar = 14
INFO  23:08:46,678 - GlobalConst = 2
INFO  23:08:46,678 - LocalMainVar = 4
INFO  23:08:46,678 - GlobalArray = 3
INFO  23:08:46,678 - FuncProg = 4
INFO  23:08:46,679 - Blocks = 5
INFO  23:08:46,679 - FuncCalls = 5
INFO  23:08:46,679 - FormalArg = 1
INFO  23:08:46,679 - DefClass = 3
INFO  23:08:46,679 - DefMClass = 1
INFO  23:08:59,466 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:08:59,474 - #2 program
INFO  23:08:59,474 - #44 Program
INFO  23:08:59,475 - #4 class
INFO  23:08:59,475 - #44 A
INFO  23:08:59,475 - #38 {
INFO  23:08:59,475 - #44 int
INFO  23:08:59,475 - #44 x
INFO  23:08:59,475 - #36 [
INFO  23:08:59,475 - #37 ]
INFO  23:08:59,475 - #32 ,
INFO  23:08:59,475 - #44 y
INFO  23:08:59,475 - #36 [
INFO  23:08:59,475 - #37 ]
INFO  23:08:59,476 - #31 ;
INFO  23:08:59,476 - #39 }
INFO  23:08:59,476 - #6 const
INFO  23:08:59,476 - #44 int
INFO  23:08:59,476 - #44 pi
INFO  23:08:59,476 - #28 =
INFO  23:08:59,476 - #43 3
INFO  23:08:59,476 - #32 ,
INFO  23:08:59,476 - #44 e
INFO  23:08:59,476 - #28 =
INFO  23:08:59,476 - #43 2
INFO  23:08:59,477 - #31 ;
INFO  23:08:59,477 - #4 class
INFO  23:08:59,477 - #44 B
INFO  23:08:59,477 - #14 extends
INFO  23:08:59,477 - #44 A
INFO  23:08:59,477 - #38 {
INFO  23:08:59,477 - #44 int
INFO  23:08:59,477 - #44 i
INFO  23:08:59,477 - #31 ;
INFO  23:08:59,477 - #44 int
INFO  23:08:59,477 - #44 x
INFO  23:08:59,477 - #36 [
INFO  23:08:59,477 - #37 ]
INFO  23:08:59,477 - #31 ;
INFO  23:08:59,478 - #38 {
INFO  23:08:59,478 - #44 int
INFO  23:08:59,478 - #44 getValue
INFO  23:08:59,478 - #34 (
INFO  23:08:59,478 - #44 int
INFO  23:08:59,478 - #44 a
INFO  23:08:59,478 - #35 )
INFO  23:08:59,478 - #44 int
INFO  23:08:59,478 - #44 b
INFO  23:08:59,478 - #31 ;
INFO  23:08:59,478 - #44 bool
INFO  23:08:59,478 - #44 c
INFO  23:08:59,478 - #31 ;
INFO  23:08:59,478 - #38 {
INFO  23:08:59,479 - #11 return
INFO  23:08:59,479 - #44 this
INFO  23:08:59,479 - #33 .
INFO  23:08:59,479 - #44 i
INFO  23:08:59,479 - #15 +
INFO  23:08:59,479 - #44 this
INFO  23:08:59,479 - #33 .
INFO  23:08:59,479 - #44 x
INFO  23:08:59,479 - #36 [
INFO  23:08:59,479 - #43 0
INFO  23:08:59,479 - #37 ]
INFO  23:08:59,480 - #15 +
INFO  23:08:59,480 - #44 a
INFO  23:08:59,480 - #31 ;
INFO  23:08:59,480 - #39 }
INFO  23:08:59,480 - #39 }
INFO  23:08:59,480 - #39 }
INFO  23:08:59,480 - #4 class
INFO  23:08:59,480 - #44 C
INFO  23:08:59,480 - #14 extends
INFO  23:08:59,480 - #44 B
INFO  23:08:59,481 - #38 {
INFO  23:08:59,481 - #44 A
INFO  23:08:59,481 - #44 theA
INFO  23:08:59,481 - #31 ;
INFO  23:08:59,481 - #44 string
INFO  23:08:59,481 - #44 a
INFO  23:08:59,481 - #31 ;
INFO  23:08:59,481 - #38 {
INFO  23:08:59,481 - #12 void
INFO  23:08:59,482 - #44 aaa
INFO  23:08:59,482 - #34 (
INFO  23:08:59,482 - #35 )
INFO  23:08:59,482 - #44 A
INFO  23:08:59,482 - #44 a
INFO  23:08:59,482 - #31 ;
INFO  23:08:59,482 - #44 C
INFO  23:08:59,482 - #44 c
INFO  23:08:59,482 - #31 ;
INFO  23:08:59,483 - #44 int
INFO  23:08:59,483 - #44 i
INFO  23:08:59,483 - #31 ;
INFO  23:08:59,483 - #44 int
INFO  23:08:59,483 - #44 x
INFO  23:08:59,483 - #36 [
INFO  23:08:59,483 - #37 ]
INFO  23:08:59,483 - #31 ;
INFO  23:08:59,484 - #38 {
INFO  23:08:59,484 - #39 }
INFO  23:08:59,484 - #12 void
INFO  23:08:59,484 - #44 bbb
INFO  23:08:59,484 - #34 (
INFO  23:08:59,484 - #35 )
INFO  23:08:59,484 - #44 A
INFO  23:08:59,484 - #44 a
INFO  23:08:59,484 - #31 ;
INFO  23:08:59,484 - #44 C
INFO  23:08:59,484 - #44 c
INFO  23:08:59,485 - #31 ;
INFO  23:08:59,485 - #44 int
INFO  23:08:59,485 - #44 i
INFO  23:08:59,485 - #31 ;
INFO  23:08:59,485 - #44 int
INFO  23:08:59,485 - #44 x
INFO  23:08:59,485 - #36 [
INFO  23:08:59,485 - #37 ]
INFO  23:08:59,485 - #31 ;
INFO  23:08:59,485 - #38 {
INFO  23:08:59,485 - #39 }
INFO  23:08:59,485 - #12 void
INFO  23:08:59,486 - #44 ccc
INFO  23:08:59,486 - #34 (
INFO  23:08:59,486 - #35 )
INFO  23:08:59,486 - #44 A
INFO  23:08:59,486 - #44 a
INFO  23:08:59,486 - #31 ;
INFO  23:08:59,486 - #44 C
INFO  23:08:59,486 - #44 c
INFO  23:08:59,486 - #31 ;
INFO  23:08:59,487 - #44 int
INFO  23:08:59,487 - #44 i
INFO  23:08:59,487 - #31 ;
INFO  23:08:59,487 - #44 int
INFO  23:08:59,487 - #44 x
INFO  23:08:59,487 - #36 [
INFO  23:08:59,487 - #37 ]
INFO  23:08:59,487 - #31 ;
INFO  23:08:59,487 - #38 {
INFO  23:08:59,488 - #39 }
INFO  23:08:59,488 - #39 }
INFO  23:08:59,488 - #39 }
INFO  23:08:59,488 - #38 {
INFO  23:08:59,488 - #12 void
INFO  23:08:59,488 - #44 main
INFO  23:08:59,488 - #34 (
INFO  23:08:59,488 - #35 )
INFO  23:08:59,488 - #44 A
INFO  23:08:59,489 - #44 a
INFO  23:08:59,489 - #31 ;
INFO  23:08:59,489 - #44 C
INFO  23:08:59,489 - #44 c
INFO  23:08:59,489 - #31 ;
INFO  23:08:59,489 - #44 int
INFO  23:08:59,489 - #44 i
INFO  23:08:59,489 - #31 ;
INFO  23:08:59,489 - #44 int
INFO  23:08:59,489 - #44 x
INFO  23:08:59,489 - #36 [
INFO  23:08:59,489 - #37 ]
INFO  23:08:59,489 - #31 ;
INFO  23:08:59,490 - #38 {
INFO  23:08:59,490 - #44 a
INFO  23:08:59,490 - #28 =
INFO  23:08:59,490 - #8 new
INFO  23:08:59,490 - #44 A
INFO  23:08:59,490 - #31 ;
INFO  23:08:59,490 - #44 a
INFO  23:08:59,490 - #33 .
INFO  23:08:59,490 - #44 x
INFO  23:08:59,490 - #28 =
INFO  23:08:59,490 - #8 new
INFO  23:08:59,491 - #44 int
INFO  23:08:59,491 - #36 [
INFO  23:08:59,491 - #43 5
INFO  23:08:59,491 - #37 ]
INFO  23:08:59,491 - #31 ;
INFO  23:08:59,491 - #44 a
INFO  23:08:59,491 - #33 .
INFO  23:08:59,492 - #44 y
INFO  23:08:59,492 - #28 =
INFO  23:08:59,492 - #8 new
INFO  23:08:59,492 - #44 int
INFO  23:08:59,492 - #36 [
INFO  23:08:59,492 - #43 5
INFO  23:08:59,492 - #37 ]
INFO  23:08:59,492 - #31 ;
INFO  23:08:59,492 - #44 c
INFO  23:08:59,492 - #28 =
INFO  23:08:59,493 - #8 new
INFO  23:08:59,493 - #44 C
INFO  23:08:59,493 - #31 ;
INFO  23:08:59,493 - #44 c
INFO  23:08:59,493 - #33 .
INFO  23:08:59,493 - #44 theA
INFO  23:08:59,493 - #28 =
INFO  23:08:59,493 - #44 a
INFO  23:08:59,493 - #31 ;
INFO  23:08:59,493 - #44 c
INFO  23:08:59,494 - #33 .
INFO  23:08:59,494 - #44 x
INFO  23:08:59,494 - #28 =
INFO  23:08:59,494 - #8 new
INFO  23:08:59,494 - #44 int
INFO  23:08:59,494 - #36 [
INFO  23:08:59,494 - #43 5
INFO  23:08:59,494 - #37 ]
INFO  23:08:59,494 - #31 ;
INFO  23:08:59,494 - #44 x
INFO  23:08:59,495 - #28 =
INFO  23:08:59,495 - #8 new
INFO  23:08:59,495 - #44 int
INFO  23:08:59,495 - #36 [
INFO  23:08:59,495 - #43 3
INFO  23:08:59,495 - #37 ]
INFO  23:08:59,495 - #31 ;
INFO  23:08:59,495 - #44 i
INFO  23:08:59,495 - #28 =
INFO  23:08:59,495 - #43 0
INFO  23:08:59,496 - #31 ;
INFO  23:08:59,496 - #10 read
INFO  23:08:59,496 - #34 (
INFO  23:08:59,496 - #44 c
INFO  23:08:59,496 - #33 .
INFO  23:08:59,496 - #44 i
INFO  23:08:59,496 - #35 )
INFO  23:08:59,496 - #31 ;
INFO  23:08:59,496 - #13 while
INFO  23:08:59,497 - #34 (
INFO  23:08:59,497 - #44 i
INFO  23:08:59,497 - #24 <
INFO  23:08:59,497 - #43 5
INFO  23:08:59,497 - #35 )
INFO  23:08:59,497 - #38 {
INFO  23:08:59,497 - #10 read
INFO  23:08:59,497 - #34 (
INFO  23:08:59,498 - #44 c
INFO  23:08:59,498 - #33 .
INFO  23:08:59,498 - #44 x
INFO  23:08:59,498 - #36 [
INFO  23:08:59,498 - #44 i
INFO  23:08:59,498 - #37 ]
INFO  23:08:59,498 - #35 )
INFO  23:08:59,498 - #31 ;
INFO  23:08:59,498 - #10 read
INFO  23:08:59,498 - #34 (
INFO  23:08:59,499 - #44 c
INFO  23:08:59,499 - #33 .
INFO  23:08:59,499 - #44 theA
INFO  23:08:59,499 - #33 .
INFO  23:08:59,499 - #44 x
INFO  23:08:59,499 - #36 [
INFO  23:08:59,499 - #44 i
INFO  23:08:59,499 - #37 ]
INFO  23:08:59,499 - #35 )
INFO  23:08:59,500 - #31 ;
INFO  23:08:59,500 - #44 i
INFO  23:08:59,500 - #29 ++
INFO  23:08:59,500 - #31 ;
INFO  23:08:59,500 - #39 }
INFO  23:08:59,500 - #9 print
INFO  23:08:59,500 - #34 (
INFO  23:08:59,500 - #44 c
INFO  23:08:59,500 - #33 .
INFO  23:08:59,500 - #44 getValue
INFO  23:08:59,500 - #34 (
INFO  23:08:59,500 - #44 c
INFO  23:08:59,500 - #33 .
INFO  23:08:59,500 - #44 theA
INFO  23:08:59,501 - #33 .
INFO  23:08:59,501 - #44 x
INFO  23:08:59,501 - #36 [
INFO  23:08:59,501 - #43 0
INFO  23:08:59,501 - #37 ]
INFO  23:08:59,501 - #35 )
INFO  23:08:59,501 - #35 )
INFO  23:08:59,501 - #31 ;
INFO  23:08:59,501 - #39 }
INFO  23:08:59,501 - #39 }
INFO  23:08:59,501 - GlobalVar = 14
INFO  23:08:59,501 - GlobalConst = 2
INFO  23:08:59,501 - LocalMainVar = 4
INFO  23:08:59,502 - GlobalArray = 3
INFO  23:08:59,502 - FuncProg = 4
INFO  23:08:59,502 - Blocks = 5
INFO  23:08:59,502 - FuncCalls = 5
INFO  23:08:59,502 - FormalArg = 1
INFO  23:08:59,502 - DefClass = 3
INFO  23:08:59,502 - DefMClass = 1
INFO  23:09:11,898 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:09:11,906 - #2 program
INFO  23:09:11,906 - #44 Program
INFO  23:09:11,906 - #4 class
INFO  23:09:11,906 - #44 A
INFO  23:09:11,907 - #38 {
INFO  23:09:11,907 - #44 int
INFO  23:09:11,907 - #44 x
INFO  23:09:11,907 - #36 [
INFO  23:09:11,907 - #37 ]
INFO  23:09:11,907 - #32 ,
INFO  23:09:11,907 - #44 y
INFO  23:09:11,907 - #36 [
INFO  23:09:11,907 - #37 ]
INFO  23:09:11,907 - #31 ;
INFO  23:09:11,907 - #39 }
INFO  23:09:11,907 - #6 const
INFO  23:09:11,908 - #44 int
INFO  23:09:11,908 - #44 pi
INFO  23:09:11,908 - #28 =
INFO  23:09:11,908 - #43 3
INFO  23:09:11,908 - #32 ,
INFO  23:09:11,908 - #44 e
INFO  23:09:11,908 - #28 =
INFO  23:09:11,908 - #43 2
INFO  23:09:11,908 - #31 ;
INFO  23:09:11,908 - #4 class
INFO  23:09:11,908 - #44 B
INFO  23:09:11,908 - #14 extends
INFO  23:09:11,908 - #44 A
INFO  23:09:11,908 - #38 {
INFO  23:09:11,909 - #44 int
INFO  23:09:11,909 - #44 i
INFO  23:09:11,909 - #31 ;
INFO  23:09:11,909 - #44 int
INFO  23:09:11,909 - #44 x
INFO  23:09:11,909 - #36 [
INFO  23:09:11,909 - #37 ]
INFO  23:09:11,909 - #31 ;
INFO  23:09:11,909 - #38 {
INFO  23:09:11,909 - #44 int
INFO  23:09:11,909 - #44 getValue
INFO  23:09:11,909 - #34 (
INFO  23:09:11,909 - #44 int
INFO  23:09:11,910 - #44 a
INFO  23:09:11,910 - #35 )
INFO  23:09:11,910 - #44 int
INFO  23:09:11,910 - #44 b
INFO  23:09:11,910 - #31 ;
INFO  23:09:11,910 - #44 bool
INFO  23:09:11,910 - #44 c
INFO  23:09:11,910 - #31 ;
INFO  23:09:11,910 - #38 {
INFO  23:09:11,910 - #11 return
INFO  23:09:11,910 - #44 this
INFO  23:09:11,910 - #33 .
INFO  23:09:11,911 - #44 i
INFO  23:09:11,911 - #15 +
INFO  23:09:11,911 - #44 this
INFO  23:09:11,911 - #33 .
INFO  23:09:11,911 - #44 x
INFO  23:09:11,911 - #36 [
INFO  23:09:11,911 - #43 0
INFO  23:09:11,911 - #37 ]
INFO  23:09:11,911 - #15 +
INFO  23:09:11,911 - #44 a
INFO  23:09:11,911 - #31 ;
INFO  23:09:11,912 - #39 }
INFO  23:09:11,912 - #39 }
INFO  23:09:11,912 - #39 }
INFO  23:09:11,912 - #4 class
INFO  23:09:11,912 - #44 C
INFO  23:09:11,912 - #14 extends
INFO  23:09:11,912 - #44 B
INFO  23:09:11,912 - #38 {
INFO  23:09:11,912 - #44 A
INFO  23:09:11,912 - #44 theA
INFO  23:09:11,913 - #31 ;
INFO  23:09:11,913 - #44 string
INFO  23:09:11,913 - #44 a
INFO  23:09:11,913 - #31 ;
INFO  23:09:11,913 - #38 {
INFO  23:09:11,913 - #12 void
INFO  23:09:11,913 - #44 aaa
INFO  23:09:11,913 - #34 (
INFO  23:09:11,913 - #35 )
INFO  23:09:11,914 - #44 A
INFO  23:09:11,914 - #44 a
INFO  23:09:11,914 - #31 ;
INFO  23:09:11,914 - #44 C
INFO  23:09:11,914 - #44 c
INFO  23:09:11,914 - #31 ;
INFO  23:09:11,914 - #44 int
INFO  23:09:11,914 - #44 i
INFO  23:09:11,914 - #31 ;
INFO  23:09:11,915 - #44 int
INFO  23:09:11,915 - #44 x
INFO  23:09:11,915 - #36 [
INFO  23:09:11,915 - #37 ]
INFO  23:09:11,915 - #31 ;
INFO  23:09:11,915 - #38 {
INFO  23:09:11,915 - #39 }
INFO  23:09:11,915 - #12 void
INFO  23:09:11,915 - #44 bbb
INFO  23:09:11,916 - #34 (
INFO  23:09:11,916 - #35 )
INFO  23:09:11,916 - #44 A
INFO  23:09:11,916 - #44 a
INFO  23:09:11,916 - #31 ;
INFO  23:09:11,916 - #44 C
INFO  23:09:11,916 - #44 c
INFO  23:09:11,916 - #31 ;
INFO  23:09:11,916 - #44 int
INFO  23:09:11,916 - #44 i
INFO  23:09:11,916 - #31 ;
INFO  23:09:11,916 - #44 int
INFO  23:09:11,916 - #44 x
INFO  23:09:11,917 - #36 [
INFO  23:09:11,917 - #37 ]
INFO  23:09:11,917 - #31 ;
INFO  23:09:11,917 - #38 {
INFO  23:09:11,917 - #39 }
INFO  23:09:11,917 - #12 void
INFO  23:09:11,917 - #44 ccc
INFO  23:09:11,917 - #34 (
INFO  23:09:11,917 - #35 )
INFO  23:09:11,917 - #44 A
INFO  23:09:11,917 - #44 a
INFO  23:09:11,918 - #31 ;
INFO  23:09:11,918 - #44 C
INFO  23:09:11,918 - #44 c
INFO  23:09:11,918 - #31 ;
INFO  23:09:11,918 - #44 int
INFO  23:09:11,918 - #44 i
INFO  23:09:11,918 - #31 ;
INFO  23:09:11,918 - #44 int
INFO  23:09:11,918 - #44 x
INFO  23:09:11,918 - #36 [
INFO  23:09:11,918 - #37 ]
INFO  23:09:11,919 - #31 ;
INFO  23:09:11,919 - #38 {
INFO  23:09:11,919 - #39 }
INFO  23:09:11,919 - #39 }
INFO  23:09:11,919 - #39 }
INFO  23:09:11,919 - #38 {
INFO  23:09:11,919 - #12 void
INFO  23:09:11,919 - #44 main
INFO  23:09:11,919 - #34 (
INFO  23:09:11,919 - #35 )
INFO  23:09:11,919 - #44 A
INFO  23:09:11,920 - #44 a
INFO  23:09:11,920 - #31 ;
INFO  23:09:11,920 - #44 C
INFO  23:09:11,920 - #44 c
INFO  23:09:11,920 - #31 ;
INFO  23:09:11,920 - #44 int
INFO  23:09:11,920 - #44 i
INFO  23:09:11,920 - #31 ;
INFO  23:09:11,920 - #44 int
INFO  23:09:11,920 - #44 x
INFO  23:09:11,920 - #36 [
INFO  23:09:11,920 - #37 ]
INFO  23:09:11,920 - #31 ;
INFO  23:09:11,920 - #38 {
INFO  23:09:11,921 - #44 a
INFO  23:09:11,921 - #28 =
INFO  23:09:11,921 - #8 new
INFO  23:09:11,921 - #44 A
INFO  23:09:11,921 - #31 ;
INFO  23:09:11,921 - #44 a
INFO  23:09:11,921 - #33 .
INFO  23:09:11,921 - #44 x
INFO  23:09:11,921 - #28 =
INFO  23:09:11,921 - #8 new
INFO  23:09:11,922 - #44 int
INFO  23:09:11,922 - #36 [
INFO  23:09:11,922 - #43 5
INFO  23:09:11,922 - #37 ]
INFO  23:09:11,922 - #31 ;
INFO  23:09:11,922 - #44 a
INFO  23:09:11,922 - #33 .
INFO  23:09:11,922 - #44 y
INFO  23:09:11,923 - #28 =
INFO  23:09:11,923 - #8 new
INFO  23:09:11,923 - #44 int
INFO  23:09:11,923 - #36 [
INFO  23:09:11,923 - #43 5
INFO  23:09:11,923 - #37 ]
INFO  23:09:11,923 - #31 ;
INFO  23:09:11,923 - #44 c
INFO  23:09:11,923 - #28 =
INFO  23:09:11,923 - #8 new
INFO  23:09:11,923 - #44 C
INFO  23:09:11,924 - #31 ;
INFO  23:09:11,924 - #44 c
INFO  23:09:11,924 - #33 .
INFO  23:09:11,924 - #44 theA
INFO  23:09:11,924 - #28 =
INFO  23:09:11,924 - #44 a
INFO  23:09:11,924 - #31 ;
INFO  23:09:11,924 - #44 c
INFO  23:09:11,924 - #33 .
INFO  23:09:11,924 - #44 x
INFO  23:09:11,925 - #28 =
INFO  23:09:11,925 - #8 new
INFO  23:09:11,925 - #44 int
INFO  23:09:11,925 - #36 [
INFO  23:09:11,925 - #43 5
INFO  23:09:11,925 - #37 ]
INFO  23:09:11,925 - #31 ;
INFO  23:09:11,925 - #44 x
INFO  23:09:11,925 - #28 =
INFO  23:09:11,926 - #8 new
INFO  23:09:11,926 - #44 int
INFO  23:09:11,926 - #36 [
INFO  23:09:11,926 - #43 3
INFO  23:09:11,926 - #37 ]
INFO  23:09:11,926 - #31 ;
INFO  23:09:11,926 - #44 i
INFO  23:09:11,926 - #28 =
INFO  23:09:11,926 - #43 0
INFO  23:09:11,927 - #31 ;
INFO  23:09:11,927 - #10 read
INFO  23:09:11,927 - #34 (
INFO  23:09:11,927 - #44 c
INFO  23:09:11,927 - #33 .
INFO  23:09:11,927 - #44 i
INFO  23:09:11,927 - #35 )
INFO  23:09:11,927 - #31 ;
INFO  23:09:11,928 - #13 while
INFO  23:09:11,928 - #34 (
INFO  23:09:11,928 - #44 i
INFO  23:09:11,928 - #24 <
INFO  23:09:11,928 - #43 5
INFO  23:09:11,928 - #35 )
INFO  23:09:11,928 - #38 {
INFO  23:09:11,928 - #10 read
INFO  23:09:11,928 - #34 (
INFO  23:09:11,929 - #44 c
INFO  23:09:11,929 - #33 .
INFO  23:09:11,929 - #44 x
INFO  23:09:11,929 - #36 [
INFO  23:09:11,929 - #44 i
INFO  23:09:11,929 - #37 ]
INFO  23:09:11,929 - #35 )
INFO  23:09:11,929 - #31 ;
INFO  23:09:11,929 - #10 read
INFO  23:09:11,930 - #34 (
INFO  23:09:11,930 - #44 c
INFO  23:09:11,930 - #33 .
INFO  23:09:11,930 - #44 theA
INFO  23:09:11,930 - #33 .
INFO  23:09:11,930 - #44 x
INFO  23:09:11,930 - #36 [
INFO  23:09:11,930 - #44 i
INFO  23:09:11,930 - #37 ]
INFO  23:09:11,931 - #35 )
INFO  23:09:11,931 - #31 ;
INFO  23:09:11,931 - #44 i
INFO  23:09:11,931 - #29 ++
INFO  23:09:11,931 - #31 ;
INFO  23:09:11,931 - #39 }
INFO  23:09:11,931 - #9 print
INFO  23:09:11,931 - #34 (
INFO  23:09:11,931 - #44 c
INFO  23:09:11,931 - #33 .
INFO  23:09:11,932 - #44 getValue
INFO  23:09:11,932 - #34 (
INFO  23:09:11,932 - #44 c
INFO  23:09:11,932 - #33 .
INFO  23:09:11,932 - #44 theA
INFO  23:09:11,932 - #33 .
INFO  23:09:11,932 - #44 x
INFO  23:09:11,932 - #36 [
INFO  23:09:11,932 - #43 0
INFO  23:09:11,932 - #37 ]
INFO  23:09:11,932 - #35 )
INFO  23:09:11,932 - #35 )
INFO  23:09:11,932 - #31 ;
INFO  23:09:11,932 - #39 }
INFO  23:09:11,933 - #39 }
INFO  23:09:11,933 - GlobalVar = 14
INFO  23:09:11,933 - GlobalConst = 2
INFO  23:09:11,933 - LocalMainVar = 4
INFO  23:09:11,933 - GlobalArray = 3
INFO  23:09:11,933 - FuncProg = 4
INFO  23:09:11,933 - Blocks = 5
INFO  23:09:11,933 - FuncCalls = 5
INFO  23:09:11,933 - FormalArg = 1
INFO  23:09:11,933 - DefClass = 3
INFO  23:09:11,933 - DefMClass = 1
INFO  23:09:34,605 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:09:34,613 - #2 program
INFO  23:09:34,613 - #44 Program
INFO  23:09:34,614 - #4 class
INFO  23:09:34,614 - #44 A
INFO  23:09:34,614 - #38 {
INFO  23:09:34,614 - #44 int
INFO  23:09:34,614 - #44 x
INFO  23:09:34,614 - #36 [
INFO  23:09:34,614 - #37 ]
INFO  23:09:34,614 - #32 ,
INFO  23:09:34,614 - #44 y
INFO  23:09:34,614 - #36 [
INFO  23:09:34,614 - #37 ]
INFO  23:09:34,614 - #31 ;
INFO  23:09:34,615 - #39 }
INFO  23:09:34,615 - #6 const
INFO  23:09:34,615 - #44 int
INFO  23:09:34,615 - #44 pi
INFO  23:09:34,615 - #28 =
INFO  23:09:34,615 - #43 3
INFO  23:09:34,615 - #32 ,
INFO  23:09:34,615 - #44 e
INFO  23:09:34,615 - #28 =
INFO  23:09:34,615 - #43 2
INFO  23:09:34,615 - #31 ;
INFO  23:09:34,615 - #4 class
INFO  23:09:34,616 - #44 B
INFO  23:09:34,616 - #14 extends
INFO  23:09:34,616 - #44 A
INFO  23:09:34,616 - #38 {
INFO  23:09:34,616 - #44 int
INFO  23:09:34,616 - #44 i
INFO  23:09:34,616 - #31 ;
INFO  23:09:34,616 - #44 int
INFO  23:09:34,616 - #44 x
INFO  23:09:34,616 - #36 [
INFO  23:09:34,616 - #37 ]
INFO  23:09:34,616 - #31 ;
INFO  23:09:34,616 - #38 {
INFO  23:09:34,616 - #44 int
INFO  23:09:34,617 - #44 getValue
INFO  23:09:34,617 - #34 (
INFO  23:09:34,617 - #44 int
INFO  23:09:34,617 - #44 a
INFO  23:09:34,617 - #35 )
INFO  23:09:34,617 - #44 int
INFO  23:09:34,617 - #44 b
INFO  23:09:34,617 - #31 ;
INFO  23:09:34,617 - #44 bool
INFO  23:09:34,617 - #44 c
INFO  23:09:34,617 - #31 ;
INFO  23:09:34,617 - #38 {
INFO  23:09:34,617 - #11 return
INFO  23:09:34,618 - #44 this
INFO  23:09:34,618 - #33 .
INFO  23:09:34,618 - #44 i
INFO  23:09:34,618 - #15 +
INFO  23:09:34,618 - #44 this
INFO  23:09:34,618 - #33 .
INFO  23:09:34,618 - #44 x
INFO  23:09:34,618 - #36 [
INFO  23:09:34,618 - #43 0
INFO  23:09:34,618 - #37 ]
INFO  23:09:34,619 - #15 +
INFO  23:09:34,619 - #44 a
INFO  23:09:34,619 - #31 ;
INFO  23:09:34,619 - #39 }
INFO  23:09:34,619 - #39 }
INFO  23:09:34,619 - #39 }
INFO  23:09:34,619 - #4 class
INFO  23:09:34,619 - #44 C
INFO  23:09:34,619 - #14 extends
INFO  23:09:34,619 - #44 B
INFO  23:09:34,620 - #38 {
INFO  23:09:34,620 - #44 A
INFO  23:09:34,620 - #44 theA
INFO  23:09:34,620 - #31 ;
INFO  23:09:34,620 - #44 string
INFO  23:09:34,620 - #44 a
INFO  23:09:34,620 - #31 ;
INFO  23:09:34,620 - #38 {
INFO  23:09:34,621 - #12 void
INFO  23:09:34,621 - #44 aaa
INFO  23:09:34,621 - #34 (
INFO  23:09:34,621 - #35 )
INFO  23:09:34,621 - #44 A
INFO  23:09:34,621 - #44 a
INFO  23:09:34,621 - #31 ;
INFO  23:09:34,621 - #44 C
INFO  23:09:34,621 - #44 c
INFO  23:09:34,622 - #31 ;
INFO  23:09:34,622 - #44 int
INFO  23:09:34,622 - #44 i
INFO  23:09:34,622 - #31 ;
INFO  23:09:34,622 - #44 int
INFO  23:09:34,622 - #44 x
INFO  23:09:34,622 - #36 [
INFO  23:09:34,622 - #37 ]
INFO  23:09:34,622 - #31 ;
INFO  23:09:34,622 - #38 {
INFO  23:09:34,623 - #39 }
INFO  23:09:34,623 - #12 void
INFO  23:09:34,623 - #44 bbb
INFO  23:09:34,623 - #34 (
INFO  23:09:34,623 - #35 )
INFO  23:09:34,623 - #44 A
INFO  23:09:34,623 - #44 a
INFO  23:09:34,623 - #31 ;
INFO  23:09:34,623 - #44 C
INFO  23:09:34,623 - #44 c
INFO  23:09:34,623 - #31 ;
INFO  23:09:34,623 - #44 int
INFO  23:09:34,624 - #44 i
INFO  23:09:34,624 - #31 ;
INFO  23:09:34,624 - #44 int
INFO  23:09:34,624 - #44 x
INFO  23:09:34,624 - #36 [
INFO  23:09:34,624 - #37 ]
INFO  23:09:34,624 - #31 ;
INFO  23:09:34,624 - #38 {
INFO  23:09:34,624 - #39 }
INFO  23:09:34,624 - #12 void
INFO  23:09:34,624 - #44 ccc
INFO  23:09:34,624 - #34 (
INFO  23:09:34,625 - #35 )
INFO  23:09:34,625 - #44 A
INFO  23:09:34,625 - #44 a
INFO  23:09:34,625 - #31 ;
INFO  23:09:34,625 - #44 C
INFO  23:09:34,625 - #44 c
INFO  23:09:34,625 - #31 ;
INFO  23:09:34,625 - #44 int
INFO  23:09:34,625 - #44 i
INFO  23:09:34,625 - #31 ;
INFO  23:09:34,626 - #44 int
INFO  23:09:34,626 - #44 x
INFO  23:09:34,626 - #36 [
INFO  23:09:34,626 - #37 ]
INFO  23:09:34,626 - #31 ;
INFO  23:09:34,626 - #38 {
INFO  23:09:34,626 - #39 }
INFO  23:09:34,626 - #39 }
INFO  23:09:34,626 - #39 }
INFO  23:09:34,626 - #38 {
INFO  23:09:34,627 - #12 void
INFO  23:09:34,627 - #44 main
INFO  23:09:34,627 - #34 (
INFO  23:09:34,627 - #35 )
INFO  23:09:34,627 - #44 A
INFO  23:09:34,627 - #44 a
INFO  23:09:34,627 - #31 ;
INFO  23:09:34,627 - #44 C
INFO  23:09:34,627 - #44 c
INFO  23:09:34,627 - #31 ;
INFO  23:09:34,627 - #44 int
INFO  23:09:34,627 - #44 i
INFO  23:09:34,627 - #31 ;
INFO  23:09:34,628 - #44 int
INFO  23:09:34,628 - #44 x
INFO  23:09:34,628 - #36 [
INFO  23:09:34,628 - #37 ]
INFO  23:09:34,628 - #31 ;
INFO  23:09:34,628 - #38 {
INFO  23:09:34,628 - #44 a
INFO  23:09:34,628 - #28 =
INFO  23:09:34,628 - #8 new
INFO  23:09:34,628 - #44 A
INFO  23:09:34,628 - #31 ;
INFO  23:09:34,628 - #44 a
INFO  23:09:34,629 - #33 .
INFO  23:09:34,629 - #44 x
INFO  23:09:34,629 - #28 =
INFO  23:09:34,629 - #8 new
INFO  23:09:34,629 - #44 int
INFO  23:09:34,629 - #36 [
INFO  23:09:34,629 - #43 5
INFO  23:09:34,629 - #37 ]
INFO  23:09:34,629 - #31 ;
INFO  23:09:34,630 - #44 a
INFO  23:09:34,630 - #33 .
INFO  23:09:34,630 - #44 y
INFO  23:09:34,630 - #28 =
INFO  23:09:34,630 - #8 new
INFO  23:09:34,630 - #44 int
INFO  23:09:34,630 - #36 [
INFO  23:09:34,630 - #43 5
INFO  23:09:34,630 - #37 ]
INFO  23:09:34,630 - #31 ;
INFO  23:09:34,631 - #44 c
INFO  23:09:34,631 - #28 =
INFO  23:09:34,631 - #8 new
INFO  23:09:34,631 - #44 C
INFO  23:09:34,631 - #31 ;
INFO  23:09:34,631 - #44 c
INFO  23:09:34,631 - #33 .
INFO  23:09:34,631 - #44 theA
INFO  23:09:34,631 - #28 =
INFO  23:09:34,631 - #44 a
INFO  23:09:34,632 - #31 ;
INFO  23:09:34,632 - #44 c
INFO  23:09:34,632 - #33 .
INFO  23:09:34,632 - #44 x
INFO  23:09:34,632 - #28 =
INFO  23:09:34,632 - #8 new
INFO  23:09:34,632 - #44 int
INFO  23:09:34,632 - #36 [
INFO  23:09:34,632 - #43 5
INFO  23:09:34,632 - #37 ]
INFO  23:09:34,632 - #31 ;
INFO  23:09:34,633 - #44 x
INFO  23:09:34,633 - #28 =
INFO  23:09:34,633 - #8 new
INFO  23:09:34,633 - #44 int
INFO  23:09:34,633 - #36 [
INFO  23:09:34,633 - #43 3
INFO  23:09:34,633 - #37 ]
INFO  23:09:34,633 - #31 ;
INFO  23:09:34,633 - #44 i
INFO  23:09:34,634 - #28 =
INFO  23:09:34,634 - #43 0
INFO  23:09:34,634 - #31 ;
INFO  23:09:34,634 - #10 read
INFO  23:09:34,634 - #34 (
INFO  23:09:34,634 - #44 c
INFO  23:09:34,634 - #33 .
INFO  23:09:34,634 - #44 i
INFO  23:09:34,634 - #35 )
INFO  23:09:34,634 - #31 ;
INFO  23:09:34,635 - #13 while
INFO  23:09:34,635 - #34 (
INFO  23:09:34,635 - #44 i
INFO  23:09:34,635 - #24 <
INFO  23:09:34,635 - #43 5
INFO  23:09:34,635 - #35 )
INFO  23:09:34,635 - #38 {
INFO  23:09:34,635 - #10 read
INFO  23:09:34,635 - #34 (
INFO  23:09:34,636 - #44 c
INFO  23:09:34,636 - #33 .
INFO  23:09:34,636 - #44 x
INFO  23:09:34,636 - #36 [
INFO  23:09:34,636 - #44 i
INFO  23:09:34,636 - #37 ]
INFO  23:09:34,636 - #35 )
INFO  23:09:34,636 - #31 ;
INFO  23:09:34,636 - #10 read
INFO  23:09:34,636 - #34 (
INFO  23:09:34,636 - #44 c
INFO  23:09:34,637 - #33 .
INFO  23:09:34,637 - #44 theA
INFO  23:09:34,637 - #33 .
INFO  23:09:34,637 - #44 x
INFO  23:09:34,637 - #36 [
INFO  23:09:34,637 - #44 i
INFO  23:09:34,637 - #37 ]
INFO  23:09:34,637 - #35 )
INFO  23:09:34,637 - #31 ;
INFO  23:09:34,637 - #44 i
INFO  23:09:34,637 - #29 ++
INFO  23:09:34,637 - #31 ;
INFO  23:09:34,638 - #39 }
INFO  23:09:34,638 - #9 print
INFO  23:09:34,638 - #34 (
INFO  23:09:34,638 - #44 c
INFO  23:09:34,638 - #33 .
INFO  23:09:34,638 - #44 getValue
INFO  23:09:34,638 - #34 (
INFO  23:09:34,638 - #44 c
INFO  23:09:34,638 - #33 .
INFO  23:09:34,638 - #44 theA
INFO  23:09:34,638 - #33 .
INFO  23:09:34,638 - #44 x
INFO  23:09:34,638 - #36 [
INFO  23:09:34,638 - #43 0
INFO  23:09:34,638 - #37 ]
INFO  23:09:34,639 - #35 )
INFO  23:09:34,639 - #35 )
INFO  23:09:34,639 - #31 ;
INFO  23:09:34,639 - #39 }
INFO  23:09:34,639 - #39 }
INFO  23:09:34,639 - GlobalVar = 14
INFO  23:09:34,639 - GlobalConst = 2
INFO  23:09:34,639 - LocalMainVar = 4
INFO  23:09:34,639 - GlobalArray = 3
INFO  23:09:34,639 - FuncProg = 4
INFO  23:09:34,639 - Blocks = 5
INFO  23:09:34,639 - FuncCalls = 5
INFO  23:09:34,639 - FormalArg = 1
INFO  23:09:34,640 - DefClass = 3
INFO  23:09:34,640 - DefMClass = 1
INFO  23:09:40,916 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:09:40,925 - #2 program
INFO  23:09:40,925 - #44 Program
INFO  23:09:40,925 - #4 class
INFO  23:09:40,925 - #44 A
INFO  23:09:40,925 - #38 {
INFO  23:09:40,925 - #44 int
INFO  23:09:40,925 - #44 x
INFO  23:09:40,926 - #36 [
INFO  23:09:40,926 - #37 ]
INFO  23:09:40,926 - #32 ,
INFO  23:09:40,926 - #44 y
INFO  23:09:40,926 - #36 [
INFO  23:09:40,926 - #37 ]
INFO  23:09:40,926 - #31 ;
INFO  23:09:40,926 - #39 }
INFO  23:09:40,926 - #6 const
INFO  23:09:40,926 - #44 int
INFO  23:09:40,926 - #44 pi
INFO  23:09:40,926 - #28 =
INFO  23:09:40,926 - #43 3
INFO  23:09:40,927 - #32 ,
INFO  23:09:40,927 - #44 e
INFO  23:09:40,927 - #28 =
INFO  23:09:40,927 - #43 2
INFO  23:09:40,927 - #31 ;
INFO  23:09:40,927 - #4 class
INFO  23:09:40,927 - #44 B
INFO  23:09:40,927 - #14 extends
INFO  23:09:40,927 - #44 A
INFO  23:09:40,927 - #38 {
INFO  23:09:40,927 - #44 int
INFO  23:09:40,928 - #44 i
INFO  23:09:40,928 - #31 ;
INFO  23:09:40,928 - #44 int
INFO  23:09:40,928 - #44 x
INFO  23:09:40,928 - #36 [
INFO  23:09:40,928 - #37 ]
INFO  23:09:40,928 - #31 ;
INFO  23:09:40,928 - #38 {
INFO  23:09:40,928 - #44 int
INFO  23:09:40,928 - #44 getValue
INFO  23:09:40,928 - #34 (
INFO  23:09:40,928 - #44 int
INFO  23:09:40,928 - #44 a
INFO  23:09:40,929 - #35 )
INFO  23:09:40,929 - #44 int
INFO  23:09:40,929 - #44 b
INFO  23:09:40,929 - #31 ;
INFO  23:09:40,929 - #44 bool
INFO  23:09:40,929 - #44 c
INFO  23:09:40,929 - #31 ;
INFO  23:09:40,929 - #38 {
INFO  23:09:40,929 - #11 return
INFO  23:09:40,929 - #44 this
INFO  23:09:40,929 - #33 .
INFO  23:09:40,929 - #44 i
INFO  23:09:40,930 - #15 +
INFO  23:09:40,930 - #44 this
INFO  23:09:40,930 - #33 .
INFO  23:09:40,930 - #44 x
INFO  23:09:40,930 - #36 [
INFO  23:09:40,930 - #43 0
INFO  23:09:40,930 - #37 ]
INFO  23:09:40,930 - #15 +
INFO  23:09:40,930 - #44 a
INFO  23:09:40,931 - #31 ;
INFO  23:09:40,931 - #39 }
INFO  23:09:40,931 - #39 }
INFO  23:09:40,931 - #39 }
INFO  23:09:40,931 - #4 class
INFO  23:09:40,931 - #44 C
INFO  23:09:40,931 - #14 extends
INFO  23:09:40,931 - #44 B
INFO  23:09:40,931 - #38 {
INFO  23:09:40,932 - #44 A
INFO  23:09:40,932 - #44 theA
INFO  23:09:40,932 - #31 ;
INFO  23:09:40,932 - #44 string
INFO  23:09:40,932 - #44 a
INFO  23:09:40,932 - #31 ;
INFO  23:09:40,932 - #38 {
INFO  23:09:40,932 - #12 void
INFO  23:09:40,932 - #44 aaa
INFO  23:09:40,933 - #34 (
INFO  23:09:40,933 - #35 )
INFO  23:09:40,933 - #44 A
INFO  23:09:40,933 - #44 a
INFO  23:09:40,933 - #31 ;
INFO  23:09:40,933 - #44 C
INFO  23:09:40,933 - #44 c
INFO  23:09:40,933 - #31 ;
INFO  23:09:40,933 - #44 int
INFO  23:09:40,934 - #44 i
INFO  23:09:40,934 - #31 ;
INFO  23:09:40,934 - #44 int
INFO  23:09:40,934 - #44 x
INFO  23:09:40,934 - #36 [
INFO  23:09:40,934 - #37 ]
INFO  23:09:40,934 - #31 ;
INFO  23:09:40,934 - #38 {
INFO  23:09:40,934 - #39 }
INFO  23:09:40,935 - #12 void
INFO  23:09:40,935 - #44 bbb
INFO  23:09:40,935 - #34 (
INFO  23:09:40,935 - #35 )
INFO  23:09:40,935 - #44 A
INFO  23:09:40,935 - #44 a
INFO  23:09:40,935 - #31 ;
INFO  23:09:40,935 - #44 C
INFO  23:09:40,935 - #44 c
INFO  23:09:40,935 - #31 ;
INFO  23:09:40,936 - #44 int
INFO  23:09:40,936 - #44 i
INFO  23:09:40,936 - #31 ;
INFO  23:09:40,936 - #44 int
INFO  23:09:40,936 - #44 x
INFO  23:09:40,936 - #36 [
INFO  23:09:40,936 - #37 ]
INFO  23:09:40,936 - #31 ;
INFO  23:09:40,936 - #38 {
INFO  23:09:40,936 - #39 }
INFO  23:09:40,936 - #12 void
INFO  23:09:40,936 - #44 ccc
INFO  23:09:40,937 - #34 (
INFO  23:09:40,937 - #35 )
INFO  23:09:40,937 - #44 A
INFO  23:09:40,937 - #44 a
INFO  23:09:40,937 - #31 ;
INFO  23:09:40,937 - #44 C
INFO  23:09:40,937 - #44 c
INFO  23:09:40,937 - #31 ;
INFO  23:09:40,937 - #44 int
INFO  23:09:40,938 - #44 i
INFO  23:09:40,938 - #31 ;
INFO  23:09:40,938 - #44 int
INFO  23:09:40,938 - #44 x
INFO  23:09:40,938 - #36 [
INFO  23:09:40,938 - #37 ]
INFO  23:09:40,938 - #31 ;
INFO  23:09:40,938 - #38 {
INFO  23:09:40,939 - #39 }
INFO  23:09:40,939 - #39 }
INFO  23:09:40,939 - #39 }
INFO  23:09:40,939 - #38 {
INFO  23:09:40,939 - #12 void
INFO  23:09:40,939 - #44 main
INFO  23:09:40,939 - #34 (
INFO  23:09:40,939 - #35 )
INFO  23:09:40,939 - #44 A
INFO  23:09:40,940 - #44 a
INFO  23:09:40,940 - #31 ;
INFO  23:09:40,940 - #44 C
INFO  23:09:40,940 - #44 c
INFO  23:09:40,940 - #31 ;
INFO  23:09:40,940 - #44 int
INFO  23:09:40,940 - #44 i
INFO  23:09:40,940 - #31 ;
INFO  23:09:40,940 - #44 int
INFO  23:09:40,940 - #44 x
INFO  23:09:40,940 - #36 [
INFO  23:09:40,940 - #37 ]
INFO  23:09:40,941 - #31 ;
INFO  23:09:40,941 - #38 {
INFO  23:09:40,941 - #44 a
INFO  23:09:40,941 - #28 =
INFO  23:09:40,941 - #8 new
INFO  23:09:40,941 - #44 A
INFO  23:09:40,941 - #31 ;
INFO  23:09:40,941 - #44 a
INFO  23:09:40,941 - #33 .
INFO  23:09:40,941 - #44 x
INFO  23:09:40,941 - #28 =
INFO  23:09:40,942 - #8 new
INFO  23:09:40,942 - #44 int
INFO  23:09:40,942 - #36 [
INFO  23:09:40,942 - #43 5
INFO  23:09:40,942 - #37 ]
INFO  23:09:40,942 - #31 ;
INFO  23:09:40,942 - #44 a
INFO  23:09:40,942 - #33 .
INFO  23:09:40,943 - #44 y
INFO  23:09:40,943 - #28 =
INFO  23:09:40,943 - #8 new
INFO  23:09:40,943 - #44 int
INFO  23:09:40,943 - #36 [
INFO  23:09:40,943 - #43 5
INFO  23:09:40,943 - #37 ]
INFO  23:09:40,943 - #31 ;
INFO  23:09:40,943 - #44 c
INFO  23:09:40,943 - #28 =
INFO  23:09:40,944 - #8 new
INFO  23:09:40,944 - #44 C
INFO  23:09:40,944 - #31 ;
INFO  23:09:40,944 - #44 c
INFO  23:09:40,944 - #33 .
INFO  23:09:40,944 - #44 theA
INFO  23:09:40,944 - #28 =
INFO  23:09:40,944 - #44 a
INFO  23:09:40,944 - #31 ;
INFO  23:09:40,944 - #44 c
INFO  23:09:40,944 - #33 .
INFO  23:09:40,945 - #44 x
INFO  23:09:40,945 - #28 =
INFO  23:09:40,945 - #8 new
INFO  23:09:40,945 - #44 int
INFO  23:09:40,945 - #36 [
INFO  23:09:40,946 - #43 5
INFO  23:09:40,946 - #37 ]
INFO  23:09:40,946 - #31 ;
INFO  23:09:40,946 - #44 x
INFO  23:09:40,946 - #28 =
INFO  23:09:40,946 - #8 new
INFO  23:09:40,946 - #44 int
INFO  23:09:40,946 - #36 [
INFO  23:09:40,947 - #43 3
INFO  23:09:40,947 - #37 ]
INFO  23:09:40,947 - #31 ;
INFO  23:09:40,947 - #44 i
INFO  23:09:40,947 - #28 =
INFO  23:09:40,947 - #43 0
INFO  23:09:40,947 - #31 ;
INFO  23:09:40,947 - #10 read
INFO  23:09:40,947 - #34 (
INFO  23:09:40,948 - #44 c
INFO  23:09:40,948 - #33 .
INFO  23:09:40,948 - #44 i
INFO  23:09:40,948 - #35 )
INFO  23:09:40,948 - #31 ;
INFO  23:09:40,948 - #13 while
INFO  23:09:40,948 - #34 (
INFO  23:09:40,948 - #44 i
INFO  23:09:40,948 - #24 <
INFO  23:09:40,949 - #43 5
INFO  23:09:40,949 - #35 )
INFO  23:09:40,949 - #38 {
INFO  23:09:40,949 - #10 read
INFO  23:09:40,949 - #34 (
INFO  23:09:40,949 - #44 c
INFO  23:09:40,949 - #33 .
INFO  23:09:40,949 - #44 x
INFO  23:09:40,949 - #36 [
INFO  23:09:40,950 - #44 i
INFO  23:09:40,950 - #37 ]
INFO  23:09:40,950 - #35 )
INFO  23:09:40,950 - #31 ;
INFO  23:09:40,950 - #10 read
INFO  23:09:40,950 - #34 (
INFO  23:09:40,950 - #44 c
INFO  23:09:40,950 - #33 .
INFO  23:09:40,950 - #44 theA
INFO  23:09:40,951 - #33 .
INFO  23:09:40,951 - #44 x
INFO  23:09:40,951 - #36 [
INFO  23:09:40,951 - #44 i
INFO  23:09:40,951 - #37 ]
INFO  23:09:40,951 - #35 )
INFO  23:09:40,951 - #31 ;
INFO  23:09:40,951 - #44 i
INFO  23:09:40,951 - #29 ++
INFO  23:09:40,952 - #31 ;
INFO  23:09:40,952 - #39 }
INFO  23:09:40,952 - #9 print
INFO  23:09:40,952 - #34 (
INFO  23:09:40,952 - #44 c
INFO  23:09:40,952 - #33 .
INFO  23:09:40,952 - #44 getValue
INFO  23:09:40,952 - #34 (
INFO  23:09:40,952 - #44 c
INFO  23:09:40,952 - #33 .
INFO  23:09:40,952 - #44 theA
INFO  23:09:40,952 - #33 .
INFO  23:09:40,952 - #44 x
INFO  23:09:40,953 - #36 [
INFO  23:09:40,953 - #43 0
INFO  23:09:40,953 - #37 ]
INFO  23:09:40,953 - #35 )
INFO  23:09:40,953 - #35 )
INFO  23:09:40,953 - #31 ;
INFO  23:09:40,953 - #39 }
INFO  23:09:40,953 - #39 }
INFO  23:09:40,953 - GlobalVar = 14
INFO  23:09:40,953 - GlobalConst = 2
INFO  23:09:40,953 - LocalMainVar = 4
INFO  23:09:40,954 - GlobalArray = 3
INFO  23:09:40,954 - FuncProg = 4
INFO  23:09:40,954 - Blocks = 5
INFO  23:09:40,954 - FuncCalls = 5
INFO  23:09:40,954 - FormalArg = 1
INFO  23:09:40,954 - DefClass = 3
INFO  23:09:40,954 - DefMClass = 1
INFO  23:09:55,735 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:09:55,743 - #2 program
INFO  23:09:55,743 - #44 Program
INFO  23:09:55,743 - #4 class
INFO  23:09:55,743 - #44 A
INFO  23:09:55,743 - #38 {
INFO  23:09:55,743 - #44 int
INFO  23:09:55,743 - #44 x
INFO  23:09:55,743 - #36 [
INFO  23:09:55,744 - #37 ]
INFO  23:09:55,744 - #32 ,
INFO  23:09:55,744 - #44 y
INFO  23:09:55,744 - #36 [
INFO  23:09:55,744 - #37 ]
INFO  23:09:55,744 - #31 ;
INFO  23:09:55,744 - #39 }
INFO  23:09:55,744 - #6 const
INFO  23:09:55,744 - #44 int
INFO  23:09:55,744 - #44 pi
INFO  23:09:55,744 - #28 =
INFO  23:09:55,744 - #43 3
INFO  23:09:55,744 - #32 ,
INFO  23:09:55,745 - #44 e
INFO  23:09:55,745 - #28 =
INFO  23:09:55,745 - #43 2
INFO  23:09:55,745 - #31 ;
INFO  23:09:55,745 - #4 class
INFO  23:09:55,745 - #44 B
INFO  23:09:55,745 - #14 extends
INFO  23:09:55,745 - #44 A
INFO  23:09:55,745 - #38 {
INFO  23:09:55,745 - #44 int
INFO  23:09:55,745 - #44 i
INFO  23:09:55,745 - #31 ;
INFO  23:09:55,745 - #44 int
INFO  23:09:55,746 - #44 x
INFO  23:09:55,746 - #36 [
INFO  23:09:55,746 - #37 ]
INFO  23:09:55,746 - #31 ;
INFO  23:09:55,746 - #38 {
INFO  23:09:55,746 - #44 int
INFO  23:09:55,746 - #44 getValue
INFO  23:09:55,746 - #34 (
INFO  23:09:55,746 - #44 int
INFO  23:09:55,746 - #44 a
INFO  23:09:55,746 - #35 )
INFO  23:09:55,746 - #44 int
INFO  23:09:55,746 - #44 b
INFO  23:09:55,746 - #31 ;
INFO  23:09:55,747 - #44 bool
INFO  23:09:55,747 - #44 c
INFO  23:09:55,747 - #31 ;
INFO  23:09:55,747 - #38 {
INFO  23:09:55,747 - #11 return
INFO  23:09:55,747 - #44 this
INFO  23:09:55,747 - #33 .
INFO  23:09:55,747 - #44 i
INFO  23:09:55,747 - #15 +
INFO  23:09:55,747 - #44 this
INFO  23:09:55,747 - #33 .
INFO  23:09:55,747 - #44 x
INFO  23:09:55,748 - #36 [
INFO  23:09:55,748 - #43 0
INFO  23:09:55,748 - #37 ]
INFO  23:09:55,748 - #15 +
INFO  23:09:55,748 - #44 a
INFO  23:09:55,748 - #31 ;
INFO  23:09:55,748 - #39 }
INFO  23:09:55,748 - #39 }
INFO  23:09:55,748 - #39 }
INFO  23:09:55,748 - #4 class
INFO  23:09:55,748 - #44 C
INFO  23:09:55,749 - #14 extends
INFO  23:09:55,749 - #44 B
INFO  23:09:55,749 - #38 {
INFO  23:09:55,749 - #44 A
INFO  23:09:55,749 - #44 theA
INFO  23:09:55,749 - #31 ;
INFO  23:09:55,749 - #44 string
INFO  23:09:55,749 - #44 a
INFO  23:09:55,749 - #31 ;
INFO  23:09:55,750 - #38 {
INFO  23:09:55,750 - #12 void
INFO  23:09:55,750 - #44 aaa
INFO  23:09:55,750 - #34 (
INFO  23:09:55,750 - #35 )
INFO  23:09:55,750 - #44 A
INFO  23:09:55,750 - #44 a
INFO  23:09:55,750 - #31 ;
INFO  23:09:55,750 - #44 C
INFO  23:09:55,751 - #44 c
INFO  23:09:55,751 - #31 ;
INFO  23:09:55,751 - #44 int
INFO  23:09:55,751 - #44 i
INFO  23:09:55,751 - #31 ;
INFO  23:09:55,751 - #44 int
INFO  23:09:55,751 - #44 x
INFO  23:09:55,751 - #36 [
INFO  23:09:55,751 - #37 ]
INFO  23:09:55,752 - #31 ;
INFO  23:09:55,752 - #38 {
INFO  23:09:55,752 - #39 }
INFO  23:09:55,752 - #12 void
INFO  23:09:55,752 - #44 bbb
INFO  23:09:55,752 - #34 (
INFO  23:09:55,752 - #35 )
INFO  23:09:55,752 - #44 A
INFO  23:09:55,752 - #44 a
INFO  23:09:55,753 - #31 ;
INFO  23:09:55,753 - #44 C
INFO  23:09:55,753 - #44 c
INFO  23:09:55,753 - #31 ;
INFO  23:09:55,753 - #44 int
INFO  23:09:55,753 - #44 i
INFO  23:09:55,753 - #31 ;
INFO  23:09:55,753 - #44 int
INFO  23:09:55,753 - #44 x
INFO  23:09:55,753 - #36 [
INFO  23:09:55,753 - #37 ]
INFO  23:09:55,753 - #31 ;
INFO  23:09:55,753 - #38 {
INFO  23:09:55,754 - #39 }
INFO  23:09:55,754 - #12 void
INFO  23:09:55,754 - #44 ccc
INFO  23:09:55,754 - #34 (
INFO  23:09:55,754 - #35 )
INFO  23:09:55,754 - #44 A
INFO  23:09:55,754 - #44 a
INFO  23:09:55,754 - #31 ;
INFO  23:09:55,754 - #44 C
INFO  23:09:55,754 - #44 c
INFO  23:09:55,754 - #31 ;
INFO  23:09:55,754 - #44 int
INFO  23:09:55,754 - #44 i
INFO  23:09:55,754 - #31 ;
INFO  23:09:55,755 - #44 int
INFO  23:09:55,755 - #44 x
INFO  23:09:55,755 - #36 [
INFO  23:09:55,755 - #37 ]
INFO  23:09:55,755 - #31 ;
INFO  23:09:55,755 - #38 {
INFO  23:09:55,755 - #39 }
INFO  23:09:55,755 - #39 }
INFO  23:09:55,755 - #39 }
INFO  23:09:55,755 - #38 {
INFO  23:09:55,755 - #12 void
INFO  23:09:55,756 - #44 main
INFO  23:09:55,756 - #34 (
INFO  23:09:55,756 - #35 )
INFO  23:09:55,756 - #44 A
INFO  23:09:55,756 - #44 a
INFO  23:09:55,756 - #31 ;
INFO  23:09:55,756 - #44 C
INFO  23:09:55,756 - #44 c
INFO  23:09:55,757 - #31 ;
INFO  23:09:55,757 - #44 int
INFO  23:09:55,757 - #44 i
INFO  23:09:55,757 - #31 ;
INFO  23:09:55,757 - #44 int
INFO  23:09:55,757 - #44 x
INFO  23:09:55,757 - #36 [
INFO  23:09:55,757 - #37 ]
INFO  23:09:55,757 - #31 ;
INFO  23:09:55,757 - #38 {
INFO  23:09:55,757 - #44 a
INFO  23:09:55,757 - #28 =
INFO  23:09:55,757 - #8 new
INFO  23:09:55,758 - #44 A
INFO  23:09:55,758 - #31 ;
INFO  23:09:55,758 - #44 a
INFO  23:09:55,758 - #33 .
INFO  23:09:55,758 - #44 x
INFO  23:09:55,758 - #28 =
INFO  23:09:55,758 - #8 new
INFO  23:09:55,758 - #44 int
INFO  23:09:55,758 - #36 [
INFO  23:09:55,758 - #43 5
INFO  23:09:55,758 - #37 ]
INFO  23:09:55,759 - #31 ;
INFO  23:09:55,759 - #44 a
INFO  23:09:55,759 - #33 .
INFO  23:09:55,759 - #44 y
INFO  23:09:55,759 - #28 =
INFO  23:09:55,759 - #8 new
INFO  23:09:55,759 - #44 int
INFO  23:09:55,759 - #36 [
INFO  23:09:55,759 - #43 5
INFO  23:09:55,759 - #37 ]
INFO  23:09:55,760 - #31 ;
INFO  23:09:55,760 - #44 c
INFO  23:09:55,760 - #28 =
INFO  23:09:55,760 - #8 new
INFO  23:09:55,760 - #44 C
INFO  23:09:55,760 - #31 ;
INFO  23:09:55,760 - #44 c
INFO  23:09:55,760 - #33 .
INFO  23:09:55,760 - #44 theA
INFO  23:09:55,760 - #28 =
INFO  23:09:55,760 - #44 a
INFO  23:09:55,760 - #31 ;
INFO  23:09:55,761 - #44 c
INFO  23:09:55,761 - #33 .
INFO  23:09:55,761 - #44 x
INFO  23:09:55,761 - #28 =
INFO  23:09:55,761 - #8 new
INFO  23:09:55,761 - #44 int
INFO  23:09:55,761 - #36 [
INFO  23:09:55,761 - #43 5
INFO  23:09:55,761 - #37 ]
INFO  23:09:55,761 - #31 ;
INFO  23:09:55,761 - #44 x
INFO  23:09:55,761 - #28 =
INFO  23:09:55,761 - #8 new
INFO  23:09:55,762 - #44 int
INFO  23:09:55,762 - #36 [
INFO  23:09:55,762 - #43 3
INFO  23:09:55,762 - #37 ]
INFO  23:09:55,762 - #31 ;
INFO  23:09:55,762 - #44 i
INFO  23:09:55,762 - #28 =
INFO  23:09:55,762 - #43 0
INFO  23:09:55,762 - #31 ;
INFO  23:09:55,762 - #10 read
INFO  23:09:55,763 - #34 (
INFO  23:09:55,763 - #44 c
INFO  23:09:55,763 - #33 .
INFO  23:09:55,763 - #44 i
INFO  23:09:55,763 - #35 )
INFO  23:09:55,763 - #31 ;
INFO  23:09:55,763 - #13 while
INFO  23:09:55,763 - #34 (
INFO  23:09:55,763 - #44 i
INFO  23:09:55,763 - #24 <
INFO  23:09:55,764 - #43 5
INFO  23:09:55,764 - #35 )
INFO  23:09:55,764 - #38 {
INFO  23:09:55,764 - #10 read
INFO  23:09:55,764 - #34 (
INFO  23:09:55,764 - #44 c
INFO  23:09:55,764 - #33 .
INFO  23:09:55,764 - #44 x
INFO  23:09:55,764 - #36 [
INFO  23:09:55,764 - #44 i
INFO  23:09:55,764 - #37 ]
INFO  23:09:55,765 - #35 )
INFO  23:09:55,765 - #31 ;
INFO  23:09:55,765 - #10 read
INFO  23:09:55,765 - #34 (
INFO  23:09:55,765 - #44 c
INFO  23:09:55,765 - #33 .
INFO  23:09:55,765 - #44 theA
INFO  23:09:55,765 - #33 .
INFO  23:09:55,765 - #44 x
INFO  23:09:55,765 - #36 [
INFO  23:09:55,765 - #44 i
INFO  23:09:55,765 - #37 ]
INFO  23:09:55,766 - #35 )
INFO  23:09:55,766 - #31 ;
INFO  23:09:55,766 - #44 i
INFO  23:09:55,766 - #29 ++
INFO  23:09:55,766 - #31 ;
INFO  23:09:55,766 - #39 }
INFO  23:09:55,766 - #9 print
INFO  23:09:55,766 - #34 (
INFO  23:09:55,766 - #44 c
INFO  23:09:55,766 - #33 .
INFO  23:09:55,766 - #44 getValue
INFO  23:09:55,766 - #34 (
INFO  23:09:55,767 - #44 c
INFO  23:09:55,767 - #33 .
INFO  23:09:55,767 - #44 theA
INFO  23:09:55,767 - #33 .
INFO  23:09:55,767 - #44 x
INFO  23:09:55,767 - #36 [
INFO  23:09:55,767 - #43 0
INFO  23:09:55,767 - #37 ]
INFO  23:09:55,767 - #35 )
INFO  23:09:55,767 - #35 )
INFO  23:09:55,767 - #31 ;
INFO  23:09:55,767 - #39 }
INFO  23:09:55,767 - #39 }
INFO  23:09:55,768 - GlobalVar = 14
INFO  23:09:55,768 - GlobalConst = 2
INFO  23:09:55,768 - LocalMainVar = 4
INFO  23:09:55,768 - GlobalArray = 3
INFO  23:09:55,768 - FuncProg = 4
INFO  23:09:55,768 - Blocks = 5
INFO  23:09:55,768 - FuncCalls = 5
INFO  23:09:55,768 - FormalArg = 1
INFO  23:09:55,768 - DefClass = 3
INFO  23:09:55,768 - DefMClass = 1
INFO  23:11:21,705 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:11:21,719 - #2 program
INFO  23:11:21,719 - #44 Program
INFO  23:11:21,719 - #4 class
INFO  23:11:21,719 - #44 A
INFO  23:11:21,719 - #38 {
INFO  23:11:21,720 - #44 int
INFO  23:11:21,720 - #44 x
INFO  23:11:21,720 - #36 [
INFO  23:11:21,720 - #37 ]
INFO  23:11:21,720 - #32 ,
INFO  23:11:21,720 - #44 y
INFO  23:11:21,720 - #36 [
INFO  23:11:21,720 - #37 ]
INFO  23:11:21,721 - #31 ;
INFO  23:11:21,721 - #39 }
INFO  23:11:21,721 - #6 const
INFO  23:11:21,721 - #44 int
INFO  23:11:21,721 - #44 pi
INFO  23:11:21,721 - #28 =
INFO  23:11:21,721 - #43 3
INFO  23:11:21,721 - #32 ,
INFO  23:11:21,721 - #44 e
INFO  23:11:21,722 - #28 =
INFO  23:11:21,722 - #43 2
INFO  23:11:21,722 - #31 ;
INFO  23:11:21,722 - #4 class
INFO  23:11:21,722 - #44 B
INFO  23:11:21,722 - #14 extends
INFO  23:11:21,722 - #44 A
INFO  23:11:21,723 - #38 {
INFO  23:11:21,723 - #44 int
INFO  23:11:21,723 - #44 i
INFO  23:11:21,724 - #31 ;
INFO  23:11:21,724 - #44 int
INFO  23:11:21,724 - #44 x
INFO  23:11:21,724 - #36 [
INFO  23:11:21,724 - #37 ]
INFO  23:11:21,724 - #31 ;
INFO  23:11:21,724 - #38 {
INFO  23:11:21,724 - #44 int
INFO  23:11:21,725 - #44 getValue
INFO  23:11:21,725 - #34 (
INFO  23:11:21,725 - #44 int
INFO  23:11:21,725 - #44 a
INFO  23:11:21,725 - #35 )
INFO  23:11:21,725 - #44 int
INFO  23:11:21,725 - #44 b
INFO  23:11:21,725 - #31 ;
INFO  23:11:21,726 - #44 bool
INFO  23:11:21,726 - #44 c
INFO  23:11:21,726 - #31 ;
INFO  23:11:21,726 - #38 {
INFO  23:11:21,726 - #11 return
INFO  23:11:21,727 - #44 this
INFO  23:11:21,727 - #33 .
INFO  23:11:21,727 - #44 i
INFO  23:11:21,727 - #15 +
INFO  23:11:21,727 - #44 this
INFO  23:11:21,727 - #33 .
INFO  23:11:21,727 - #44 x
INFO  23:11:21,727 - #36 [
INFO  23:11:21,728 - #43 0
INFO  23:11:21,728 - #37 ]
INFO  23:11:21,728 - #15 +
INFO  23:11:21,728 - #44 a
INFO  23:11:21,728 - #31 ;
INFO  23:11:21,728 - #39 }
INFO  23:11:21,728 - #39 }
INFO  23:11:21,728 - #39 }
INFO  23:11:21,728 - #4 class
INFO  23:11:21,729 - #44 C
INFO  23:11:21,729 - #14 extends
INFO  23:11:21,729 - #44 B
INFO  23:11:21,729 - #38 {
INFO  23:11:21,729 - #44 A
INFO  23:11:21,730 - #44 theA
INFO  23:11:21,730 - #31 ;
INFO  23:11:21,730 - #44 string
INFO  23:11:21,730 - #44 a
INFO  23:11:21,730 - #31 ;
INFO  23:11:21,730 - #38 {
INFO  23:11:21,731 - #12 void
INFO  23:11:21,731 - #44 aaa
INFO  23:11:21,731 - #34 (
INFO  23:11:21,731 - #35 )
INFO  23:11:21,731 - #44 A
INFO  23:11:21,731 - #44 a
INFO  23:11:21,732 - #31 ;
INFO  23:11:21,732 - #44 C
INFO  23:11:21,732 - #44 c
INFO  23:11:21,732 - #31 ;
INFO  23:11:21,732 - #44 int
INFO  23:11:21,732 - #44 i
INFO  23:11:21,733 - #31 ;
INFO  23:11:21,733 - #44 int
INFO  23:11:21,733 - #44 x
INFO  23:11:21,733 - #36 [
INFO  23:11:21,733 - #37 ]
INFO  23:11:21,733 - #31 ;
INFO  23:11:21,733 - #38 {
INFO  23:11:21,733 - #39 }
INFO  23:11:21,733 - #12 void
INFO  23:11:21,734 - #44 bbb
INFO  23:11:21,734 - #34 (
INFO  23:11:21,734 - #35 )
INFO  23:11:21,734 - #44 A
INFO  23:11:21,734 - #44 a
INFO  23:11:21,734 - #31 ;
INFO  23:11:21,734 - #44 C
INFO  23:11:21,734 - #44 c
INFO  23:11:21,734 - #31 ;
INFO  23:11:21,735 - #44 int
INFO  23:11:21,735 - #44 i
INFO  23:11:21,735 - #31 ;
INFO  23:11:21,735 - #44 int
INFO  23:11:21,735 - #44 x
INFO  23:11:21,735 - #36 [
INFO  23:11:21,735 - #37 ]
INFO  23:11:21,735 - #31 ;
INFO  23:11:21,735 - #38 {
INFO  23:11:21,735 - #39 }
INFO  23:11:21,736 - #12 void
INFO  23:11:21,736 - #44 ccc
INFO  23:11:21,736 - #34 (
INFO  23:11:21,736 - #35 )
INFO  23:11:21,736 - #44 A
INFO  23:11:21,737 - #44 a
INFO  23:11:21,737 - #31 ;
INFO  23:11:21,737 - #44 C
INFO  23:11:21,737 - #44 c
INFO  23:11:21,737 - #31 ;
INFO  23:11:21,737 - #44 int
INFO  23:11:21,738 - #44 i
INFO  23:11:21,738 - #31 ;
INFO  23:11:21,738 - #44 int
INFO  23:11:21,738 - #44 x
INFO  23:11:21,738 - #36 [
INFO  23:11:21,738 - #37 ]
INFO  23:11:21,739 - #31 ;
INFO  23:11:21,739 - #38 {
INFO  23:11:21,739 - #39 }
INFO  23:11:21,739 - #39 }
INFO  23:11:21,739 - #39 }
INFO  23:11:21,739 - #38 {
INFO  23:11:21,740 - #12 void
INFO  23:11:21,740 - #44 main
INFO  23:11:21,740 - #34 (
INFO  23:11:21,740 - #35 )
INFO  23:11:21,740 - #44 A
INFO  23:11:21,740 - #44 a
INFO  23:11:21,741 - #31 ;
INFO  23:11:21,741 - #44 C
INFO  23:11:21,741 - #44 c
INFO  23:11:21,741 - #31 ;
INFO  23:11:21,741 - #44 int
INFO  23:11:21,741 - #44 i
INFO  23:11:21,741 - #31 ;
INFO  23:11:21,741 - #44 int
INFO  23:11:21,741 - #44 x
INFO  23:11:21,742 - #36 [
INFO  23:11:21,742 - #37 ]
INFO  23:11:21,742 - #31 ;
INFO  23:11:21,742 - #38 {
INFO  23:11:21,742 - #44 a
INFO  23:11:21,742 - #28 =
INFO  23:11:21,742 - #8 new
INFO  23:11:21,742 - #44 A
INFO  23:11:21,743 - #31 ;
INFO  23:11:21,743 - #44 a
INFO  23:11:21,743 - #33 .
INFO  23:11:21,755 - #44 x
INFO  23:11:21,756 - #28 =
INFO  23:11:21,756 - #8 new
INFO  23:11:21,756 - #44 int
INFO  23:11:21,756 - #36 [
INFO  23:11:21,757 - #43 5
INFO  23:11:21,757 - #37 ]
INFO  23:11:21,757 - #31 ;
INFO  23:11:21,757 - #44 a
INFO  23:11:21,757 - #33 .
INFO  23:11:21,758 - #44 y
INFO  23:11:21,758 - #28 =
INFO  23:11:21,758 - #8 new
INFO  23:11:21,758 - #44 int
INFO  23:11:21,759 - #36 [
INFO  23:11:21,759 - #43 5
INFO  23:11:21,759 - #37 ]
INFO  23:11:21,759 - #31 ;
INFO  23:11:21,760 - #44 c
INFO  23:11:21,760 - #28 =
INFO  23:11:21,760 - #8 new
INFO  23:11:21,760 - #44 C
INFO  23:11:21,760 - #31 ;
INFO  23:11:21,760 - #44 c
INFO  23:11:21,761 - #33 .
INFO  23:11:21,761 - #44 theA
INFO  23:11:21,761 - #28 =
INFO  23:11:21,761 - #44 a
INFO  23:11:21,761 - #31 ;
INFO  23:11:21,761 - #44 c
INFO  23:11:21,761 - #33 .
INFO  23:11:21,761 - #44 x
INFO  23:11:21,762 - #28 =
INFO  23:11:21,762 - #8 new
INFO  23:11:21,762 - #44 int
INFO  23:11:21,762 - #36 [
INFO  23:11:21,762 - #43 5
INFO  23:11:21,762 - #37 ]
INFO  23:11:21,762 - #31 ;
INFO  23:11:21,763 - #44 x
INFO  23:11:21,763 - #28 =
INFO  23:11:21,763 - #8 new
INFO  23:11:21,763 - #44 int
INFO  23:11:21,763 - #36 [
INFO  23:11:21,763 - #43 3
INFO  23:11:21,763 - #37 ]
INFO  23:11:21,764 - #31 ;
INFO  23:11:21,764 - #44 i
INFO  23:11:21,764 - #28 =
INFO  23:11:21,764 - #43 0
INFO  23:11:21,764 - #31 ;
INFO  23:11:21,765 - #10 read
INFO  23:11:21,765 - #34 (
INFO  23:11:21,765 - #44 c
INFO  23:11:21,765 - #33 .
INFO  23:11:21,765 - #44 i
INFO  23:11:21,766 - #35 )
INFO  23:11:21,766 - #31 ;
INFO  23:11:21,766 - #13 while
INFO  23:11:21,766 - #34 (
INFO  23:11:21,767 - #44 i
INFO  23:11:21,767 - #24 <
INFO  23:11:21,767 - #43 5
INFO  23:11:21,767 - #35 )
INFO  23:11:21,768 - #38 {
INFO  23:11:21,768 - #10 read
INFO  23:11:21,768 - #34 (
INFO  23:11:21,768 - #44 c
INFO  23:11:21,768 - #33 .
INFO  23:11:21,768 - #44 x
INFO  23:11:21,769 - #36 [
INFO  23:11:21,769 - #44 i
INFO  23:11:21,769 - #37 ]
INFO  23:11:21,769 - #35 )
INFO  23:11:21,769 - #31 ;
INFO  23:11:21,769 - #10 read
INFO  23:11:21,770 - #34 (
INFO  23:11:21,770 - #44 c
INFO  23:11:21,770 - #33 .
INFO  23:11:21,770 - #44 theA
INFO  23:11:21,770 - #33 .
INFO  23:11:21,770 - #44 x
INFO  23:11:21,771 - #36 [
INFO  23:11:21,771 - #44 i
INFO  23:11:21,771 - #37 ]
INFO  23:11:21,771 - #35 )
INFO  23:11:21,771 - #31 ;
INFO  23:11:21,772 - #44 i
INFO  23:11:21,772 - #29 ++
INFO  23:11:21,772 - #31 ;
INFO  23:11:21,772 - #39 }
INFO  23:11:21,773 - #9 print
INFO  23:11:21,773 - #34 (
INFO  23:11:21,774 - #44 c
INFO  23:11:21,774 - #33 .
INFO  23:11:21,774 - #44 getValue
INFO  23:11:21,774 - #34 (
INFO  23:11:21,774 - #44 c
INFO  23:11:21,775 - #33 .
INFO  23:11:21,775 - #44 theA
INFO  23:11:21,775 - #33 .
INFO  23:11:21,775 - #44 x
INFO  23:11:21,775 - #36 [
INFO  23:11:21,775 - #43 0
INFO  23:11:21,776 - #37 ]
INFO  23:11:21,776 - #35 )
INFO  23:11:21,777 - #35 )
INFO  23:11:21,777 - #31 ;
INFO  23:11:21,777 - #39 }
INFO  23:11:21,777 - #39 }
INFO  23:11:21,777 - GlobalVar = 14
INFO  23:11:21,778 - GlobalConst = 2
INFO  23:11:21,778 - LocalMainVar = 4
INFO  23:11:21,778 - GlobalArray = 3
INFO  23:11:21,778 - FuncProg = 4
INFO  23:11:21,778 - Blocks = 0
INFO  23:11:21,778 - FuncCalls = 5
INFO  23:11:21,778 - FormalArg = 1
INFO  23:11:21,779 - DefClass = 3
INFO  23:11:21,779 - DefMClass = 5
INFO  23:11:53,856 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:11:53,864 - #2 program
INFO  23:11:53,864 - #44 Program
INFO  23:11:53,864 - #4 class
INFO  23:11:53,864 - #44 A
INFO  23:11:53,864 - #38 {
INFO  23:11:53,864 - #44 int
INFO  23:11:53,864 - #44 x
INFO  23:11:53,864 - #36 [
INFO  23:11:53,865 - #37 ]
INFO  23:11:53,865 - #32 ,
INFO  23:11:53,865 - #44 y
INFO  23:11:53,865 - #36 [
INFO  23:11:53,865 - #37 ]
INFO  23:11:53,865 - #31 ;
INFO  23:11:53,865 - #39 }
INFO  23:11:53,865 - #6 const
INFO  23:11:53,865 - #44 int
INFO  23:11:53,865 - #44 pi
INFO  23:11:53,865 - #28 =
INFO  23:11:53,865 - #43 3
INFO  23:11:53,865 - #32 ,
INFO  23:11:53,866 - #44 e
INFO  23:11:53,866 - #28 =
INFO  23:11:53,866 - #43 2
INFO  23:11:53,866 - #31 ;
INFO  23:11:53,866 - #4 class
INFO  23:11:53,866 - #44 B
INFO  23:11:53,866 - #14 extends
INFO  23:11:53,866 - #44 A
INFO  23:11:53,866 - #38 {
INFO  23:11:53,867 - #44 int
INFO  23:11:53,867 - #44 i
INFO  23:11:53,867 - #31 ;
INFO  23:11:53,867 - #44 int
INFO  23:11:53,867 - #44 x
INFO  23:11:53,867 - #36 [
INFO  23:11:53,867 - #37 ]
INFO  23:11:53,867 - #31 ;
INFO  23:11:53,867 - #38 {
INFO  23:11:53,867 - #44 int
INFO  23:11:53,867 - #44 getValue
INFO  23:11:53,867 - #34 (
INFO  23:11:53,867 - #44 int
INFO  23:11:53,868 - #44 a
INFO  23:11:53,868 - #35 )
INFO  23:11:53,868 - #44 int
INFO  23:11:53,868 - #44 b
INFO  23:11:53,868 - #31 ;
INFO  23:11:53,868 - #44 bool
INFO  23:11:53,868 - #44 c
INFO  23:11:53,868 - #31 ;
INFO  23:11:53,868 - #38 {
INFO  23:11:53,868 - #11 return
INFO  23:11:53,868 - #44 this
INFO  23:11:53,868 - #33 .
INFO  23:11:53,869 - #44 i
INFO  23:11:53,869 - #15 +
INFO  23:11:53,869 - #44 this
INFO  23:11:53,869 - #33 .
INFO  23:11:53,869 - #44 x
INFO  23:11:53,869 - #36 [
INFO  23:11:53,869 - #43 0
INFO  23:11:53,869 - #37 ]
INFO  23:11:53,869 - #15 +
INFO  23:11:53,869 - #44 a
INFO  23:11:53,869 - #31 ;
INFO  23:11:53,869 - #39 }
INFO  23:11:53,870 - #39 }
INFO  23:11:53,870 - #39 }
INFO  23:11:53,870 - #4 class
INFO  23:11:53,870 - #44 C
INFO  23:11:53,870 - #14 extends
INFO  23:11:53,870 - #44 B
INFO  23:11:53,870 - #38 {
INFO  23:11:53,870 - #44 A
INFO  23:11:53,870 - #44 theA
INFO  23:11:53,871 - #31 ;
INFO  23:11:53,871 - #44 string
INFO  23:11:53,871 - #44 a
INFO  23:11:53,871 - #31 ;
INFO  23:11:53,871 - #38 {
INFO  23:11:53,871 - #12 void
INFO  23:11:53,871 - #44 aaa
INFO  23:11:53,871 - #34 (
INFO  23:11:53,871 - #35 )
INFO  23:11:53,872 - #44 A
INFO  23:11:53,872 - #44 a
INFO  23:11:53,872 - #31 ;
INFO  23:11:53,872 - #44 C
INFO  23:11:53,872 - #44 c
INFO  23:11:53,872 - #31 ;
INFO  23:11:53,872 - #44 int
INFO  23:11:53,872 - #44 i
INFO  23:11:53,872 - #31 ;
INFO  23:11:53,872 - #44 int
INFO  23:11:53,873 - #44 x
INFO  23:11:53,873 - #36 [
INFO  23:11:53,873 - #37 ]
INFO  23:11:53,873 - #31 ;
INFO  23:11:53,873 - #38 {
INFO  23:11:53,873 - #39 }
INFO  23:11:53,873 - #12 void
INFO  23:11:53,873 - #44 bbb
INFO  23:11:53,873 - #34 (
INFO  23:11:53,873 - #35 )
INFO  23:11:53,873 - #44 A
INFO  23:11:53,874 - #44 a
INFO  23:11:53,874 - #31 ;
INFO  23:11:53,874 - #44 C
INFO  23:11:53,874 - #44 c
INFO  23:11:53,874 - #31 ;
INFO  23:11:53,874 - #44 int
INFO  23:11:53,874 - #44 i
INFO  23:11:53,874 - #31 ;
INFO  23:11:53,874 - #44 int
INFO  23:11:53,874 - #44 x
INFO  23:11:53,874 - #36 [
INFO  23:11:53,874 - #37 ]
INFO  23:11:53,875 - #31 ;
INFO  23:11:53,875 - #38 {
INFO  23:11:53,875 - #39 }
INFO  23:11:53,875 - #12 void
INFO  23:11:53,875 - #44 ccc
INFO  23:11:53,875 - #34 (
INFO  23:11:53,875 - #35 )
INFO  23:11:53,875 - #44 A
INFO  23:11:53,875 - #44 a
INFO  23:11:53,875 - #31 ;
INFO  23:11:53,875 - #44 C
INFO  23:11:53,876 - #44 c
INFO  23:11:53,876 - #31 ;
INFO  23:11:53,876 - #44 int
INFO  23:11:53,876 - #44 i
INFO  23:11:53,876 - #31 ;
INFO  23:11:53,876 - #44 int
INFO  23:11:53,876 - #44 x
INFO  23:11:53,876 - #36 [
INFO  23:11:53,876 - #37 ]
INFO  23:11:53,877 - #31 ;
INFO  23:11:53,877 - #38 {
INFO  23:11:53,877 - #39 }
INFO  23:11:53,877 - #39 }
INFO  23:11:53,877 - #39 }
INFO  23:11:53,877 - #38 {
INFO  23:11:53,877 - #12 void
INFO  23:11:53,877 - #44 main
INFO  23:11:53,877 - #34 (
INFO  23:11:53,878 - #35 )
INFO  23:11:53,878 - #44 A
INFO  23:11:53,878 - #44 a
INFO  23:11:53,878 - #31 ;
INFO  23:11:53,878 - #44 C
INFO  23:11:53,878 - #44 c
INFO  23:11:53,878 - #31 ;
INFO  23:11:53,878 - #44 int
INFO  23:11:53,878 - #44 i
INFO  23:11:53,878 - #31 ;
INFO  23:11:53,878 - #44 int
INFO  23:11:53,878 - #44 x
INFO  23:11:53,879 - #36 [
INFO  23:11:53,879 - #37 ]
INFO  23:11:53,879 - #31 ;
INFO  23:11:53,879 - #38 {
INFO  23:11:53,879 - #44 a
INFO  23:11:53,879 - #28 =
INFO  23:11:53,879 - #8 new
INFO  23:11:53,879 - #44 A
INFO  23:11:53,879 - #31 ;
INFO  23:11:53,879 - #44 a
INFO  23:11:53,879 - #33 .
INFO  23:11:53,879 - #44 x
INFO  23:11:53,880 - #28 =
INFO  23:11:53,880 - #8 new
INFO  23:11:53,880 - #44 int
INFO  23:11:53,880 - #36 [
INFO  23:11:53,880 - #43 5
INFO  23:11:53,880 - #37 ]
INFO  23:11:53,880 - #31 ;
INFO  23:11:53,880 - #44 a
INFO  23:11:53,881 - #33 .
INFO  23:11:53,881 - #44 y
INFO  23:11:53,881 - #28 =
INFO  23:11:53,881 - #8 new
INFO  23:11:53,881 - #44 int
INFO  23:11:53,881 - #36 [
INFO  23:11:53,881 - #43 5
INFO  23:11:53,881 - #37 ]
INFO  23:11:53,881 - #31 ;
INFO  23:11:53,882 - #44 c
INFO  23:11:53,882 - #28 =
INFO  23:11:53,882 - #8 new
INFO  23:11:53,882 - #44 C
INFO  23:11:53,882 - #31 ;
INFO  23:11:53,882 - #44 c
INFO  23:11:53,882 - #33 .
INFO  23:11:53,882 - #44 theA
INFO  23:11:53,882 - #28 =
INFO  23:11:53,882 - #44 a
INFO  23:11:53,882 - #31 ;
INFO  23:11:53,883 - #44 c
INFO  23:11:53,883 - #33 .
INFO  23:11:53,883 - #44 x
INFO  23:11:53,883 - #28 =
INFO  23:11:53,883 - #8 new
INFO  23:11:53,883 - #44 int
INFO  23:11:53,883 - #36 [
INFO  23:11:53,883 - #43 5
INFO  23:11:53,883 - #37 ]
INFO  23:11:53,883 - #31 ;
INFO  23:11:53,884 - #44 x
INFO  23:11:53,884 - #28 =
INFO  23:11:53,884 - #8 new
INFO  23:11:53,884 - #44 int
INFO  23:11:53,884 - #36 [
INFO  23:11:53,884 - #43 3
INFO  23:11:53,884 - #37 ]
INFO  23:11:53,884 - #31 ;
INFO  23:11:53,884 - #44 i
INFO  23:11:53,884 - #28 =
INFO  23:11:53,885 - #43 0
INFO  23:11:53,885 - #31 ;
INFO  23:11:53,885 - #10 read
INFO  23:11:53,885 - #34 (
INFO  23:11:53,885 - #44 c
INFO  23:11:53,885 - #33 .
INFO  23:11:53,885 - #44 i
INFO  23:11:53,885 - #35 )
INFO  23:11:53,885 - #31 ;
INFO  23:11:53,885 - #13 while
INFO  23:11:53,886 - #34 (
INFO  23:11:53,886 - #44 i
INFO  23:11:53,886 - #24 <
INFO  23:11:53,886 - #43 5
INFO  23:11:53,886 - #35 )
INFO  23:11:53,886 - #38 {
INFO  23:11:53,886 - #10 read
INFO  23:11:53,886 - #34 (
INFO  23:11:53,886 - #44 c
INFO  23:11:53,886 - #33 .
INFO  23:11:53,887 - #44 x
INFO  23:11:53,887 - #36 [
INFO  23:11:53,887 - #44 i
INFO  23:11:53,887 - #37 ]
INFO  23:11:53,887 - #35 )
INFO  23:11:53,887 - #31 ;
INFO  23:11:53,887 - #10 read
INFO  23:11:53,887 - #34 (
INFO  23:11:53,887 - #44 c
INFO  23:11:53,887 - #33 .
INFO  23:11:53,888 - #44 theA
INFO  23:11:53,888 - #33 .
INFO  23:11:53,888 - #44 x
INFO  23:11:53,888 - #36 [
INFO  23:11:53,888 - #44 i
INFO  23:11:53,888 - #37 ]
INFO  23:11:53,888 - #35 )
INFO  23:11:53,888 - #31 ;
INFO  23:11:53,888 - #44 i
INFO  23:11:53,888 - #29 ++
INFO  23:11:53,888 - #31 ;
INFO  23:11:53,888 - #39 }
INFO  23:11:53,888 - #9 print
INFO  23:11:53,888 - #34 (
INFO  23:11:53,888 - #44 c
INFO  23:11:53,889 - #33 .
INFO  23:11:53,889 - #44 getValue
INFO  23:11:53,889 - #34 (
INFO  23:11:53,889 - #44 c
INFO  23:11:53,889 - #33 .
INFO  23:11:53,889 - #44 theA
INFO  23:11:53,889 - #33 .
INFO  23:11:53,889 - #44 x
INFO  23:11:53,889 - #36 [
INFO  23:11:53,889 - #43 0
INFO  23:11:53,889 - #37 ]
INFO  23:11:53,889 - #35 )
INFO  23:11:53,889 - #35 )
INFO  23:11:53,889 - #31 ;
INFO  23:11:53,890 - #39 }
INFO  23:11:53,890 - #39 }
INFO  23:11:53,890 - GlobalVar = 14
INFO  23:11:53,890 - GlobalConst = 2
INFO  23:11:53,890 - LocalMainVar = 4
INFO  23:11:53,890 - GlobalArray = 3
INFO  23:11:53,890 - FuncProg = 4
INFO  23:11:53,890 - Blocks = 0
INFO  23:11:53,890 - FuncCalls = 5
INFO  23:11:53,890 - FormalArg = 1
INFO  23:11:53,890 - DefClass = 3
INFO  23:11:53,890 - DefMClass = 5
INFO  23:11:59,113 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:11:59,122 - #2 program
INFO  23:11:59,123 - #44 Program
INFO  23:11:59,123 - #4 class
INFO  23:11:59,123 - #44 A
INFO  23:11:59,123 - #38 {
INFO  23:11:59,123 - #44 int
INFO  23:11:59,123 - #44 x
INFO  23:11:59,123 - #36 [
INFO  23:11:59,123 - #37 ]
INFO  23:11:59,123 - #32 ,
INFO  23:11:59,123 - #44 y
INFO  23:11:59,123 - #36 [
INFO  23:11:59,123 - #37 ]
INFO  23:11:59,124 - #31 ;
INFO  23:11:59,124 - #39 }
INFO  23:11:59,124 - #6 const
INFO  23:11:59,124 - #44 int
INFO  23:11:59,124 - #44 pi
INFO  23:11:59,124 - #28 =
INFO  23:11:59,124 - #43 3
INFO  23:11:59,124 - #32 ,
INFO  23:11:59,124 - #44 e
INFO  23:11:59,124 - #28 =
INFO  23:11:59,124 - #43 2
INFO  23:11:59,124 - #31 ;
INFO  23:11:59,124 - #4 class
INFO  23:11:59,125 - #44 B
INFO  23:11:59,125 - #14 extends
INFO  23:11:59,125 - #44 A
INFO  23:11:59,125 - #38 {
INFO  23:11:59,125 - #44 int
INFO  23:11:59,125 - #44 i
INFO  23:11:59,125 - #31 ;
INFO  23:11:59,125 - #44 int
INFO  23:11:59,125 - #44 x
INFO  23:11:59,125 - #36 [
INFO  23:11:59,125 - #37 ]
INFO  23:11:59,125 - #31 ;
INFO  23:11:59,125 - #38 {
INFO  23:11:59,126 - #44 int
INFO  23:11:59,126 - #44 getValue
INFO  23:11:59,126 - #34 (
INFO  23:11:59,126 - #44 int
INFO  23:11:59,126 - #44 a
INFO  23:11:59,126 - #35 )
INFO  23:11:59,126 - #44 int
INFO  23:11:59,126 - #44 b
INFO  23:11:59,126 - #31 ;
INFO  23:11:59,126 - #44 bool
INFO  23:11:59,126 - #44 c
INFO  23:11:59,126 - #31 ;
INFO  23:11:59,126 - #38 {
INFO  23:11:59,127 - #11 return
INFO  23:11:59,127 - #44 this
INFO  23:11:59,127 - #33 .
INFO  23:11:59,127 - #44 i
INFO  23:11:59,127 - #15 +
INFO  23:11:59,127 - #44 this
INFO  23:11:59,127 - #33 .
INFO  23:11:59,127 - #44 x
INFO  23:11:59,127 - #36 [
INFO  23:11:59,127 - #43 0
INFO  23:11:59,128 - #37 ]
INFO  23:11:59,128 - #15 +
INFO  23:11:59,128 - #44 a
INFO  23:11:59,128 - #31 ;
INFO  23:11:59,128 - #39 }
INFO  23:11:59,128 - #39 }
INFO  23:11:59,128 - #39 }
INFO  23:11:59,128 - #4 class
INFO  23:11:59,128 - #44 C
INFO  23:11:59,128 - #14 extends
INFO  23:11:59,128 - #44 B
INFO  23:11:59,128 - #38 {
INFO  23:11:59,128 - #44 A
INFO  23:11:59,129 - #44 theA
INFO  23:11:59,129 - #31 ;
INFO  23:11:59,129 - #44 string
INFO  23:11:59,129 - #44 a
INFO  23:11:59,129 - #31 ;
INFO  23:11:59,129 - #38 {
INFO  23:11:59,129 - #12 void
INFO  23:11:59,129 - #44 aaa
INFO  23:11:59,129 - #34 (
INFO  23:11:59,129 - #35 )
INFO  23:11:59,129 - #44 A
INFO  23:11:59,129 - #44 a
INFO  23:11:59,129 - #31 ;
INFO  23:11:59,130 - #44 C
INFO  23:11:59,130 - #44 c
INFO  23:11:59,130 - #31 ;
INFO  23:11:59,130 - #44 int
INFO  23:11:59,130 - #44 i
INFO  23:11:59,130 - #31 ;
INFO  23:11:59,130 - #44 int
INFO  23:11:59,130 - #44 x
INFO  23:11:59,130 - #36 [
INFO  23:11:59,130 - #37 ]
INFO  23:11:59,130 - #31 ;
INFO  23:11:59,130 - #38 {
INFO  23:11:59,130 - #39 }
INFO  23:11:59,130 - #12 void
INFO  23:11:59,131 - #44 bbb
INFO  23:11:59,131 - #34 (
INFO  23:11:59,131 - #35 )
INFO  23:11:59,131 - #44 A
INFO  23:11:59,131 - #44 a
INFO  23:11:59,131 - #31 ;
INFO  23:11:59,131 - #44 C
INFO  23:11:59,131 - #44 c
INFO  23:11:59,131 - #31 ;
INFO  23:11:59,131 - #44 int
INFO  23:11:59,131 - #44 i
INFO  23:11:59,131 - #31 ;
INFO  23:11:59,132 - #44 int
INFO  23:11:59,132 - #44 x
INFO  23:11:59,132 - #36 [
INFO  23:11:59,132 - #37 ]
INFO  23:11:59,132 - #31 ;
INFO  23:11:59,132 - #38 {
INFO  23:11:59,132 - #39 }
INFO  23:11:59,132 - #12 void
INFO  23:11:59,132 - #44 ccc
INFO  23:11:59,133 - #34 (
INFO  23:11:59,133 - #35 )
INFO  23:11:59,133 - #44 A
INFO  23:11:59,133 - #44 a
INFO  23:11:59,133 - #31 ;
INFO  23:11:59,133 - #44 C
INFO  23:11:59,133 - #44 c
INFO  23:11:59,133 - #31 ;
INFO  23:11:59,133 - #44 int
INFO  23:11:59,133 - #44 i
INFO  23:11:59,134 - #31 ;
INFO  23:11:59,134 - #44 int
INFO  23:11:59,134 - #44 x
INFO  23:11:59,134 - #36 [
INFO  23:11:59,134 - #37 ]
INFO  23:11:59,134 - #31 ;
INFO  23:11:59,134 - #38 {
INFO  23:11:59,134 - #39 }
INFO  23:11:59,134 - #39 }
INFO  23:11:59,134 - #39 }
INFO  23:11:59,134 - #38 {
INFO  23:11:59,135 - #12 void
INFO  23:11:59,135 - #44 main
INFO  23:11:59,135 - #34 (
INFO  23:11:59,135 - #35 )
INFO  23:11:59,135 - #44 A
INFO  23:11:59,135 - #44 a
INFO  23:11:59,135 - #31 ;
INFO  23:11:59,135 - #44 C
INFO  23:11:59,135 - #44 c
INFO  23:11:59,135 - #31 ;
INFO  23:11:59,135 - #44 int
INFO  23:11:59,135 - #44 i
INFO  23:11:59,136 - #31 ;
INFO  23:11:59,136 - #44 int
INFO  23:11:59,136 - #44 x
INFO  23:11:59,136 - #36 [
INFO  23:11:59,136 - #37 ]
INFO  23:11:59,136 - #31 ;
INFO  23:11:59,136 - #38 {
INFO  23:11:59,136 - #44 a
INFO  23:11:59,136 - #28 =
INFO  23:11:59,136 - #8 new
INFO  23:11:59,136 - #44 A
INFO  23:11:59,136 - #31 ;
INFO  23:11:59,136 - #44 a
INFO  23:11:59,137 - #33 .
INFO  23:11:59,137 - #44 x
INFO  23:11:59,137 - #28 =
INFO  23:11:59,137 - #8 new
INFO  23:11:59,137 - #44 int
INFO  23:11:59,137 - #36 [
INFO  23:11:59,137 - #43 5
INFO  23:11:59,137 - #37 ]
INFO  23:11:59,137 - #31 ;
INFO  23:11:59,138 - #44 a
INFO  23:11:59,138 - #33 .
INFO  23:11:59,138 - #44 y
INFO  23:11:59,138 - #28 =
INFO  23:11:59,138 - #8 new
INFO  23:11:59,138 - #44 int
INFO  23:11:59,138 - #36 [
INFO  23:11:59,138 - #43 5
INFO  23:11:59,138 - #37 ]
INFO  23:11:59,138 - #31 ;
INFO  23:11:59,139 - #44 c
INFO  23:11:59,139 - #28 =
INFO  23:11:59,139 - #8 new
INFO  23:11:59,139 - #44 C
INFO  23:11:59,139 - #31 ;
INFO  23:11:59,139 - #44 c
INFO  23:11:59,139 - #33 .
INFO  23:11:59,139 - #44 theA
INFO  23:11:59,139 - #28 =
INFO  23:11:59,139 - #44 a
INFO  23:11:59,139 - #31 ;
INFO  23:11:59,139 - #44 c
INFO  23:11:59,139 - #33 .
INFO  23:11:59,139 - #44 x
INFO  23:11:59,140 - #28 =
INFO  23:11:59,140 - #8 new
INFO  23:11:59,140 - #44 int
INFO  23:11:59,140 - #36 [
INFO  23:11:59,140 - #43 5
INFO  23:11:59,140 - #37 ]
INFO  23:11:59,140 - #31 ;
INFO  23:11:59,140 - #44 x
INFO  23:11:59,140 - #28 =
INFO  23:11:59,140 - #8 new
INFO  23:11:59,140 - #44 int
INFO  23:11:59,140 - #36 [
INFO  23:11:59,140 - #43 3
INFO  23:11:59,141 - #37 ]
INFO  23:11:59,141 - #31 ;
INFO  23:11:59,141 - #44 i
INFO  23:11:59,141 - #28 =
INFO  23:11:59,141 - #43 0
INFO  23:11:59,141 - #31 ;
INFO  23:11:59,141 - #10 read
INFO  23:11:59,141 - #34 (
INFO  23:11:59,141 - #44 c
INFO  23:11:59,141 - #33 .
INFO  23:11:59,141 - #44 i
INFO  23:11:59,141 - #35 )
INFO  23:11:59,141 - #31 ;
INFO  23:11:59,141 - #13 while
INFO  23:11:59,142 - #34 (
INFO  23:11:59,142 - #44 i
INFO  23:11:59,142 - #24 <
INFO  23:11:59,142 - #43 5
INFO  23:11:59,142 - #35 )
INFO  23:11:59,142 - #38 {
INFO  23:11:59,142 - #10 read
INFO  23:11:59,142 - #34 (
INFO  23:11:59,142 - #44 c
INFO  23:11:59,142 - #33 .
INFO  23:11:59,142 - #44 x
INFO  23:11:59,142 - #36 [
INFO  23:11:59,142 - #44 i
INFO  23:11:59,143 - #37 ]
INFO  23:11:59,143 - #35 )
INFO  23:11:59,143 - #31 ;
INFO  23:11:59,143 - #10 read
INFO  23:11:59,143 - #34 (
INFO  23:11:59,143 - #44 c
INFO  23:11:59,143 - #33 .
INFO  23:11:59,143 - #44 theA
INFO  23:11:59,143 - #33 .
INFO  23:11:59,143 - #44 x
INFO  23:11:59,143 - #36 [
INFO  23:11:59,143 - #44 i
INFO  23:11:59,143 - #37 ]
INFO  23:11:59,144 - #35 )
INFO  23:11:59,144 - #31 ;
INFO  23:11:59,144 - #44 i
INFO  23:11:59,144 - #29 ++
INFO  23:11:59,144 - #31 ;
INFO  23:11:59,144 - #39 }
INFO  23:11:59,144 - #9 print
INFO  23:11:59,144 - #34 (
INFO  23:11:59,144 - #44 c
INFO  23:11:59,144 - #33 .
INFO  23:11:59,144 - #44 getValue
INFO  23:11:59,144 - #34 (
INFO  23:11:59,144 - #44 c
INFO  23:11:59,145 - #33 .
INFO  23:11:59,145 - #44 theA
INFO  23:11:59,145 - #33 .
INFO  23:11:59,145 - #44 x
INFO  23:11:59,145 - #36 [
INFO  23:11:59,145 - #43 0
INFO  23:11:59,145 - #37 ]
INFO  23:11:59,145 - #35 )
INFO  23:11:59,145 - #35 )
INFO  23:11:59,145 - #31 ;
INFO  23:11:59,145 - #39 }
INFO  23:11:59,145 - #39 }
INFO  23:11:59,146 - GlobalVar = 14
INFO  23:11:59,146 - GlobalConst = 2
INFO  23:11:59,146 - LocalMainVar = 4
INFO  23:11:59,146 - GlobalArray = 3
INFO  23:11:59,146 - FuncProg = 4
INFO  23:11:59,146 - Blocks = 0
INFO  23:11:59,146 - FuncCalls = 5
INFO  23:11:59,146 - FormalArg = 1
INFO  23:11:59,146 - DefClass = 3
INFO  23:11:59,146 - DefMClass = 5
INFO  23:12:07,194 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:12:07,203 - #2 program
INFO  23:12:07,203 - #44 Program
INFO  23:12:07,203 - #4 class
INFO  23:12:07,203 - #44 A
INFO  23:12:07,203 - #38 {
INFO  23:12:07,204 - #44 int
INFO  23:12:07,204 - #44 x
INFO  23:12:07,204 - #36 [
INFO  23:12:07,204 - #37 ]
INFO  23:12:07,204 - #32 ,
INFO  23:12:07,204 - #44 y
INFO  23:12:07,204 - #36 [
INFO  23:12:07,204 - #37 ]
INFO  23:12:07,204 - #31 ;
INFO  23:12:07,204 - #39 }
INFO  23:12:07,204 - #6 const
INFO  23:12:07,205 - #44 int
INFO  23:12:07,205 - #44 pi
INFO  23:12:07,205 - #28 =
INFO  23:12:07,205 - #43 3
INFO  23:12:07,205 - #32 ,
INFO  23:12:07,205 - #44 e
INFO  23:12:07,205 - #28 =
INFO  23:12:07,205 - #43 2
INFO  23:12:07,205 - #31 ;
INFO  23:12:07,205 - #4 class
INFO  23:12:07,205 - #44 B
INFO  23:12:07,205 - #14 extends
INFO  23:12:07,205 - #44 A
INFO  23:12:07,206 - #38 {
INFO  23:12:07,206 - #44 int
INFO  23:12:07,206 - #44 i
INFO  23:12:07,206 - #31 ;
INFO  23:12:07,206 - #44 int
INFO  23:12:07,206 - #44 x
INFO  23:12:07,206 - #36 [
INFO  23:12:07,206 - #37 ]
INFO  23:12:07,206 - #31 ;
INFO  23:12:07,206 - #38 {
INFO  23:12:07,206 - #44 int
INFO  23:12:07,206 - #44 getValue
INFO  23:12:07,207 - #34 (
INFO  23:12:07,207 - #44 int
INFO  23:12:07,207 - #44 a
INFO  23:12:07,207 - #35 )
INFO  23:12:07,207 - #44 int
INFO  23:12:07,207 - #44 b
INFO  23:12:07,207 - #31 ;
INFO  23:12:07,207 - #44 bool
INFO  23:12:07,207 - #44 c
INFO  23:12:07,207 - #31 ;
INFO  23:12:07,207 - #38 {
INFO  23:12:07,207 - #11 return
INFO  23:12:07,207 - #44 this
INFO  23:12:07,208 - #33 .
INFO  23:12:07,208 - #44 i
INFO  23:12:07,208 - #15 +
INFO  23:12:07,208 - #44 this
INFO  23:12:07,208 - #33 .
INFO  23:12:07,208 - #44 x
INFO  23:12:07,208 - #36 [
INFO  23:12:07,208 - #43 0
INFO  23:12:07,208 - #37 ]
INFO  23:12:07,208 - #15 +
INFO  23:12:07,208 - #44 a
INFO  23:12:07,209 - #31 ;
INFO  23:12:07,209 - #39 }
INFO  23:12:07,209 - #39 }
INFO  23:12:07,209 - #39 }
INFO  23:12:07,209 - #4 class
INFO  23:12:07,209 - #44 C
INFO  23:12:07,209 - #14 extends
INFO  23:12:07,209 - #44 B
INFO  23:12:07,209 - #38 {
INFO  23:12:07,209 - #44 A
INFO  23:12:07,210 - #44 theA
INFO  23:12:07,210 - #31 ;
INFO  23:12:07,210 - #44 string
INFO  23:12:07,210 - #44 a
INFO  23:12:07,210 - #31 ;
INFO  23:12:07,210 - #38 {
INFO  23:12:07,210 - #12 void
INFO  23:12:07,210 - #44 aaa
INFO  23:12:07,210 - #34 (
INFO  23:12:07,211 - #35 )
INFO  23:12:07,211 - #44 A
INFO  23:12:07,211 - #44 a
INFO  23:12:07,211 - #31 ;
INFO  23:12:07,211 - #44 C
INFO  23:12:07,211 - #44 c
INFO  23:12:07,211 - #31 ;
INFO  23:12:07,211 - #44 int
INFO  23:12:07,211 - #44 i
INFO  23:12:07,211 - #31 ;
INFO  23:12:07,211 - #44 int
INFO  23:12:07,212 - #44 x
INFO  23:12:07,212 - #36 [
INFO  23:12:07,212 - #37 ]
INFO  23:12:07,212 - #31 ;
INFO  23:12:07,212 - #38 {
INFO  23:12:07,212 - #39 }
INFO  23:12:07,212 - #12 void
INFO  23:12:07,212 - #44 bbb
INFO  23:12:07,212 - #34 (
INFO  23:12:07,212 - #35 )
INFO  23:12:07,212 - #44 A
INFO  23:12:07,213 - #44 a
INFO  23:12:07,213 - #31 ;
INFO  23:12:07,213 - #44 C
INFO  23:12:07,213 - #44 c
INFO  23:12:07,213 - #31 ;
INFO  23:12:07,213 - #44 int
INFO  23:12:07,213 - #44 i
INFO  23:12:07,213 - #31 ;
INFO  23:12:07,213 - #44 int
INFO  23:12:07,213 - #44 x
INFO  23:12:07,213 - #36 [
INFO  23:12:07,213 - #37 ]
INFO  23:12:07,213 - #31 ;
INFO  23:12:07,214 - #38 {
INFO  23:12:07,214 - #39 }
INFO  23:12:07,214 - #12 void
INFO  23:12:07,214 - #44 ccc
INFO  23:12:07,214 - #34 (
INFO  23:12:07,214 - #35 )
INFO  23:12:07,214 - #44 A
INFO  23:12:07,214 - #44 a
INFO  23:12:07,214 - #31 ;
INFO  23:12:07,214 - #44 C
INFO  23:12:07,214 - #44 c
INFO  23:12:07,215 - #31 ;
INFO  23:12:07,215 - #44 int
INFO  23:12:07,215 - #44 i
INFO  23:12:07,215 - #31 ;
INFO  23:12:07,215 - #44 int
INFO  23:12:07,215 - #44 x
INFO  23:12:07,215 - #36 [
INFO  23:12:07,215 - #37 ]
INFO  23:12:07,215 - #31 ;
INFO  23:12:07,215 - #38 {
INFO  23:12:07,216 - #39 }
INFO  23:12:07,216 - #39 }
INFO  23:12:07,216 - #39 }
INFO  23:12:07,216 - #38 {
INFO  23:12:07,216 - #12 void
INFO  23:12:07,216 - #44 main
INFO  23:12:07,216 - #34 (
INFO  23:12:07,216 - #35 )
INFO  23:12:07,216 - #44 A
INFO  23:12:07,216 - #44 a
INFO  23:12:07,216 - #31 ;
INFO  23:12:07,217 - #44 C
INFO  23:12:07,217 - #44 c
INFO  23:12:07,217 - #31 ;
INFO  23:12:07,217 - #44 int
INFO  23:12:07,217 - #44 i
INFO  23:12:07,217 - #31 ;
INFO  23:12:07,217 - #44 int
INFO  23:12:07,217 - #44 x
INFO  23:12:07,217 - #36 [
INFO  23:12:07,217 - #37 ]
INFO  23:12:07,217 - #31 ;
INFO  23:12:07,217 - #38 {
INFO  23:12:07,218 - #44 a
INFO  23:12:07,218 - #28 =
INFO  23:12:07,218 - #8 new
INFO  23:12:07,218 - #44 A
INFO  23:12:07,218 - #31 ;
INFO  23:12:07,218 - #44 a
INFO  23:12:07,218 - #33 .
INFO  23:12:07,218 - #44 x
INFO  23:12:07,218 - #28 =
INFO  23:12:07,218 - #8 new
INFO  23:12:07,219 - #44 int
INFO  23:12:07,219 - #36 [
INFO  23:12:07,219 - #43 5
INFO  23:12:07,219 - #37 ]
INFO  23:12:07,219 - #31 ;
INFO  23:12:07,219 - #44 a
INFO  23:12:07,219 - #33 .
INFO  23:12:07,219 - #44 y
INFO  23:12:07,219 - #28 =
INFO  23:12:07,220 - #8 new
INFO  23:12:07,220 - #44 int
INFO  23:12:07,220 - #36 [
INFO  23:12:07,220 - #43 5
INFO  23:12:07,220 - #37 ]
INFO  23:12:07,220 - #31 ;
INFO  23:12:07,220 - #44 c
INFO  23:12:07,220 - #28 =
INFO  23:12:07,220 - #8 new
INFO  23:12:07,220 - #44 C
INFO  23:12:07,221 - #31 ;
INFO  23:12:07,221 - #44 c
INFO  23:12:07,221 - #33 .
INFO  23:12:07,221 - #44 theA
INFO  23:12:07,221 - #28 =
INFO  23:12:07,221 - #44 a
INFO  23:12:07,221 - #31 ;
INFO  23:12:07,221 - #44 c
INFO  23:12:07,221 - #33 .
INFO  23:12:07,221 - #44 x
INFO  23:12:07,222 - #28 =
INFO  23:12:07,222 - #8 new
INFO  23:12:07,222 - #44 int
INFO  23:12:07,222 - #36 [
INFO  23:12:07,222 - #43 5
INFO  23:12:07,222 - #37 ]
INFO  23:12:07,222 - #31 ;
INFO  23:12:07,222 - #44 x
INFO  23:12:07,222 - #28 =
INFO  23:12:07,222 - #8 new
INFO  23:12:07,222 - #44 int
INFO  23:12:07,223 - #36 [
INFO  23:12:07,223 - #43 3
INFO  23:12:07,223 - #37 ]
INFO  23:12:07,223 - #31 ;
INFO  23:12:07,223 - #44 i
INFO  23:12:07,223 - #28 =
INFO  23:12:07,223 - #43 0
INFO  23:12:07,223 - #31 ;
INFO  23:12:07,223 - #10 read
INFO  23:12:07,223 - #34 (
INFO  23:12:07,224 - #44 c
INFO  23:12:07,224 - #33 .
INFO  23:12:07,224 - #44 i
INFO  23:12:07,224 - #35 )
INFO  23:12:07,224 - #31 ;
INFO  23:12:07,224 - #13 while
INFO  23:12:07,224 - #34 (
INFO  23:12:07,224 - #44 i
INFO  23:12:07,224 - #24 <
INFO  23:12:07,224 - #43 5
INFO  23:12:07,225 - #35 )
INFO  23:12:07,225 - #38 {
INFO  23:12:07,225 - #10 read
INFO  23:12:07,225 - #34 (
INFO  23:12:07,225 - #44 c
INFO  23:12:07,225 - #33 .
INFO  23:12:07,225 - #44 x
INFO  23:12:07,225 - #36 [
INFO  23:12:07,225 - #44 i
INFO  23:12:07,225 - #37 ]
INFO  23:12:07,226 - #35 )
INFO  23:12:07,226 - #31 ;
INFO  23:12:07,226 - #10 read
INFO  23:12:07,226 - #34 (
INFO  23:12:07,226 - #44 c
INFO  23:12:07,226 - #33 .
INFO  23:12:07,226 - #44 theA
INFO  23:12:07,226 - #33 .
INFO  23:12:07,226 - #44 x
INFO  23:12:07,226 - #36 [
INFO  23:12:07,226 - #44 i
INFO  23:12:07,227 - #37 ]
INFO  23:12:07,227 - #35 )
INFO  23:12:07,227 - #31 ;
INFO  23:12:07,227 - #44 i
INFO  23:12:07,227 - #29 ++
INFO  23:12:07,227 - #31 ;
INFO  23:12:07,227 - #39 }
INFO  23:12:07,227 - #9 print
INFO  23:12:07,227 - #34 (
INFO  23:12:07,227 - #44 c
INFO  23:12:07,227 - #33 .
INFO  23:12:07,227 - #44 getValue
INFO  23:12:07,227 - #34 (
INFO  23:12:07,228 - #44 c
INFO  23:12:07,228 - #33 .
INFO  23:12:07,228 - #44 theA
INFO  23:12:07,228 - #33 .
INFO  23:12:07,228 - #44 x
INFO  23:12:07,228 - #36 [
INFO  23:12:07,228 - #43 0
INFO  23:12:07,228 - #37 ]
INFO  23:12:07,228 - #35 )
INFO  23:12:07,228 - #35 )
INFO  23:12:07,228 - #31 ;
INFO  23:12:07,228 - #39 }
INFO  23:12:07,228 - #39 }
INFO  23:12:07,229 - GlobalVar = 14
INFO  23:12:07,229 - GlobalConst = 2
INFO  23:12:07,229 - LocalMainVar = 4
INFO  23:12:07,229 - GlobalArray = 3
INFO  23:12:07,229 - FuncProg = 4
INFO  23:12:07,229 - Blocks = 5
INFO  23:12:07,229 - FuncCalls = 5
INFO  23:12:07,229 - FormalArg = 1
INFO  23:12:07,229 - DefClass = 3
INFO  23:12:07,229 - DefMClass = 0
INFO  23:13:35,741 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:13:35,750 - #2 program
INFO  23:13:35,750 - #44 Program
INFO  23:13:35,750 - #4 class
INFO  23:13:35,750 - #44 A
INFO  23:13:35,750 - #38 {
INFO  23:13:35,750 - #44 int
INFO  23:13:35,750 - #44 x
INFO  23:13:35,750 - #36 [
INFO  23:13:35,750 - #37 ]
INFO  23:13:35,751 - #32 ,
INFO  23:13:35,751 - #44 y
INFO  23:13:35,751 - #36 [
INFO  23:13:35,751 - #37 ]
INFO  23:13:35,751 - #31 ;
INFO  23:13:35,751 - #39 }
INFO  23:13:35,751 - #6 const
INFO  23:13:35,751 - #44 int
INFO  23:13:35,751 - #44 pi
INFO  23:13:35,751 - #28 =
INFO  23:13:35,751 - #43 3
INFO  23:13:35,751 - #32 ,
INFO  23:13:35,752 - #44 e
INFO  23:13:35,752 - #28 =
INFO  23:13:35,752 - #43 2
INFO  23:13:35,752 - #31 ;
INFO  23:13:35,752 - #4 class
INFO  23:13:35,752 - #44 B
INFO  23:13:35,752 - #14 extends
INFO  23:13:35,752 - #44 A
INFO  23:13:35,752 - #38 {
INFO  23:13:35,752 - #44 int
INFO  23:13:35,752 - #44 i
INFO  23:13:35,752 - #31 ;
INFO  23:13:35,752 - #44 int
INFO  23:13:35,752 - #44 x
INFO  23:13:35,753 - #36 [
INFO  23:13:35,753 - #37 ]
INFO  23:13:35,753 - #31 ;
INFO  23:13:35,753 - #38 {
INFO  23:13:35,753 - #44 int
INFO  23:13:35,753 - #44 getValue
INFO  23:13:35,753 - #34 (
INFO  23:13:35,753 - #44 int
INFO  23:13:35,753 - #44 a
INFO  23:13:35,753 - #35 )
INFO  23:13:35,753 - #44 int
INFO  23:13:35,753 - #44 b
INFO  23:13:35,753 - #31 ;
INFO  23:13:35,753 - #44 bool
INFO  23:13:35,754 - #44 c
INFO  23:13:35,754 - #31 ;
INFO  23:13:35,754 - #38 {
INFO  23:13:35,754 - #11 return
INFO  23:13:35,754 - #44 this
INFO  23:13:35,754 - #33 .
INFO  23:13:35,754 - #44 i
INFO  23:13:35,754 - #15 +
INFO  23:13:35,754 - #44 this
INFO  23:13:35,754 - #33 .
INFO  23:13:35,754 - #44 x
INFO  23:13:35,755 - #36 [
INFO  23:13:35,755 - #43 0
INFO  23:13:35,755 - #37 ]
INFO  23:13:35,755 - #15 +
INFO  23:13:35,755 - #44 a
INFO  23:13:35,755 - #31 ;
INFO  23:13:35,755 - #39 }
INFO  23:13:35,755 - #39 }
INFO  23:13:35,755 - #39 }
INFO  23:13:35,755 - #4 class
INFO  23:13:35,755 - #44 C
INFO  23:13:35,755 - #14 extends
INFO  23:13:35,755 - #44 B
INFO  23:13:35,756 - #38 {
INFO  23:13:35,756 - #44 A
INFO  23:13:35,756 - #44 theA
INFO  23:13:35,756 - #31 ;
INFO  23:13:35,756 - #44 string
INFO  23:13:35,756 - #44 a
INFO  23:13:35,756 - #31 ;
INFO  23:13:35,756 - #38 {
INFO  23:13:35,756 - #12 void
INFO  23:13:35,756 - #44 aaa
INFO  23:13:35,756 - #34 (
INFO  23:13:35,756 - #35 )
INFO  23:13:35,756 - #44 A
INFO  23:13:35,757 - #44 a
INFO  23:13:35,757 - #31 ;
INFO  23:13:35,757 - #44 C
INFO  23:13:35,757 - #44 c
INFO  23:13:35,757 - #31 ;
INFO  23:13:35,757 - #44 int
INFO  23:13:35,757 - #44 i
INFO  23:13:35,757 - #31 ;
INFO  23:13:35,757 - #44 int
INFO  23:13:35,757 - #44 x
INFO  23:13:35,758 - #36 [
INFO  23:13:35,758 - #37 ]
INFO  23:13:35,758 - #31 ;
INFO  23:13:35,758 - #38 {
INFO  23:13:35,758 - #39 }
INFO  23:13:35,758 - #12 void
INFO  23:13:35,758 - #44 bbb
INFO  23:13:35,758 - #34 (
INFO  23:13:35,758 - #35 )
INFO  23:13:35,759 - #44 A
INFO  23:13:35,759 - #44 a
INFO  23:13:35,759 - #31 ;
INFO  23:13:35,759 - #44 C
INFO  23:13:35,759 - #44 c
INFO  23:13:35,759 - #31 ;
INFO  23:13:35,759 - #44 int
INFO  23:13:35,759 - #44 i
INFO  23:13:35,760 - #31 ;
INFO  23:13:35,760 - #44 int
INFO  23:13:35,760 - #44 x
INFO  23:13:35,760 - #36 [
INFO  23:13:35,760 - #37 ]
INFO  23:13:35,760 - #31 ;
INFO  23:13:35,760 - #38 {
INFO  23:13:35,761 - #39 }
INFO  23:13:35,761 - #12 void
INFO  23:13:35,761 - #44 ccc
INFO  23:13:35,761 - #34 (
INFO  23:13:35,761 - #35 )
INFO  23:13:35,761 - #44 A
INFO  23:13:35,761 - #44 a
INFO  23:13:35,761 - #31 ;
INFO  23:13:35,761 - #44 C
INFO  23:13:35,762 - #44 c
INFO  23:13:35,762 - #31 ;
INFO  23:13:35,762 - #44 int
INFO  23:13:35,762 - #44 i
INFO  23:13:35,762 - #31 ;
INFO  23:13:35,762 - #44 int
INFO  23:13:35,762 - #44 x
INFO  23:13:35,762 - #36 [
INFO  23:13:35,762 - #37 ]
INFO  23:13:35,762 - #31 ;
INFO  23:13:35,763 - #38 {
INFO  23:13:35,763 - #39 }
INFO  23:13:35,763 - #39 }
INFO  23:13:35,763 - #39 }
INFO  23:13:35,763 - #38 {
INFO  23:13:35,763 - #12 void
INFO  23:13:35,763 - #44 main
INFO  23:13:35,763 - #34 (
INFO  23:13:35,763 - #35 )
INFO  23:13:35,763 - #44 A
INFO  23:13:35,763 - #44 a
INFO  23:13:35,763 - #31 ;
INFO  23:13:35,763 - #44 C
INFO  23:13:35,764 - #44 c
INFO  23:13:35,764 - #31 ;
INFO  23:13:35,764 - #44 int
INFO  23:13:35,764 - #44 i
INFO  23:13:35,764 - #31 ;
INFO  23:13:35,764 - #44 int
INFO  23:13:35,764 - #44 x
INFO  23:13:35,764 - #36 [
INFO  23:13:35,764 - #37 ]
INFO  23:13:35,764 - #31 ;
INFO  23:13:35,764 - #38 {
INFO  23:13:35,764 - #44 a
INFO  23:13:35,764 - #28 =
INFO  23:13:35,765 - #8 new
INFO  23:13:35,765 - #44 A
INFO  23:13:35,765 - #31 ;
INFO  23:13:35,765 - #44 a
INFO  23:13:35,765 - #33 .
INFO  23:13:35,765 - #44 x
INFO  23:13:35,765 - #28 =
INFO  23:13:35,765 - #8 new
INFO  23:13:35,766 - #44 int
INFO  23:13:35,766 - #36 [
INFO  23:13:35,766 - #43 5
INFO  23:13:35,766 - #37 ]
INFO  23:13:35,766 - #31 ;
INFO  23:13:35,766 - #44 a
INFO  23:13:35,766 - #33 .
INFO  23:13:35,766 - #44 y
INFO  23:13:35,767 - #28 =
INFO  23:13:35,767 - #8 new
INFO  23:13:35,767 - #44 int
INFO  23:13:35,767 - #36 [
INFO  23:13:35,767 - #43 5
INFO  23:13:35,767 - #37 ]
INFO  23:13:35,767 - #31 ;
INFO  23:13:35,767 - #44 c
INFO  23:13:35,768 - #28 =
INFO  23:13:35,768 - #8 new
INFO  23:13:35,768 - #44 C
INFO  23:13:35,768 - #31 ;
INFO  23:13:35,768 - #44 c
INFO  23:13:35,768 - #33 .
INFO  23:13:35,768 - #44 theA
INFO  23:13:35,768 - #28 =
INFO  23:13:35,768 - #44 a
INFO  23:13:35,769 - #31 ;
INFO  23:13:35,769 - #44 c
INFO  23:13:35,769 - #33 .
INFO  23:13:35,769 - #44 x
INFO  23:13:35,769 - #28 =
INFO  23:13:35,769 - #8 new
INFO  23:13:35,769 - #44 int
INFO  23:13:35,769 - #36 [
INFO  23:13:35,769 - #43 5
INFO  23:13:35,770 - #37 ]
INFO  23:13:35,770 - #31 ;
INFO  23:13:35,770 - #44 x
INFO  23:13:35,770 - #28 =
INFO  23:13:35,770 - #8 new
INFO  23:13:35,770 - #44 int
INFO  23:13:35,770 - #36 [
INFO  23:13:35,770 - #43 3
INFO  23:13:35,770 - #37 ]
INFO  23:13:35,771 - #31 ;
INFO  23:13:35,771 - #44 i
INFO  23:13:35,771 - #28 =
INFO  23:13:35,771 - #43 0
INFO  23:13:35,771 - #31 ;
INFO  23:13:35,771 - #10 read
INFO  23:13:35,771 - #34 (
INFO  23:13:35,771 - #44 c
INFO  23:13:35,771 - #33 .
INFO  23:13:35,772 - #44 i
INFO  23:13:35,772 - #35 )
INFO  23:13:35,772 - #31 ;
INFO  23:13:35,772 - #13 while
INFO  23:13:35,772 - #34 (
INFO  23:13:35,772 - #44 i
INFO  23:13:35,772 - #24 <
INFO  23:13:35,772 - #43 5
INFO  23:13:35,772 - #35 )
INFO  23:13:35,773 - #38 {
INFO  23:13:35,773 - #10 read
INFO  23:13:35,773 - #34 (
INFO  23:13:35,773 - #44 c
INFO  23:13:35,773 - #33 .
INFO  23:13:35,773 - #44 x
INFO  23:13:35,773 - #36 [
INFO  23:13:35,773 - #44 i
INFO  23:13:35,773 - #37 ]
INFO  23:13:35,774 - #35 )
INFO  23:13:35,774 - #31 ;
INFO  23:13:35,774 - #10 read
INFO  23:13:35,774 - #34 (
INFO  23:13:35,774 - #44 c
INFO  23:13:35,774 - #33 .
INFO  23:13:35,774 - #44 theA
INFO  23:13:35,774 - #33 .
INFO  23:13:35,774 - #44 x
INFO  23:13:35,775 - #36 [
INFO  23:13:35,775 - #44 i
INFO  23:13:35,775 - #37 ]
INFO  23:13:35,775 - #35 )
INFO  23:13:35,775 - #31 ;
INFO  23:13:35,775 - #44 i
INFO  23:13:35,775 - #29 ++
INFO  23:13:35,775 - #31 ;
INFO  23:13:35,776 - #39 }
INFO  23:13:35,776 - #9 print
INFO  23:13:35,776 - #34 (
INFO  23:13:35,776 - #44 c
INFO  23:13:35,776 - #33 .
INFO  23:13:35,776 - #44 getValue
INFO  23:13:35,776 - #34 (
INFO  23:13:35,776 - #44 c
INFO  23:13:35,776 - #33 .
INFO  23:13:35,776 - #44 theA
INFO  23:13:35,777 - #33 .
INFO  23:13:35,777 - #44 x
INFO  23:13:35,777 - #36 [
INFO  23:13:35,777 - #43 0
INFO  23:13:35,777 - #37 ]
INFO  23:13:35,777 - #35 )
INFO  23:13:35,777 - #35 )
INFO  23:13:35,777 - #31 ;
INFO  23:13:35,777 - #39 }
INFO  23:13:35,777 - #39 }
INFO  23:13:35,778 - GlobalVar = 14
INFO  23:13:35,778 - GlobalConst = 2
INFO  23:13:35,778 - LocalMainVar = 4
INFO  23:13:35,778 - GlobalArray = 3
INFO  23:13:35,778 - FuncProg = 4
INFO  23:13:35,778 - Blocks = 5
INFO  23:13:35,778 - FuncCalls = 5
INFO  23:13:35,778 - FormalArg = 1
INFO  23:13:35,778 - DefClass = 3
INFO  23:13:35,778 - DefMClass = 0
INFO  23:13:42,485 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:13:42,494 - #2 program
INFO  23:13:42,494 - #44 Program
INFO  23:13:42,494 - #4 class
INFO  23:13:42,494 - #44 A
INFO  23:13:42,494 - #38 {
INFO  23:13:42,494 - #44 int
INFO  23:13:42,494 - #44 x
INFO  23:13:42,494 - #36 [
INFO  23:13:42,494 - #37 ]
INFO  23:13:42,494 - #32 ,
INFO  23:13:42,494 - #44 y
INFO  23:13:42,495 - #36 [
INFO  23:13:42,495 - #37 ]
INFO  23:13:42,495 - #31 ;
INFO  23:13:42,495 - #39 }
INFO  23:13:42,495 - #6 const
INFO  23:13:42,495 - #44 int
INFO  23:13:42,495 - #44 pi
INFO  23:13:42,495 - #28 =
INFO  23:13:42,495 - #43 3
INFO  23:13:42,495 - #32 ,
INFO  23:13:42,495 - #44 e
INFO  23:13:42,495 - #28 =
INFO  23:13:42,496 - #43 2
INFO  23:13:42,496 - #31 ;
INFO  23:13:42,496 - #4 class
INFO  23:13:42,496 - #44 B
INFO  23:13:42,496 - #14 extends
INFO  23:13:42,496 - #44 A
INFO  23:13:42,496 - #38 {
INFO  23:13:42,496 - #44 int
INFO  23:13:42,496 - #44 i
INFO  23:13:42,496 - #31 ;
INFO  23:13:42,496 - #44 int
INFO  23:13:42,496 - #44 x
INFO  23:13:42,496 - #36 [
INFO  23:13:42,496 - #37 ]
INFO  23:13:42,497 - #31 ;
INFO  23:13:42,497 - #38 {
INFO  23:13:42,497 - #44 int
INFO  23:13:42,497 - #44 getValue
INFO  23:13:42,497 - #34 (
INFO  23:13:42,497 - #44 int
INFO  23:13:42,497 - #44 a
INFO  23:13:42,497 - #35 )
INFO  23:13:42,497 - #44 int
INFO  23:13:42,497 - #44 b
INFO  23:13:42,497 - #31 ;
INFO  23:13:42,497 - #44 bool
INFO  23:13:42,497 - #44 c
INFO  23:13:42,497 - #31 ;
INFO  23:13:42,498 - #38 {
INFO  23:13:42,498 - #11 return
INFO  23:13:42,498 - #44 this
INFO  23:13:42,498 - #33 .
INFO  23:13:42,498 - #44 i
INFO  23:13:42,498 - #15 +
INFO  23:13:42,498 - #44 this
INFO  23:13:42,498 - #33 .
INFO  23:13:42,498 - #44 x
INFO  23:13:42,499 - #36 [
INFO  23:13:42,499 - #43 0
INFO  23:13:42,499 - #37 ]
INFO  23:13:42,499 - #15 +
INFO  23:13:42,499 - #44 a
INFO  23:13:42,499 - #31 ;
INFO  23:13:42,499 - #39 }
INFO  23:13:42,499 - #39 }
INFO  23:13:42,499 - #39 }
INFO  23:13:42,500 - #4 class
INFO  23:13:42,500 - #44 C
INFO  23:13:42,500 - #14 extends
INFO  23:13:42,500 - #44 B
INFO  23:13:42,500 - #38 {
INFO  23:13:42,500 - #44 A
INFO  23:13:42,500 - #44 theA
INFO  23:13:42,500 - #31 ;
INFO  23:13:42,500 - #44 string
INFO  23:13:42,501 - #44 a
INFO  23:13:42,501 - #31 ;
INFO  23:13:42,501 - #38 {
INFO  23:13:42,501 - #12 void
INFO  23:13:42,501 - #44 aaa
INFO  23:13:42,501 - #34 (
INFO  23:13:42,501 - #35 )
INFO  23:13:42,501 - #44 A
INFO  23:13:42,501 - #44 a
INFO  23:13:42,501 - #31 ;
INFO  23:13:42,501 - #44 C
INFO  23:13:42,502 - #44 c
INFO  23:13:42,502 - #31 ;
INFO  23:13:42,502 - #44 int
INFO  23:13:42,502 - #44 i
INFO  23:13:42,502 - #31 ;
INFO  23:13:42,502 - #44 int
INFO  23:13:42,502 - #44 x
INFO  23:13:42,502 - #36 [
INFO  23:13:42,502 - #37 ]
INFO  23:13:42,502 - #31 ;
INFO  23:13:42,503 - #38 {
INFO  23:13:42,503 - #39 }
INFO  23:13:42,503 - #12 void
INFO  23:13:42,503 - #44 bbb
INFO  23:13:42,503 - #34 (
INFO  23:13:42,503 - #35 )
INFO  23:13:42,503 - #44 A
INFO  23:13:42,503 - #44 a
INFO  23:13:42,503 - #31 ;
INFO  23:13:42,503 - #44 C
INFO  23:13:42,503 - #44 c
INFO  23:13:42,503 - #31 ;
INFO  23:13:42,503 - #44 int
INFO  23:13:42,503 - #44 i
INFO  23:13:42,504 - #31 ;
INFO  23:13:42,504 - #44 int
INFO  23:13:42,504 - #44 x
INFO  23:13:42,504 - #36 [
INFO  23:13:42,504 - #37 ]
INFO  23:13:42,504 - #31 ;
INFO  23:13:42,504 - #38 {
INFO  23:13:42,504 - #39 }
INFO  23:13:42,504 - #12 void
INFO  23:13:42,504 - #44 ccc
INFO  23:13:42,504 - #34 (
INFO  23:13:42,504 - #35 )
INFO  23:13:42,505 - #44 A
INFO  23:13:42,505 - #44 a
INFO  23:13:42,505 - #31 ;
INFO  23:13:42,505 - #44 C
INFO  23:13:42,505 - #44 c
INFO  23:13:42,505 - #31 ;
INFO  23:13:42,505 - #44 int
INFO  23:13:42,505 - #44 i
INFO  23:13:42,505 - #31 ;
INFO  23:13:42,505 - #44 int
INFO  23:13:42,506 - #44 x
INFO  23:13:42,506 - #36 [
INFO  23:13:42,506 - #37 ]
INFO  23:13:42,506 - #31 ;
INFO  23:13:42,506 - #38 {
INFO  23:13:42,506 - #39 }
INFO  23:13:42,506 - #39 }
INFO  23:13:42,506 - #39 }
INFO  23:13:42,506 - #38 {
INFO  23:13:42,507 - #12 void
INFO  23:13:42,507 - #44 main
INFO  23:13:42,507 - #34 (
INFO  23:13:42,507 - #35 )
INFO  23:13:42,507 - #44 A
INFO  23:13:42,507 - #44 a
INFO  23:13:42,507 - #31 ;
INFO  23:13:42,507 - #44 C
INFO  23:13:42,507 - #44 c
INFO  23:13:42,507 - #31 ;
INFO  23:13:42,508 - #44 int
INFO  23:13:42,508 - #44 i
INFO  23:13:42,508 - #31 ;
INFO  23:13:42,508 - #44 int
INFO  23:13:42,508 - #44 x
INFO  23:13:42,508 - #36 [
INFO  23:13:42,508 - #37 ]
INFO  23:13:42,508 - #31 ;
INFO  23:13:42,508 - #38 {
INFO  23:13:42,508 - #44 a
INFO  23:13:42,508 - #28 =
INFO  23:13:42,508 - #8 new
INFO  23:13:42,508 - #44 A
INFO  23:13:42,509 - #31 ;
INFO  23:13:42,509 - #44 a
INFO  23:13:42,509 - #33 .
INFO  23:13:42,509 - #44 x
INFO  23:13:42,509 - #28 =
INFO  23:13:42,509 - #8 new
INFO  23:13:42,509 - #44 int
INFO  23:13:42,509 - #36 [
INFO  23:13:42,509 - #43 5
INFO  23:13:42,510 - #37 ]
INFO  23:13:42,510 - #31 ;
INFO  23:13:42,510 - #44 a
INFO  23:13:42,510 - #33 .
INFO  23:13:42,510 - #44 y
INFO  23:13:42,510 - #28 =
INFO  23:13:42,510 - #8 new
INFO  23:13:42,510 - #44 int
INFO  23:13:42,510 - #36 [
INFO  23:13:42,511 - #43 5
INFO  23:13:42,511 - #37 ]
INFO  23:13:42,511 - #31 ;
INFO  23:13:42,511 - #44 c
INFO  23:13:42,511 - #28 =
INFO  23:13:42,511 - #8 new
INFO  23:13:42,511 - #44 C
INFO  23:13:42,511 - #31 ;
INFO  23:13:42,511 - #44 c
INFO  23:13:42,511 - #33 .
INFO  23:13:42,512 - #44 theA
INFO  23:13:42,512 - #28 =
INFO  23:13:42,512 - #44 a
INFO  23:13:42,512 - #31 ;
INFO  23:13:42,512 - #44 c
INFO  23:13:42,512 - #33 .
INFO  23:13:42,512 - #44 x
INFO  23:13:42,512 - #28 =
INFO  23:13:42,512 - #8 new
INFO  23:13:42,513 - #44 int
INFO  23:13:42,513 - #36 [
INFO  23:13:42,513 - #43 5
INFO  23:13:42,513 - #37 ]
INFO  23:13:42,513 - #31 ;
INFO  23:13:42,513 - #44 x
INFO  23:13:42,513 - #28 =
INFO  23:13:42,513 - #8 new
INFO  23:13:42,513 - #44 int
INFO  23:13:42,514 - #36 [
INFO  23:13:42,514 - #43 3
INFO  23:13:42,514 - #37 ]
INFO  23:13:42,514 - #31 ;
INFO  23:13:42,514 - #44 i
INFO  23:13:42,514 - #28 =
INFO  23:13:42,514 - #43 0
INFO  23:13:42,514 - #31 ;
INFO  23:13:42,515 - #10 read
INFO  23:13:42,515 - #34 (
INFO  23:13:42,515 - #44 c
INFO  23:13:42,515 - #33 .
INFO  23:13:42,515 - #44 i
INFO  23:13:42,515 - #35 )
INFO  23:13:42,515 - #31 ;
INFO  23:13:42,515 - #13 while
INFO  23:13:42,515 - #34 (
INFO  23:13:42,515 - #44 i
INFO  23:13:42,516 - #24 <
INFO  23:13:42,516 - #43 5
INFO  23:13:42,516 - #35 )
INFO  23:13:42,516 - #38 {
INFO  23:13:42,516 - #10 read
INFO  23:13:42,516 - #34 (
INFO  23:13:42,516 - #44 c
INFO  23:13:42,516 - #33 .
INFO  23:13:42,516 - #44 x
INFO  23:13:42,516 - #36 [
INFO  23:13:42,517 - #44 i
INFO  23:13:42,517 - #37 ]
INFO  23:13:42,517 - #35 )
INFO  23:13:42,517 - #31 ;
INFO  23:13:42,517 - #10 read
INFO  23:13:42,517 - #34 (
INFO  23:13:42,517 - #44 c
INFO  23:13:42,517 - #33 .
INFO  23:13:42,517 - #44 theA
INFO  23:13:42,517 - #33 .
INFO  23:13:42,518 - #44 x
INFO  23:13:42,518 - #36 [
INFO  23:13:42,518 - #44 i
INFO  23:13:42,518 - #37 ]
INFO  23:13:42,518 - #35 )
INFO  23:13:42,518 - #31 ;
INFO  23:13:42,518 - #44 i
INFO  23:13:42,518 - #29 ++
INFO  23:13:42,518 - #31 ;
INFO  23:13:42,518 - #39 }
INFO  23:13:42,518 - #9 print
INFO  23:13:42,518 - #34 (
INFO  23:13:42,519 - #44 c
INFO  23:13:42,519 - #33 .
INFO  23:13:42,519 - #44 getValue
INFO  23:13:42,519 - #34 (
INFO  23:13:42,519 - #44 c
INFO  23:13:42,519 - #33 .
INFO  23:13:42,519 - #44 theA
INFO  23:13:42,519 - #33 .
INFO  23:13:42,519 - #44 x
INFO  23:13:42,519 - #36 [
INFO  23:13:42,519 - #43 0
INFO  23:13:42,519 - #37 ]
INFO  23:13:42,519 - #35 )
INFO  23:13:42,519 - #35 )
INFO  23:13:42,520 - #31 ;
INFO  23:13:42,520 - #39 }
INFO  23:13:42,520 - #39 }
INFO  23:13:42,520 - GlobalVar = 14
INFO  23:13:42,520 - GlobalConst = 2
INFO  23:13:42,520 - LocalMainVar = 4
INFO  23:13:42,520 - GlobalArray = 3
INFO  23:13:42,520 - FuncProg = 4
INFO  23:13:42,520 - Blocks = 5
INFO  23:13:42,520 - FuncCalls = 5
INFO  23:13:42,520 - FormalArg = 1
INFO  23:13:42,520 - DefClass = 3
INFO  23:13:42,520 - DefMClass = 1
INFO  23:14:03,681 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:14:03,691 - #2 program
INFO  23:14:03,691 - #44 Program
INFO  23:14:03,691 - #4 class
INFO  23:14:03,691 - #44 A
INFO  23:14:03,691 - #38 {
INFO  23:14:03,691 - #44 int
INFO  23:14:03,691 - #44 x
INFO  23:14:03,691 - #36 [
INFO  23:14:03,691 - #37 ]
INFO  23:14:03,692 - #32 ,
INFO  23:14:03,692 - #44 y
INFO  23:14:03,692 - #36 [
INFO  23:14:03,692 - #37 ]
INFO  23:14:03,692 - #31 ;
INFO  23:14:03,692 - #39 }
INFO  23:14:03,692 - #6 const
INFO  23:14:03,692 - #44 int
INFO  23:14:03,692 - #44 pi
INFO  23:14:03,692 - #28 =
INFO  23:14:03,692 - #43 3
INFO  23:14:03,692 - #32 ,
INFO  23:14:03,692 - #44 e
INFO  23:14:03,693 - #28 =
INFO  23:14:03,693 - #43 2
INFO  23:14:03,693 - #31 ;
INFO  23:14:03,693 - #4 class
INFO  23:14:03,693 - #44 B
INFO  23:14:03,693 - #14 extends
INFO  23:14:03,693 - #44 A
INFO  23:14:03,693 - #38 {
INFO  23:14:03,693 - #44 int
INFO  23:14:03,693 - #44 i
INFO  23:14:03,693 - #31 ;
INFO  23:14:03,693 - #44 int
INFO  23:14:03,693 - #44 x
INFO  23:14:03,693 - #36 [
INFO  23:14:03,694 - #37 ]
INFO  23:14:03,694 - #31 ;
INFO  23:14:03,694 - #38 {
INFO  23:14:03,694 - #44 int
INFO  23:14:03,694 - #44 getValue
INFO  23:14:03,694 - #34 (
INFO  23:14:03,694 - #44 int
INFO  23:14:03,694 - #44 a
INFO  23:14:03,694 - #35 )
INFO  23:14:03,694 - #44 int
INFO  23:14:03,694 - #44 b
INFO  23:14:03,694 - #31 ;
INFO  23:14:03,694 - #44 bool
INFO  23:14:03,695 - #44 c
INFO  23:14:03,695 - #31 ;
INFO  23:14:03,695 - #38 {
INFO  23:14:03,695 - #11 return
INFO  23:14:03,695 - #44 this
INFO  23:14:03,695 - #33 .
INFO  23:14:03,695 - #44 i
INFO  23:14:03,695 - #15 +
INFO  23:14:03,695 - #44 this
INFO  23:14:03,695 - #33 .
INFO  23:14:03,696 - #44 x
INFO  23:14:03,696 - #36 [
INFO  23:14:03,696 - #43 0
INFO  23:14:03,696 - #37 ]
INFO  23:14:03,696 - #15 +
INFO  23:14:03,696 - #44 a
INFO  23:14:03,696 - #31 ;
INFO  23:14:03,696 - #39 }
INFO  23:14:03,696 - #39 }
INFO  23:14:03,696 - #39 }
INFO  23:14:03,696 - #38 {
INFO  23:14:03,697 - #12 void
INFO  23:14:03,697 - #44 main
INFO  23:14:03,697 - #34 (
INFO  23:14:03,697 - #35 )
INFO  23:14:03,697 - #44 A
INFO  23:14:03,697 - #44 a
INFO  23:14:03,697 - #31 ;
INFO  23:14:03,697 - #44 C
INFO  23:14:03,697 - #44 c
INFO  23:14:03,697 - #31 ;
INFO  23:14:03,698 - #44 int
INFO  23:14:03,698 - #44 i
INFO  23:14:03,698 - #31 ;
INFO  23:14:03,698 - #44 int
INFO  23:14:03,698 - #44 x
INFO  23:14:03,698 - #36 [
INFO  23:14:03,698 - #37 ]
INFO  23:14:03,698 - #31 ;
INFO  23:14:03,698 - #38 {
INFO  23:14:03,698 - #44 a
INFO  23:14:03,699 - #28 =
INFO  23:14:03,699 - #8 new
INFO  23:14:03,699 - #44 A
INFO  23:14:03,699 - #31 ;
INFO  23:14:03,699 - #44 a
INFO  23:14:03,699 - #33 .
INFO  23:14:03,699 - #44 x
INFO  23:14:03,699 - #28 =
INFO  23:14:03,700 - #8 new
INFO  23:14:03,700 - #44 int
INFO  23:14:03,700 - #36 [
INFO  23:14:03,700 - #43 5
INFO  23:14:03,700 - #37 ]
INFO  23:14:03,700 - #31 ;
INFO  23:14:03,700 - #44 a
INFO  23:14:03,700 - #33 .
INFO  23:14:03,700 - #44 y
INFO  23:14:03,700 - #28 =
INFO  23:14:03,700 - #8 new
INFO  23:14:03,700 - #44 int
INFO  23:14:03,701 - #36 [
INFO  23:14:03,701 - #43 5
INFO  23:14:03,701 - #37 ]
INFO  23:14:03,701 - #31 ;
INFO  23:14:03,701 - #44 c
INFO  23:14:03,701 - #28 =
INFO  23:14:03,701 - #8 new
INFO  23:14:03,701 - #44 C
INFO  23:14:03,701 - #31 ;
INFO  23:14:03,701 - #44 c
INFO  23:14:03,701 - #33 .
INFO  23:14:03,701 - #44 theA
INFO  23:14:03,702 - #28 =
INFO  23:14:03,702 - #44 a
INFO  23:14:03,702 - #31 ;
INFO  23:14:03,702 - #44 c
INFO  23:14:03,702 - #33 .
INFO  23:14:03,702 - #44 x
INFO  23:14:03,702 - #28 =
INFO  23:14:03,702 - #8 new
INFO  23:14:03,702 - #44 int
INFO  23:14:03,702 - #36 [
INFO  23:14:03,703 - #43 5
INFO  23:14:03,703 - #37 ]
INFO  23:14:03,703 - #31 ;
INFO  23:14:03,703 - #44 x
INFO  23:14:03,703 - #28 =
INFO  23:14:03,703 - #8 new
INFO  23:14:03,703 - #44 int
INFO  23:14:03,703 - #36 [
INFO  23:14:03,703 - #43 3
INFO  23:14:03,703 - #37 ]
INFO  23:14:03,704 - #31 ;
INFO  23:14:03,704 - #44 i
INFO  23:14:03,704 - #28 =
INFO  23:14:03,704 - #43 0
INFO  23:14:03,704 - #31 ;
INFO  23:14:03,704 - #10 read
INFO  23:14:03,704 - #34 (
INFO  23:14:03,704 - #44 c
INFO  23:14:03,704 - #33 .
INFO  23:14:03,704 - #44 i
INFO  23:14:03,704 - #35 )
INFO  23:14:03,704 - #31 ;
INFO  23:14:03,705 - #13 while
INFO  23:14:03,705 - #34 (
INFO  23:14:03,705 - #44 i
INFO  23:14:03,705 - #24 <
INFO  23:14:03,705 - #43 5
INFO  23:14:03,705 - #35 )
INFO  23:14:03,705 - #38 {
INFO  23:14:03,705 - #10 read
INFO  23:14:03,705 - #34 (
INFO  23:14:03,705 - #44 c
INFO  23:14:03,705 - #33 .
INFO  23:14:03,705 - #44 x
INFO  23:14:03,706 - #36 [
INFO  23:14:03,706 - #44 i
INFO  23:14:03,706 - #37 ]
INFO  23:14:03,706 - #35 )
INFO  23:14:03,706 - #31 ;
INFO  23:14:03,706 - #10 read
INFO  23:14:03,706 - #34 (
INFO  23:14:03,706 - #44 c
INFO  23:14:03,706 - #33 .
INFO  23:14:03,706 - #44 theA
INFO  23:14:03,707 - #33 .
INFO  23:14:03,707 - #44 x
INFO  23:14:03,707 - #36 [
INFO  23:14:03,707 - #44 i
INFO  23:14:03,707 - #37 ]
INFO  23:14:03,707 - #35 )
INFO  23:14:03,707 - #31 ;
INFO  23:14:03,707 - #44 i
INFO  23:14:03,708 - #29 ++
INFO  23:14:03,708 - #31 ;
INFO  23:14:03,708 - #39 }
INFO  23:14:03,708 - #9 print
INFO  23:14:03,708 - #34 (
INFO  23:14:03,708 - #44 c
INFO  23:14:03,708 - #33 .
INFO  23:14:03,708 - #44 getValue
INFO  23:14:03,708 - #34 (
INFO  23:14:03,708 - #44 c
INFO  23:14:03,708 - #33 .
INFO  23:14:03,709 - #44 theA
INFO  23:14:03,709 - #33 .
INFO  23:14:03,709 - #44 x
INFO  23:14:03,709 - #36 [
INFO  23:14:03,709 - #43 0
INFO  23:14:03,709 - #37 ]
INFO  23:14:03,709 - #35 )
INFO  23:14:03,709 - #35 )
INFO  23:14:03,709 - #31 ;
INFO  23:14:03,709 - #39 }
INFO  23:14:03,710 - #39 }
INFO  23:14:03,710 - GlobalVar = 0
INFO  23:14:03,710 - GlobalConst = 2
INFO  23:14:03,710 - LocalMainVar = 4
INFO  23:14:03,710 - GlobalArray = 0
INFO  23:14:03,710 - FuncProg = 1
INFO  23:14:03,710 - Blocks = 2
INFO  23:14:03,710 - FuncCalls = 5
INFO  23:14:03,710 - FormalArg = 1
INFO  23:14:03,710 - DefClass = 2
INFO  23:14:03,711 - DefMClass = 1
INFO  23:14:38,422 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:14:38,436 - #2 program
INFO  23:14:38,436 - #44 Program
INFO  23:14:38,436 - #4 class
INFO  23:14:38,436 - #44 A
INFO  23:14:38,436 - #38 {
INFO  23:14:38,436 - #44 int
INFO  23:14:38,436 - #44 x
INFO  23:14:38,437 - #36 [
INFO  23:14:38,437 - #37 ]
INFO  23:14:38,437 - #32 ,
INFO  23:14:38,437 - #44 y
INFO  23:14:38,437 - #36 [
INFO  23:14:38,437 - #37 ]
INFO  23:14:38,437 - #31 ;
INFO  23:14:38,437 - #39 }
INFO  23:14:38,437 - #6 const
INFO  23:14:38,438 - #44 int
INFO  23:14:38,438 - #44 pi
INFO  23:14:38,438 - #28 =
INFO  23:14:38,438 - #43 3
INFO  23:14:38,438 - #32 ,
INFO  23:14:38,438 - #44 e
INFO  23:14:38,438 - #28 =
INFO  23:14:38,438 - #43 2
INFO  23:14:38,438 - #31 ;
INFO  23:14:38,439 - #4 class
INFO  23:14:38,439 - #44 B
INFO  23:14:38,439 - #14 extends
INFO  23:14:38,439 - #44 A
INFO  23:14:38,439 - #38 {
INFO  23:14:38,439 - #44 int
INFO  23:14:38,439 - #44 i
INFO  23:14:38,439 - #31 ;
INFO  23:14:38,439 - #44 int
INFO  23:14:38,440 - #44 x
INFO  23:14:38,440 - #36 [
INFO  23:14:38,440 - #37 ]
INFO  23:14:38,440 - #31 ;
INFO  23:14:38,440 - #38 {
INFO  23:14:38,440 - #44 int
INFO  23:14:38,440 - #44 getValue
INFO  23:14:38,440 - #34 (
INFO  23:14:38,440 - #44 int
INFO  23:14:38,440 - #44 a
INFO  23:14:38,441 - #35 )
INFO  23:14:38,441 - #44 int
INFO  23:14:38,441 - #44 b
INFO  23:14:38,441 - #31 ;
INFO  23:14:38,441 - #44 bool
INFO  23:14:38,441 - #44 c
INFO  23:14:38,441 - #31 ;
INFO  23:14:38,441 - #38 {
INFO  23:14:38,442 - #11 return
INFO  23:14:38,442 - #44 this
INFO  23:14:38,442 - #33 .
INFO  23:14:38,442 - #44 i
INFO  23:14:38,442 - #15 +
INFO  23:14:38,442 - #44 this
INFO  23:14:38,442 - #33 .
INFO  23:14:38,442 - #44 x
INFO  23:14:38,442 - #36 [
INFO  23:14:38,443 - #43 0
INFO  23:14:38,443 - #37 ]
INFO  23:14:38,443 - #15 +
INFO  23:14:38,443 - #44 a
INFO  23:14:38,443 - #31 ;
INFO  23:14:38,443 - #39 }
INFO  23:14:38,443 - #39 }
INFO  23:14:38,443 - #39 }
INFO  23:14:38,443 - #4 class
INFO  23:14:38,444 - #44 C
INFO  23:14:38,444 - #38 {
INFO  23:14:38,444 - #44 int
INFO  23:14:38,444 - #44 i
INFO  23:14:38,444 - #31 ;
INFO  23:14:38,444 - #39 }
INFO  23:14:38,444 - #38 {
INFO  23:14:38,444 - #12 void
INFO  23:14:38,444 - #44 main
INFO  23:14:38,445 - #34 (
INFO  23:14:38,445 - #35 )
INFO  23:14:38,445 - #44 A
INFO  23:14:38,445 - #44 a
INFO  23:14:38,445 - #31 ;
INFO  23:14:38,445 - #44 C
INFO  23:14:38,445 - #44 c
INFO  23:14:38,445 - #31 ;
INFO  23:14:38,445 - #44 int
INFO  23:14:38,445 - #44 i
INFO  23:14:38,446 - #31 ;
INFO  23:14:38,446 - #44 int
INFO  23:14:38,446 - #44 x
INFO  23:14:38,446 - #36 [
INFO  23:14:38,446 - #37 ]
INFO  23:14:38,446 - #31 ;
INFO  23:14:38,446 - #38 {
INFO  23:14:38,447 - #44 a
INFO  23:14:38,447 - #28 =
INFO  23:14:38,447 - #8 new
INFO  23:14:38,447 - #44 A
INFO  23:14:38,447 - #31 ;
INFO  23:14:38,447 - #44 a
INFO  23:14:38,447 - #33 .
INFO  23:14:38,447 - #44 x
INFO  23:14:38,448 - #28 =
INFO  23:14:38,448 - #8 new
INFO  23:14:38,448 - #44 int
INFO  23:14:38,448 - #36 [
INFO  23:14:38,448 - #43 5
INFO  23:14:38,448 - #37 ]
INFO  23:14:38,448 - #31 ;
INFO  23:14:38,448 - #44 a
INFO  23:14:38,449 - #33 .
INFO  23:14:38,449 - #44 y
INFO  23:14:38,449 - #28 =
INFO  23:14:38,449 - #8 new
INFO  23:14:38,449 - #44 int
INFO  23:14:38,449 - #36 [
INFO  23:14:38,449 - #43 5
INFO  23:14:38,449 - #37 ]
INFO  23:14:38,450 - #31 ;
INFO  23:14:38,450 - #44 c
INFO  23:14:38,450 - #28 =
INFO  23:14:38,450 - #8 new
INFO  23:14:38,450 - #44 C
INFO  23:14:38,450 - #31 ;
INFO  23:14:38,451 - #44 c
INFO  23:14:38,451 - #33 .
INFO  23:14:38,451 - #44 theA
INFO  23:14:38,451 - #28 =
INFO  23:14:38,451 - #44 a
INFO  23:14:38,451 - #31 ;
INFO  23:14:38,452 - #44 c
INFO  23:14:38,452 - #33 .
INFO  23:14:38,452 - #44 x
INFO  23:14:38,452 - #28 =
INFO  23:14:38,452 - #8 new
INFO  23:14:38,453 - #44 int
INFO  23:14:38,453 - #36 [
INFO  23:14:38,454 - #43 5
INFO  23:14:38,454 - #37 ]
INFO  23:14:38,454 - #31 ;
INFO  23:14:38,454 - #44 x
INFO  23:14:38,454 - #28 =
INFO  23:14:38,454 - #8 new
INFO  23:14:38,454 - #44 int
INFO  23:14:38,454 - #36 [
INFO  23:14:38,454 - #43 3
INFO  23:14:38,454 - #37 ]
INFO  23:14:38,455 - #31 ;
INFO  23:14:38,455 - #44 i
INFO  23:14:38,455 - #28 =
INFO  23:14:38,455 - #43 0
INFO  23:14:38,455 - #31 ;
INFO  23:14:38,455 - #10 read
INFO  23:14:38,455 - #34 (
INFO  23:14:38,455 - #44 c
INFO  23:14:38,455 - #33 .
INFO  23:14:38,456 - #44 i
INFO  23:14:38,456 - #35 )
INFO  23:14:38,456 - #31 ;
INFO  23:14:38,456 - #13 while
INFO  23:14:38,456 - #34 (
INFO  23:14:38,456 - #44 i
INFO  23:14:38,456 - #24 <
INFO  23:14:38,456 - #43 5
INFO  23:14:38,456 - #35 )
INFO  23:14:38,457 - #38 {
INFO  23:14:38,457 - #10 read
INFO  23:14:38,457 - #34 (
INFO  23:14:38,457 - #44 c
INFO  23:14:38,457 - #33 .
INFO  23:14:38,457 - #44 x
INFO  23:14:38,457 - #36 [
INFO  23:14:38,457 - #44 i
INFO  23:14:38,458 - #37 ]
INFO  23:14:38,458 - #35 )
INFO  23:14:38,458 - #31 ;
INFO  23:14:38,458 - #10 read
INFO  23:14:38,458 - #34 (
INFO  23:14:38,458 - #44 c
INFO  23:14:38,458 - #33 .
INFO  23:14:38,459 - #44 theA
INFO  23:14:38,459 - #33 .
INFO  23:14:38,459 - #44 x
INFO  23:14:38,459 - #36 [
INFO  23:14:38,459 - #44 i
INFO  23:14:38,459 - #37 ]
INFO  23:14:38,459 - #35 )
INFO  23:14:38,460 - #31 ;
INFO  23:14:38,460 - #44 i
INFO  23:14:38,460 - #29 ++
INFO  23:14:38,460 - #31 ;
INFO  23:14:38,460 - #39 }
INFO  23:14:38,460 - #9 print
INFO  23:14:38,460 - #34 (
INFO  23:14:38,460 - #44 c
INFO  23:14:38,460 - #33 .
INFO  23:14:38,461 - #44 getValue
INFO  23:14:38,461 - #34 (
INFO  23:14:38,461 - #44 c
INFO  23:14:38,461 - #33 .
INFO  23:14:38,461 - #44 theA
INFO  23:14:38,461 - #33 .
INFO  23:14:38,461 - #44 x
INFO  23:14:38,461 - #36 [
INFO  23:14:38,461 - #43 0
INFO  23:14:38,461 - #37 ]
INFO  23:14:38,462 - #35 )
INFO  23:14:38,462 - #35 )
INFO  23:14:38,462 - #31 ;
INFO  23:14:38,462 - #39 }
INFO  23:14:38,462 - #39 }
INFO  23:14:38,462 - GlobalVar = 1
INFO  23:14:38,462 - GlobalConst = 2
INFO  23:14:38,462 - LocalMainVar = 4
INFO  23:14:38,463 - GlobalArray = 0
INFO  23:14:38,463 - FuncProg = 1
INFO  23:14:38,463 - Blocks = 2
INFO  23:14:38,463 - FuncCalls = 5
INFO  23:14:38,463 - FormalArg = 1
INFO  23:14:38,463 - DefClass = 3
INFO  23:14:38,463 - DefMClass = 1
INFO  23:15:15,698 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:15:15,706 - #2 program
INFO  23:15:15,706 - #44 Program
INFO  23:15:15,706 - #4 class
INFO  23:15:15,706 - #44 A
INFO  23:15:15,706 - #38 {
INFO  23:15:15,707 - #44 int
INFO  23:15:15,707 - #44 x
INFO  23:15:15,707 - #36 [
INFO  23:15:15,707 - #37 ]
INFO  23:15:15,707 - #32 ,
INFO  23:15:15,707 - #44 y
INFO  23:15:15,707 - #36 [
INFO  23:15:15,707 - #37 ]
INFO  23:15:15,707 - #31 ;
INFO  23:15:15,707 - #39 }
INFO  23:15:15,708 - #6 const
INFO  23:15:15,708 - #44 int
INFO  23:15:15,708 - #44 pi
INFO  23:15:15,708 - #28 =
INFO  23:15:15,708 - #43 3
INFO  23:15:15,708 - #32 ,
INFO  23:15:15,708 - #44 e
INFO  23:15:15,708 - #28 =
INFO  23:15:15,708 - #43 2
INFO  23:15:15,708 - #31 ;
INFO  23:15:15,708 - #4 class
INFO  23:15:15,708 - #44 B
INFO  23:15:15,708 - #38 {
INFO  23:15:15,708 - #44 int
INFO  23:15:15,709 - #44 i
INFO  23:15:15,709 - #31 ;
INFO  23:15:15,709 - #39 }
INFO  23:15:15,709 - #4 class
INFO  23:15:15,709 - #44 C
INFO  23:15:15,709 - #38 {
INFO  23:15:15,709 - #44 int
INFO  23:15:15,709 - #44 i
INFO  23:15:15,709 - #31 ;
INFO  23:15:15,709 - #39 }
INFO  23:15:15,709 - #38 {
INFO  23:15:15,709 - #12 void
INFO  23:15:15,709 - #44 main
INFO  23:15:15,710 - #34 (
INFO  23:15:15,710 - #35 )
INFO  23:15:15,710 - #44 A
INFO  23:15:15,710 - #44 a
INFO  23:15:15,710 - #31 ;
INFO  23:15:15,710 - #44 C
INFO  23:15:15,710 - #44 c
INFO  23:15:15,710 - #31 ;
INFO  23:15:15,710 - #44 int
INFO  23:15:15,710 - #44 i
INFO  23:15:15,711 - #31 ;
INFO  23:15:15,711 - #44 int
INFO  23:15:15,711 - #44 x
INFO  23:15:15,711 - #36 [
INFO  23:15:15,711 - #37 ]
INFO  23:15:15,711 - #31 ;
INFO  23:15:15,711 - #38 {
INFO  23:15:15,711 - #44 a
INFO  23:15:15,711 - #28 =
INFO  23:15:15,711 - #8 new
INFO  23:15:15,712 - #44 A
INFO  23:15:15,712 - #31 ;
INFO  23:15:15,712 - #44 a
INFO  23:15:15,712 - #33 .
INFO  23:15:15,712 - #44 x
INFO  23:15:15,712 - #28 =
INFO  23:15:15,712 - #8 new
INFO  23:15:15,712 - #44 int
INFO  23:15:15,712 - #36 [
INFO  23:15:15,712 - #43 5
INFO  23:15:15,713 - #37 ]
INFO  23:15:15,713 - #31 ;
INFO  23:15:15,713 - #44 a
INFO  23:15:15,713 - #33 .
INFO  23:15:15,713 - #44 y
INFO  23:15:15,713 - #28 =
INFO  23:15:15,713 - #8 new
INFO  23:15:15,713 - #44 int
INFO  23:15:15,713 - #36 [
INFO  23:15:15,713 - #43 5
INFO  23:15:15,714 - #37 ]
INFO  23:15:15,714 - #31 ;
INFO  23:15:15,714 - #44 c
INFO  23:15:15,714 - #28 =
INFO  23:15:15,714 - #8 new
INFO  23:15:15,714 - #44 C
INFO  23:15:15,714 - #31 ;
INFO  23:15:15,714 - #44 c
INFO  23:15:15,714 - #33 .
INFO  23:15:15,714 - #44 theA
INFO  23:15:15,715 - #28 =
INFO  23:15:15,715 - #44 a
INFO  23:15:15,715 - #31 ;
INFO  23:15:15,715 - #44 c
INFO  23:15:15,715 - #33 .
INFO  23:15:15,715 - #44 x
INFO  23:15:15,715 - #28 =
INFO  23:15:15,715 - #8 new
INFO  23:15:15,715 - #44 int
INFO  23:15:15,715 - #36 [
INFO  23:15:15,715 - #43 5
INFO  23:15:15,715 - #37 ]
INFO  23:15:15,716 - #31 ;
INFO  23:15:15,716 - #44 x
INFO  23:15:15,716 - #28 =
INFO  23:15:15,716 - #8 new
INFO  23:15:15,716 - #44 int
INFO  23:15:15,716 - #36 [
INFO  23:15:15,716 - #43 3
INFO  23:15:15,716 - #37 ]
INFO  23:15:15,716 - #31 ;
INFO  23:15:15,716 - #44 i
INFO  23:15:15,716 - #28 =
INFO  23:15:15,717 - #43 0
INFO  23:15:15,717 - #31 ;
INFO  23:15:15,717 - #10 read
INFO  23:15:15,717 - #34 (
INFO  23:15:15,717 - #44 c
INFO  23:15:15,717 - #33 .
INFO  23:15:15,717 - #44 i
INFO  23:15:15,717 - #35 )
INFO  23:15:15,717 - #31 ;
INFO  23:15:15,717 - #13 while
INFO  23:15:15,717 - #34 (
INFO  23:15:15,718 - #44 i
INFO  23:15:15,718 - #24 <
INFO  23:15:15,718 - #43 5
INFO  23:15:15,718 - #35 )
INFO  23:15:15,718 - #38 {
INFO  23:15:15,718 - #10 read
INFO  23:15:15,718 - #34 (
INFO  23:15:15,718 - #44 c
INFO  23:15:15,719 - #33 .
INFO  23:15:15,719 - #44 x
INFO  23:15:15,719 - #36 [
INFO  23:15:15,719 - #44 i
INFO  23:15:15,719 - #37 ]
INFO  23:15:15,719 - #35 )
INFO  23:15:15,719 - #31 ;
INFO  23:15:15,719 - #10 read
INFO  23:15:15,719 - #34 (
INFO  23:15:15,720 - #44 c
INFO  23:15:15,720 - #33 .
INFO  23:15:15,720 - #44 theA
INFO  23:15:15,720 - #33 .
INFO  23:15:15,720 - #44 x
INFO  23:15:15,720 - #36 [
INFO  23:15:15,720 - #44 i
INFO  23:15:15,720 - #37 ]
INFO  23:15:15,720 - #35 )
INFO  23:15:15,720 - #31 ;
INFO  23:15:15,721 - #44 i
INFO  23:15:15,721 - #29 ++
INFO  23:15:15,721 - #31 ;
INFO  23:15:15,721 - #39 }
INFO  23:15:15,721 - #9 print
INFO  23:15:15,721 - #34 (
INFO  23:15:15,721 - #44 c
INFO  23:15:15,721 - #33 .
INFO  23:15:15,721 - #44 getValue
INFO  23:15:15,721 - #34 (
INFO  23:15:15,721 - #44 c
INFO  23:15:15,721 - #33 .
INFO  23:15:15,721 - #44 theA
INFO  23:15:15,722 - #33 .
INFO  23:15:15,722 - #44 x
INFO  23:15:15,722 - #36 [
INFO  23:15:15,722 - #43 0
INFO  23:15:15,722 - #37 ]
INFO  23:15:15,722 - #35 )
INFO  23:15:15,722 - #35 )
INFO  23:15:15,722 - #31 ;
INFO  23:15:15,722 - #39 }
INFO  23:15:15,723 - #39 }
INFO  23:15:15,723 - GlobalVar = 1
INFO  23:15:15,723 - GlobalConst = 2
INFO  23:15:15,723 - LocalMainVar = 4
INFO  23:15:15,723 - GlobalArray = 0
INFO  23:15:15,723 - FuncProg = 1
INFO  23:15:15,723 - Blocks = 1
INFO  23:15:15,723 - FuncCalls = 5
INFO  23:15:15,724 - FormalArg = 0
INFO  23:15:15,724 - DefClass = 3
INFO  23:15:15,724 - DefMClass = 0
INFO  23:15:26,181 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:15:26,191 - #2 program
INFO  23:15:26,191 - #44 Program
INFO  23:15:26,191 - #4 class
INFO  23:15:26,191 - #44 A
INFO  23:15:26,191 - #38 {
INFO  23:15:26,191 - #44 int
INFO  23:15:26,191 - #44 x
INFO  23:15:26,191 - #36 [
INFO  23:15:26,192 - #37 ]
INFO  23:15:26,192 - #32 ,
INFO  23:15:26,192 - #44 y
INFO  23:15:26,192 - #36 [
INFO  23:15:26,192 - #37 ]
INFO  23:15:26,192 - #31 ;
INFO  23:15:26,192 - #39 }
INFO  23:15:26,192 - #6 const
INFO  23:15:26,192 - #44 int
INFO  23:15:26,192 - #44 pi
INFO  23:15:26,192 - #28 =
INFO  23:15:26,192 - #43 3
INFO  23:15:26,192 - #32 ,
INFO  23:15:26,192 - #44 e
INFO  23:15:26,193 - #28 =
INFO  23:15:26,193 - #43 2
INFO  23:15:26,193 - #31 ;
INFO  23:15:26,193 - #4 class
INFO  23:15:26,193 - #44 B
INFO  23:15:26,193 - #38 {
INFO  23:15:26,193 - #44 int
INFO  23:15:26,193 - #44 i
INFO  23:15:26,193 - #31 ;
INFO  23:15:26,193 - #39 }
INFO  23:15:26,193 - #4 class
INFO  23:15:26,193 - #44 C
INFO  23:15:26,194 - #38 {
INFO  23:15:26,194 - #44 int
INFO  23:15:26,194 - #44 i
INFO  23:15:26,194 - #31 ;
INFO  23:15:26,194 - #39 }
INFO  23:15:26,194 - #4 class
INFO  23:15:26,194 - #44 C
INFO  23:15:26,194 - #38 {
INFO  23:15:26,194 - #44 int
INFO  23:15:26,194 - #44 i
INFO  23:15:26,194 - #31 ;
INFO  23:15:26,194 - #39 }
INFO  23:15:26,195 - #38 {
INFO  23:15:26,195 - #12 void
INFO  23:15:26,195 - #44 main
INFO  23:15:26,195 - #34 (
INFO  23:15:26,195 - #35 )
INFO  23:15:26,195 - #44 A
INFO  23:15:26,195 - #44 a
INFO  23:15:26,195 - #31 ;
INFO  23:15:26,195 - #44 C
INFO  23:15:26,195 - #44 c
INFO  23:15:26,195 - #31 ;
INFO  23:15:26,196 - #44 int
INFO  23:15:26,196 - #44 i
INFO  23:15:26,196 - #31 ;
INFO  23:15:26,196 - #44 int
INFO  23:15:26,196 - #44 x
INFO  23:15:26,196 - #36 [
INFO  23:15:26,196 - #37 ]
INFO  23:15:26,196 - #31 ;
INFO  23:15:26,196 - #38 {
INFO  23:15:26,196 - #44 a
INFO  23:15:26,197 - #28 =
INFO  23:15:26,197 - #8 new
INFO  23:15:26,197 - #44 A
INFO  23:15:26,197 - #31 ;
INFO  23:15:26,197 - #44 a
INFO  23:15:26,197 - #33 .
INFO  23:15:26,197 - #44 x
INFO  23:15:26,197 - #28 =
INFO  23:15:26,198 - #8 new
INFO  23:15:26,198 - #44 int
INFO  23:15:26,198 - #36 [
INFO  23:15:26,198 - #43 5
INFO  23:15:26,198 - #37 ]
INFO  23:15:26,198 - #31 ;
INFO  23:15:26,198 - #44 a
INFO  23:15:26,198 - #33 .
INFO  23:15:26,199 - #44 y
INFO  23:15:26,199 - #28 =
INFO  23:15:26,199 - #8 new
INFO  23:15:26,199 - #44 int
INFO  23:15:26,199 - #36 [
INFO  23:15:26,199 - #43 5
INFO  23:15:26,199 - #37 ]
INFO  23:15:26,199 - #31 ;
INFO  23:15:26,199 - #44 c
INFO  23:15:26,200 - #28 =
INFO  23:15:26,200 - #8 new
INFO  23:15:26,200 - #44 C
INFO  23:15:26,200 - #31 ;
INFO  23:15:26,200 - #44 c
INFO  23:15:26,200 - #33 .
INFO  23:15:26,200 - #44 theA
INFO  23:15:26,200 - #28 =
INFO  23:15:26,200 - #44 a
INFO  23:15:26,200 - #31 ;
INFO  23:15:26,200 - #44 c
INFO  23:15:26,200 - #33 .
INFO  23:15:26,200 - #44 x
INFO  23:15:26,201 - #28 =
INFO  23:15:26,201 - #8 new
INFO  23:15:26,201 - #44 int
INFO  23:15:26,201 - #36 [
INFO  23:15:26,201 - #43 5
INFO  23:15:26,201 - #37 ]
INFO  23:15:26,201 - #31 ;
INFO  23:15:26,201 - #44 x
INFO  23:15:26,201 - #28 =
INFO  23:15:26,201 - #8 new
INFO  23:15:26,201 - #44 int
INFO  23:15:26,201 - #36 [
INFO  23:15:26,201 - #43 3
INFO  23:15:26,202 - #37 ]
INFO  23:15:26,202 - #31 ;
INFO  23:15:26,202 - #44 i
INFO  23:15:26,202 - #28 =
INFO  23:15:26,202 - #43 0
INFO  23:15:26,202 - #31 ;
INFO  23:15:26,202 - #10 read
INFO  23:15:26,202 - #34 (
INFO  23:15:26,202 - #44 c
INFO  23:15:26,202 - #33 .
INFO  23:15:26,202 - #44 i
INFO  23:15:26,202 - #35 )
INFO  23:15:26,202 - #31 ;
INFO  23:15:26,203 - #13 while
INFO  23:15:26,203 - #34 (
INFO  23:15:26,203 - #44 i
INFO  23:15:26,203 - #24 <
INFO  23:15:26,203 - #43 5
INFO  23:15:26,203 - #35 )
INFO  23:15:26,203 - #38 {
INFO  23:15:26,203 - #10 read
INFO  23:15:26,203 - #34 (
INFO  23:15:26,203 - #44 c
INFO  23:15:26,203 - #33 .
INFO  23:15:26,203 - #44 x
INFO  23:15:26,203 - #36 [
INFO  23:15:26,204 - #44 i
INFO  23:15:26,204 - #37 ]
INFO  23:15:26,204 - #35 )
INFO  23:15:26,204 - #31 ;
INFO  23:15:26,204 - #10 read
INFO  23:15:26,204 - #34 (
INFO  23:15:26,204 - #44 c
INFO  23:15:26,204 - #33 .
INFO  23:15:26,204 - #44 theA
INFO  23:15:26,204 - #33 .
INFO  23:15:26,204 - #44 x
INFO  23:15:26,204 - #36 [
INFO  23:15:26,204 - #44 i
INFO  23:15:26,204 - #37 ]
INFO  23:15:26,205 - #35 )
INFO  23:15:26,205 - #31 ;
INFO  23:15:26,205 - #44 i
INFO  23:15:26,205 - #29 ++
INFO  23:15:26,205 - #31 ;
INFO  23:15:26,205 - #39 }
INFO  23:15:26,205 - #9 print
INFO  23:15:26,205 - #34 (
INFO  23:15:26,205 - #44 c
INFO  23:15:26,205 - #33 .
INFO  23:15:26,205 - #44 getValue
INFO  23:15:26,205 - #34 (
INFO  23:15:26,205 - #44 c
INFO  23:15:26,206 - #33 .
INFO  23:15:26,206 - #44 theA
INFO  23:15:26,206 - #33 .
INFO  23:15:26,206 - #44 x
INFO  23:15:26,206 - #36 [
INFO  23:15:26,206 - #43 0
INFO  23:15:26,207 - #37 ]
INFO  23:15:26,207 - #35 )
INFO  23:15:26,207 - #35 )
INFO  23:15:26,207 - #31 ;
INFO  23:15:26,207 - #39 }
INFO  23:15:26,207 - #39 }
INFO  23:15:26,207 - GlobalVar = 2
INFO  23:15:26,207 - GlobalConst = 2
INFO  23:15:26,208 - LocalMainVar = 4
INFO  23:15:26,208 - GlobalArray = 0
INFO  23:15:26,208 - FuncProg = 1
INFO  23:15:26,208 - Blocks = 1
INFO  23:15:26,208 - FuncCalls = 5
INFO  23:15:26,208 - FormalArg = 0
INFO  23:15:26,208 - DefClass = 4
INFO  23:15:26,208 - DefMClass = 0
INFO  23:15:48,270 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:15:48,279 - #2 program
INFO  23:15:48,280 - #44 Program
INFO  23:15:48,280 - #4 class
INFO  23:15:48,280 - #44 A
INFO  23:15:48,280 - #38 {
INFO  23:15:48,280 - #44 int
INFO  23:15:48,280 - #44 x
INFO  23:15:48,280 - #36 [
INFO  23:15:48,280 - #37 ]
INFO  23:15:48,280 - #32 ,
INFO  23:15:48,280 - #44 y
INFO  23:15:48,281 - #36 [
INFO  23:15:48,281 - #37 ]
INFO  23:15:48,281 - #31 ;
INFO  23:15:48,281 - #39 }
INFO  23:15:48,281 - #6 const
INFO  23:15:48,281 - #44 int
INFO  23:15:48,281 - #44 pi
INFO  23:15:48,281 - #28 =
INFO  23:15:48,281 - #43 3
INFO  23:15:48,281 - #32 ,
INFO  23:15:48,281 - #44 e
INFO  23:15:48,281 - #28 =
INFO  23:15:48,281 - #43 2
INFO  23:15:48,282 - #31 ;
INFO  23:15:48,282 - #4 class
INFO  23:15:48,282 - #44 A
INFO  23:15:48,282 - #38 {
INFO  23:15:48,282 - #44 int
INFO  23:15:48,282 - #44 x
INFO  23:15:48,282 - #36 [
INFO  23:15:48,282 - #37 ]
INFO  23:15:48,282 - #32 ,
INFO  23:15:48,282 - #44 y
INFO  23:15:48,282 - #36 [
INFO  23:15:48,283 - #37 ]
INFO  23:15:48,283 - #31 ;
INFO  23:15:48,283 - #39 }
INFO  23:15:48,283 - #4 class
INFO  23:15:48,283 - #44 A
INFO  23:15:48,283 - #38 {
INFO  23:15:48,283 - #44 int
INFO  23:15:48,283 - #44 x
INFO  23:15:48,283 - #36 [
INFO  23:15:48,283 - #37 ]
INFO  23:15:48,284 - #32 ,
INFO  23:15:48,284 - #44 y
INFO  23:15:48,284 - #36 [
INFO  23:15:48,284 - #37 ]
INFO  23:15:48,284 - #31 ;
INFO  23:15:48,284 - #39 }
INFO  23:15:48,284 - #4 class
INFO  23:15:48,284 - #44 A
INFO  23:15:48,284 - #38 {
INFO  23:15:48,285 - #44 int
INFO  23:15:48,285 - #44 x
INFO  23:15:48,285 - #36 [
INFO  23:15:48,285 - #37 ]
INFO  23:15:48,285 - #32 ,
INFO  23:15:48,285 - #44 y
INFO  23:15:48,285 - #36 [
INFO  23:15:48,285 - #37 ]
INFO  23:15:48,285 - #31 ;
INFO  23:15:48,285 - #39 }
INFO  23:15:48,286 - #38 {
INFO  23:15:48,286 - #12 void
INFO  23:15:48,286 - #44 main
INFO  23:15:48,286 - #34 (
INFO  23:15:48,286 - #35 )
INFO  23:15:48,286 - #44 A
INFO  23:15:48,286 - #44 a
INFO  23:15:48,286 - #31 ;
INFO  23:15:48,287 - #44 C
INFO  23:15:48,287 - #44 c
INFO  23:15:48,287 - #31 ;
INFO  23:15:48,287 - #44 int
INFO  23:15:48,287 - #44 i
INFO  23:15:48,287 - #31 ;
INFO  23:15:48,287 - #44 int
INFO  23:15:48,287 - #44 x
INFO  23:15:48,288 - #36 [
INFO  23:15:48,288 - #37 ]
INFO  23:15:48,288 - #31 ;
INFO  23:15:48,288 - #38 {
INFO  23:15:48,288 - #44 a
INFO  23:15:48,288 - #28 =
INFO  23:15:48,288 - #8 new
INFO  23:15:48,288 - #44 A
INFO  23:15:48,289 - #31 ;
INFO  23:15:48,289 - #44 a
INFO  23:15:48,289 - #33 .
INFO  23:15:48,289 - #44 x
INFO  23:15:48,289 - #28 =
INFO  23:15:48,289 - #8 new
INFO  23:15:48,289 - #44 int
INFO  23:15:48,289 - #36 [
INFO  23:15:48,289 - #43 5
INFO  23:15:48,290 - #37 ]
INFO  23:15:48,290 - #31 ;
INFO  23:15:48,290 - #44 a
INFO  23:15:48,290 - #33 .
INFO  23:15:48,290 - #44 y
INFO  23:15:48,290 - #28 =
INFO  23:15:48,290 - #8 new
INFO  23:15:48,290 - #44 int
INFO  23:15:48,290 - #36 [
INFO  23:15:48,290 - #43 5
INFO  23:15:48,290 - #37 ]
INFO  23:15:48,290 - #31 ;
INFO  23:15:48,291 - #44 c
INFO  23:15:48,291 - #28 =
INFO  23:15:48,291 - #8 new
INFO  23:15:48,291 - #44 C
INFO  23:15:48,291 - #31 ;
INFO  23:15:48,291 - #44 c
INFO  23:15:48,291 - #33 .
INFO  23:15:48,291 - #44 theA
INFO  23:15:48,291 - #28 =
INFO  23:15:48,291 - #44 a
INFO  23:15:48,291 - #31 ;
INFO  23:15:48,291 - #44 c
INFO  23:15:48,292 - #33 .
INFO  23:15:48,292 - #44 x
INFO  23:15:48,292 - #28 =
INFO  23:15:48,292 - #8 new
INFO  23:15:48,292 - #44 int
INFO  23:15:48,292 - #36 [
INFO  23:15:48,292 - #43 5
INFO  23:15:48,292 - #37 ]
INFO  23:15:48,292 - #31 ;
INFO  23:15:48,292 - #44 x
INFO  23:15:48,293 - #28 =
INFO  23:15:48,293 - #8 new
INFO  23:15:48,293 - #44 int
INFO  23:15:48,293 - #36 [
INFO  23:15:48,293 - #43 3
INFO  23:15:48,293 - #37 ]
INFO  23:15:48,293 - #31 ;
INFO  23:15:48,293 - #44 i
INFO  23:15:48,293 - #28 =
INFO  23:15:48,294 - #43 0
INFO  23:15:48,294 - #31 ;
INFO  23:15:48,294 - #10 read
INFO  23:15:48,294 - #34 (
INFO  23:15:48,294 - #44 c
INFO  23:15:48,294 - #33 .
INFO  23:15:48,294 - #44 i
INFO  23:15:48,294 - #35 )
INFO  23:15:48,294 - #31 ;
INFO  23:15:48,294 - #13 while
INFO  23:15:48,294 - #34 (
INFO  23:15:48,295 - #44 i
INFO  23:15:48,295 - #24 <
INFO  23:15:48,295 - #43 5
INFO  23:15:48,295 - #35 )
INFO  23:15:48,295 - #38 {
INFO  23:15:48,295 - #10 read
INFO  23:15:48,295 - #34 (
INFO  23:15:48,295 - #44 c
INFO  23:15:48,295 - #33 .
INFO  23:15:48,295 - #44 x
INFO  23:15:48,295 - #36 [
INFO  23:15:48,296 - #44 i
INFO  23:15:48,296 - #37 ]
INFO  23:15:48,296 - #35 )
INFO  23:15:48,296 - #31 ;
INFO  23:15:48,296 - #10 read
INFO  23:15:48,296 - #34 (
INFO  23:15:48,296 - #44 c
INFO  23:15:48,296 - #33 .
INFO  23:15:48,296 - #44 theA
INFO  23:15:48,296 - #33 .
INFO  23:15:48,297 - #44 x
INFO  23:15:48,297 - #36 [
INFO  23:15:48,297 - #44 i
INFO  23:15:48,297 - #37 ]
INFO  23:15:48,297 - #35 )
INFO  23:15:48,297 - #31 ;
INFO  23:15:48,297 - #44 i
INFO  23:15:48,297 - #29 ++
INFO  23:15:48,298 - #31 ;
INFO  23:15:48,298 - #39 }
INFO  23:15:48,298 - #9 print
INFO  23:15:48,298 - #34 (
INFO  23:15:48,298 - #44 c
INFO  23:15:48,298 - #33 .
INFO  23:15:48,298 - #44 getValue
INFO  23:15:48,298 - #34 (
INFO  23:15:48,299 - #44 c
INFO  23:15:48,299 - #33 .
INFO  23:15:48,299 - #44 theA
INFO  23:15:48,299 - #33 .
INFO  23:15:48,299 - #44 x
INFO  23:15:48,299 - #36 [
INFO  23:15:48,299 - #43 0
INFO  23:15:48,299 - #37 ]
INFO  23:15:48,299 - #35 )
INFO  23:15:48,299 - #35 )
INFO  23:15:48,300 - #31 ;
INFO  23:15:48,300 - #39 }
INFO  23:15:48,300 - #39 }
INFO  23:15:48,300 - GlobalVar = 4
INFO  23:15:48,300 - GlobalConst = 2
INFO  23:15:48,300 - LocalMainVar = 4
INFO  23:15:48,300 - GlobalArray = 4
INFO  23:15:48,300 - FuncProg = 1
INFO  23:15:48,300 - Blocks = 1
INFO  23:15:48,301 - FuncCalls = 5
INFO  23:15:48,301 - FormalArg = 0
INFO  23:15:48,301 - DefClass = 4
INFO  23:15:48,301 - DefMClass = 0
INFO  23:16:01,332 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:16:01,340 - #2 program
INFO  23:16:01,341 - #44 Program
INFO  23:16:01,341 - #4 class
INFO  23:16:01,341 - #44 A
INFO  23:16:01,341 - #38 {
INFO  23:16:01,341 - #44 int
INFO  23:16:01,341 - #44 x
INFO  23:16:01,341 - #36 [
INFO  23:16:01,342 - #37 ]
INFO  23:16:01,342 - #32 ,
INFO  23:16:01,342 - #44 y
INFO  23:16:01,342 - #36 [
INFO  23:16:01,342 - #37 ]
INFO  23:16:01,342 - #31 ;
INFO  23:16:01,342 - #39 }
INFO  23:16:01,342 - #4 class
INFO  23:16:01,342 - #44 A
INFO  23:16:01,342 - #38 {
INFO  23:16:01,342 - #44 int
INFO  23:16:01,342 - #44 x
INFO  23:16:01,343 - #36 [
INFO  23:16:01,343 - #37 ]
INFO  23:16:01,343 - #32 ,
INFO  23:16:01,343 - #44 y
INFO  23:16:01,343 - #36 [
INFO  23:16:01,343 - #37 ]
INFO  23:16:01,343 - #31 ;
INFO  23:16:01,343 - #39 }
INFO  23:16:01,343 - #6 const
INFO  23:16:01,343 - #44 int
INFO  23:16:01,343 - #44 pi
INFO  23:16:01,343 - #28 =
INFO  23:16:01,343 - #43 3
INFO  23:16:01,343 - #32 ,
INFO  23:16:01,344 - #44 e
INFO  23:16:01,344 - #28 =
INFO  23:16:01,344 - #43 2
INFO  23:16:01,344 - #31 ;
INFO  23:16:01,344 - #4 class
INFO  23:16:01,344 - #44 A
INFO  23:16:01,344 - #38 {
INFO  23:16:01,344 - #44 int
INFO  23:16:01,344 - #44 x
INFO  23:16:01,344 - #36 [
INFO  23:16:01,344 - #37 ]
INFO  23:16:01,344 - #32 ,
INFO  23:16:01,344 - #44 y
INFO  23:16:01,345 - #36 [
INFO  23:16:01,345 - #37 ]
INFO  23:16:01,345 - #31 ;
INFO  23:16:01,345 - #39 }
INFO  23:16:01,345 - #4 class
INFO  23:16:01,345 - #44 A
INFO  23:16:01,345 - #38 {
INFO  23:16:01,345 - #44 int
INFO  23:16:01,345 - #44 x
INFO  23:16:01,345 - #36 [
INFO  23:16:01,345 - #37 ]
INFO  23:16:01,345 - #32 ,
INFO  23:16:01,346 - #44 y
INFO  23:16:01,346 - #36 [
INFO  23:16:01,346 - #37 ]
INFO  23:16:01,346 - #31 ;
INFO  23:16:01,346 - #39 }
INFO  23:16:01,346 - #38 {
INFO  23:16:01,346 - #12 void
INFO  23:16:01,346 - #44 main
INFO  23:16:01,346 - #34 (
INFO  23:16:01,346 - #35 )
INFO  23:16:01,346 - #44 A
INFO  23:16:01,346 - #44 a
INFO  23:16:01,347 - #31 ;
INFO  23:16:01,347 - #44 C
INFO  23:16:01,347 - #44 c
INFO  23:16:01,347 - #31 ;
INFO  23:16:01,347 - #44 int
INFO  23:16:01,347 - #44 i
INFO  23:16:01,347 - #31 ;
INFO  23:16:01,347 - #44 int
INFO  23:16:01,347 - #44 x
INFO  23:16:01,348 - #36 [
INFO  23:16:01,348 - #37 ]
INFO  23:16:01,348 - #31 ;
INFO  23:16:01,348 - #38 {
INFO  23:16:01,348 - #44 a
INFO  23:16:01,348 - #28 =
INFO  23:16:01,348 - #8 new
INFO  23:16:01,348 - #44 A
INFO  23:16:01,348 - #31 ;
INFO  23:16:01,348 - #44 a
INFO  23:16:01,349 - #33 .
INFO  23:16:01,349 - #44 x
INFO  23:16:01,349 - #28 =
INFO  23:16:01,349 - #8 new
INFO  23:16:01,349 - #44 int
INFO  23:16:01,349 - #36 [
INFO  23:16:01,349 - #43 5
INFO  23:16:01,349 - #37 ]
INFO  23:16:01,349 - #31 ;
INFO  23:16:01,349 - #44 a
INFO  23:16:01,349 - #33 .
INFO  23:16:01,349 - #44 y
INFO  23:16:01,350 - #28 =
INFO  23:16:01,350 - #8 new
INFO  23:16:01,350 - #44 int
INFO  23:16:01,350 - #36 [
INFO  23:16:01,350 - #43 5
INFO  23:16:01,350 - #37 ]
INFO  23:16:01,350 - #31 ;
INFO  23:16:01,350 - #44 c
INFO  23:16:01,350 - #28 =
INFO  23:16:01,350 - #8 new
INFO  23:16:01,350 - #44 C
INFO  23:16:01,350 - #31 ;
INFO  23:16:01,351 - #44 c
INFO  23:16:01,351 - #33 .
INFO  23:16:01,351 - #44 theA
INFO  23:16:01,351 - #28 =
INFO  23:16:01,351 - #44 a
INFO  23:16:01,351 - #31 ;
INFO  23:16:01,351 - #44 c
INFO  23:16:01,351 - #33 .
INFO  23:16:01,351 - #44 x
INFO  23:16:01,351 - #28 =
INFO  23:16:01,352 - #8 new
INFO  23:16:01,352 - #44 int
INFO  23:16:01,352 - #36 [
INFO  23:16:01,352 - #43 5
INFO  23:16:01,352 - #37 ]
INFO  23:16:01,352 - #31 ;
INFO  23:16:01,352 - #44 x
INFO  23:16:01,352 - #28 =
INFO  23:16:01,353 - #8 new
INFO  23:16:01,353 - #44 int
INFO  23:16:01,353 - #36 [
INFO  23:16:01,353 - #43 3
INFO  23:16:01,353 - #37 ]
INFO  23:16:01,353 - #31 ;
INFO  23:16:01,353 - #44 i
INFO  23:16:01,354 - #28 =
INFO  23:16:01,354 - #43 0
INFO  23:16:01,354 - #31 ;
INFO  23:16:01,354 - #10 read
INFO  23:16:01,354 - #34 (
INFO  23:16:01,354 - #44 c
INFO  23:16:01,354 - #33 .
INFO  23:16:01,354 - #44 i
INFO  23:16:01,354 - #35 )
INFO  23:16:01,354 - #31 ;
INFO  23:16:01,354 - #13 while
INFO  23:16:01,354 - #34 (
INFO  23:16:01,355 - #44 i
INFO  23:16:01,355 - #24 <
INFO  23:16:01,355 - #43 5
INFO  23:16:01,355 - #35 )
INFO  23:16:01,355 - #38 {
INFO  23:16:01,355 - #10 read
INFO  23:16:01,355 - #34 (
INFO  23:16:01,355 - #44 c
INFO  23:16:01,355 - #33 .
INFO  23:16:01,355 - #44 x
INFO  23:16:01,355 - #36 [
INFO  23:16:01,355 - #44 i
INFO  23:16:01,355 - #37 ]
INFO  23:16:01,356 - #35 )
INFO  23:16:01,356 - #31 ;
INFO  23:16:01,356 - #10 read
INFO  23:16:01,356 - #34 (
INFO  23:16:01,356 - #44 c
INFO  23:16:01,356 - #33 .
INFO  23:16:01,356 - #44 theA
INFO  23:16:01,356 - #33 .
INFO  23:16:01,356 - #44 x
INFO  23:16:01,356 - #36 [
INFO  23:16:01,356 - #44 i
INFO  23:16:01,357 - #37 ]
INFO  23:16:01,357 - #35 )
INFO  23:16:01,357 - #31 ;
INFO  23:16:01,357 - #44 i
INFO  23:16:01,357 - #29 ++
INFO  23:16:01,357 - #31 ;
INFO  23:16:01,357 - #39 }
INFO  23:16:01,358 - #9 print
INFO  23:16:01,358 - #34 (
INFO  23:16:01,358 - #44 c
INFO  23:16:01,358 - #33 .
INFO  23:16:01,358 - #44 getValue
INFO  23:16:01,358 - #34 (
INFO  23:16:01,358 - #44 c
INFO  23:16:01,358 - #33 .
INFO  23:16:01,358 - #44 theA
INFO  23:16:01,358 - #33 .
INFO  23:16:01,359 - #44 x
INFO  23:16:01,359 - #36 [
INFO  23:16:01,359 - #43 0
INFO  23:16:01,359 - #37 ]
INFO  23:16:01,359 - #35 )
INFO  23:16:01,359 - #35 )
INFO  23:16:01,359 - #31 ;
INFO  23:16:01,359 - #39 }
INFO  23:16:01,359 - #39 }
INFO  23:16:01,360 - GlobalVar = 4
INFO  23:16:01,360 - GlobalConst = 2
INFO  23:16:01,360 - LocalMainVar = 4
INFO  23:16:01,360 - GlobalArray = 4
INFO  23:16:01,360 - FuncProg = 1
INFO  23:16:01,360 - Blocks = 1
INFO  23:16:01,360 - FuncCalls = 5
INFO  23:16:01,360 - FormalArg = 0
INFO  23:16:01,360 - DefClass = 4
INFO  23:16:01,360 - DefMClass = 0
INFO  23:16:13,683 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:16:13,691 - #2 program
INFO  23:16:13,691 - #44 Program
INFO  23:16:13,691 - #4 class
INFO  23:16:13,691 - #44 A
INFO  23:16:13,691 - #38 {
INFO  23:16:13,692 - #44 int
INFO  23:16:13,692 - #44 x
INFO  23:16:13,692 - #36 [
INFO  23:16:13,692 - #37 ]
INFO  23:16:13,692 - #32 ,
INFO  23:16:13,692 - #44 y
INFO  23:16:13,692 - #36 [
INFO  23:16:13,692 - #37 ]
INFO  23:16:13,692 - #31 ;
INFO  23:16:13,692 - #39 }
INFO  23:16:13,692 - #4 class
INFO  23:16:13,692 - #44 A
INFO  23:16:13,693 - #38 {
INFO  23:16:13,693 - #44 int
INFO  23:16:13,693 - #44 x
INFO  23:16:13,693 - #36 [
INFO  23:16:13,693 - #37 ]
INFO  23:16:13,693 - #32 ,
INFO  23:16:13,693 - #44 y
INFO  23:16:13,693 - #36 [
INFO  23:16:13,693 - #37 ]
INFO  23:16:13,693 - #31 ;
INFO  23:16:13,693 - #39 }
INFO  23:16:13,693 - #4 class
INFO  23:16:13,693 - #44 A
INFO  23:16:13,693 - #38 {
INFO  23:16:13,694 - #44 int
INFO  23:16:13,694 - #44 x
INFO  23:16:13,694 - #36 [
INFO  23:16:13,694 - #37 ]
INFO  23:16:13,694 - #32 ,
INFO  23:16:13,694 - #44 y
INFO  23:16:13,694 - #36 [
INFO  23:16:13,694 - #37 ]
INFO  23:16:13,694 - #31 ;
INFO  23:16:13,694 - #39 }
INFO  23:16:13,694 - #6 const
INFO  23:16:13,694 - #44 int
INFO  23:16:13,695 - #44 pi
INFO  23:16:13,695 - #28 =
INFO  23:16:13,695 - #43 3
INFO  23:16:13,695 - #32 ,
INFO  23:16:13,695 - #44 e
INFO  23:16:13,695 - #28 =
INFO  23:16:13,695 - #43 2
INFO  23:16:13,695 - #31 ;
INFO  23:16:13,695 - #4 class
INFO  23:16:13,696 - #44 A
INFO  23:16:13,696 - #38 {
INFO  23:16:13,696 - #44 int
INFO  23:16:13,696 - #44 x
INFO  23:16:13,696 - #36 [
INFO  23:16:13,696 - #37 ]
INFO  23:16:13,696 - #32 ,
INFO  23:16:13,696 - #44 y
INFO  23:16:13,696 - #36 [
INFO  23:16:13,696 - #37 ]
INFO  23:16:13,696 - #31 ;
INFO  23:16:13,696 - #39 }
INFO  23:16:13,697 - #38 {
INFO  23:16:13,697 - #12 void
INFO  23:16:13,697 - #44 main
INFO  23:16:13,697 - #34 (
INFO  23:16:13,697 - #35 )
INFO  23:16:13,697 - #44 A
INFO  23:16:13,697 - #44 a
INFO  23:16:13,697 - #31 ;
INFO  23:16:13,697 - #44 C
INFO  23:16:13,697 - #44 c
INFO  23:16:13,698 - #31 ;
INFO  23:16:13,698 - #44 int
INFO  23:16:13,698 - #44 i
INFO  23:16:13,698 - #31 ;
INFO  23:16:13,698 - #44 int
INFO  23:16:13,698 - #44 x
INFO  23:16:13,698 - #36 [
INFO  23:16:13,698 - #37 ]
INFO  23:16:13,698 - #31 ;
INFO  23:16:13,699 - #38 {
INFO  23:16:13,699 - #44 a
INFO  23:16:13,699 - #28 =
INFO  23:16:13,699 - #8 new
INFO  23:16:13,699 - #44 A
INFO  23:16:13,699 - #31 ;
INFO  23:16:13,699 - #44 a
INFO  23:16:13,699 - #33 .
INFO  23:16:13,699 - #44 x
INFO  23:16:13,700 - #28 =
INFO  23:16:13,700 - #8 new
INFO  23:16:13,700 - #44 int
INFO  23:16:13,700 - #36 [
INFO  23:16:13,700 - #43 5
INFO  23:16:13,700 - #37 ]
INFO  23:16:13,700 - #31 ;
INFO  23:16:13,700 - #44 a
INFO  23:16:13,700 - #33 .
INFO  23:16:13,700 - #44 y
INFO  23:16:13,700 - #28 =
INFO  23:16:13,701 - #8 new
INFO  23:16:13,701 - #44 int
INFO  23:16:13,701 - #36 [
INFO  23:16:13,701 - #43 5
INFO  23:16:13,701 - #37 ]
INFO  23:16:13,701 - #31 ;
INFO  23:16:13,701 - #44 c
INFO  23:16:13,701 - #28 =
INFO  23:16:13,701 - #8 new
INFO  23:16:13,701 - #44 C
INFO  23:16:13,701 - #31 ;
INFO  23:16:13,701 - #44 c
INFO  23:16:13,701 - #33 .
INFO  23:16:13,702 - #44 theA
INFO  23:16:13,702 - #28 =
INFO  23:16:13,702 - #44 a
INFO  23:16:13,702 - #31 ;
INFO  23:16:13,702 - #44 c
INFO  23:16:13,702 - #33 .
INFO  23:16:13,702 - #44 x
INFO  23:16:13,702 - #28 =
INFO  23:16:13,702 - #8 new
INFO  23:16:13,703 - #44 int
INFO  23:16:13,703 - #36 [
INFO  23:16:13,703 - #43 5
INFO  23:16:13,703 - #37 ]
INFO  23:16:13,703 - #31 ;
INFO  23:16:13,703 - #44 x
INFO  23:16:13,703 - #28 =
INFO  23:16:13,703 - #8 new
INFO  23:16:13,704 - #44 int
INFO  23:16:13,704 - #36 [
INFO  23:16:13,704 - #43 3
INFO  23:16:13,704 - #37 ]
INFO  23:16:13,704 - #31 ;
INFO  23:16:13,704 - #44 i
INFO  23:16:13,704 - #28 =
INFO  23:16:13,704 - #43 0
INFO  23:16:13,704 - #31 ;
INFO  23:16:13,705 - #10 read
INFO  23:16:13,705 - #34 (
INFO  23:16:13,705 - #44 c
INFO  23:16:13,705 - #33 .
INFO  23:16:13,705 - #44 i
INFO  23:16:13,705 - #35 )
INFO  23:16:13,705 - #31 ;
INFO  23:16:13,705 - #13 while
INFO  23:16:13,706 - #34 (
INFO  23:16:13,706 - #44 i
INFO  23:16:13,706 - #24 <
INFO  23:16:13,706 - #43 5
INFO  23:16:13,706 - #35 )
INFO  23:16:13,706 - #38 {
INFO  23:16:13,706 - #10 read
INFO  23:16:13,706 - #34 (
INFO  23:16:13,706 - #44 c
INFO  23:16:13,706 - #33 .
INFO  23:16:13,706 - #44 x
INFO  23:16:13,706 - #36 [
INFO  23:16:13,706 - #44 i
INFO  23:16:13,706 - #37 ]
INFO  23:16:13,707 - #35 )
INFO  23:16:13,707 - #31 ;
INFO  23:16:13,707 - #10 read
INFO  23:16:13,707 - #34 (
INFO  23:16:13,707 - #44 c
INFO  23:16:13,707 - #33 .
INFO  23:16:13,707 - #44 theA
INFO  23:16:13,707 - #33 .
INFO  23:16:13,707 - #44 x
INFO  23:16:13,707 - #36 [
INFO  23:16:13,707 - #44 i
INFO  23:16:13,708 - #37 ]
INFO  23:16:13,708 - #35 )
INFO  23:16:13,708 - #31 ;
INFO  23:16:13,708 - #44 i
INFO  23:16:13,708 - #29 ++
INFO  23:16:13,708 - #31 ;
INFO  23:16:13,708 - #39 }
INFO  23:16:13,709 - #9 print
INFO  23:16:13,709 - #34 (
INFO  23:16:13,709 - #44 c
INFO  23:16:13,709 - #33 .
INFO  23:16:13,709 - #44 getValue
INFO  23:16:13,709 - #34 (
INFO  23:16:13,709 - #44 c
INFO  23:16:13,709 - #33 .
INFO  23:16:13,709 - #44 theA
INFO  23:16:13,710 - #33 .
INFO  23:16:13,710 - #44 x
INFO  23:16:13,710 - #36 [
INFO  23:16:13,710 - #43 0
INFO  23:16:13,710 - #37 ]
INFO  23:16:13,710 - #35 )
INFO  23:16:13,710 - #35 )
INFO  23:16:13,710 - #31 ;
INFO  23:16:13,711 - #39 }
INFO  23:16:13,711 - #39 }
INFO  23:16:13,711 - GlobalVar = 4
INFO  23:16:13,711 - GlobalConst = 2
INFO  23:16:13,711 - LocalMainVar = 4
INFO  23:16:13,712 - GlobalArray = 4
INFO  23:16:13,712 - FuncProg = 1
INFO  23:16:13,712 - Blocks = 1
INFO  23:16:13,712 - FuncCalls = 5
INFO  23:16:13,712 - FormalArg = 0
INFO  23:16:13,712 - DefClass = 4
INFO  23:16:13,712 - DefMClass = 0
INFO  23:16:35,173 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:16:35,182 - #2 program
INFO  23:16:35,182 - #44 Program
INFO  23:16:35,182 - #4 class
INFO  23:16:35,182 - #44 A
INFO  23:16:35,182 - #38 {
INFO  23:16:35,182 - #44 int
INFO  23:16:35,182 - #44 x
INFO  23:16:35,182 - #36 [
INFO  23:16:35,182 - #37 ]
INFO  23:16:35,182 - #32 ,
INFO  23:16:35,183 - #44 y
INFO  23:16:35,183 - #36 [
INFO  23:16:35,183 - #37 ]
INFO  23:16:35,183 - #31 ;
INFO  23:16:35,183 - #39 }
INFO  23:16:35,183 - #4 class
INFO  23:16:35,183 - #44 A
INFO  23:16:35,183 - #38 {
INFO  23:16:35,183 - #44 int
INFO  23:16:35,183 - #44 x
INFO  23:16:35,183 - #36 [
INFO  23:16:35,184 - #37 ]
INFO  23:16:35,184 - #32 ,
INFO  23:16:35,184 - #44 y
INFO  23:16:35,184 - #36 [
INFO  23:16:35,184 - #37 ]
INFO  23:16:35,184 - #31 ;
INFO  23:16:35,184 - #39 }
INFO  23:16:35,184 - #4 class
INFO  23:16:35,184 - #44 A
INFO  23:16:35,184 - #38 {
INFO  23:16:35,184 - #44 int
INFO  23:16:35,184 - #44 x
INFO  23:16:35,184 - #36 [
INFO  23:16:35,184 - #37 ]
INFO  23:16:35,185 - #32 ,
INFO  23:16:35,185 - #44 y
INFO  23:16:35,185 - #36 [
INFO  23:16:35,185 - #37 ]
INFO  23:16:35,185 - #31 ;
INFO  23:16:35,185 - #39 }
INFO  23:16:35,185 - #4 class
INFO  23:16:35,185 - #44 A
INFO  23:16:35,185 - #38 {
INFO  23:16:35,185 - #44 int
INFO  23:16:35,185 - #44 x
INFO  23:16:35,185 - #36 [
INFO  23:16:35,185 - #37 ]
INFO  23:16:35,185 - #32 ,
INFO  23:16:35,186 - #44 y
INFO  23:16:35,186 - #36 [
INFO  23:16:35,186 - #37 ]
INFO  23:16:35,186 - #31 ;
INFO  23:16:35,186 - #39 }
INFO  23:16:35,186 - #38 {
INFO  23:16:35,186 - #12 void
INFO  23:16:35,186 - #44 main
INFO  23:16:35,186 - #34 (
INFO  23:16:35,186 - #35 )
INFO  23:16:35,186 - #44 A
INFO  23:16:35,186 - #44 a
INFO  23:16:35,186 - #31 ;
INFO  23:16:35,187 - #44 C
INFO  23:16:35,187 - #44 c
INFO  23:16:35,187 - #31 ;
INFO  23:16:35,187 - #44 int
INFO  23:16:35,187 - #44 i
INFO  23:16:35,187 - #31 ;
INFO  23:16:35,187 - #44 int
INFO  23:16:35,188 - #44 x
INFO  23:16:35,188 - #36 [
INFO  23:16:35,188 - #37 ]
INFO  23:16:35,188 - #31 ;
INFO  23:16:35,188 - #38 {
INFO  23:16:35,188 - #44 a
INFO  23:16:35,188 - #28 =
INFO  23:16:35,188 - #8 new
INFO  23:16:35,188 - #44 A
INFO  23:16:35,188 - #31 ;
INFO  23:16:35,188 - #44 a
INFO  23:16:35,189 - #33 .
INFO  23:16:35,189 - #44 x
INFO  23:16:35,189 - #28 =
INFO  23:16:35,189 - #8 new
INFO  23:16:35,189 - #44 int
INFO  23:16:35,189 - #36 [
INFO  23:16:35,189 - #43 5
INFO  23:16:35,189 - #37 ]
INFO  23:16:35,190 - #31 ;
INFO  23:16:35,190 - #44 a
INFO  23:16:35,190 - #33 .
INFO  23:16:35,190 - #44 y
INFO  23:16:35,190 - #28 =
INFO  23:16:35,190 - #8 new
INFO  23:16:35,190 - #44 int
INFO  23:16:35,190 - #36 [
INFO  23:16:35,190 - #43 5
INFO  23:16:35,190 - #37 ]
INFO  23:16:35,190 - #31 ;
INFO  23:16:35,190 - #44 c
INFO  23:16:35,190 - #28 =
INFO  23:16:35,191 - #8 new
INFO  23:16:35,191 - #44 C
INFO  23:16:35,191 - #31 ;
INFO  23:16:35,191 - #44 c
INFO  23:16:35,191 - #33 .
INFO  23:16:35,191 - #44 theA
INFO  23:16:35,191 - #28 =
INFO  23:16:35,191 - #44 a
INFO  23:16:35,191 - #31 ;
INFO  23:16:35,191 - #44 c
INFO  23:16:35,191 - #33 .
INFO  23:16:35,192 - #44 x
INFO  23:16:35,192 - #28 =
INFO  23:16:35,192 - #8 new
INFO  23:16:35,192 - #44 int
INFO  23:16:35,192 - #36 [
INFO  23:16:35,192 - #43 5
INFO  23:16:35,192 - #37 ]
INFO  23:16:35,192 - #31 ;
INFO  23:16:35,192 - #44 x
INFO  23:16:35,192 - #28 =
INFO  23:16:35,192 - #8 new
INFO  23:16:35,192 - #44 int
INFO  23:16:35,192 - #36 [
INFO  23:16:35,193 - #43 3
INFO  23:16:35,193 - #37 ]
INFO  23:16:35,193 - #31 ;
INFO  23:16:35,193 - #44 i
INFO  23:16:35,193 - #28 =
INFO  23:16:35,193 - #43 0
INFO  23:16:35,193 - #31 ;
INFO  23:16:35,193 - #10 read
INFO  23:16:35,193 - #34 (
INFO  23:16:35,193 - #44 c
INFO  23:16:35,193 - #33 .
INFO  23:16:35,193 - #44 i
INFO  23:16:35,193 - #35 )
INFO  23:16:35,194 - #31 ;
INFO  23:16:35,194 - #13 while
INFO  23:16:35,194 - #34 (
INFO  23:16:35,194 - #44 i
INFO  23:16:35,194 - #24 <
INFO  23:16:35,194 - #43 5
INFO  23:16:35,194 - #35 )
INFO  23:16:35,194 - #38 {
INFO  23:16:35,194 - #10 read
INFO  23:16:35,194 - #34 (
INFO  23:16:35,194 - #44 c
INFO  23:16:35,194 - #33 .
INFO  23:16:35,194 - #44 x
INFO  23:16:35,194 - #36 [
INFO  23:16:35,195 - #44 i
INFO  23:16:35,195 - #37 ]
INFO  23:16:35,195 - #35 )
INFO  23:16:35,195 - #31 ;
INFO  23:16:35,195 - #10 read
INFO  23:16:35,195 - #34 (
INFO  23:16:35,195 - #44 c
INFO  23:16:35,195 - #33 .
INFO  23:16:35,195 - #44 theA
INFO  23:16:35,195 - #33 .
INFO  23:16:35,195 - #44 x
INFO  23:16:35,196 - #36 [
INFO  23:16:35,196 - #44 i
INFO  23:16:35,196 - #37 ]
INFO  23:16:35,196 - #35 )
INFO  23:16:35,196 - #31 ;
INFO  23:16:35,196 - #44 i
INFO  23:16:35,196 - #29 ++
INFO  23:16:35,196 - #31 ;
INFO  23:16:35,196 - #39 }
INFO  23:16:35,196 - #9 print
INFO  23:16:35,196 - #34 (
INFO  23:16:35,197 - #44 c
INFO  23:16:35,197 - #33 .
INFO  23:16:35,197 - #44 getValue
INFO  23:16:35,197 - #34 (
INFO  23:16:35,197 - #44 c
INFO  23:16:35,197 - #33 .
INFO  23:16:35,197 - #44 theA
INFO  23:16:35,197 - #33 .
INFO  23:16:35,198 - #44 x
INFO  23:16:35,198 - #36 [
INFO  23:16:35,198 - #43 0
INFO  23:16:35,198 - #37 ]
INFO  23:16:35,198 - #35 )
INFO  23:16:35,198 - #35 )
INFO  23:16:35,198 - #31 ;
INFO  23:16:35,198 - #39 }
INFO  23:16:35,198 - #39 }
INFO  23:16:35,198 - GlobalVar = 6
INFO  23:16:35,198 - GlobalConst = 0
INFO  23:16:35,199 - LocalMainVar = 4
INFO  23:16:35,199 - GlobalArray = 6
INFO  23:16:35,199 - FuncProg = 1
INFO  23:16:35,199 - Blocks = 1
INFO  23:16:35,199 - FuncCalls = 5
INFO  23:16:35,199 - FormalArg = 0
INFO  23:16:35,199 - DefClass = 4
INFO  23:16:35,199 - DefMClass = 0
INFO  23:18:02,797 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:18:02,808 - #2 program
INFO  23:18:02,808 - #44 Program
INFO  23:18:02,808 - #4 class
INFO  23:18:02,808 - #44 A
INFO  23:18:02,808 - #38 {
INFO  23:18:02,808 - #44 int
INFO  23:18:02,808 - #44 x
INFO  23:18:02,808 - #36 [
INFO  23:18:02,808 - #37 ]
INFO  23:18:02,809 - #32 ,
INFO  23:18:02,809 - #44 y
INFO  23:18:02,809 - #36 [
INFO  23:18:02,809 - #37 ]
INFO  23:18:02,809 - #31 ;
INFO  23:18:02,809 - #39 }
INFO  23:18:02,809 - #4 class
INFO  23:18:02,809 - #44 A
INFO  23:18:02,809 - #38 {
INFO  23:18:02,809 - #44 int
INFO  23:18:02,809 - #44 x
INFO  23:18:02,809 - #36 [
INFO  23:18:02,810 - #37 ]
INFO  23:18:02,810 - #32 ,
INFO  23:18:02,810 - #44 y
INFO  23:18:02,810 - #36 [
INFO  23:18:02,810 - #37 ]
INFO  23:18:02,810 - #31 ;
INFO  23:18:02,810 - #39 }
INFO  23:18:02,810 - #4 class
INFO  23:18:02,810 - #44 A
INFO  23:18:02,810 - #38 {
INFO  23:18:02,810 - #44 int
INFO  23:18:02,810 - #44 x
INFO  23:18:02,810 - #36 [
INFO  23:18:02,810 - #37 ]
INFO  23:18:02,811 - #32 ,
INFO  23:18:02,811 - #44 y
INFO  23:18:02,811 - #36 [
INFO  23:18:02,811 - #37 ]
INFO  23:18:02,811 - #31 ;
INFO  23:18:02,811 - #39 }
INFO  23:18:02,811 - #4 class
INFO  23:18:02,811 - #44 A
INFO  23:18:02,811 - #38 {
INFO  23:18:02,811 - #44 int
INFO  23:18:02,811 - #44 x
INFO  23:18:02,811 - #36 [
INFO  23:18:02,811 - #37 ]
INFO  23:18:02,811 - #32 ,
INFO  23:18:02,812 - #44 y
INFO  23:18:02,812 - #36 [
INFO  23:18:02,812 - #37 ]
INFO  23:18:02,812 - #31 ;
INFO  23:18:02,812 - #39 }
INFO  23:18:02,812 - #38 {
INFO  23:18:02,812 - #12 void
INFO  23:18:02,812 - #44 main
INFO  23:18:02,812 - #34 (
INFO  23:18:02,812 - #35 )
INFO  23:18:02,812 - #44 A
INFO  23:18:02,813 - #44 a
INFO  23:18:02,813 - #31 ;
INFO  23:18:02,813 - #44 C
INFO  23:18:02,813 - #44 c
INFO  23:18:02,813 - #31 ;
INFO  23:18:02,813 - #44 int
INFO  23:18:02,813 - #44 i
INFO  23:18:02,813 - #31 ;
INFO  23:18:02,814 - #44 int
INFO  23:18:02,814 - #44 x
INFO  23:18:02,814 - #36 [
INFO  23:18:02,814 - #37 ]
INFO  23:18:02,814 - #31 ;
INFO  23:18:02,814 - #38 {
INFO  23:18:02,814 - #44 a
INFO  23:18:02,814 - #28 =
INFO  23:18:02,814 - #8 new
INFO  23:18:02,814 - #44 A
INFO  23:18:02,815 - #31 ;
INFO  23:18:02,815 - #44 a
INFO  23:18:02,815 - #33 .
INFO  23:18:02,815 - #44 x
INFO  23:18:02,815 - #28 =
INFO  23:18:02,815 - #8 new
INFO  23:18:02,815 - #44 int
INFO  23:18:02,815 - #36 [
INFO  23:18:02,816 - #43 5
INFO  23:18:02,816 - #37 ]
INFO  23:18:02,816 - #31 ;
INFO  23:18:02,816 - #44 a
INFO  23:18:02,816 - #33 .
INFO  23:18:02,816 - #44 y
INFO  23:18:02,816 - #28 =
INFO  23:18:02,816 - #8 new
INFO  23:18:02,817 - #44 int
INFO  23:18:02,817 - #36 [
INFO  23:18:02,817 - #43 5
INFO  23:18:02,817 - #37 ]
INFO  23:18:02,817 - #31 ;
INFO  23:18:02,817 - #44 c
INFO  23:18:02,817 - #28 =
INFO  23:18:02,817 - #8 new
INFO  23:18:02,817 - #44 C
INFO  23:18:02,817 - #31 ;
INFO  23:18:02,817 - #44 c
INFO  23:18:02,818 - #33 .
INFO  23:18:02,818 - #44 theA
INFO  23:18:02,818 - #28 =
INFO  23:18:02,818 - #44 a
INFO  23:18:02,818 - #31 ;
INFO  23:18:02,818 - #44 c
INFO  23:18:02,818 - #33 .
INFO  23:18:02,818 - #44 x
INFO  23:18:02,818 - #28 =
INFO  23:18:02,818 - #8 new
INFO  23:18:02,818 - #44 int
INFO  23:18:02,818 - #36 [
INFO  23:18:02,819 - #43 5
INFO  23:18:02,819 - #37 ]
INFO  23:18:02,819 - #31 ;
INFO  23:18:02,819 - #44 x
INFO  23:18:02,819 - #28 =
INFO  23:18:02,819 - #8 new
INFO  23:18:02,819 - #44 int
INFO  23:18:02,819 - #36 [
INFO  23:18:02,819 - #43 3
INFO  23:18:02,819 - #37 ]
INFO  23:18:02,820 - #31 ;
INFO  23:18:02,820 - #44 i
INFO  23:18:02,820 - #28 =
INFO  23:18:02,820 - #43 0
INFO  23:18:02,820 - #31 ;
INFO  23:18:02,820 - #10 read
INFO  23:18:02,820 - #34 (
INFO  23:18:02,820 - #44 c
INFO  23:18:02,820 - #33 .
INFO  23:18:02,821 - #44 i
INFO  23:18:02,821 - #35 )
INFO  23:18:02,821 - #31 ;
INFO  23:18:02,821 - #13 while
INFO  23:18:02,821 - #34 (
INFO  23:18:02,821 - #44 i
INFO  23:18:02,821 - #24 <
INFO  23:18:02,821 - #43 5
INFO  23:18:02,821 - #35 )
INFO  23:18:02,821 - #38 {
INFO  23:18:02,822 - #10 read
INFO  23:18:02,822 - #34 (
INFO  23:18:02,822 - #44 c
INFO  23:18:02,822 - #33 .
INFO  23:18:02,822 - #44 x
INFO  23:18:02,822 - #36 [
INFO  23:18:02,822 - #44 i
INFO  23:18:02,822 - #37 ]
INFO  23:18:02,822 - #35 )
INFO  23:18:02,822 - #31 ;
INFO  23:18:02,822 - #10 read
INFO  23:18:02,822 - #34 (
INFO  23:18:02,823 - #44 c
INFO  23:18:02,823 - #33 .
INFO  23:18:02,823 - #44 theA
INFO  23:18:02,823 - #33 .
INFO  23:18:02,823 - #44 x
INFO  23:18:02,823 - #36 [
INFO  23:18:02,823 - #44 i
INFO  23:18:02,823 - #37 ]
INFO  23:18:02,823 - #35 )
INFO  23:18:02,823 - #31 ;
INFO  23:18:02,823 - #44 i
INFO  23:18:02,823 - #29 ++
INFO  23:18:02,824 - #31 ;
INFO  23:18:02,824 - #39 }
INFO  23:18:02,824 - #9 print
INFO  23:18:02,824 - #34 (
INFO  23:18:02,824 - #44 c
INFO  23:18:02,824 - #33 .
INFO  23:18:02,824 - #44 getValue
INFO  23:18:02,824 - #34 (
INFO  23:18:02,825 - #44 c
INFO  23:18:02,825 - #33 .
INFO  23:18:02,825 - #44 theA
INFO  23:18:02,825 - #33 .
INFO  23:18:02,825 - #44 x
INFO  23:18:02,825 - #36 [
INFO  23:18:02,825 - #43 0
INFO  23:18:02,825 - #37 ]
INFO  23:18:02,825 - #35 )
INFO  23:18:02,826 - #35 )
INFO  23:18:02,826 - #31 ;
INFO  23:18:02,826 - #39 }
INFO  23:18:02,826 - #39 }
INFO  23:18:02,826 - GlobalVar = 6
INFO  23:18:02,826 - GlobalConst = 0
INFO  23:18:02,826 - LocalMainVar = 4
INFO  23:18:02,826 - GlobalArray = 6
INFO  23:18:02,827 - FuncProg = 1
INFO  23:18:02,827 - Blocks = 1
INFO  23:18:02,827 - FuncCalls = 5
INFO  23:18:02,827 - FormalArg = 0
INFO  23:18:02,827 - DefClass = 4
INFO  23:18:02,827 - DefMClass = 0
INFO  23:18:10,951 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:18:10,960 - #2 program
INFO  23:18:10,960 - #44 Program
INFO  23:18:10,960 - #4 class
INFO  23:18:10,960 - #44 A
INFO  23:18:10,960 - #38 {
INFO  23:18:25,906 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:18:25,915 - #2 program
INFO  23:18:25,915 - #44 Program
INFO  23:18:25,915 - #4 class
INFO  23:18:25,915 - #44 A
INFO  23:18:25,915 - #38 {
INFO  23:18:25,915 - #44 int
INFO  23:18:25,915 - #44 x
INFO  23:18:25,915 - #36 [
INFO  23:18:25,916 - #37 ]
INFO  23:18:25,916 - #32 ,
INFO  23:18:25,916 - #44 y
INFO  23:18:25,916 - #36 [
INFO  23:18:25,916 - #37 ]
INFO  23:18:25,916 - #31 ;
INFO  23:18:25,916 - #39 }
INFO  23:18:25,916 - #4 class
INFO  23:18:25,916 - #44 A
INFO  23:18:25,916 - #38 {
INFO  23:18:25,916 - #44 int
INFO  23:18:25,916 - #44 x
INFO  23:18:25,916 - #36 [
INFO  23:18:25,917 - #37 ]
INFO  23:18:25,917 - #32 ,
INFO  23:18:25,917 - #44 y
INFO  23:18:25,917 - #36 [
INFO  23:18:25,917 - #37 ]
INFO  23:18:25,917 - #31 ;
INFO  23:18:25,917 - #39 }
INFO  23:18:25,917 - #4 class
INFO  23:18:25,917 - #44 A
INFO  23:18:25,917 - #38 {
INFO  23:18:25,917 - #44 int
INFO  23:18:25,917 - #44 x
INFO  23:18:25,917 - #36 [
INFO  23:18:25,918 - #37 ]
INFO  23:18:25,918 - #32 ,
INFO  23:18:25,918 - #44 y
INFO  23:18:25,918 - #36 [
INFO  23:18:25,918 - #37 ]
INFO  23:18:25,918 - #31 ;
INFO  23:18:25,918 - #39 }
INFO  23:18:25,918 - #4 class
INFO  23:18:25,918 - #44 A
INFO  23:18:25,918 - #38 {
INFO  23:18:25,918 - #44 int
INFO  23:18:25,918 - #44 x
INFO  23:18:25,918 - #36 [
INFO  23:18:25,919 - #37 ]
INFO  23:18:25,919 - #32 ,
INFO  23:18:25,919 - #44 y
INFO  23:18:25,919 - #36 [
INFO  23:18:25,919 - #37 ]
INFO  23:18:25,919 - #31 ;
INFO  23:18:25,919 - #39 }
INFO  23:18:25,919 - #38 {
INFO  23:18:25,919 - #12 void
INFO  23:18:25,919 - #44 main
INFO  23:18:25,919 - #34 (
INFO  23:18:25,919 - #35 )
INFO  23:18:25,920 - #44 A
INFO  23:18:25,920 - #44 a
INFO  23:18:25,920 - #31 ;
INFO  23:18:25,920 - #44 C
INFO  23:18:25,920 - #44 c
INFO  23:18:25,920 - #31 ;
INFO  23:18:25,920 - #44 int
INFO  23:18:25,920 - #44 i
INFO  23:18:25,920 - #31 ;
INFO  23:18:25,920 - #44 int
INFO  23:18:25,920 - #44 x
INFO  23:18:25,921 - #36 [
INFO  23:18:25,921 - #37 ]
INFO  23:18:25,921 - #31 ;
INFO  23:18:25,921 - #38 {
INFO  23:18:25,921 - #44 a
INFO  23:18:25,921 - #28 =
INFO  23:18:25,921 - #8 new
INFO  23:18:25,921 - #44 A
INFO  23:18:25,921 - #31 ;
INFO  23:18:25,921 - #44 a
INFO  23:18:25,922 - #33 .
INFO  23:18:25,922 - #44 x
INFO  23:18:25,922 - #28 =
INFO  23:18:25,922 - #8 new
INFO  23:18:25,922 - #44 int
INFO  23:18:25,922 - #36 [
INFO  23:18:25,922 - #43 5
INFO  23:18:25,923 - #37 ]
INFO  23:18:25,923 - #31 ;
INFO  23:18:25,923 - #44 a
INFO  23:18:25,923 - #33 .
INFO  23:18:25,923 - #44 y
INFO  23:18:25,923 - #28 =
INFO  23:18:25,923 - #8 new
INFO  23:18:25,923 - #44 int
INFO  23:18:25,923 - #36 [
INFO  23:18:25,923 - #43 5
INFO  23:18:25,923 - #37 ]
INFO  23:18:25,924 - #31 ;
INFO  23:18:25,924 - #44 c
INFO  23:18:25,924 - #28 =
INFO  23:18:25,924 - #8 new
INFO  23:18:25,924 - #44 C
INFO  23:18:25,924 - #31 ;
INFO  23:18:25,924 - #44 c
INFO  23:18:25,924 - #33 .
INFO  23:18:25,924 - #44 theA
INFO  23:18:25,924 - #28 =
INFO  23:18:25,924 - #44 a
INFO  23:18:25,924 - #31 ;
INFO  23:18:25,924 - #44 c
INFO  23:18:25,925 - #33 .
INFO  23:18:25,925 - #44 x
INFO  23:18:25,925 - #28 =
INFO  23:18:25,925 - #8 new
INFO  23:18:25,925 - #44 int
INFO  23:18:25,925 - #36 [
INFO  23:18:25,925 - #43 5
INFO  23:18:25,925 - #37 ]
INFO  23:18:25,925 - #31 ;
INFO  23:18:25,925 - #44 x
INFO  23:18:25,925 - #28 =
INFO  23:18:25,925 - #8 new
INFO  23:18:25,926 - #44 int
INFO  23:18:25,926 - #36 [
INFO  23:18:25,926 - #43 3
INFO  23:18:25,926 - #37 ]
INFO  23:18:25,926 - #31 ;
INFO  23:18:25,926 - #44 i
INFO  23:18:25,926 - #28 =
INFO  23:18:25,926 - #43 0
INFO  23:18:25,926 - #31 ;
INFO  23:18:25,926 - #10 read
INFO  23:18:25,927 - #34 (
INFO  23:18:25,927 - #44 c
INFO  23:18:25,927 - #33 .
INFO  23:18:25,927 - #44 i
INFO  23:18:25,927 - #35 )
INFO  23:18:25,927 - #31 ;
INFO  23:18:25,927 - #13 while
INFO  23:18:25,927 - #34 (
INFO  23:18:25,927 - #44 i
INFO  23:18:25,928 - #24 <
INFO  23:18:25,928 - #43 5
INFO  23:18:25,928 - #35 )
INFO  23:18:25,928 - #38 {
INFO  23:18:25,928 - #10 read
INFO  23:18:25,928 - #34 (
INFO  23:18:25,928 - #44 c
INFO  23:18:25,928 - #33 .
INFO  23:18:25,928 - #44 x
INFO  23:18:25,928 - #36 [
INFO  23:18:25,928 - #44 i
INFO  23:18:25,928 - #37 ]
INFO  23:18:25,929 - #35 )
INFO  23:18:25,929 - #31 ;
INFO  23:18:25,929 - #10 read
INFO  23:18:25,929 - #34 (
INFO  23:18:25,929 - #44 c
INFO  23:18:25,929 - #33 .
INFO  23:18:25,929 - #44 theA
INFO  23:18:25,929 - #33 .
INFO  23:18:25,929 - #44 x
INFO  23:18:25,929 - #36 [
INFO  23:18:25,929 - #44 i
INFO  23:18:25,929 - #37 ]
INFO  23:18:25,929 - #35 )
INFO  23:18:25,930 - #31 ;
INFO  23:18:25,930 - #44 i
INFO  23:18:25,930 - #29 ++
INFO  23:18:25,930 - #31 ;
INFO  23:18:25,930 - #39 }
INFO  23:18:25,930 - #9 print
INFO  23:18:25,930 - #34 (
INFO  23:18:25,930 - #44 c
INFO  23:18:25,930 - #33 .
INFO  23:18:25,931 - #44 getValue
INFO  23:18:25,931 - #34 (
INFO  23:18:25,931 - #44 c
INFO  23:18:25,931 - #33 .
INFO  23:18:25,931 - #44 theA
INFO  23:18:25,931 - #33 .
INFO  23:18:25,931 - #44 x
INFO  23:18:25,931 - #36 [
INFO  23:18:25,931 - #43 0
INFO  23:18:25,931 - #37 ]
INFO  23:18:25,932 - #35 )
INFO  23:18:25,932 - #35 )
INFO  23:18:25,932 - #31 ;
INFO  23:18:25,932 - #39 }
INFO  23:18:25,932 - #39 }
INFO  23:18:25,932 - GlobalVar = 6
INFO  23:18:25,932 - GlobalConst = 0
INFO  23:18:25,932 - LocalMainVar = 4
INFO  23:18:25,933 - GlobalArray = 6
INFO  23:18:25,933 - FuncProg = 1
INFO  23:18:25,933 - Blocks = 1
INFO  23:18:25,933 - FuncCalls = 5
INFO  23:18:25,933 - FormalArg = 0
INFO  23:18:25,933 - DefClass = 3
INFO  23:18:25,933 - DefMClass = 0
INFO  23:18:35,731 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:18:35,739 - #2 program
INFO  23:18:35,739 - #44 Program
INFO  23:18:35,740 - #4 class
INFO  23:18:35,740 - #44 A
INFO  23:18:35,740 - #38 {
INFO  23:18:35,740 - #44 int
INFO  23:18:35,740 - #44 x
INFO  23:18:35,740 - #36 [
INFO  23:18:35,740 - #37 ]
INFO  23:18:35,740 - #32 ,
INFO  23:18:35,740 - #44 y
INFO  23:18:35,740 - #36 [
INFO  23:18:35,740 - #37 ]
INFO  23:18:35,741 - #31 ;
INFO  23:18:35,741 - #39 }
INFO  23:18:35,741 - #4 class
INFO  23:18:35,741 - #44 A
INFO  23:18:35,741 - #38 {
INFO  23:18:35,741 - #44 int
INFO  23:18:35,741 - #44 x
INFO  23:18:35,741 - #36 [
INFO  23:18:35,741 - #37 ]
INFO  23:18:35,741 - #32 ,
INFO  23:18:35,741 - #44 y
INFO  23:18:35,742 - #36 [
INFO  23:18:35,742 - #37 ]
INFO  23:18:35,742 - #31 ;
INFO  23:18:35,742 - #39 }
INFO  23:18:35,742 - #4 class
INFO  23:18:35,742 - #44 A
INFO  23:18:35,742 - #38 {
INFO  23:18:35,742 - #44 int
INFO  23:18:35,742 - #44 x
INFO  23:18:35,742 - #36 [
INFO  23:18:35,742 - #37 ]
INFO  23:18:35,742 - #32 ,
INFO  23:18:35,743 - #44 y
INFO  23:18:35,743 - #36 [
INFO  23:18:35,743 - #37 ]
INFO  23:18:35,743 - #31 ;
INFO  23:18:35,743 - #39 }
INFO  23:18:35,743 - #4 class
INFO  23:18:35,743 - #44 A
INFO  23:18:35,743 - #38 {
INFO  23:18:35,743 - #44 int
INFO  23:18:35,743 - #44 x
INFO  23:18:35,743 - #36 [
INFO  23:18:35,743 - #37 ]
INFO  23:18:35,743 - #32 ,
INFO  23:18:35,743 - #44 y
INFO  23:18:35,744 - #36 [
INFO  23:18:35,744 - #37 ]
INFO  23:18:35,744 - #31 ;
INFO  23:18:35,744 - #39 }
INFO  23:18:35,744 - #38 {
INFO  23:18:35,744 - #12 void
INFO  23:18:35,744 - #44 main
INFO  23:18:35,744 - #34 (
INFO  23:18:35,744 - #35 )
INFO  23:18:35,744 - #44 A
INFO  23:18:35,744 - #44 a
INFO  23:18:35,744 - #31 ;
INFO  23:18:35,745 - #44 C
INFO  23:18:35,745 - #44 c
INFO  23:18:35,745 - #31 ;
INFO  23:18:35,745 - #44 int
INFO  23:18:35,745 - #44 i
INFO  23:18:35,745 - #31 ;
INFO  23:18:35,745 - #44 int
INFO  23:18:35,745 - #44 x
INFO  23:18:35,745 - #36 [
INFO  23:18:35,745 - #37 ]
INFO  23:18:35,745 - #31 ;
INFO  23:18:35,746 - #38 {
INFO  23:18:35,746 - #44 a
INFO  23:18:35,746 - #28 =
INFO  23:18:35,746 - #8 new
INFO  23:18:35,746 - #44 A
INFO  23:18:35,746 - #31 ;
INFO  23:18:35,746 - #44 a
INFO  23:18:35,746 - #33 .
INFO  23:18:35,746 - #44 x
INFO  23:18:35,747 - #28 =
INFO  23:18:35,747 - #8 new
INFO  23:18:35,747 - #44 int
INFO  23:18:35,747 - #36 [
INFO  23:18:35,747 - #43 5
INFO  23:18:35,748 - #37 ]
INFO  23:18:35,748 - #31 ;
INFO  23:18:35,748 - #44 a
INFO  23:18:35,748 - #33 .
INFO  23:18:35,748 - #44 y
INFO  23:18:35,748 - #28 =
INFO  23:18:35,748 - #8 new
INFO  23:18:35,748 - #44 int
INFO  23:18:35,748 - #36 [
INFO  23:18:35,748 - #43 5
INFO  23:18:35,749 - #37 ]
INFO  23:18:35,749 - #31 ;
INFO  23:18:35,749 - #44 c
INFO  23:18:35,749 - #28 =
INFO  23:18:35,749 - #8 new
INFO  23:18:35,749 - #44 C
INFO  23:18:35,749 - #31 ;
INFO  23:18:35,749 - #44 c
INFO  23:18:35,749 - #33 .
INFO  23:18:35,749 - #44 theA
INFO  23:18:35,749 - #28 =
INFO  23:18:35,749 - #44 a
INFO  23:18:35,749 - #31 ;
INFO  23:18:35,750 - #44 c
INFO  23:18:35,750 - #33 .
INFO  23:18:35,750 - #44 x
INFO  23:18:35,750 - #28 =
INFO  23:18:35,750 - #8 new
INFO  23:18:35,750 - #44 int
INFO  23:18:35,750 - #36 [
INFO  23:18:35,750 - #43 5
INFO  23:18:35,750 - #37 ]
INFO  23:18:35,750 - #31 ;
INFO  23:18:35,750 - #44 x
INFO  23:18:35,750 - #28 =
INFO  23:18:35,751 - #8 new
INFO  23:18:35,751 - #44 int
INFO  23:18:35,751 - #36 [
INFO  23:18:35,751 - #43 3
INFO  23:18:35,751 - #37 ]
INFO  23:18:35,751 - #31 ;
INFO  23:18:35,751 - #44 i
INFO  23:18:35,751 - #28 =
INFO  23:18:35,751 - #43 0
INFO  23:18:35,751 - #31 ;
INFO  23:18:35,752 - #10 read
INFO  23:18:35,752 - #34 (
INFO  23:18:35,752 - #44 c
INFO  23:18:35,752 - #33 .
INFO  23:18:35,752 - #44 i
INFO  23:18:35,752 - #35 )
INFO  23:18:35,752 - #31 ;
INFO  23:18:35,752 - #13 while
INFO  23:18:35,752 - #34 (
INFO  23:18:35,752 - #44 i
INFO  23:18:35,752 - #24 <
INFO  23:18:35,753 - #43 5
INFO  23:18:35,753 - #35 )
INFO  23:18:35,753 - #38 {
INFO  23:18:35,753 - #10 read
INFO  23:18:35,753 - #34 (
INFO  23:18:35,753 - #44 c
INFO  23:18:35,753 - #33 .
INFO  23:18:35,753 - #44 x
INFO  23:18:35,753 - #36 [
INFO  23:18:35,753 - #44 i
INFO  23:18:35,753 - #37 ]
INFO  23:18:35,754 - #35 )
INFO  23:18:35,754 - #31 ;
INFO  23:18:35,754 - #10 read
INFO  23:18:35,754 - #34 (
INFO  23:18:35,754 - #44 c
INFO  23:18:35,754 - #33 .
INFO  23:18:35,754 - #44 theA
INFO  23:18:35,754 - #33 .
INFO  23:18:35,754 - #44 x
INFO  23:18:35,754 - #36 [
INFO  23:18:35,754 - #44 i
INFO  23:18:35,754 - #37 ]
INFO  23:18:35,754 - #35 )
INFO  23:18:35,755 - #31 ;
INFO  23:18:35,755 - #44 i
INFO  23:18:35,755 - #29 ++
INFO  23:18:35,755 - #31 ;
INFO  23:18:35,755 - #39 }
INFO  23:18:35,755 - #9 print
INFO  23:18:35,755 - #34 (
INFO  23:18:35,755 - #44 c
INFO  23:18:35,755 - #33 .
INFO  23:18:35,756 - #44 getValue
INFO  23:18:35,756 - #34 (
INFO  23:18:35,756 - #44 c
INFO  23:18:35,756 - #33 .
INFO  23:18:35,756 - #44 theA
INFO  23:18:35,756 - #33 .
INFO  23:18:35,756 - #44 x
INFO  23:18:35,756 - #36 [
INFO  23:18:35,756 - #43 0
INFO  23:18:35,756 - #37 ]
INFO  23:18:35,757 - #35 )
INFO  23:18:35,757 - #35 )
INFO  23:18:35,757 - #31 ;
INFO  23:18:35,757 - #39 }
INFO  23:18:35,757 - #39 }
INFO  23:18:35,757 - GlobalVar = 6
INFO  23:18:35,757 - GlobalConst = 0
INFO  23:18:35,757 - LocalMainVar = 4
INFO  23:18:35,758 - GlobalArray = 6
INFO  23:18:35,758 - FuncProg = 1
INFO  23:18:35,758 - Blocks = 1
INFO  23:18:35,758 - FuncCalls = 5
INFO  23:18:35,758 - FormalArg = 0
INFO  23:18:35,758 - DefClass = 3
INFO  23:18:35,758 - DefMClass = 0
INFO  23:18:56,741 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:18:56,749 - #2 program
INFO  23:18:56,749 - #44 Program
INFO  23:18:56,750 - #4 class
INFO  23:18:56,750 - #44 A
INFO  23:18:56,750 - #38 {
INFO  23:18:56,750 - #44 int
INFO  23:18:56,750 - #44 x
INFO  23:18:56,750 - #36 [
INFO  23:18:56,750 - #37 ]
INFO  23:18:56,750 - #32 ,
INFO  23:18:56,750 - #44 y
INFO  23:18:56,750 - #36 [
INFO  23:18:56,750 - #37 ]
INFO  23:18:56,751 - #31 ;
INFO  23:18:56,751 - #39 }
INFO  23:18:56,751 - #4 class
INFO  23:18:56,751 - #44 A
INFO  23:18:56,751 - #38 {
INFO  23:18:56,751 - #44 int
INFO  23:18:56,751 - #44 x
INFO  23:18:56,751 - #36 [
INFO  23:18:56,751 - #37 ]
INFO  23:18:56,751 - #32 ,
INFO  23:18:56,751 - #44 y
INFO  23:18:56,751 - #36 [
INFO  23:18:56,751 - #37 ]
INFO  23:18:56,752 - #31 ;
INFO  23:18:56,752 - #39 }
INFO  23:18:56,752 - #4 class
INFO  23:18:56,752 - #44 A
INFO  23:18:56,752 - #38 {
INFO  23:18:56,752 - #44 int
INFO  23:18:56,752 - #44 x
INFO  23:18:56,752 - #36 [
INFO  23:18:56,752 - #37 ]
INFO  23:18:56,752 - #32 ,
INFO  23:18:56,752 - #44 y
INFO  23:18:56,752 - #36 [
INFO  23:18:56,752 - #37 ]
INFO  23:18:56,752 - #31 ;
INFO  23:18:56,753 - #39 }
INFO  23:18:56,753 - #4 class
INFO  23:18:56,753 - #44 A
INFO  23:18:56,753 - #38 {
INFO  23:18:56,753 - #44 int
INFO  23:18:56,753 - #44 x
INFO  23:18:56,753 - #36 [
INFO  23:18:56,753 - #37 ]
INFO  23:18:56,753 - #32 ,
INFO  23:18:56,753 - #44 y
INFO  23:18:56,753 - #36 [
INFO  23:18:56,753 - #37 ]
INFO  23:18:56,753 - #31 ;
INFO  23:18:56,754 - #39 }
INFO  23:18:56,754 - #38 {
INFO  23:18:56,754 - #12 void
INFO  23:18:56,754 - #44 main
INFO  23:18:56,754 - #34 (
INFO  23:18:56,754 - #35 )
INFO  23:18:56,754 - #44 A
INFO  23:18:56,754 - #44 a
INFO  23:18:56,754 - #31 ;
INFO  23:18:56,754 - #44 C
INFO  23:18:56,754 - #44 c
INFO  23:18:56,754 - #31 ;
INFO  23:18:56,755 - #44 int
INFO  23:18:56,755 - #44 i
INFO  23:18:56,755 - #31 ;
INFO  23:18:56,755 - #44 int
INFO  23:18:56,755 - #44 x
INFO  23:18:56,755 - #36 [
INFO  23:18:56,755 - #37 ]
INFO  23:18:56,755 - #31 ;
INFO  23:18:56,755 - #38 {
INFO  23:18:56,755 - #44 a
INFO  23:18:56,756 - #28 =
INFO  23:18:56,756 - #8 new
INFO  23:18:56,756 - #44 A
INFO  23:18:56,756 - #31 ;
INFO  23:18:56,756 - #44 a
INFO  23:18:56,756 - #33 .
INFO  23:18:56,756 - #44 x
INFO  23:18:56,756 - #28 =
INFO  23:18:56,756 - #8 new
INFO  23:18:56,756 - #44 int
INFO  23:18:56,757 - #36 [
INFO  23:18:56,757 - #43 5
INFO  23:18:56,757 - #37 ]
INFO  23:18:56,757 - #31 ;
INFO  23:18:56,757 - #44 a
INFO  23:18:56,757 - #33 .
INFO  23:18:56,757 - #44 y
INFO  23:18:56,757 - #28 =
INFO  23:18:56,758 - #8 new
INFO  23:18:56,758 - #44 int
INFO  23:18:56,758 - #36 [
INFO  23:18:56,758 - #43 5
INFO  23:18:56,758 - #37 ]
INFO  23:18:56,758 - #31 ;
INFO  23:18:56,758 - #44 c
INFO  23:18:56,758 - #28 =
INFO  23:18:56,758 - #8 new
INFO  23:18:56,758 - #44 C
INFO  23:18:56,758 - #31 ;
INFO  23:18:56,758 - #44 c
INFO  23:18:56,759 - #33 .
INFO  23:18:56,759 - #44 theA
INFO  23:18:56,759 - #28 =
INFO  23:18:56,759 - #44 a
INFO  23:18:56,759 - #31 ;
INFO  23:18:56,759 - #44 c
INFO  23:18:56,759 - #33 .
INFO  23:18:56,759 - #44 x
INFO  23:18:56,759 - #28 =
INFO  23:18:56,759 - #8 new
INFO  23:18:56,759 - #44 int
INFO  23:18:56,759 - #36 [
INFO  23:18:56,759 - #43 5
INFO  23:18:56,759 - #37 ]
INFO  23:18:56,760 - #31 ;
INFO  23:18:56,760 - #44 x
INFO  23:18:56,760 - #28 =
INFO  23:18:56,760 - #8 new
INFO  23:18:56,760 - #44 int
INFO  23:18:56,760 - #36 [
INFO  23:18:56,760 - #43 3
INFO  23:18:56,760 - #37 ]
INFO  23:18:56,760 - #31 ;
INFO  23:18:56,760 - #44 i
INFO  23:18:56,761 - #28 =
INFO  23:18:56,761 - #43 0
INFO  23:18:56,761 - #31 ;
INFO  23:18:56,761 - #10 read
INFO  23:18:56,761 - #34 (
INFO  23:18:56,761 - #44 c
INFO  23:18:56,761 - #33 .
INFO  23:18:56,761 - #44 i
INFO  23:18:56,761 - #35 )
INFO  23:18:56,761 - #31 ;
INFO  23:18:56,762 - #13 while
INFO  23:18:56,762 - #34 (
INFO  23:18:56,762 - #44 i
INFO  23:18:56,762 - #24 <
INFO  23:18:56,762 - #43 5
INFO  23:18:56,762 - #35 )
INFO  23:18:56,762 - #38 {
INFO  23:18:56,762 - #10 read
INFO  23:18:56,762 - #34 (
INFO  23:18:56,762 - #44 c
INFO  23:18:56,762 - #33 .
INFO  23:18:56,762 - #44 x
INFO  23:18:56,763 - #36 [
INFO  23:18:56,763 - #44 i
INFO  23:18:56,763 - #37 ]
INFO  23:18:56,763 - #35 )
INFO  23:18:56,763 - #31 ;
INFO  23:18:56,763 - #10 read
INFO  23:18:56,763 - #34 (
INFO  23:18:56,763 - #44 c
INFO  23:18:56,763 - #33 .
INFO  23:18:56,763 - #44 theA
INFO  23:18:56,763 - #33 .
INFO  23:18:56,763 - #44 x
INFO  23:18:56,763 - #36 [
INFO  23:18:56,763 - #44 i
INFO  23:18:56,764 - #37 ]
INFO  23:18:56,764 - #35 )
INFO  23:18:56,764 - #31 ;
INFO  23:18:56,764 - #44 i
INFO  23:18:56,764 - #29 ++
INFO  23:18:56,764 - #31 ;
INFO  23:18:56,764 - #39 }
INFO  23:18:56,764 - #9 print
INFO  23:18:56,764 - #34 (
INFO  23:18:56,765 - #44 c
INFO  23:18:56,765 - #33 .
INFO  23:18:56,765 - #44 getValue
INFO  23:18:56,765 - #34 (
INFO  23:18:56,765 - #44 c
INFO  23:18:56,765 - #33 .
INFO  23:18:56,765 - #44 theA
INFO  23:18:56,765 - #33 .
INFO  23:18:56,765 - #44 x
INFO  23:18:56,765 - #36 [
INFO  23:18:56,766 - #43 0
INFO  23:18:56,766 - #37 ]
INFO  23:18:56,766 - #35 )
INFO  23:18:56,766 - #35 )
INFO  23:18:56,766 - #31 ;
INFO  23:18:56,766 - #39 }
INFO  23:18:56,766 - #39 }
INFO  23:18:56,766 - GlobalVar = 6
INFO  23:18:56,767 - GlobalConst = 0
INFO  23:18:56,767 - LocalMainVar = 4
INFO  23:18:56,767 - GlobalArray = 6
INFO  23:18:56,767 - FuncProg = 1
INFO  23:18:56,767 - Blocks = 1
INFO  23:18:56,767 - FuncCalls = 5
INFO  23:18:56,767 - FormalArg = 0
INFO  23:18:56,767 - DefClass = 3
INFO  23:18:56,767 - DefMClass = 0
INFO  23:52:04,725 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:52:04,736 - #2 program
INFO  23:52:04,737 - #44 Program
INFO  23:52:04,737 - #4 class
INFO  23:52:04,737 - #44 A
INFO  23:52:04,737 - #38 {
INFO  23:52:04,737 - #44 int
INFO  23:52:04,737 - #44 x
INFO  23:52:04,737 - #36 [
INFO  23:52:04,737 - #37 ]
INFO  23:52:04,738 - #32 ,
INFO  23:52:04,738 - #44 y
INFO  23:52:04,738 - #36 [
INFO  23:52:04,738 - #37 ]
INFO  23:52:04,738 - #31 ;
INFO  23:52:04,738 - #39 }
INFO  23:52:04,738 - #4 class
INFO  23:52:04,738 - #44 A
INFO  23:52:04,738 - #38 {
INFO  23:52:04,739 - #44 int
INFO  23:52:04,739 - #44 x
INFO  23:52:04,739 - #36 [
INFO  23:52:04,739 - #37 ]
INFO  23:52:04,739 - #32 ,
INFO  23:52:04,739 - #44 y
INFO  23:52:04,739 - #36 [
INFO  23:52:04,739 - #37 ]
INFO  23:52:04,739 - #31 ;
INFO  23:52:04,739 - #39 }
INFO  23:52:04,740 - #4 class
INFO  23:52:04,740 - #44 A
INFO  23:52:04,740 - #38 {
INFO  23:52:04,740 - #44 int
INFO  23:52:04,740 - #44 x
INFO  23:52:04,740 - #36 [
INFO  23:52:04,740 - #37 ]
INFO  23:52:04,740 - #32 ,
INFO  23:52:04,740 - #44 y
INFO  23:52:04,740 - #36 [
INFO  23:52:04,741 - #37 ]
INFO  23:52:04,741 - #31 ;
INFO  23:52:04,741 - #39 }
INFO  23:52:04,741 - #4 class
INFO  23:52:04,741 - #44 A
INFO  23:52:04,741 - #38 {
INFO  23:52:04,741 - #44 int
INFO  23:52:04,741 - #44 x
INFO  23:52:04,741 - #36 [
INFO  23:52:04,742 - #37 ]
INFO  23:52:04,742 - #32 ,
INFO  23:52:04,742 - #44 y
INFO  23:52:04,742 - #36 [
INFO  23:52:04,742 - #37 ]
INFO  23:52:04,742 - #31 ;
INFO  23:52:04,742 - #39 }
INFO  23:52:04,742 - #38 {
INFO  23:52:04,742 - #12 void
INFO  23:52:04,743 - #44 main
INFO  23:52:04,743 - #34 (
INFO  23:52:04,743 - #35 )
INFO  23:52:04,743 - #44 A
INFO  23:52:04,743 - #44 a
INFO  23:52:04,743 - #31 ;
INFO  23:52:04,743 - #44 C
INFO  23:52:04,743 - #44 c
INFO  23:52:04,743 - #31 ;
INFO  23:52:04,744 - #44 int
INFO  23:52:04,744 - #44 i
INFO  23:52:04,744 - #31 ;
INFO  23:52:04,744 - #44 int
INFO  23:52:04,744 - #44 x
INFO  23:52:04,744 - #36 [
INFO  23:52:04,744 - #37 ]
INFO  23:52:04,744 - #31 ;
INFO  23:52:04,744 - #38 {
INFO  23:52:04,745 - #44 a
INFO  23:52:04,745 - #28 =
INFO  23:52:04,745 - #8 new
INFO  23:52:04,745 - #44 A
INFO  23:52:04,745 - #31 ;
INFO  23:52:04,745 - #44 a
INFO  23:52:04,745 - #33 .
INFO  23:52:04,746 - #44 x
INFO  23:52:04,746 - #28 =
INFO  23:52:04,746 - #8 new
INFO  23:52:04,746 - #44 int
INFO  23:52:04,746 - #36 [
INFO  23:52:04,746 - #43 5
INFO  23:52:04,746 - #37 ]
INFO  23:52:04,746 - #31 ;
INFO  23:52:04,747 - #44 a
INFO  23:52:04,747 - #33 .
INFO  23:52:04,747 - #44 y
INFO  23:52:04,747 - #28 =
INFO  23:52:04,747 - #8 new
INFO  23:52:04,747 - #44 int
INFO  23:52:04,747 - #36 [
INFO  23:52:04,747 - #43 5
INFO  23:52:04,748 - #37 ]
INFO  23:52:04,748 - #31 ;
INFO  23:52:04,748 - #44 c
INFO  23:52:04,748 - #28 =
INFO  23:52:04,748 - #8 new
INFO  23:52:04,748 - #44 C
INFO  23:52:04,748 - #31 ;
INFO  23:52:04,748 - #44 c
INFO  23:52:04,748 - #33 .
INFO  23:52:04,748 - #44 theA
INFO  23:52:04,749 - #28 =
INFO  23:52:04,749 - #44 a
INFO  23:52:04,749 - #31 ;
INFO  23:52:04,749 - #44 c
INFO  23:52:04,749 - #33 .
INFO  23:52:04,749 - #44 x
INFO  23:52:04,749 - #28 =
INFO  23:52:04,749 - #8 new
INFO  23:52:04,749 - #44 int
INFO  23:52:04,749 - #36 [
INFO  23:52:04,750 - #43 5
INFO  23:52:04,750 - #37 ]
INFO  23:52:04,750 - #31 ;
INFO  23:52:04,750 - #44 x
INFO  23:52:04,750 - #28 =
INFO  23:52:04,750 - #8 new
INFO  23:52:04,750 - #44 int
INFO  23:52:04,750 - #36 [
INFO  23:52:04,750 - #43 3
INFO  23:52:04,751 - #37 ]
INFO  23:52:04,751 - #31 ;
INFO  23:52:04,751 - #44 i
INFO  23:52:04,751 - #28 =
INFO  23:52:04,751 - #43 0
INFO  23:52:04,751 - #31 ;
INFO  23:52:04,751 - #10 read
INFO  23:52:04,751 - #34 (
INFO  23:52:04,752 - #44 c
INFO  23:52:04,752 - #33 .
INFO  23:52:04,752 - #44 i
INFO  23:52:04,752 - #35 )
INFO  23:52:04,752 - #31 ;
INFO  23:52:04,752 - #13 while
INFO  23:52:04,752 - #34 (
INFO  23:52:04,752 - #44 i
INFO  23:52:04,752 - #24 <
INFO  23:52:04,753 - #43 5
INFO  23:52:04,753 - #35 )
INFO  23:52:04,753 - #38 {
INFO  23:52:04,753 - #10 read
INFO  23:52:04,753 - #34 (
INFO  23:52:04,753 - #44 c
INFO  23:52:04,753 - #33 .
INFO  23:52:04,753 - #44 x
INFO  23:52:04,753 - #36 [
INFO  23:52:04,754 - #44 i
INFO  23:52:04,754 - #37 ]
INFO  23:52:04,754 - #35 )
INFO  23:52:04,754 - #31 ;
INFO  23:52:04,754 - #10 read
INFO  23:52:04,754 - #34 (
INFO  23:52:04,754 - #44 c
INFO  23:52:04,754 - #33 .
INFO  23:52:04,754 - #44 theA
INFO  23:52:04,754 - #33 .
INFO  23:52:04,754 - #44 x
INFO  23:52:04,755 - #36 [
INFO  23:52:04,755 - #44 i
INFO  23:52:04,755 - #37 ]
INFO  23:52:04,755 - #35 )
INFO  23:52:04,755 - #31 ;
INFO  23:52:04,755 - #44 i
INFO  23:52:04,755 - #29 ++
INFO  23:52:04,755 - #31 ;
INFO  23:52:04,756 - #39 }
INFO  23:52:04,756 - #9 print
INFO  23:52:04,756 - #34 (
INFO  23:52:04,756 - #44 c
INFO  23:52:04,756 - #33 .
INFO  23:52:04,756 - #44 getValue
INFO  23:52:04,757 - #34 (
INFO  23:52:04,757 - #44 c
INFO  23:52:04,757 - #33 .
INFO  23:52:04,757 - #44 theA
INFO  23:52:04,757 - #33 .
INFO  23:52:04,757 - #44 x
INFO  23:52:04,757 - #36 [
INFO  23:52:04,758 - #43 0
INFO  23:52:04,758 - #37 ]
INFO  23:52:04,758 - #35 )
INFO  23:52:04,758 - #35 )
INFO  23:52:04,758 - #31 ;
INFO  23:52:04,758 - #39 }
INFO  23:52:04,758 - #39 }
INFO  23:52:04,758 - GlobalVar = 6
INFO  23:52:04,758 - GlobalConst = 0
INFO  23:52:04,759 - LocalMainVar = 4
INFO  23:52:04,759 - GlobalArray = 6
INFO  23:52:04,759 - FuncProg = 1
INFO  23:52:04,759 - Blocks = 1
INFO  23:52:04,759 - FuncCalls = 5
INFO  23:52:04,759 - FormalArg = 0
INFO  23:52:04,759 - DefClass = 3
INFO  23:52:04,759 - DefMClass = 0
INFO  23:52:13,968 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:52:13,977 - #2 program
INFO  23:52:13,977 - #44 Program
INFO  23:52:13,977 - #4 class
INFO  23:52:13,977 - #44 A
INFO  23:52:13,977 - #38 {
INFO  23:52:13,977 - #44 int
INFO  23:52:13,977 - #44 x
INFO  23:52:13,977 - #36 [
INFO  23:52:13,977 - #37 ]
INFO  23:52:13,977 - #32 ,
INFO  23:52:13,977 - #44 y
INFO  23:52:13,978 - #36 [
INFO  23:52:13,978 - #37 ]
INFO  23:52:13,978 - #31 ;
INFO  23:52:13,978 - #39 }
INFO  23:52:13,978 - #4 class
INFO  23:52:13,978 - #44 A
INFO  23:52:13,978 - #38 {
INFO  23:52:13,978 - #44 int
INFO  23:52:13,978 - #44 x
INFO  23:52:13,978 - #36 [
INFO  23:52:13,978 - #37 ]
INFO  23:52:13,978 - #32 ,
INFO  23:52:13,978 - #44 y
INFO  23:52:13,979 - #36 [
INFO  23:52:13,979 - #37 ]
INFO  23:52:13,979 - #31 ;
INFO  23:52:13,979 - #39 }
INFO  23:52:13,979 - #4 class
INFO  23:52:13,979 - #44 A
INFO  23:52:13,979 - #38 {
INFO  23:52:13,979 - #44 int
INFO  23:52:13,979 - #44 x
INFO  23:52:13,979 - #36 [
INFO  23:52:13,979 - #37 ]
INFO  23:52:13,979 - #32 ,
INFO  23:52:13,979 - #44 y
INFO  23:52:13,979 - #36 [
INFO  23:52:13,979 - #37 ]
INFO  23:52:13,980 - #31 ;
INFO  23:52:13,980 - #39 }
INFO  23:52:13,980 - #4 class
INFO  23:52:13,980 - #44 A
INFO  23:52:13,980 - #38 {
INFO  23:52:13,980 - #44 int
INFO  23:52:13,980 - #44 x
INFO  23:52:13,980 - #36 [
INFO  23:52:13,980 - #37 ]
INFO  23:52:13,980 - #32 ,
INFO  23:52:13,980 - #44 y
INFO  23:52:13,980 - #36 [
INFO  23:52:13,980 - #37 ]
INFO  23:52:13,980 - #31 ;
INFO  23:52:13,981 - #39 }
INFO  23:52:13,981 - #38 {
INFO  23:52:13,981 - #12 void
INFO  23:52:13,981 - #44 main
INFO  23:52:13,981 - #34 (
INFO  23:52:13,981 - #35 )
INFO  23:52:13,981 - #44 A
INFO  23:52:13,981 - #44 a
INFO  23:52:13,981 - #31 ;
INFO  23:52:13,981 - #44 C
INFO  23:52:13,981 - #44 c
INFO  23:52:13,982 - #31 ;
INFO  23:52:13,982 - #44 int
INFO  23:52:13,982 - #44 i
INFO  23:52:13,982 - #31 ;
INFO  23:52:13,982 - #44 int
INFO  23:52:13,982 - #44 x
INFO  23:52:13,982 - #36 [
INFO  23:52:13,982 - #37 ]
INFO  23:52:13,982 - #31 ;
INFO  23:52:13,982 - #38 {
INFO  23:52:13,983 - #44 a
INFO  23:52:13,983 - #28 =
INFO  23:52:13,983 - #8 new
INFO  23:52:13,983 - #44 A
INFO  23:52:13,983 - #31 ;
INFO  23:52:13,983 - #44 a
INFO  23:52:13,983 - #33 .
INFO  23:52:13,983 - #44 x
INFO  23:52:13,983 - #28 =
INFO  23:52:13,983 - #8 new
INFO  23:52:13,984 - #44 int
INFO  23:52:13,984 - #36 [
INFO  23:52:13,984 - #43 5
INFO  23:52:13,984 - #37 ]
INFO  23:52:13,984 - #31 ;
INFO  23:52:13,984 - #44 a
INFO  23:52:13,984 - #33 .
INFO  23:52:13,984 - #44 y
INFO  23:52:13,984 - #28 =
INFO  23:52:13,984 - #8 new
INFO  23:52:13,984 - #44 int
INFO  23:52:13,984 - #36 [
INFO  23:52:13,985 - #43 5
INFO  23:52:13,985 - #37 ]
INFO  23:52:13,985 - #31 ;
INFO  23:52:13,985 - #44 c
INFO  23:52:13,985 - #28 =
INFO  23:52:13,985 - #8 new
INFO  23:52:13,985 - #44 C
INFO  23:52:13,985 - #31 ;
INFO  23:52:13,985 - #44 c
INFO  23:52:13,985 - #33 .
INFO  23:52:13,985 - #44 theA
INFO  23:52:13,985 - #28 =
INFO  23:52:13,986 - #44 a
INFO  23:52:13,986 - #31 ;
INFO  23:52:13,986 - #44 c
INFO  23:52:13,986 - #33 .
INFO  23:52:13,986 - #44 x
INFO  23:52:13,986 - #28 =
INFO  23:52:13,986 - #8 new
INFO  23:52:13,986 - #44 int
INFO  23:52:13,986 - #36 [
INFO  23:52:13,986 - #43 5
INFO  23:52:13,986 - #37 ]
INFO  23:52:13,986 - #31 ;
INFO  23:52:13,987 - #44 x
INFO  23:52:13,987 - #28 =
INFO  23:52:13,987 - #8 new
INFO  23:52:13,987 - #44 int
INFO  23:52:13,987 - #36 [
INFO  23:52:13,987 - #43 3
INFO  23:52:13,987 - #37 ]
INFO  23:52:13,987 - #31 ;
INFO  23:52:13,987 - #44 i
INFO  23:52:13,988 - #28 =
INFO  23:52:13,988 - #43 0
INFO  23:52:13,988 - #31 ;
INFO  23:52:13,988 - #10 read
INFO  23:52:13,988 - #34 (
INFO  23:52:13,988 - #44 c
INFO  23:52:13,988 - #33 .
INFO  23:52:13,988 - #44 i
INFO  23:52:13,988 - #35 )
INFO  23:52:13,988 - #31 ;
INFO  23:52:13,989 - #13 while
INFO  23:52:13,989 - #34 (
INFO  23:52:13,989 - #44 i
INFO  23:52:13,989 - #24 <
INFO  23:52:13,989 - #43 5
INFO  23:52:13,989 - #35 )
INFO  23:52:13,989 - #38 {
INFO  23:52:13,989 - #10 read
INFO  23:52:13,989 - #34 (
INFO  23:52:13,989 - #44 c
INFO  23:52:13,989 - #33 .
INFO  23:52:13,989 - #44 x
INFO  23:52:13,990 - #36 [
INFO  23:52:13,990 - #44 i
INFO  23:52:13,990 - #37 ]
INFO  23:52:13,990 - #35 )
INFO  23:52:13,990 - #31 ;
INFO  23:52:13,990 - #10 read
INFO  23:52:13,990 - #34 (
INFO  23:52:13,990 - #44 c
INFO  23:52:13,990 - #33 .
INFO  23:52:13,990 - #44 theA
INFO  23:52:13,990 - #33 .
INFO  23:52:13,990 - #44 x
INFO  23:52:13,991 - #36 [
INFO  23:52:13,991 - #44 i
INFO  23:52:13,991 - #37 ]
INFO  23:52:13,991 - #35 )
INFO  23:52:13,991 - #31 ;
INFO  23:52:13,991 - #44 i
INFO  23:52:13,991 - #29 ++
INFO  23:52:13,991 - #31 ;
INFO  23:52:13,991 - #39 }
INFO  23:52:13,991 - #9 print
INFO  23:52:13,992 - #34 (
INFO  23:52:13,992 - #44 c
INFO  23:52:13,992 - #33 .
INFO  23:52:13,992 - #44 getValue
INFO  23:52:13,992 - #34 (
INFO  23:52:13,992 - #44 c
INFO  23:52:13,992 - #33 .
INFO  23:52:13,992 - #44 theA
INFO  23:52:13,992 - #33 .
INFO  23:52:13,992 - #44 x
INFO  23:52:13,992 - #36 [
INFO  23:52:13,993 - #43 0
INFO  23:52:13,993 - #37 ]
INFO  23:52:13,993 - #35 )
INFO  23:52:13,993 - #35 )
INFO  23:52:13,993 - #31 ;
INFO  23:52:13,993 - #39 }
INFO  23:52:13,993 - #39 }
INFO  23:52:13,993 - GlobalVar = 6
INFO  23:52:13,993 - GlobalConst = 0
INFO  23:52:13,993 - LocalMainVar = 4
INFO  23:52:13,994 - GlobalArray = 2
INFO  23:52:13,994 - FuncProg = 1
INFO  23:52:13,994 - Blocks = 1
INFO  23:52:13,994 - FuncCalls = 5
INFO  23:52:13,994 - FormalArg = 0
INFO  23:52:13,994 - DefClass = 4
INFO  23:52:13,994 - DefMClass = 0
INFO  23:54:33,840 - Compiling source file: C:\ppp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:54:33,849 - #2 program
INFO  23:54:33,850 - #44 Program
INFO  23:54:33,850 - #4 class
INFO  23:54:33,850 - #44 A
INFO  23:54:33,850 - #38 {
INFO  23:54:33,850 - #44 int
INFO  23:54:33,850 - #44 x
INFO  23:54:33,850 - #36 [
INFO  23:54:33,850 - #37 ]
INFO  23:54:33,850 - #32 ,
INFO  23:54:33,850 - #44 y
INFO  23:54:33,850 - #36 [
INFO  23:54:33,850 - #37 ]
INFO  23:54:33,851 - #31 ;
INFO  23:54:33,851 - #39 }
INFO  23:54:33,851 - #4 class
INFO  23:54:33,851 - #44 A
INFO  23:54:33,851 - #38 {
INFO  23:54:33,851 - #44 int
INFO  23:54:33,851 - #44 x
INFO  23:54:33,851 - #36 [
INFO  23:54:33,851 - #37 ]
INFO  23:54:33,851 - #32 ,
INFO  23:54:33,852 - #44 y
INFO  23:54:33,852 - #36 [
INFO  23:54:33,852 - #37 ]
INFO  23:54:33,852 - #31 ;
INFO  23:54:33,852 - #39 }
INFO  23:54:33,852 - #4 class
INFO  23:54:33,852 - #44 A
INFO  23:54:33,852 - #38 {
INFO  23:54:33,852 - #44 int
INFO  23:54:33,852 - #44 x
INFO  23:54:33,852 - #36 [
INFO  23:54:33,852 - #37 ]
INFO  23:54:33,853 - #32 ,
INFO  23:54:33,853 - #44 y
INFO  23:54:33,853 - #36 [
INFO  23:54:33,853 - #37 ]
INFO  23:54:33,853 - #31 ;
INFO  23:54:33,853 - #39 }
INFO  23:54:33,853 - #4 class
INFO  23:54:33,853 - #44 A
INFO  23:54:33,853 - #38 {
INFO  23:54:33,853 - #44 int
INFO  23:54:33,853 - #44 x
INFO  23:54:33,853 - #36 [
INFO  23:54:33,853 - #37 ]
INFO  23:54:33,854 - #32 ,
INFO  23:54:33,854 - #44 y
INFO  23:54:33,854 - #36 [
INFO  23:54:33,854 - #37 ]
INFO  23:54:33,854 - #31 ;
INFO  23:54:33,854 - #39 }
INFO  23:54:33,854 - #38 {
INFO  23:54:33,854 - #12 void
INFO  23:54:33,854 - #44 main
INFO  23:54:33,854 - #34 (
INFO  23:54:33,854 - #35 )
INFO  23:54:33,855 - #44 A
INFO  23:54:33,855 - #44 a
INFO  23:54:33,855 - #31 ;
INFO  23:54:33,855 - #44 C
INFO  23:54:33,855 - #44 c
INFO  23:54:33,855 - #31 ;
INFO  23:54:33,855 - #44 int
INFO  23:54:33,855 - #44 i
INFO  23:54:33,855 - #31 ;
INFO  23:54:33,855 - #44 int
INFO  23:54:33,855 - #44 x
INFO  23:54:33,856 - #36 [
INFO  23:54:33,856 - #37 ]
INFO  23:54:33,856 - #31 ;
INFO  23:54:33,856 - #38 {
INFO  23:54:33,856 - #44 a
INFO  23:54:33,856 - #28 =
INFO  23:54:33,856 - #8 new
INFO  23:54:33,856 - #44 A
INFO  23:54:33,857 - #31 ;
INFO  23:54:33,857 - #44 a
INFO  23:54:33,857 - #33 .
INFO  23:54:33,857 - #44 x
INFO  23:54:33,857 - #28 =
INFO  23:54:33,857 - #8 new
INFO  23:54:33,857 - #44 int
INFO  23:54:33,857 - #36 [
INFO  23:54:33,857 - #43 5
INFO  23:54:33,858 - #37 ]
INFO  23:54:33,858 - #31 ;
INFO  23:54:33,858 - #44 a
INFO  23:54:33,858 - #33 .
INFO  23:54:33,858 - #44 y
INFO  23:54:33,858 - #28 =
INFO  23:54:33,858 - #8 new
INFO  23:54:33,858 - #44 int
INFO  23:54:33,858 - #36 [
INFO  23:54:33,858 - #43 5
INFO  23:54:33,858 - #37 ]
INFO  23:54:33,859 - #31 ;
INFO  23:54:33,859 - #44 c
INFO  23:54:33,859 - #28 =
INFO  23:54:33,859 - #8 new
INFO  23:54:33,859 - #44 C
INFO  23:54:33,859 - #31 ;
INFO  23:54:33,859 - #44 c
INFO  23:54:33,859 - #33 .
INFO  23:54:33,859 - #44 theA
INFO  23:54:33,859 - #28 =
INFO  23:54:33,859 - #44 a
INFO  23:54:33,859 - #31 ;
INFO  23:54:33,859 - #44 c
INFO  23:54:33,860 - #33 .
INFO  23:54:33,860 - #44 x
INFO  23:54:33,860 - #28 =
INFO  23:54:33,860 - #8 new
INFO  23:54:33,860 - #44 int
INFO  23:54:33,860 - #36 [
INFO  23:54:33,860 - #43 5
INFO  23:54:33,860 - #37 ]
INFO  23:54:33,860 - #31 ;
INFO  23:54:33,860 - #44 x
INFO  23:54:33,860 - #28 =
INFO  23:54:33,860 - #8 new
INFO  23:54:33,861 - #44 int
INFO  23:54:33,861 - #36 [
INFO  23:54:33,861 - #43 3
INFO  23:54:33,861 - #37 ]
INFO  23:54:33,861 - #31 ;
INFO  23:54:33,861 - #44 i
INFO  23:54:33,861 - #28 =
INFO  23:54:33,861 - #43 0
INFO  23:54:33,861 - #31 ;
INFO  23:54:33,861 - #10 read
INFO  23:54:33,862 - #34 (
INFO  23:54:33,862 - #44 c
INFO  23:54:33,862 - #33 .
INFO  23:54:33,862 - #44 i
INFO  23:54:33,862 - #35 )
INFO  23:54:33,862 - #31 ;
INFO  23:54:33,862 - #13 while
INFO  23:54:33,862 - #34 (
INFO  23:54:33,862 - #44 i
INFO  23:54:33,862 - #24 <
INFO  23:54:33,863 - #43 5
INFO  23:54:33,863 - #35 )
INFO  23:54:33,863 - #38 {
INFO  23:54:33,863 - #10 read
INFO  23:54:33,863 - #34 (
INFO  23:54:33,863 - #44 c
INFO  23:54:33,863 - #33 .
INFO  23:54:33,863 - #44 x
INFO  23:54:33,863 - #36 [
INFO  23:54:33,863 - #44 i
INFO  23:54:33,863 - #37 ]
INFO  23:54:33,864 - #35 )
INFO  23:54:33,864 - #31 ;
INFO  23:54:33,864 - #10 read
INFO  23:54:33,864 - #34 (
INFO  23:54:33,864 - #44 c
INFO  23:54:33,864 - #33 .
INFO  23:54:33,864 - #44 theA
INFO  23:54:33,864 - #33 .
INFO  23:54:33,864 - #44 x
INFO  23:54:33,864 - #36 [
INFO  23:54:33,864 - #44 i
INFO  23:54:33,864 - #37 ]
INFO  23:54:33,864 - #35 )
INFO  23:54:33,865 - #31 ;
INFO  23:54:33,865 - #44 i
INFO  23:54:33,865 - #29 ++
INFO  23:54:33,865 - #31 ;
INFO  23:54:33,865 - #39 }
INFO  23:54:33,865 - #9 print
INFO  23:54:33,865 - #34 (
INFO  23:54:33,865 - #44 c
INFO  23:54:33,865 - #33 .
INFO  23:54:33,865 - #44 getValue
INFO  23:54:33,866 - #34 (
INFO  23:54:33,866 - #44 c
INFO  23:54:33,866 - #33 .
INFO  23:54:33,866 - #44 theA
INFO  23:54:33,866 - #33 .
INFO  23:54:33,866 - #44 x
INFO  23:54:33,866 - #36 [
INFO  23:54:33,866 - #43 0
INFO  23:54:33,866 - #37 ]
INFO  23:54:33,867 - #35 )
INFO  23:54:33,867 - #35 )
INFO  23:54:33,867 - #31 ;
INFO  23:54:33,867 - #39 }
INFO  23:54:33,867 - #39 }
INFO  23:54:33,867 - GlobalVar = 0
INFO  23:54:33,867 - GlobalConst = 0
INFO  23:54:33,867 - LocalMainVar = 4
INFO  23:54:33,867 - GlobalArray = 0
INFO  23:54:33,868 - FuncProg = 0
INFO  23:54:33,868 - Blocks = 1
INFO  23:54:33,868 - FuncCalls = 5
INFO  23:54:33,868 - FormalArg = 0
INFO  23:54:33,868 - DefClass = 4
INFO  23:54:33,868 - DefMClass = 1
